<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1430" onload="init(evt)" viewBox="0 0 1200 1430" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1430" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1413.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1413.00"> </text><svg id="frames" x="10" width="1180" total_samples="126522"><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge_var_in_place (23 samples, 0.02%)</title><rect x="0.0269%" y="661" width="0.0182%" height="15" fill="rgb(227,0,7)" fg:x="34" fg:w="23"/><text x="0.2769%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge_var (24 samples, 0.02%)</title><rect x="0.0269%" y="677" width="0.0190%" height="15" fill="rgb(217,0,24)" fg:x="34" fg:w="24"/><text x="0.2769%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecmult::odd_multiples_table (30 samples, 0.02%)</title><rect x="0.0237%" y="693" width="0.0237%" height="15" fill="rgb(221,193,54)" fg:x="30" fg:w="30"/><text x="0.2737%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecmult::odd_multiples_table_globalz_windowa (37 samples, 0.03%)</title><rect x="0.0229%" y="709" width="0.0292%" height="15" fill="rgb(248,212,6)" fg:x="29" fg:w="37"/><text x="0.2729%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (52 samples, 0.04%)</title><rect x="0.0751%" y="645" width="0.0411%" height="15" fill="rgb(208,68,35)" fg:x="95" fg:w="52"/><text x="0.3251%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (64 samples, 0.05%)</title><rect x="0.0751%" y="661" width="0.0506%" height="15" fill="rgb(232,128,0)" fg:x="95" fg:w="64"/><text x="0.3251%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::inv (76 samples, 0.06%)</title><rect x="0.0680%" y="693" width="0.0601%" height="15" fill="rgb(207,160,47)" fg:x="86" fg:w="76"/><text x="0.3180%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (68 samples, 0.05%)</title><rect x="0.0743%" y="677" width="0.0537%" height="15" fill="rgb(228,23,34)" fg:x="94" fg:w="68"/><text x="0.3243%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Affine::set_gej (78 samples, 0.06%)</title><rect x="0.0672%" y="709" width="0.0616%" height="15" fill="rgb(218,30,26)" fg:x="85" fg:w="78"/><text x="0.3172%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (83 samples, 0.07%)</title><rect x="0.1383%" y="645" width="0.0656%" height="15" fill="rgb(220,122,19)" fg:x="175" fg:w="83"/><text x="0.3883%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (98 samples, 0.08%)</title><rect x="0.1375%" y="661" width="0.0775%" height="15" fill="rgb(250,228,42)" fg:x="174" fg:w="98"/><text x="0.3875%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (14 samples, 0.01%)</title><rect x="0.2039%" y="645" width="0.0111%" height="15" fill="rgb(240,193,28)" fg:x="258" fg:w="14"/><text x="0.4539%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::Mul&gt;::mul (100 samples, 0.08%)</title><rect x="0.1375%" y="677" width="0.0790%" height="15" fill="rgb(216,20,37)" fg:x="174" fg:w="100"/><text x="0.3875%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (26 samples, 0.02%)</title><rect x="0.2174%" y="629" width="0.0205%" height="15" fill="rgb(206,188,39)" fg:x="275" fg:w="26"/><text x="0.4674%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (35 samples, 0.03%)</title><rect x="0.2166%" y="645" width="0.0277%" height="15" fill="rgb(217,207,13)" fg:x="274" fg:w="35"/><text x="0.4666%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::mul_assign (36 samples, 0.03%)</title><rect x="0.2166%" y="661" width="0.0285%" height="15" fill="rgb(231,73,38)" fg:x="274" fg:w="36"/><text x="0.4666%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&gt;::mul_assign (37 samples, 0.03%)</title><rect x="0.2166%" y="677" width="0.0292%" height="15" fill="rgb(225,20,46)" fg:x="274" fg:w="37"/><text x="0.4666%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (69 samples, 0.05%)</title><rect x="0.2766%" y="645" width="0.0545%" height="15" fill="rgb(210,31,41)" fg:x="350" fg:w="69"/><text x="0.5266%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (83 samples, 0.07%)</title><rect x="0.2735%" y="677" width="0.0656%" height="15" fill="rgb(221,200,47)" fg:x="346" fg:w="83"/><text x="0.5235%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (81 samples, 0.06%)</title><rect x="0.2751%" y="661" width="0.0640%" height="15" fill="rgb(226,26,5)" fg:x="348" fg:w="81"/><text x="0.5251%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge_in_place (266 samples, 0.21%)</title><rect x="0.1320%" y="693" width="0.2102%" height="15" fill="rgb(249,33,26)" fg:x="167" fg:w="266"/><text x="0.3820%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge (276 samples, 0.22%)</title><rect x="0.1288%" y="709" width="0.2181%" height="15" fill="rgb(235,183,28)" fg:x="163" fg:w="276"/><text x="0.3788%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::AddAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::add_assign (13 samples, 0.01%)</title><rect x="0.3493%" y="677" width="0.0103%" height="15" fill="rgb(221,5,38)" fg:x="442" fg:w="13"/><text x="0.5993%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (121 samples, 0.10%)</title><rect x="0.3683%" y="645" width="0.0956%" height="15" fill="rgb(247,18,42)" fg:x="466" fg:w="121"/><text x="0.6183%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::Mul&gt;::mul (154 samples, 0.12%)</title><rect x="0.3644%" y="677" width="0.1217%" height="15" fill="rgb(241,131,45)" fg:x="461" fg:w="154"/><text x="0.6144%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (150 samples, 0.12%)</title><rect x="0.3675%" y="661" width="0.1186%" height="15" fill="rgb(249,31,29)" fg:x="465" fg:w="150"/><text x="0.6175%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (28 samples, 0.02%)</title><rect x="0.4640%" y="645" width="0.0221%" height="15" fill="rgb(225,111,53)" fg:x="587" fg:w="28"/><text x="0.7140%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (44 samples, 0.03%)</title><rect x="0.4869%" y="645" width="0.0348%" height="15" fill="rgb(238,160,17)" fg:x="616" fg:w="44"/><text x="0.7369%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::mul_assign (52 samples, 0.04%)</title><rect x="0.4861%" y="677" width="0.0411%" height="15" fill="rgb(214,148,48)" fg:x="615" fg:w="52"/><text x="0.7361%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (51 samples, 0.04%)</title><rect x="0.4869%" y="661" width="0.0403%" height="15" fill="rgb(232,36,49)" fg:x="616" fg:w="51"/><text x="0.7369%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_int (19 samples, 0.02%)</title><rect x="0.5280%" y="677" width="0.0150%" height="15" fill="rgb(209,103,24)" fg:x="668" fg:w="19"/><text x="0.7780%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (15 samples, 0.01%)</title><rect x="0.5311%" y="661" width="0.0119%" height="15" fill="rgb(229,88,8)" fg:x="672" fg:w="15"/><text x="0.7811%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::neg_in_place (36 samples, 0.03%)</title><rect x="0.5446%" y="661" width="0.0285%" height="15" fill="rgb(213,181,19)" fg:x="689" fg:w="36"/><text x="0.7946%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (23 samples, 0.02%)</title><rect x="0.5548%" y="645" width="0.0182%" height="15" fill="rgb(254,191,54)" fg:x="702" fg:w="23"/><text x="0.8048%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::neg (42 samples, 0.03%)</title><rect x="0.5430%" y="677" width="0.0332%" height="15" fill="rgb(241,83,37)" fg:x="687" fg:w="42"/><text x="0.7930%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (182 samples, 0.14%)</title><rect x="0.5778%" y="645" width="0.1438%" height="15" fill="rgb(233,36,39)" fg:x="731" fg:w="182"/><text x="0.8278%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (222 samples, 0.18%)</title><rect x="0.5778%" y="661" width="0.1755%" height="15" fill="rgb(226,3,54)" fg:x="731" fg:w="222"/><text x="0.8278%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (40 samples, 0.03%)</title><rect x="0.7216%" y="645" width="0.0316%" height="15" fill="rgb(245,192,40)" fg:x="913" fg:w="40"/><text x="0.9716%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (227 samples, 0.18%)</title><rect x="0.5762%" y="677" width="0.1794%" height="15" fill="rgb(238,167,29)" fg:x="729" fg:w="227"/><text x="0.8262%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::double_var_in_place (529 samples, 0.42%)</title><rect x="0.3478%" y="693" width="0.4181%" height="15" fill="rgb(232,182,51)" fg:x="440" fg:w="529"/><text x="0.5978%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.01%)</title><rect x="0.7556%" y="677" width="0.0103%" height="15" fill="rgb(231,60,39)" fg:x="956" fg:w="13"/><text x="1.0056%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::double_nonzero_in_place (532 samples, 0.42%)</title><rect x="0.3470%" y="709" width="0.4205%" height="15" fill="rgb(208,69,12)" fg:x="439" fg:w="532"/><text x="0.5970%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecmult::ECMultContext::ecmult_const (951 samples, 0.75%)</title><rect x="0.0190%" y="725" width="0.7516%" height="15" fill="rgb(235,93,37)" fg:x="24" fg:w="951"/><text x="0.2690%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (41 samples, 0.03%)</title><rect x="0.7754%" y="661" width="0.0324%" height="15" fill="rgb(213,116,39)" fg:x="981" fg:w="41"/><text x="1.0254%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (48 samples, 0.04%)</title><rect x="0.7754%" y="693" width="0.0379%" height="15" fill="rgb(222,207,29)" fg:x="981" fg:w="48"/><text x="1.0254%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (48 samples, 0.04%)</title><rect x="0.7754%" y="677" width="0.0379%" height="15" fill="rgb(206,96,30)" fg:x="981" fg:w="48"/><text x="1.0254%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::pubkey::get_aes_key (1,011 samples, 0.80%)</title><rect x="0.0150%" y="789" width="0.7991%" height="15" fill="rgb(218,138,4)" fg:x="19" fg:w="1011"/><text x="0.2650%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::SharedSecret&lt;D&gt;::new (1,011 samples, 0.80%)</title><rect x="0.0150%" y="773" width="0.7991%" height="15" fill="rgb(250,191,14)" fg:x="19" fg:w="1011"/><text x="0.2650%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::SharedSecret&lt;D&gt;::new_with_context (1,011 samples, 0.80%)</title><rect x="0.0150%" y="757" width="0.7991%" height="15" fill="rgb(239,60,40)" fg:x="19" fg:w="1011"/><text x="0.2650%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecdh::_&lt;impl libsecp256k1_core::ecmult::ECMultContext&gt;::ecdh_raw (1,011 samples, 0.80%)</title><rect x="0.0150%" y="741" width="0.7991%" height="15" fill="rgb(206,27,48)" fg:x="19" fg:w="1011"/><text x="0.2650%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Affine::set_gej (54 samples, 0.04%)</title><rect x="0.7714%" y="725" width="0.0427%" height="15" fill="rgb(225,35,8)" fg:x="976" fg:w="54"/><text x="1.0214%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::inv (52 samples, 0.04%)</title><rect x="0.7730%" y="709" width="0.0411%" height="15" fill="rgb(250,213,24)" fg:x="978" fg:w="52"/><text x="1.0230%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Alg as aead::Aead&gt;::decrypt (17 samples, 0.01%)</title><rect x="0.8141%" y="773" width="0.0134%" height="15" fill="rgb(247,123,22)" fg:x="1030" fg:w="17"/><text x="1.0641%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aead::AeadInPlace::decrypt_in_place (17 samples, 0.01%)</title><rect x="0.8141%" y="757" width="0.0134%" height="15" fill="rgb(231,138,38)" fg:x="1030" fg:w="17"/><text x="1.0641%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (17 samples, 0.01%)</title><rect x="0.8141%" y="741" width="0.0134%" height="15" fill="rgb(231,145,46)" fg:x="1030" fg:w="17"/><text x="1.0641%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`cipher::stream::StreamCipher::apply_keystream (16 samples, 0.01%)</title><rect x="0.8149%" y="725" width="0.0126%" height="15" fill="rgb(251,118,11)" fg:x="1031" fg:w="16"/><text x="1.0649%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;ctr::Ctr&lt;B,F&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (16 samples, 0.01%)</title><rect x="0.8149%" y="709" width="0.0126%" height="15" fill="rgb(217,147,25)" fg:x="1031" fg:w="16"/><text x="1.0649%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::access_info::UserAccessInfo::decrypt (1,035 samples, 0.82%)</title><rect x="0.0150%" y="805" width="0.8180%" height="15" fill="rgb(247,81,37)" fg:x="19" fg:w="1035"/><text x="0.2650%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::symkey::decrypt (24 samples, 0.02%)</title><rect x="0.8141%" y="789" width="0.0190%" height="15" fill="rgb(209,12,38)" fg:x="1030" fg:w="24"/><text x="1.0641%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::FieldStorage::cmov (16 samples, 0.01%)</title><rect x="0.8394%" y="741" width="0.0126%" height="15" fill="rgb(227,1,9)" fg:x="1062" fg:w="16"/><text x="1.0894%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (70 samples, 0.06%)</title><rect x="0.8678%" y="677" width="0.0553%" height="15" fill="rgb(248,47,43)" fg:x="1098" fg:w="70"/><text x="1.1178%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (89 samples, 0.07%)</title><rect x="0.8678%" y="693" width="0.0703%" height="15" fill="rgb(221,10,30)" fg:x="1098" fg:w="89"/><text x="1.1178%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (19 samples, 0.02%)</title><rect x="0.9232%" y="677" width="0.0150%" height="15" fill="rgb(210,229,1)" fg:x="1168" fg:w="19"/><text x="1.1732%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::Mul&gt;::mul (95 samples, 0.08%)</title><rect x="0.8670%" y="709" width="0.0751%" height="15" fill="rgb(222,148,37)" fg:x="1097" fg:w="95"/><text x="1.1170%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (29 samples, 0.02%)</title><rect x="0.9421%" y="661" width="0.0229%" height="15" fill="rgb(234,67,33)" fg:x="1192" fg:w="29"/><text x="1.1921%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (33 samples, 0.03%)</title><rect x="0.9421%" y="677" width="0.0261%" height="15" fill="rgb(247,98,35)" fg:x="1192" fg:w="33"/><text x="1.1921%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::mul_assign (34 samples, 0.03%)</title><rect x="0.9421%" y="693" width="0.0269%" height="15" fill="rgb(247,138,52)" fg:x="1192" fg:w="34"/><text x="1.1921%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&gt;::mul_assign (35 samples, 0.03%)</title><rect x="0.9421%" y="709" width="0.0277%" height="15" fill="rgb(213,79,30)" fg:x="1192" fg:w="35"/><text x="1.1921%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_int (13 samples, 0.01%)</title><rect x="0.9698%" y="709" width="0.0103%" height="15" fill="rgb(246,177,23)" fg:x="1227" fg:w="13"/><text x="1.2198%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (62 samples, 0.05%)</title><rect x="1.0006%" y="677" width="0.0490%" height="15" fill="rgb(230,62,27)" fg:x="1266" fg:w="62"/><text x="1.2506%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (78 samples, 0.06%)</title><rect x="1.0006%" y="693" width="0.0616%" height="15" fill="rgb(216,154,8)" fg:x="1266" fg:w="78"/><text x="1.2506%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (16 samples, 0.01%)</title><rect x="1.0496%" y="677" width="0.0126%" height="15" fill="rgb(244,35,45)" fg:x="1328" fg:w="16"/><text x="1.2996%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (80 samples, 0.06%)</title><rect x="0.9998%" y="709" width="0.0632%" height="15" fill="rgb(251,115,12)" fg:x="1265" fg:w="80"/><text x="1.2498%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge_in_place (263 samples, 0.21%)</title><rect x="0.8576%" y="725" width="0.2079%" height="15" fill="rgb(240,54,50)" fg:x="1085" fg:w="263"/><text x="1.1076%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge (278 samples, 0.22%)</title><rect x="0.8528%" y="741" width="0.2197%" height="15" fill="rgb(233,84,52)" fg:x="1079" fg:w="278"/><text x="1.1028%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (306 samples, 0.24%)</title><rect x="0.8331%" y="757" width="0.2419%" height="15" fill="rgb(207,117,47)" fg:x="1054" fg:w="306"/><text x="1.0831%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (42 samples, 0.03%)</title><rect x="1.0812%" y="693" width="0.0332%" height="15" fill="rgb(249,43,39)" fg:x="1368" fg:w="42"/><text x="1.3312%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (45 samples, 0.04%)</title><rect x="1.0812%" y="709" width="0.0356%" height="15" fill="rgb(209,38,44)" fg:x="1368" fg:w="45"/><text x="1.3312%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Affine::set_gej (55 samples, 0.04%)</title><rect x="1.0749%" y="757" width="0.0435%" height="15" fill="rgb(236,212,23)" fg:x="1360" fg:w="55"/><text x="1.3249%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::inv (54 samples, 0.04%)</title><rect x="1.0757%" y="741" width="0.0427%" height="15" fill="rgb(242,79,21)" fg:x="1361" fg:w="54"/><text x="1.3257%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (48 samples, 0.04%)</title><rect x="1.0804%" y="725" width="0.0379%" height="15" fill="rgb(211,96,35)" fg:x="1367" fg:w="48"/><text x="1.3304%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::account::Account::public_key (362 samples, 0.29%)</title><rect x="0.8331%" y="805" width="0.2861%" height="15" fill="rgb(253,215,40)" fg:x="1054" fg:w="362"/><text x="1.0831%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key (362 samples, 0.29%)</title><rect x="0.8331%" y="789" width="0.2861%" height="15" fill="rgb(211,81,21)" fg:x="1054" fg:w="362"/><text x="1.0831%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key_with_context (362 samples, 0.29%)</title><rect x="0.8331%" y="773" width="0.2861%" height="15" fill="rgb(208,190,38)" fg:x="1054" fg:w="362"/><text x="1.0831%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::decrypt_key (1,401 samples, 1.11%)</title><rect x="0.0134%" y="821" width="1.1073%" height="15" fill="rgb(235,213,38)" fg:x="17" fg:w="1401"/><text x="0.2634%" y="831.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Alg as aead::Aead&gt;::encrypt (17 samples, 0.01%)</title><rect x="1.1215%" y="789" width="0.0134%" height="15" fill="rgb(237,122,38)" fg:x="1419" fg:w="17"/><text x="1.3715%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aead::AeadInPlace::encrypt_in_place (17 samples, 0.01%)</title><rect x="1.1215%" y="773" width="0.0134%" height="15" fill="rgb(244,218,35)" fg:x="1419" fg:w="17"/><text x="1.3715%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (17 samples, 0.01%)</title><rect x="1.1215%" y="757" width="0.0134%" height="15" fill="rgb(240,68,47)" fg:x="1419" fg:w="17"/><text x="1.3715%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`cipher::stream::StreamCipher::apply_keystream (15 samples, 0.01%)</title><rect x="1.1231%" y="741" width="0.0119%" height="15" fill="rgb(210,16,53)" fg:x="1421" fg:w="15"/><text x="1.3731%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;ctr::Ctr&lt;B,F&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (15 samples, 0.01%)</title><rect x="1.1231%" y="725" width="0.0119%" height="15" fill="rgb(235,124,12)" fg:x="1421" fg:w="15"/><text x="1.3731%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::secret_filename::SecretFileName::from_str (37 samples, 0.03%)</title><rect x="1.1208%" y="805" width="0.0292%" height="15" fill="rgb(224,169,11)" fg:x="1418" fg:w="37"/><text x="1.3708%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;Alg as cipher::block::BlockEncrypt&gt;::encrypt_block (15 samples, 0.01%)</title><rect x="1.1516%" y="709" width="0.0119%" height="15" fill="rgb(250,166,2)" fg:x="1457" fg:w="15"/><text x="1.4016%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes::soft::Aes256 as cipher::block::BlockEncrypt&gt;::encrypt_block (15 samples, 0.01%)</title><rect x="1.1516%" y="693" width="0.0119%" height="15" fill="rgb(242,216,29)" fg:x="1457" fg:w="15"/><text x="1.4016%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::aes256_encrypt (14 samples, 0.01%)</title><rect x="1.1524%" y="677" width="0.0111%" height="15" fill="rgb(230,116,27)" fg:x="1458" fg:w="14"/><text x="1.4024%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Alg as aead::Aead&gt;::encrypt (18 samples, 0.01%)</title><rect x="1.1500%" y="789" width="0.0142%" height="15" fill="rgb(228,99,48)" fg:x="1455" fg:w="18"/><text x="1.4000%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aead::AeadInPlace::encrypt_in_place (18 samples, 0.01%)</title><rect x="1.1500%" y="773" width="0.0142%" height="15" fill="rgb(253,11,6)" fg:x="1455" fg:w="18"/><text x="1.4000%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (18 samples, 0.01%)</title><rect x="1.1500%" y="757" width="0.0142%" height="15" fill="rgb(247,143,39)" fg:x="1455" fg:w="18"/><text x="1.4000%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`cipher::stream::StreamCipher::apply_keystream (16 samples, 0.01%)</title><rect x="1.1516%" y="741" width="0.0126%" height="15" fill="rgb(236,97,10)" fg:x="1457" fg:w="16"/><text x="1.4016%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;ctr::Ctr&lt;B,F&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (16 samples, 0.01%)</title><rect x="1.1516%" y="725" width="0.0126%" height="15" fill="rgb(233,208,19)" fg:x="1457" fg:w="16"/><text x="1.4016%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::file_metadata::FileMetadata::create (70 samples, 0.06%)</title><rect x="1.1208%" y="821" width="0.0553%" height="15" fill="rgb(216,164,2)" fg:x="1418" fg:w="70"/><text x="1.3708%" y="831.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::symkey::encrypt (33 samples, 0.03%)</title><rect x="1.1500%" y="805" width="0.0261%" height="15" fill="rgb(220,129,5)" fg:x="1455" fg:w="33"/><text x="1.4000%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::FieldStorage::cmov (15 samples, 0.01%)</title><rect x="1.1974%" y="741" width="0.0119%" height="15" fill="rgb(242,17,10)" fg:x="1515" fg:w="15"/><text x="1.4474%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (60 samples, 0.05%)</title><rect x="1.2243%" y="677" width="0.0474%" height="15" fill="rgb(242,107,0)" fg:x="1549" fg:w="60"/><text x="1.4743%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (73 samples, 0.06%)</title><rect x="1.2227%" y="693" width="0.0577%" height="15" fill="rgb(251,28,31)" fg:x="1547" fg:w="73"/><text x="1.4727%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::Mul&gt;::mul (78 samples, 0.06%)</title><rect x="1.2219%" y="709" width="0.0616%" height="15" fill="rgb(233,223,10)" fg:x="1546" fg:w="78"/><text x="1.4719%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (26 samples, 0.02%)</title><rect x="1.2836%" y="661" width="0.0205%" height="15" fill="rgb(215,21,27)" fg:x="1624" fg:w="26"/><text x="1.5336%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::mul_assign (29 samples, 0.02%)</title><rect x="1.2836%" y="693" width="0.0229%" height="15" fill="rgb(232,23,21)" fg:x="1624" fg:w="29"/><text x="1.5336%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (29 samples, 0.02%)</title><rect x="1.2836%" y="677" width="0.0229%" height="15" fill="rgb(244,5,23)" fg:x="1624" fg:w="29"/><text x="1.5336%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&gt;::mul_assign (30 samples, 0.02%)</title><rect x="1.2836%" y="709" width="0.0237%" height="15" fill="rgb(226,81,46)" fg:x="1624" fg:w="30"/><text x="1.5336%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (63 samples, 0.05%)</title><rect x="1.3310%" y="677" width="0.0498%" height="15" fill="rgb(247,70,30)" fg:x="1684" fg:w="63"/><text x="1.5810%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (77 samples, 0.06%)</title><rect x="1.3302%" y="693" width="0.0609%" height="15" fill="rgb(212,68,19)" fg:x="1683" fg:w="77"/><text x="1.5802%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (13 samples, 0.01%)</title><rect x="1.3808%" y="677" width="0.0103%" height="15" fill="rgb(240,187,13)" fg:x="1747" fg:w="13"/><text x="1.6308%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (81 samples, 0.06%)</title><rect x="1.3302%" y="709" width="0.0640%" height="15" fill="rgb(223,113,26)" fg:x="1683" fg:w="81"/><text x="1.5802%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge_in_place (230 samples, 0.18%)</title><rect x="1.2140%" y="725" width="0.1818%" height="15" fill="rgb(206,192,2)" fg:x="1536" fg:w="230"/><text x="1.4640%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge (240 samples, 0.19%)</title><rect x="1.2093%" y="741" width="0.1897%" height="15" fill="rgb(241,108,4)" fg:x="1530" fg:w="240"/><text x="1.4593%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (266 samples, 0.21%)</title><rect x="1.1895%" y="757" width="0.2102%" height="15" fill="rgb(247,173,49)" fg:x="1505" fg:w="266"/><text x="1.4395%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (44 samples, 0.03%)</title><rect x="1.4045%" y="693" width="0.0348%" height="15" fill="rgb(224,114,35)" fg:x="1777" fg:w="44"/><text x="1.6545%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (50 samples, 0.04%)</title><rect x="1.4045%" y="709" width="0.0395%" height="15" fill="rgb(245,159,27)" fg:x="1777" fg:w="50"/><text x="1.6545%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::inv (57 samples, 0.05%)</title><rect x="1.3998%" y="741" width="0.0451%" height="15" fill="rgb(245,172,44)" fg:x="1771" fg:w="57"/><text x="1.6498%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (52 samples, 0.04%)</title><rect x="1.4037%" y="725" width="0.0411%" height="15" fill="rgb(236,23,11)" fg:x="1776" fg:w="52"/><text x="1.6537%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key (327 samples, 0.26%)</title><rect x="1.1887%" y="789" width="0.2585%" height="15" fill="rgb(205,117,38)" fg:x="1504" fg:w="327"/><text x="1.4387%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key_with_context (327 samples, 0.26%)</title><rect x="1.1887%" y="773" width="0.2585%" height="15" fill="rgb(237,72,25)" fg:x="1504" fg:w="327"/><text x="1.4387%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Affine::set_gej (60 samples, 0.05%)</title><rect x="1.3998%" y="757" width="0.0474%" height="15" fill="rgb(244,70,9)" fg:x="1771" fg:w="60"/><text x="1.6498%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (15 samples, 0.01%)</title><rect x="1.4598%" y="709" width="0.0119%" height="15" fill="rgb(217,125,39)" fg:x="1847" fg:w="15"/><text x="1.7098%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::hmac (14 samples, 0.01%)</title><rect x="1.4717%" y="709" width="0.0111%" height="15" fill="rgb(235,36,10)" fg:x="1862" fg:w="14"/><text x="1.7217%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::generate (46 samples, 0.04%)</title><rect x="1.4472%" y="757" width="0.0364%" height="15" fill="rgb(251,123,47)" fg:x="1831" fg:w="46"/><text x="1.6972%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::generate_to_slice (46 samples, 0.04%)</title><rect x="1.4472%" y="741" width="0.0364%" height="15" fill="rgb(221,13,13)" fg:x="1831" fg:w="46"/><text x="1.6972%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::update (30 samples, 0.02%)</title><rect x="1.4598%" y="725" width="0.0237%" height="15" fill="rgb(238,131,9)" fg:x="1847" fg:w="30"/><text x="1.7098%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (16 samples, 0.01%)</title><rect x="1.4867%" y="693" width="0.0126%" height="15" fill="rgb(211,50,8)" fg:x="1881" fg:w="16"/><text x="1.7367%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (16 samples, 0.01%)</title><rect x="1.4867%" y="677" width="0.0126%" height="15" fill="rgb(245,182,24)" fg:x="1881" fg:w="16"/><text x="1.7367%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::finish (16 samples, 0.01%)</title><rect x="1.4867%" y="661" width="0.0126%" height="15" fill="rgb(242,14,37)" fg:x="1881" fg:w="16"/><text x="1.7367%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (16 samples, 0.01%)</title><rect x="1.4867%" y="645" width="0.0126%" height="15" fill="rgb(246,228,12)" fg:x="1881" fg:w="16"/><text x="1.7367%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::finish::_{{closure}} (16 samples, 0.01%)</title><rect x="1.4867%" y="629" width="0.0126%" height="15" fill="rgb(213,55,15)" fg:x="1881" fg:w="16"/><text x="1.7367%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::compress256 (16 samples, 0.01%)</title><rect x="1.4867%" y="613" width="0.0126%" height="15" fill="rgb(209,9,3)" fg:x="1881" fg:w="16"/><text x="1.7367%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::soft::compress (16 samples, 0.01%)</title><rect x="1.4867%" y="597" width="0.0126%" height="15" fill="rgb(230,59,30)" fg:x="1881" fg:w="16"/><text x="1.7367%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (22 samples, 0.02%)</title><rect x="1.4835%" y="725" width="0.0174%" height="15" fill="rgb(209,121,21)" fg:x="1877" fg:w="22"/><text x="1.7335%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`digest::fixed::FixedOutput::finalize_fixed (18 samples, 0.01%)</title><rect x="1.4867%" y="709" width="0.0142%" height="15" fill="rgb(220,109,13)" fg:x="1881" fg:w="18"/><text x="1.7367%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_varkey (23 samples, 0.02%)</title><rect x="1.5041%" y="709" width="0.0182%" height="15" fill="rgb(232,18,1)" fg:x="1903" fg:w="23"/><text x="1.7541%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (14 samples, 0.01%)</title><rect x="1.5112%" y="693" width="0.0111%" height="15" fill="rgb(215,41,42)" fg:x="1912" fg:w="14"/><text x="1.7612%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::update (14 samples, 0.01%)</title><rect x="1.5112%" y="677" width="0.0111%" height="15" fill="rgb(224,123,36)" fg:x="1912" fg:w="14"/><text x="1.7612%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (14 samples, 0.01%)</title><rect x="1.5112%" y="661" width="0.0111%" height="15" fill="rgb(240,125,3)" fg:x="1912" fg:w="14"/><text x="1.7612%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::update::_{{closure}} (14 samples, 0.01%)</title><rect x="1.5112%" y="645" width="0.0111%" height="15" fill="rgb(205,98,50)" fg:x="1912" fg:w="14"/><text x="1.7612%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::compress256 (14 samples, 0.01%)</title><rect x="1.5112%" y="629" width="0.0111%" height="15" fill="rgb(205,185,37)" fg:x="1912" fg:w="14"/><text x="1.7612%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::soft::compress (13 samples, 0.01%)</title><rect x="1.5120%" y="613" width="0.0103%" height="15" fill="rgb(238,207,15)" fg:x="1913" fg:w="13"/><text x="1.7620%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::new (51 samples, 0.04%)</title><rect x="1.4835%" y="757" width="0.0403%" height="15" fill="rgb(213,199,42)" fg:x="1877" fg:w="51"/><text x="1.7335%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::update (51 samples, 0.04%)</title><rect x="1.4835%" y="741" width="0.0403%" height="15" fill="rgb(235,201,11)" fg:x="1877" fg:w="51"/><text x="1.7335%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::hmac (25 samples, 0.02%)</title><rect x="1.5041%" y="725" width="0.0198%" height="15" fill="rgb(207,46,11)" fg:x="1903" fg:w="25"/><text x="1.7541%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (59 samples, 0.05%)</title><rect x="1.5618%" y="661" width="0.0466%" height="15" fill="rgb(241,35,35)" fg:x="1976" fg:w="59"/><text x="1.8118%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (75 samples, 0.06%)</title><rect x="1.5618%" y="677" width="0.0593%" height="15" fill="rgb(243,32,47)" fg:x="1976" fg:w="75"/><text x="1.8118%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (16 samples, 0.01%)</title><rect x="1.6084%" y="661" width="0.0126%" height="15" fill="rgb(247,202,23)" fg:x="2035" fg:w="16"/><text x="1.8584%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::Mul&gt;::mul (77 samples, 0.06%)</title><rect x="1.5610%" y="693" width="0.0609%" height="15" fill="rgb(219,102,11)" fg:x="1975" fg:w="77"/><text x="1.8110%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (29 samples, 0.02%)</title><rect x="1.6219%" y="645" width="0.0229%" height="15" fill="rgb(243,110,44)" fg:x="2052" fg:w="29"/><text x="1.8719%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::mul_assign (35 samples, 0.03%)</title><rect x="1.6219%" y="677" width="0.0277%" height="15" fill="rgb(222,74,54)" fg:x="2052" fg:w="35"/><text x="1.8719%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (35 samples, 0.03%)</title><rect x="1.6219%" y="661" width="0.0277%" height="15" fill="rgb(216,99,12)" fg:x="2052" fg:w="35"/><text x="1.8719%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&gt;::mul_assign (36 samples, 0.03%)</title><rect x="1.6219%" y="693" width="0.0285%" height="15" fill="rgb(226,22,26)" fg:x="2052" fg:w="36"/><text x="1.8719%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (39 samples, 0.03%)</title><rect x="1.6795%" y="661" width="0.0308%" height="15" fill="rgb(217,163,10)" fg:x="2125" fg:w="39"/><text x="1.9295%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (50 samples, 0.04%)</title><rect x="1.6780%" y="677" width="0.0395%" height="15" fill="rgb(213,25,53)" fg:x="2123" fg:w="50"/><text x="1.9280%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (51 samples, 0.04%)</title><rect x="1.6780%" y="693" width="0.0403%" height="15" fill="rgb(252,105,26)" fg:x="2123" fg:w="51"/><text x="1.9280%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge_in_place (212 samples, 0.17%)</title><rect x="1.5515%" y="709" width="0.1676%" height="15" fill="rgb(220,39,43)" fg:x="1963" fg:w="212"/><text x="1.8015%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (248 samples, 0.20%)</title><rect x="1.5294%" y="741" width="0.1960%" height="15" fill="rgb(229,68,48)" fg:x="1935" fg:w="248"/><text x="1.7794%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge (225 samples, 0.18%)</title><rect x="1.5476%" y="725" width="0.1778%" height="15" fill="rgb(252,8,32)" fg:x="1958" fg:w="225"/><text x="1.7976%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (57 samples, 0.05%)</title><rect x="1.7293%" y="677" width="0.0451%" height="15" fill="rgb(223,20,43)" fg:x="2188" fg:w="57"/><text x="1.9793%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (64 samples, 0.05%)</title><rect x="1.7293%" y="693" width="0.0506%" height="15" fill="rgb(229,81,49)" fg:x="2188" fg:w="64"/><text x="1.9793%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Affine::set_gej (70 samples, 0.06%)</title><rect x="1.7254%" y="741" width="0.0553%" height="15" fill="rgb(236,28,36)" fg:x="2183" fg:w="70"/><text x="1.9754%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::inv (70 samples, 0.06%)</title><rect x="1.7254%" y="725" width="0.0553%" height="15" fill="rgb(249,185,26)" fg:x="2183" fg:w="70"/><text x="1.9754%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (66 samples, 0.05%)</title><rect x="1.7286%" y="709" width="0.0522%" height="15" fill="rgb(249,174,33)" fg:x="2187" fg:w="66"/><text x="1.9786%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::scalar::Scalar as core::ops::arith::Mul&gt;::mul (14 samples, 0.01%)</title><rect x="1.7831%" y="709" width="0.0111%" height="15" fill="rgb(233,201,37)" fg:x="2256" fg:w="14"/><text x="2.0331%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::mul_in_place (14 samples, 0.01%)</title><rect x="1.7831%" y="693" width="0.0111%" height="15" fill="rgb(221,78,26)" fg:x="2256" fg:w="14"/><text x="2.0331%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::mul_512 (22 samples, 0.02%)</title><rect x="1.7949%" y="677" width="0.0174%" height="15" fill="rgb(250,127,30)" fg:x="2271" fg:w="22"/><text x="2.0449%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::scalar::Scalar as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::scalar::Scalar&gt;&gt;::mul_assign (46 samples, 0.04%)</title><rect x="1.7942%" y="709" width="0.0364%" height="15" fill="rgb(230,49,44)" fg:x="2270" fg:w="46"/><text x="2.0442%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::mul_in_place (45 samples, 0.04%)</title><rect x="1.7949%" y="693" width="0.0356%" height="15" fill="rgb(229,67,23)" fg:x="2271" fg:w="45"/><text x="2.0449%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::reduce_512 (23 samples, 0.02%)</title><rect x="1.8123%" y="677" width="0.0182%" height="15" fill="rgb(249,83,47)" fg:x="2293" fg:w="23"/><text x="2.0623%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (13 samples, 0.01%)</title><rect x="1.9838%" y="645" width="0.0103%" height="15" fill="rgb(215,43,3)" fg:x="2510" fg:w="13"/><text x="2.2338%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;subtle::Choice as core::ops::bit::BitOrAssign&gt;::bitor_assign (20 samples, 0.02%)</title><rect x="2.0036%" y="645" width="0.0158%" height="15" fill="rgb(238,154,13)" fg:x="2535" fg:w="20"/><text x="2.2536%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;subtle::Choice as core::ops::bit::BitOr&gt;::bitor (16 samples, 0.01%)</title><rect x="2.0068%" y="629" width="0.0126%" height="15" fill="rgb(219,56,2)" fg:x="2539" fg:w="16"/><text x="2.2568%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::check_overflow (61 samples, 0.05%)</title><rect x="1.9791%" y="661" width="0.0482%" height="15" fill="rgb(233,0,4)" fg:x="2504" fg:w="61"/><text x="2.2291%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::reduce_512 (248 samples, 0.20%)</title><rect x="1.8337%" y="677" width="0.1960%" height="15" fill="rgb(235,30,7)" fg:x="2320" fg:w="248"/><text x="2.0837%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::inv (493 samples, 0.39%)</title><rect x="1.7807%" y="741" width="0.3897%" height="15" fill="rgb(250,79,13)" fg:x="2253" fg:w="493"/><text x="2.0307%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::inv_in_place (493 samples, 0.39%)</title><rect x="1.7807%" y="725" width="0.3897%" height="15" fill="rgb(211,146,34)" fg:x="2253" fg:w="493"/><text x="2.0307%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::sqr (427 samples, 0.34%)</title><rect x="1.8329%" y="709" width="0.3375%" height="15" fill="rgb(228,22,38)" fg:x="2319" fg:w="427"/><text x="2.0829%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::sqr_in_place (426 samples, 0.34%)</title><rect x="1.8337%" y="693" width="0.3367%" height="15" fill="rgb(235,168,5)" fg:x="2320" fg:w="426"/><text x="2.0837%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::sqr_512 (178 samples, 0.14%)</title><rect x="2.0297%" y="677" width="0.1407%" height="15" fill="rgb(221,155,16)" fg:x="2568" fg:w="178"/><text x="2.2797%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_ops::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::create_op (2,731 samples, 2.16%)</title><rect x="0.0134%" y="837" width="2.1585%" height="15" fill="rgb(215,215,53)" fg:x="17" fg:w="2731"/><text x="0.2634%" y="847.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::file_metadata::FileMetadata::sign (1,260 samples, 1.00%)</title><rect x="1.1761%" y="821" width="0.9959%" height="15" fill="rgb(223,4,10)" fg:x="1488" fg:w="1260"/><text x="1.4261%" y="831.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::pubkey::sign (1,260 samples, 1.00%)</title><rect x="1.1761%" y="805" width="0.9959%" height="15" fill="rgb(234,103,6)" fg:x="1488" fg:w="1260"/><text x="1.4261%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::sign (917 samples, 0.72%)</title><rect x="1.4472%" y="789" width="0.7248%" height="15" fill="rgb(227,97,0)" fg:x="1831" fg:w="917"/><text x="1.6972%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::sign_with_context (917 samples, 0.72%)</title><rect x="1.4472%" y="773" width="0.7248%" height="15" fill="rgb(234,150,53)" fg:x="1831" fg:w="917"/><text x="1.6972%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecdsa::_&lt;impl libsecp256k1_core::ecmult::ECMultGenContext&gt;::sign_raw (820 samples, 0.65%)</title><rect x="1.5238%" y="757" width="0.6481%" height="15" fill="rgb(228,201,54)" fg:x="1928" fg:w="820"/><text x="1.7738%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (29 samples, 0.02%)</title><rect x="2.2123%" y="421" width="0.0229%" height="15" fill="rgb(222,22,37)" fg:x="2799" fg:w="29"/><text x="2.4623%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (25 samples, 0.02%)</title><rect x="2.2154%" y="405" width="0.0198%" height="15" fill="rgb(237,53,32)" fg:x="2803" fg:w="25"/><text x="2.4654%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (16 samples, 0.01%)</title><rect x="2.2423%" y="341" width="0.0126%" height="15" fill="rgb(233,25,53)" fg:x="2837" fg:w="16"/><text x="2.4923%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (16 samples, 0.01%)</title><rect x="2.2423%" y="325" width="0.0126%" height="15" fill="rgb(210,40,34)" fg:x="2837" fg:w="16"/><text x="2.4923%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="2.2423%" y="309" width="0.0126%" height="15" fill="rgb(241,220,44)" fg:x="2837" fg:w="16"/><text x="2.4923%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (21 samples, 0.02%)</title><rect x="2.2565%" y="309" width="0.0166%" height="15" fill="rgb(235,28,35)" fg:x="2855" fg:w="21"/><text x="2.5065%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (43 samples, 0.03%)</title><rect x="2.2415%" y="421" width="0.0340%" height="15" fill="rgb(210,56,17)" fg:x="2836" fg:w="43"/><text x="2.4915%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (43 samples, 0.03%)</title><rect x="2.2415%" y="405" width="0.0340%" height="15" fill="rgb(224,130,29)" fg:x="2836" fg:w="43"/><text x="2.4915%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (43 samples, 0.03%)</title><rect x="2.2415%" y="389" width="0.0340%" height="15" fill="rgb(235,212,8)" fg:x="2836" fg:w="43"/><text x="2.4915%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (43 samples, 0.03%)</title><rect x="2.2415%" y="373" width="0.0340%" height="15" fill="rgb(223,33,50)" fg:x="2836" fg:w="43"/><text x="2.4915%" y="383.50"></text></g><g><title> N]&gt;::hash (43 samples, 0.03%)</title><rect x="2.2415%" y="357" width="0.0340%" height="15" fill="rgb(219,149,13)" fg:x="2836" fg:w="43"/><text x="2.4915%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (26 samples, 0.02%)</title><rect x="2.2549%" y="341" width="0.0205%" height="15" fill="rgb(250,156,29)" fg:x="2853" fg:w="26"/><text x="2.5049%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (25 samples, 0.02%)</title><rect x="2.2557%" y="325" width="0.0198%" height="15" fill="rgb(216,193,19)" fg:x="2854" fg:w="25"/><text x="2.5057%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (87 samples, 0.07%)</title><rect x="2.2123%" y="437" width="0.0688%" height="15" fill="rgb(216,135,14)" fg:x="2799" fg:w="87"/><text x="2.4623%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (40 samples, 0.03%)</title><rect x="2.2834%" y="421" width="0.0316%" height="15" fill="rgb(241,47,5)" fg:x="2889" fg:w="40"/><text x="2.5334%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (42 samples, 0.03%)</title><rect x="2.2826%" y="437" width="0.0332%" height="15" fill="rgb(233,42,35)" fg:x="2888" fg:w="42"/><text x="2.5326%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (145 samples, 0.11%)</title><rect x="2.2044%" y="533" width="0.1146%" height="15" fill="rgb(231,13,6)" fg:x="2789" fg:w="145"/><text x="2.4544%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (145 samples, 0.11%)</title><rect x="2.2044%" y="517" width="0.1146%" height="15" fill="rgb(207,181,40)" fg:x="2789" fg:w="145"/><text x="2.4544%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (142 samples, 0.11%)</title><rect x="2.2067%" y="501" width="0.1122%" height="15" fill="rgb(254,173,49)" fg:x="2792" fg:w="142"/><text x="2.4567%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (141 samples, 0.11%)</title><rect x="2.2075%" y="485" width="0.1114%" height="15" fill="rgb(221,1,38)" fg:x="2793" fg:w="141"/><text x="2.4575%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (140 samples, 0.11%)</title><rect x="2.2083%" y="469" width="0.1107%" height="15" fill="rgb(206,124,46)" fg:x="2794" fg:w="140"/><text x="2.4583%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (140 samples, 0.11%)</title><rect x="2.2083%" y="453" width="0.1107%" height="15" fill="rgb(249,21,11)" fg:x="2794" fg:w="140"/><text x="2.4583%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (156 samples, 0.12%)</title><rect x="2.2020%" y="709" width="0.1233%" height="15" fill="rgb(222,201,40)" fg:x="2786" fg:w="156"/><text x="2.4520%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (156 samples, 0.12%)</title><rect x="2.2020%" y="693" width="0.1233%" height="15" fill="rgb(235,61,29)" fg:x="2786" fg:w="156"/><text x="2.4520%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (156 samples, 0.12%)</title><rect x="2.2020%" y="677" width="0.1233%" height="15" fill="rgb(219,207,3)" fg:x="2786" fg:w="156"/><text x="2.4520%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (156 samples, 0.12%)</title><rect x="2.2020%" y="661" width="0.1233%" height="15" fill="rgb(222,56,46)" fg:x="2786" fg:w="156"/><text x="2.4520%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (156 samples, 0.12%)</title><rect x="2.2020%" y="645" width="0.1233%" height="15" fill="rgb(239,76,54)" fg:x="2786" fg:w="156"/><text x="2.4520%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (156 samples, 0.12%)</title><rect x="2.2020%" y="629" width="0.1233%" height="15" fill="rgb(231,124,27)" fg:x="2786" fg:w="156"/><text x="2.4520%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (156 samples, 0.12%)</title><rect x="2.2020%" y="613" width="0.1233%" height="15" fill="rgb(249,195,6)" fg:x="2786" fg:w="156"/><text x="2.4520%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (156 samples, 0.12%)</title><rect x="2.2020%" y="597" width="0.1233%" height="15" fill="rgb(237,174,47)" fg:x="2786" fg:w="156"/><text x="2.4520%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (156 samples, 0.12%)</title><rect x="2.2020%" y="581" width="0.1233%" height="15" fill="rgb(206,201,31)" fg:x="2786" fg:w="156"/><text x="2.4520%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (156 samples, 0.12%)</title><rect x="2.2020%" y="565" width="0.1233%" height="15" fill="rgb(231,57,52)" fg:x="2786" fg:w="156"/><text x="2.4520%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (153 samples, 0.12%)</title><rect x="2.2044%" y="549" width="0.1209%" height="15" fill="rgb(248,177,22)" fg:x="2789" fg:w="153"/><text x="2.4544%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (28 samples, 0.02%)</title><rect x="2.3403%" y="421" width="0.0221%" height="15" fill="rgb(215,211,37)" fg:x="2961" fg:w="28"/><text x="2.5903%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21 samples, 0.02%)</title><rect x="2.3458%" y="405" width="0.0166%" height="15" fill="rgb(241,128,51)" fg:x="2968" fg:w="21"/><text x="2.5958%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (25 samples, 0.02%)</title><rect x="2.3656%" y="421" width="0.0198%" height="15" fill="rgb(227,165,31)" fg:x="2993" fg:w="25"/><text x="2.6156%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (25 samples, 0.02%)</title><rect x="2.3656%" y="405" width="0.0198%" height="15" fill="rgb(228,167,24)" fg:x="2993" fg:w="25"/><text x="2.6156%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (25 samples, 0.02%)</title><rect x="2.3656%" y="389" width="0.0198%" height="15" fill="rgb(228,143,12)" fg:x="2993" fg:w="25"/><text x="2.6156%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (25 samples, 0.02%)</title><rect x="2.3656%" y="373" width="0.0198%" height="15" fill="rgb(249,149,8)" fg:x="2993" fg:w="25"/><text x="2.6156%" y="383.50"></text></g><g><title> N]&gt;::hash (25 samples, 0.02%)</title><rect x="2.3656%" y="357" width="0.0198%" height="15" fill="rgb(243,35,44)" fg:x="2993" fg:w="25"/><text x="2.6156%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (17 samples, 0.01%)</title><rect x="2.3719%" y="341" width="0.0134%" height="15" fill="rgb(246,89,9)" fg:x="3001" fg:w="17"/><text x="2.6219%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="2.3727%" y="325" width="0.0126%" height="15" fill="rgb(233,213,13)" fg:x="3002" fg:w="16"/><text x="2.6227%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (67 samples, 0.05%)</title><rect x="2.3403%" y="437" width="0.0530%" height="15" fill="rgb(233,141,41)" fg:x="2961" fg:w="67"/><text x="2.5903%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (38 samples, 0.03%)</title><rect x="2.4193%" y="341" width="0.0300%" height="15" fill="rgb(239,167,4)" fg:x="3061" fg:w="38"/><text x="2.6693%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (33 samples, 0.03%)</title><rect x="2.4233%" y="325" width="0.0261%" height="15" fill="rgb(209,217,16)" fg:x="3066" fg:w="33"/><text x="2.6733%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (14 samples, 0.01%)</title><rect x="2.4565%" y="261" width="0.0111%" height="15" fill="rgb(219,88,35)" fg:x="3108" fg:w="14"/><text x="2.7065%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (14 samples, 0.01%)</title><rect x="2.4565%" y="245" width="0.0111%" height="15" fill="rgb(220,193,23)" fg:x="3108" fg:w="14"/><text x="2.7065%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="2.4565%" y="229" width="0.0111%" height="15" fill="rgb(230,90,52)" fg:x="3108" fg:w="14"/><text x="2.7065%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.01%)</title><rect x="2.4731%" y="229" width="0.0119%" height="15" fill="rgb(252,106,19)" fg:x="3129" fg:w="15"/><text x="2.7231%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (41 samples, 0.03%)</title><rect x="2.4541%" y="341" width="0.0324%" height="15" fill="rgb(206,74,20)" fg:x="3105" fg:w="41"/><text x="2.7041%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (40 samples, 0.03%)</title><rect x="2.4549%" y="325" width="0.0316%" height="15" fill="rgb(230,138,44)" fg:x="3106" fg:w="40"/><text x="2.7049%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (40 samples, 0.03%)</title><rect x="2.4549%" y="309" width="0.0316%" height="15" fill="rgb(235,182,43)" fg:x="3106" fg:w="40"/><text x="2.7049%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (40 samples, 0.03%)</title><rect x="2.4549%" y="293" width="0.0316%" height="15" fill="rgb(242,16,51)" fg:x="3106" fg:w="40"/><text x="2.7049%" y="303.50"></text></g><g><title> N]&gt;::hash (40 samples, 0.03%)</title><rect x="2.4549%" y="277" width="0.0316%" height="15" fill="rgb(248,9,4)" fg:x="3106" fg:w="40"/><text x="2.7049%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (24 samples, 0.02%)</title><rect x="2.4676%" y="261" width="0.0190%" height="15" fill="rgb(210,31,22)" fg:x="3122" fg:w="24"/><text x="2.7176%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="2.4676%" y="245" width="0.0190%" height="15" fill="rgb(239,54,39)" fg:x="3122" fg:w="24"/><text x="2.7176%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (100 samples, 0.08%)</title><rect x="2.4138%" y="389" width="0.0790%" height="15" fill="rgb(230,99,41)" fg:x="3054" fg:w="100"/><text x="2.6638%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (95 samples, 0.08%)</title><rect x="2.4178%" y="373" width="0.0751%" height="15" fill="rgb(253,106,12)" fg:x="3059" fg:w="95"/><text x="2.6678%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (94 samples, 0.07%)</title><rect x="2.4186%" y="357" width="0.0743%" height="15" fill="rgb(213,46,41)" fg:x="3060" fg:w="94"/><text x="2.6686%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (27 samples, 0.02%)</title><rect x="2.4928%" y="389" width="0.0213%" height="15" fill="rgb(215,133,35)" fg:x="3154" fg:w="27"/><text x="2.7428%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (25 samples, 0.02%)</title><rect x="2.4944%" y="373" width="0.0198%" height="15" fill="rgb(213,28,5)" fg:x="3156" fg:w="25"/><text x="2.7444%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (155 samples, 0.12%)</title><rect x="2.3941%" y="421" width="0.1225%" height="15" fill="rgb(215,77,49)" fg:x="3029" fg:w="155"/><text x="2.6441%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (154 samples, 0.12%)</title><rect x="2.3948%" y="405" width="0.1217%" height="15" fill="rgb(248,100,22)" fg:x="3030" fg:w="154"/><text x="2.6448%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (13 samples, 0.01%)</title><rect x="2.5308%" y="405" width="0.0103%" height="15" fill="rgb(208,67,9)" fg:x="3202" fg:w="13"/><text x="2.7808%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (199 samples, 0.16%)</title><rect x="2.3941%" y="437" width="0.1573%" height="15" fill="rgb(219,133,21)" fg:x="3029" fg:w="199"/><text x="2.6441%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (44 samples, 0.03%)</title><rect x="2.5166%" y="421" width="0.0348%" height="15" fill="rgb(246,46,29)" fg:x="3184" fg:w="44"/><text x="2.7666%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (274 samples, 0.22%)</title><rect x="2.3387%" y="453" width="0.2166%" height="15" fill="rgb(246,185,52)" fg:x="2959" fg:w="274"/><text x="2.5887%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (282 samples, 0.22%)</title><rect x="2.3332%" y="517" width="0.2229%" height="15" fill="rgb(252,136,11)" fg:x="2952" fg:w="282"/><text x="2.5832%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (278 samples, 0.22%)</title><rect x="2.3364%" y="501" width="0.2197%" height="15" fill="rgb(219,138,53)" fg:x="2956" fg:w="278"/><text x="2.5864%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (276 samples, 0.22%)</title><rect x="2.3379%" y="485" width="0.2181%" height="15" fill="rgb(211,51,23)" fg:x="2958" fg:w="276"/><text x="2.5879%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (275 samples, 0.22%)</title><rect x="2.3387%" y="469" width="0.2174%" height="15" fill="rgb(247,221,28)" fg:x="2959" fg:w="275"/><text x="2.5887%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::ids (450 samples, 0.36%)</title><rect x="2.2020%" y="741" width="0.3557%" height="15" fill="rgb(251,222,45)" fg:x="2786" fg:w="450"/><text x="2.4520%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (450 samples, 0.36%)</title><rect x="2.2020%" y="725" width="0.3557%" height="15" fill="rgb(217,162,53)" fg:x="2786" fg:w="450"/><text x="2.4520%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (294 samples, 0.23%)</title><rect x="2.3253%" y="709" width="0.2324%" height="15" fill="rgb(229,93,14)" fg:x="2942" fg:w="294"/><text x="2.5753%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (294 samples, 0.23%)</title><rect x="2.3253%" y="693" width="0.2324%" height="15" fill="rgb(209,67,49)" fg:x="2942" fg:w="294"/><text x="2.5753%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (294 samples, 0.23%)</title><rect x="2.3253%" y="677" width="0.2324%" height="15" fill="rgb(213,87,29)" fg:x="2942" fg:w="294"/><text x="2.5753%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (294 samples, 0.23%)</title><rect x="2.3253%" y="661" width="0.2324%" height="15" fill="rgb(205,151,52)" fg:x="2942" fg:w="294"/><text x="2.5753%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (294 samples, 0.23%)</title><rect x="2.3253%" y="645" width="0.2324%" height="15" fill="rgb(253,215,39)" fg:x="2942" fg:w="294"/><text x="2.5753%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (294 samples, 0.23%)</title><rect x="2.3253%" y="629" width="0.2324%" height="15" fill="rgb(221,220,41)" fg:x="2942" fg:w="294"/><text x="2.5753%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (294 samples, 0.23%)</title><rect x="2.3253%" y="613" width="0.2324%" height="15" fill="rgb(218,133,21)" fg:x="2942" fg:w="294"/><text x="2.5753%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (294 samples, 0.23%)</title><rect x="2.3253%" y="597" width="0.2324%" height="15" fill="rgb(221,193,43)" fg:x="2942" fg:w="294"/><text x="2.5753%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (294 samples, 0.23%)</title><rect x="2.3253%" y="581" width="0.2324%" height="15" fill="rgb(240,128,52)" fg:x="2942" fg:w="294"/><text x="2.5753%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (294 samples, 0.23%)</title><rect x="2.3253%" y="565" width="0.2324%" height="15" fill="rgb(253,114,12)" fg:x="2942" fg:w="294"/><text x="2.5753%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (294 samples, 0.23%)</title><rect x="2.3253%" y="549" width="0.2324%" height="15" fill="rgb(215,223,47)" fg:x="2942" fg:w="294"/><text x="2.5753%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (284 samples, 0.22%)</title><rect x="2.3332%" y="533" width="0.2245%" height="15" fill="rgb(248,225,23)" fg:x="2952" fg:w="284"/><text x="2.5832%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="2.5782%" y="437" width="0.0158%" height="15" fill="rgb(250,108,0)" fg:x="3262" fg:w="20"/><text x="2.8282%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (19 samples, 0.02%)</title><rect x="2.5790%" y="421" width="0.0150%" height="15" fill="rgb(228,208,7)" fg:x="3263" fg:w="19"/><text x="2.8290%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (18 samples, 0.01%)</title><rect x="2.6067%" y="325" width="0.0142%" height="15" fill="rgb(244,45,10)" fg:x="3298" fg:w="18"/><text x="2.8567%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (32 samples, 0.03%)</title><rect x="2.5988%" y="437" width="0.0253%" height="15" fill="rgb(207,125,25)" fg:x="3288" fg:w="32"/><text x="2.8488%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (32 samples, 0.03%)</title><rect x="2.5988%" y="421" width="0.0253%" height="15" fill="rgb(210,195,18)" fg:x="3288" fg:w="32"/><text x="2.8488%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (32 samples, 0.03%)</title><rect x="2.5988%" y="405" width="0.0253%" height="15" fill="rgb(249,80,12)" fg:x="3288" fg:w="32"/><text x="2.8488%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (32 samples, 0.03%)</title><rect x="2.5988%" y="389" width="0.0253%" height="15" fill="rgb(221,65,9)" fg:x="3288" fg:w="32"/><text x="2.8488%" y="399.50"></text></g><g><title> N]&gt;::hash (32 samples, 0.03%)</title><rect x="2.5988%" y="373" width="0.0253%" height="15" fill="rgb(235,49,36)" fg:x="3288" fg:w="32"/><text x="2.8488%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (24 samples, 0.02%)</title><rect x="2.6051%" y="357" width="0.0190%" height="15" fill="rgb(225,32,20)" fg:x="3296" fg:w="24"/><text x="2.8551%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="2.6051%" y="341" width="0.0190%" height="15" fill="rgb(215,141,46)" fg:x="3296" fg:w="24"/><text x="2.8551%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (65 samples, 0.05%)</title><rect x="2.5782%" y="453" width="0.0514%" height="15" fill="rgb(250,160,47)" fg:x="3262" fg:w="65"/><text x="2.8282%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (36 samples, 0.03%)</title><rect x="2.6565%" y="357" width="0.0285%" height="15" fill="rgb(216,222,40)" fg:x="3361" fg:w="36"/><text x="2.9065%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (34 samples, 0.03%)</title><rect x="2.6580%" y="341" width="0.0269%" height="15" fill="rgb(234,217,39)" fg:x="3363" fg:w="34"/><text x="2.9080%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (15 samples, 0.01%)</title><rect x="2.6904%" y="277" width="0.0119%" height="15" fill="rgb(207,178,40)" fg:x="3404" fg:w="15"/><text x="2.9404%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (15 samples, 0.01%)</title><rect x="2.6904%" y="261" width="0.0119%" height="15" fill="rgb(221,136,13)" fg:x="3404" fg:w="15"/><text x="2.9404%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="2.6912%" y="245" width="0.0111%" height="15" fill="rgb(249,199,10)" fg:x="3405" fg:w="14"/><text x="2.9412%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (38 samples, 0.03%)</title><rect x="2.6904%" y="309" width="0.0300%" height="15" fill="rgb(249,222,13)" fg:x="3404" fg:w="38"/><text x="2.9404%" y="319.50"></text></g><g><title> N]&gt;::hash (38 samples, 0.03%)</title><rect x="2.6904%" y="293" width="0.0300%" height="15" fill="rgb(244,185,38)" fg:x="3404" fg:w="38"/><text x="2.9404%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (23 samples, 0.02%)</title><rect x="2.7023%" y="277" width="0.0182%" height="15" fill="rgb(236,202,9)" fg:x="3419" fg:w="23"/><text x="2.9523%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (22 samples, 0.02%)</title><rect x="2.7031%" y="261" width="0.0174%" height="15" fill="rgb(250,229,37)" fg:x="3420" fg:w="22"/><text x="2.9531%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (41 samples, 0.03%)</title><rect x="2.6897%" y="357" width="0.0324%" height="15" fill="rgb(206,174,23)" fg:x="3403" fg:w="41"/><text x="2.9397%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (40 samples, 0.03%)</title><rect x="2.6904%" y="341" width="0.0316%" height="15" fill="rgb(211,33,43)" fg:x="3404" fg:w="40"/><text x="2.9404%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (40 samples, 0.03%)</title><rect x="2.6904%" y="325" width="0.0316%" height="15" fill="rgb(245,58,50)" fg:x="3404" fg:w="40"/><text x="2.9404%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (93 samples, 0.07%)</title><rect x="2.6533%" y="405" width="0.0735%" height="15" fill="rgb(244,68,36)" fg:x="3357" fg:w="93"/><text x="2.9033%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (89 samples, 0.07%)</title><rect x="2.6565%" y="389" width="0.0703%" height="15" fill="rgb(232,229,15)" fg:x="3361" fg:w="89"/><text x="2.9065%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (89 samples, 0.07%)</title><rect x="2.6565%" y="373" width="0.0703%" height="15" fill="rgb(254,30,23)" fg:x="3361" fg:w="89"/><text x="2.9065%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (19 samples, 0.02%)</title><rect x="2.7355%" y="373" width="0.0150%" height="15" fill="rgb(235,160,14)" fg:x="3461" fg:w="19"/><text x="2.9855%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (34 samples, 0.03%)</title><rect x="2.7268%" y="405" width="0.0269%" height="15" fill="rgb(212,155,44)" fg:x="3450" fg:w="34"/><text x="2.9768%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (31 samples, 0.02%)</title><rect x="2.7292%" y="389" width="0.0245%" height="15" fill="rgb(226,2,50)" fg:x="3453" fg:w="31"/><text x="2.9792%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (164 samples, 0.13%)</title><rect x="2.6327%" y="437" width="0.1296%" height="15" fill="rgb(234,177,6)" fg:x="3331" fg:w="164"/><text x="2.8827%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (162 samples, 0.13%)</title><rect x="2.6343%" y="421" width="0.1280%" height="15" fill="rgb(217,24,9)" fg:x="3333" fg:w="162"/><text x="2.8843%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (201 samples, 0.16%)</title><rect x="2.6304%" y="453" width="0.1589%" height="15" fill="rgb(220,13,46)" fg:x="3328" fg:w="201"/><text x="2.8804%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (34 samples, 0.03%)</title><rect x="2.7624%" y="437" width="0.0269%" height="15" fill="rgb(239,221,27)" fg:x="3495" fg:w="34"/><text x="3.0124%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (280 samples, 0.22%)</title><rect x="2.5735%" y="517" width="0.2213%" height="15" fill="rgb(222,198,25)" fg:x="3256" fg:w="280"/><text x="2.8235%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (279 samples, 0.22%)</title><rect x="2.5743%" y="501" width="0.2205%" height="15" fill="rgb(211,99,13)" fg:x="3257" fg:w="279"/><text x="2.8243%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (278 samples, 0.22%)</title><rect x="2.5750%" y="485" width="0.2197%" height="15" fill="rgb(232,111,31)" fg:x="3258" fg:w="278"/><text x="2.8250%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (278 samples, 0.22%)</title><rect x="2.5750%" y="469" width="0.2197%" height="15" fill="rgb(245,82,37)" fg:x="3258" fg:w="278"/><text x="2.8250%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (751 samples, 0.59%)</title><rect x="2.2020%" y="773" width="0.5936%" height="15" fill="rgb(227,149,46)" fg:x="2786" fg:w="751"/><text x="2.4520%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (751 samples, 0.59%)</title><rect x="2.2020%" y="757" width="0.5936%" height="15" fill="rgb(218,36,50)" fg:x="2786" fg:w="751"/><text x="2.4520%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (300 samples, 0.24%)</title><rect x="2.5584%" y="741" width="0.2371%" height="15" fill="rgb(226,80,48)" fg:x="3237" fg:w="300"/><text x="2.8084%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (300 samples, 0.24%)</title><rect x="2.5584%" y="725" width="0.2371%" height="15" fill="rgb(238,224,15)" fg:x="3237" fg:w="300"/><text x="2.8084%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (300 samples, 0.24%)</title><rect x="2.5584%" y="709" width="0.2371%" height="15" fill="rgb(241,136,10)" fg:x="3237" fg:w="300"/><text x="2.8084%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (300 samples, 0.24%)</title><rect x="2.5584%" y="693" width="0.2371%" height="15" fill="rgb(208,32,45)" fg:x="3237" fg:w="300"/><text x="2.8084%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (300 samples, 0.24%)</title><rect x="2.5584%" y="677" width="0.2371%" height="15" fill="rgb(207,135,9)" fg:x="3237" fg:w="300"/><text x="2.8084%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (300 samples, 0.24%)</title><rect x="2.5584%" y="661" width="0.2371%" height="15" fill="rgb(206,86,44)" fg:x="3237" fg:w="300"/><text x="2.8084%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (300 samples, 0.24%)</title><rect x="2.5584%" y="645" width="0.2371%" height="15" fill="rgb(245,177,15)" fg:x="3237" fg:w="300"/><text x="2.8084%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (300 samples, 0.24%)</title><rect x="2.5584%" y="629" width="0.2371%" height="15" fill="rgb(206,64,50)" fg:x="3237" fg:w="300"/><text x="2.8084%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (300 samples, 0.24%)</title><rect x="2.5584%" y="613" width="0.2371%" height="15" fill="rgb(234,36,40)" fg:x="3237" fg:w="300"/><text x="2.8084%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (300 samples, 0.24%)</title><rect x="2.5584%" y="597" width="0.2371%" height="15" fill="rgb(213,64,8)" fg:x="3237" fg:w="300"/><text x="2.8084%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (300 samples, 0.24%)</title><rect x="2.5584%" y="581" width="0.2371%" height="15" fill="rgb(210,75,36)" fg:x="3237" fg:w="300"/><text x="2.8084%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (288 samples, 0.23%)</title><rect x="2.5679%" y="565" width="0.2276%" height="15" fill="rgb(229,88,21)" fg:x="3249" fg:w="288"/><text x="2.8179%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (286 samples, 0.23%)</title><rect x="2.5695%" y="549" width="0.2260%" height="15" fill="rgb(252,204,47)" fg:x="3251" fg:w="286"/><text x="2.8195%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (285 samples, 0.23%)</title><rect x="2.5703%" y="533" width="0.2253%" height="15" fill="rgb(208,77,27)" fg:x="3252" fg:w="285"/><text x="2.8203%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (29 samples, 0.02%)</title><rect x="2.8137%" y="581" width="0.0229%" height="15" fill="rgb(221,76,26)" fg:x="3560" fg:w="29"/><text x="3.0637%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.02%)</title><rect x="2.8209%" y="565" width="0.0158%" height="15" fill="rgb(225,139,18)" fg:x="3569" fg:w="20"/><text x="3.0709%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (13 samples, 0.01%)</title><rect x="2.8398%" y="517" width="0.0103%" height="15" fill="rgb(230,137,11)" fg:x="3593" fg:w="13"/><text x="3.0898%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (13 samples, 0.01%)</title><rect x="2.8398%" y="501" width="0.0103%" height="15" fill="rgb(212,28,1)" fg:x="3593" fg:w="13"/><text x="3.0898%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (27 samples, 0.02%)</title><rect x="2.8382%" y="549" width="0.0213%" height="15" fill="rgb(248,164,17)" fg:x="3591" fg:w="27"/><text x="3.0882%" y="559.50"></text></g><g><title> N]&gt;::hash (27 samples, 0.02%)</title><rect x="2.8382%" y="533" width="0.0213%" height="15" fill="rgb(222,171,42)" fg:x="3591" fg:w="27"/><text x="3.0882%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (28 samples, 0.02%)</title><rect x="2.8382%" y="581" width="0.0221%" height="15" fill="rgb(243,84,45)" fg:x="3591" fg:w="28"/><text x="3.0882%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (28 samples, 0.02%)</title><rect x="2.8382%" y="565" width="0.0221%" height="15" fill="rgb(252,49,23)" fg:x="3591" fg:w="28"/><text x="3.0882%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (64 samples, 0.05%)</title><rect x="2.8137%" y="597" width="0.0506%" height="15" fill="rgb(215,19,7)" fg:x="3560" fg:w="64"/><text x="3.0637%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (13 samples, 0.01%)</title><rect x="2.8817%" y="565" width="0.0103%" height="15" fill="rgb(238,81,41)" fg:x="3646" fg:w="13"/><text x="3.1317%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (28 samples, 0.02%)</title><rect x="2.8730%" y="581" width="0.0221%" height="15" fill="rgb(210,199,37)" fg:x="3635" fg:w="28"/><text x="3.1230%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (109 samples, 0.09%)</title><rect x="2.8098%" y="661" width="0.0862%" height="15" fill="rgb(244,192,49)" fg:x="3555" fg:w="109"/><text x="3.0598%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (109 samples, 0.09%)</title><rect x="2.8098%" y="645" width="0.0862%" height="15" fill="rgb(226,211,11)" fg:x="3555" fg:w="109"/><text x="3.0598%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (109 samples, 0.09%)</title><rect x="2.8098%" y="629" width="0.0862%" height="15" fill="rgb(236,162,54)" fg:x="3555" fg:w="109"/><text x="3.0598%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (107 samples, 0.08%)</title><rect x="2.8114%" y="613" width="0.0846%" height="15" fill="rgb(220,229,9)" fg:x="3557" fg:w="107"/><text x="3.0614%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (38 samples, 0.03%)</title><rect x="2.8659%" y="597" width="0.0300%" height="15" fill="rgb(250,87,22)" fg:x="3626" fg:w="38"/><text x="3.1159%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (111 samples, 0.09%)</title><rect x="2.8098%" y="693" width="0.0877%" height="15" fill="rgb(239,43,17)" fg:x="3555" fg:w="111"/><text x="3.0598%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (111 samples, 0.09%)</title><rect x="2.8098%" y="677" width="0.0877%" height="15" fill="rgb(231,177,25)" fg:x="3555" fg:w="111"/><text x="3.0598%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (113 samples, 0.09%)</title><rect x="2.8090%" y="725" width="0.0893%" height="15" fill="rgb(219,179,1)" fg:x="3554" fg:w="113"/><text x="3.0590%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (112 samples, 0.09%)</title><rect x="2.8098%" y="709" width="0.0885%" height="15" fill="rgb(238,219,53)" fg:x="3555" fg:w="112"/><text x="3.0598%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (128 samples, 0.10%)</title><rect x="2.7995%" y="757" width="0.1012%" height="15" fill="rgb(232,167,36)" fg:x="3542" fg:w="128"/><text x="3.0495%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (128 samples, 0.10%)</title><rect x="2.7995%" y="741" width="0.1012%" height="15" fill="rgb(244,19,51)" fg:x="3542" fg:w="128"/><text x="3.0495%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_all_filenames_size_limit (897 samples, 0.71%)</title><rect x="2.1925%" y="805" width="0.7090%" height="15" fill="rgb(224,6,22)" fg:x="2774" fg:w="897"/><text x="2.4425%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::all_files (891 samples, 0.70%)</title><rect x="2.1972%" y="789" width="0.7042%" height="15" fill="rgb(224,145,5)" fg:x="2780" fg:w="891"/><text x="2.4472%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (129 samples, 0.10%)</title><rect x="2.7995%" y="773" width="0.1020%" height="15" fill="rgb(234,130,49)" fg:x="3542" fg:w="129"/><text x="3.0495%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (28 samples, 0.02%)</title><rect x="2.9181%" y="421" width="0.0221%" height="15" fill="rgb(254,6,2)" fg:x="3692" fg:w="28"/><text x="3.1681%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (22 samples, 0.02%)</title><rect x="2.9228%" y="405" width="0.0174%" height="15" fill="rgb(208,96,46)" fg:x="3698" fg:w="22"/><text x="3.1728%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (15 samples, 0.01%)</title><rect x="2.9418%" y="341" width="0.0119%" height="15" fill="rgb(239,3,39)" fg:x="3722" fg:w="15"/><text x="3.1918%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (15 samples, 0.01%)</title><rect x="2.9418%" y="325" width="0.0119%" height="15" fill="rgb(233,210,1)" fg:x="3722" fg:w="15"/><text x="3.1918%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="2.9418%" y="309" width="0.0119%" height="15" fill="rgb(244,137,37)" fg:x="3722" fg:w="15"/><text x="3.1918%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.01%)</title><rect x="2.9568%" y="309" width="0.0119%" height="15" fill="rgb(240,136,2)" fg:x="3741" fg:w="15"/><text x="3.2068%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (36 samples, 0.03%)</title><rect x="2.9418%" y="421" width="0.0285%" height="15" fill="rgb(239,18,37)" fg:x="3722" fg:w="36"/><text x="3.1918%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (36 samples, 0.03%)</title><rect x="2.9418%" y="405" width="0.0285%" height="15" fill="rgb(218,185,22)" fg:x="3722" fg:w="36"/><text x="3.1918%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (36 samples, 0.03%)</title><rect x="2.9418%" y="389" width="0.0285%" height="15" fill="rgb(225,218,4)" fg:x="3722" fg:w="36"/><text x="3.1918%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (36 samples, 0.03%)</title><rect x="2.9418%" y="373" width="0.0285%" height="15" fill="rgb(230,182,32)" fg:x="3722" fg:w="36"/><text x="3.1918%" y="383.50"></text></g><g><title> N]&gt;::hash (36 samples, 0.03%)</title><rect x="2.9418%" y="357" width="0.0285%" height="15" fill="rgb(242,56,43)" fg:x="3722" fg:w="36"/><text x="3.1918%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (21 samples, 0.02%)</title><rect x="2.9536%" y="341" width="0.0166%" height="15" fill="rgb(233,99,24)" fg:x="3737" fg:w="21"/><text x="3.2036%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="2.9552%" y="325" width="0.0150%" height="15" fill="rgb(234,209,42)" fg:x="3739" fg:w="19"/><text x="3.2052%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (74 samples, 0.06%)</title><rect x="2.9181%" y="437" width="0.0585%" height="15" fill="rgb(227,7,12)" fg:x="3692" fg:w="74"/><text x="3.1681%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (27 samples, 0.02%)</title><rect x="2.9773%" y="437" width="0.0213%" height="15" fill="rgb(245,203,43)" fg:x="3767" fg:w="27"/><text x="3.2273%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (26 samples, 0.02%)</title><rect x="2.9781%" y="421" width="0.0205%" height="15" fill="rgb(238,205,33)" fg:x="3768" fg:w="26"/><text x="3.2281%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (115 samples, 0.09%)</title><rect x="2.9102%" y="469" width="0.0909%" height="15" fill="rgb(231,56,7)" fg:x="3682" fg:w="115"/><text x="3.1602%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (113 samples, 0.09%)</title><rect x="2.9117%" y="453" width="0.0893%" height="15" fill="rgb(244,186,29)" fg:x="3684" fg:w="113"/><text x="3.1617%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (119 samples, 0.09%)</title><rect x="2.9078%" y="533" width="0.0941%" height="15" fill="rgb(234,111,31)" fg:x="3679" fg:w="119"/><text x="3.1578%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (119 samples, 0.09%)</title><rect x="2.9078%" y="517" width="0.0941%" height="15" fill="rgb(241,149,10)" fg:x="3679" fg:w="119"/><text x="3.1578%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (117 samples, 0.09%)</title><rect x="2.9094%" y="501" width="0.0925%" height="15" fill="rgb(249,206,44)" fg:x="3681" fg:w="117"/><text x="3.1594%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (116 samples, 0.09%)</title><rect x="2.9102%" y="485" width="0.0917%" height="15" fill="rgb(251,153,30)" fg:x="3682" fg:w="116"/><text x="3.1602%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (130 samples, 0.10%)</title><rect x="2.9054%" y="709" width="0.1027%" height="15" fill="rgb(239,152,38)" fg:x="3676" fg:w="130"/><text x="3.1554%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (130 samples, 0.10%)</title><rect x="2.9054%" y="693" width="0.1027%" height="15" fill="rgb(249,139,47)" fg:x="3676" fg:w="130"/><text x="3.1554%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (130 samples, 0.10%)</title><rect x="2.9054%" y="677" width="0.1027%" height="15" fill="rgb(244,64,35)" fg:x="3676" fg:w="130"/><text x="3.1554%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (130 samples, 0.10%)</title><rect x="2.9054%" y="661" width="0.1027%" height="15" fill="rgb(216,46,15)" fg:x="3676" fg:w="130"/><text x="3.1554%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (130 samples, 0.10%)</title><rect x="2.9054%" y="645" width="0.1027%" height="15" fill="rgb(250,74,19)" fg:x="3676" fg:w="130"/><text x="3.1554%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (130 samples, 0.10%)</title><rect x="2.9054%" y="629" width="0.1027%" height="15" fill="rgb(249,42,33)" fg:x="3676" fg:w="130"/><text x="3.1554%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (130 samples, 0.10%)</title><rect x="2.9054%" y="613" width="0.1027%" height="15" fill="rgb(242,149,17)" fg:x="3676" fg:w="130"/><text x="3.1554%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (130 samples, 0.10%)</title><rect x="2.9054%" y="597" width="0.1027%" height="15" fill="rgb(244,29,21)" fg:x="3676" fg:w="130"/><text x="3.1554%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (130 samples, 0.10%)</title><rect x="2.9054%" y="581" width="0.1027%" height="15" fill="rgb(220,130,37)" fg:x="3676" fg:w="130"/><text x="3.1554%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (130 samples, 0.10%)</title><rect x="2.9054%" y="565" width="0.1027%" height="15" fill="rgb(211,67,2)" fg:x="3676" fg:w="130"/><text x="3.1554%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (127 samples, 0.10%)</title><rect x="2.9078%" y="549" width="0.1004%" height="15" fill="rgb(235,68,52)" fg:x="3679" fg:w="127"/><text x="3.1578%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="3.0082%" y="533" width="0.0111%" height="15" fill="rgb(246,142,3)" fg:x="3806" fg:w="14"/><text x="3.2582%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (24 samples, 0.02%)</title><rect x="3.0256%" y="421" width="0.0190%" height="15" fill="rgb(241,25,7)" fg:x="3828" fg:w="24"/><text x="3.2756%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (22 samples, 0.02%)</title><rect x="3.0271%" y="405" width="0.0174%" height="15" fill="rgb(242,119,39)" fg:x="3830" fg:w="22"/><text x="3.2771%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.01%)</title><rect x="3.0564%" y="309" width="0.0134%" height="15" fill="rgb(241,98,45)" fg:x="3867" fg:w="17"/><text x="3.3064%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (32 samples, 0.03%)</title><rect x="3.0469%" y="421" width="0.0253%" height="15" fill="rgb(254,28,30)" fg:x="3855" fg:w="32"/><text x="3.2969%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.02%)</title><rect x="3.0477%" y="405" width="0.0245%" height="15" fill="rgb(241,142,54)" fg:x="3856" fg:w="31"/><text x="3.2977%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (31 samples, 0.02%)</title><rect x="3.0477%" y="389" width="0.0245%" height="15" fill="rgb(222,85,15)" fg:x="3856" fg:w="31"/><text x="3.2977%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (31 samples, 0.02%)</title><rect x="3.0477%" y="373" width="0.0245%" height="15" fill="rgb(210,85,47)" fg:x="3856" fg:w="31"/><text x="3.2977%" y="383.50"></text></g><g><title> N]&gt;::hash (31 samples, 0.02%)</title><rect x="3.0477%" y="357" width="0.0245%" height="15" fill="rgb(224,206,25)" fg:x="3856" fg:w="31"/><text x="3.2977%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (24 samples, 0.02%)</title><rect x="3.0532%" y="341" width="0.0190%" height="15" fill="rgb(243,201,19)" fg:x="3863" fg:w="24"/><text x="3.3032%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 0.02%)</title><rect x="3.0540%" y="325" width="0.0182%" height="15" fill="rgb(236,59,4)" fg:x="3864" fg:w="23"/><text x="3.3040%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (69 samples, 0.05%)</title><rect x="3.0256%" y="437" width="0.0545%" height="15" fill="rgb(254,179,45)" fg:x="3828" fg:w="69"/><text x="3.2756%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (36 samples, 0.03%)</title><rect x="3.1109%" y="341" width="0.0285%" height="15" fill="rgb(226,14,10)" fg:x="3936" fg:w="36"/><text x="3.3609%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (29 samples, 0.02%)</title><rect x="3.1165%" y="325" width="0.0229%" height="15" fill="rgb(244,27,41)" fg:x="3943" fg:w="29"/><text x="3.3665%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (21 samples, 0.02%)</title><rect x="3.1425%" y="261" width="0.0166%" height="15" fill="rgb(235,35,32)" fg:x="3976" fg:w="21"/><text x="3.3925%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (20 samples, 0.02%)</title><rect x="3.1433%" y="245" width="0.0158%" height="15" fill="rgb(218,68,31)" fg:x="3977" fg:w="20"/><text x="3.3933%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.02%)</title><rect x="3.1433%" y="229" width="0.0158%" height="15" fill="rgb(207,120,37)" fg:x="3977" fg:w="20"/><text x="3.3933%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.01%)</title><rect x="3.1647%" y="229" width="0.0111%" height="15" fill="rgb(227,98,0)" fg:x="4004" fg:w="14"/><text x="3.4147%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (45 samples, 0.04%)</title><rect x="3.1417%" y="341" width="0.0356%" height="15" fill="rgb(207,7,3)" fg:x="3975" fg:w="45"/><text x="3.3917%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (45 samples, 0.04%)</title><rect x="3.1417%" y="325" width="0.0356%" height="15" fill="rgb(206,98,19)" fg:x="3975" fg:w="45"/><text x="3.3917%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (45 samples, 0.04%)</title><rect x="3.1417%" y="309" width="0.0356%" height="15" fill="rgb(217,5,26)" fg:x="3975" fg:w="45"/><text x="3.3917%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (45 samples, 0.04%)</title><rect x="3.1417%" y="293" width="0.0356%" height="15" fill="rgb(235,190,38)" fg:x="3975" fg:w="45"/><text x="3.3917%" y="303.50"></text></g><g><title> N]&gt;::hash (45 samples, 0.04%)</title><rect x="3.1417%" y="277" width="0.0356%" height="15" fill="rgb(247,86,24)" fg:x="3975" fg:w="45"/><text x="3.3917%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (23 samples, 0.02%)</title><rect x="3.1591%" y="261" width="0.0182%" height="15" fill="rgb(205,101,16)" fg:x="3997" fg:w="23"/><text x="3.4091%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 0.02%)</title><rect x="3.1591%" y="245" width="0.0182%" height="15" fill="rgb(246,168,33)" fg:x="3997" fg:w="23"/><text x="3.4091%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (99 samples, 0.08%)</title><rect x="3.1070%" y="389" width="0.0782%" height="15" fill="rgb(231,114,1)" fg:x="3931" fg:w="99"/><text x="3.3570%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (95 samples, 0.08%)</title><rect x="3.1101%" y="373" width="0.0751%" height="15" fill="rgb(207,184,53)" fg:x="3935" fg:w="95"/><text x="3.3601%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (94 samples, 0.07%)</title><rect x="3.1109%" y="357" width="0.0743%" height="15" fill="rgb(224,95,51)" fg:x="3936" fg:w="94"/><text x="3.3609%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (15 samples, 0.01%)</title><rect x="3.1931%" y="357" width="0.0119%" height="15" fill="rgb(212,188,45)" fg:x="4040" fg:w="15"/><text x="3.4431%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (30 samples, 0.02%)</title><rect x="3.1852%" y="389" width="0.0237%" height="15" fill="rgb(223,154,38)" fg:x="4030" fg:w="30"/><text x="3.4352%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (23 samples, 0.02%)</title><rect x="3.1907%" y="373" width="0.0182%" height="15" fill="rgb(251,22,52)" fg:x="4037" fg:w="23"/><text x="3.4407%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (162 samples, 0.13%)</title><rect x="3.0840%" y="421" width="0.1280%" height="15" fill="rgb(229,209,22)" fg:x="3902" fg:w="162"/><text x="3.3340%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (157 samples, 0.12%)</title><rect x="3.0880%" y="405" width="0.1241%" height="15" fill="rgb(234,138,34)" fg:x="3907" fg:w="157"/><text x="3.3380%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (42 samples, 0.03%)</title><rect x="3.2121%" y="421" width="0.0332%" height="15" fill="rgb(212,95,11)" fg:x="4064" fg:w="42"/><text x="3.4621%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (206 samples, 0.16%)</title><rect x="3.0833%" y="437" width="0.1628%" height="15" fill="rgb(240,179,47)" fg:x="3901" fg:w="206"/><text x="3.3333%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (284 samples, 0.22%)</title><rect x="3.0248%" y="453" width="0.2245%" height="15" fill="rgb(240,163,11)" fg:x="3827" fg:w="284"/><text x="3.2748%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (285 samples, 0.23%)</title><rect x="3.0248%" y="469" width="0.2253%" height="15" fill="rgb(236,37,12)" fg:x="3827" fg:w="285"/><text x="3.2748%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (287 samples, 0.23%)</title><rect x="3.0240%" y="501" width="0.2268%" height="15" fill="rgb(232,164,16)" fg:x="3826" fg:w="287"/><text x="3.2740%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (286 samples, 0.23%)</title><rect x="3.0248%" y="485" width="0.2260%" height="15" fill="rgb(244,205,15)" fg:x="3827" fg:w="286"/><text x="3.2748%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (295 samples, 0.23%)</title><rect x="3.0192%" y="533" width="0.2332%" height="15" fill="rgb(223,117,47)" fg:x="3820" fg:w="295"/><text x="3.2692%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (295 samples, 0.23%)</title><rect x="3.0192%" y="517" width="0.2332%" height="15" fill="rgb(244,107,35)" fg:x="3820" fg:w="295"/><text x="3.2692%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::ids (441 samples, 0.35%)</title><rect x="2.9046%" y="741" width="0.3486%" height="15" fill="rgb(205,140,8)" fg:x="3675" fg:w="441"/><text x="3.1546%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (441 samples, 0.35%)</title><rect x="2.9046%" y="725" width="0.3486%" height="15" fill="rgb(228,84,46)" fg:x="3675" fg:w="441"/><text x="3.1546%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (310 samples, 0.25%)</title><rect x="3.0082%" y="709" width="0.2450%" height="15" fill="rgb(254,188,9)" fg:x="3806" fg:w="310"/><text x="3.2582%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (310 samples, 0.25%)</title><rect x="3.0082%" y="693" width="0.2450%" height="15" fill="rgb(206,112,54)" fg:x="3806" fg:w="310"/><text x="3.2582%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (310 samples, 0.25%)</title><rect x="3.0082%" y="677" width="0.2450%" height="15" fill="rgb(216,84,49)" fg:x="3806" fg:w="310"/><text x="3.2582%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (310 samples, 0.25%)</title><rect x="3.0082%" y="661" width="0.2450%" height="15" fill="rgb(214,194,35)" fg:x="3806" fg:w="310"/><text x="3.2582%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (310 samples, 0.25%)</title><rect x="3.0082%" y="645" width="0.2450%" height="15" fill="rgb(249,28,3)" fg:x="3806" fg:w="310"/><text x="3.2582%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (310 samples, 0.25%)</title><rect x="3.0082%" y="629" width="0.2450%" height="15" fill="rgb(222,56,52)" fg:x="3806" fg:w="310"/><text x="3.2582%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (310 samples, 0.25%)</title><rect x="3.0082%" y="613" width="0.2450%" height="15" fill="rgb(245,217,50)" fg:x="3806" fg:w="310"/><text x="3.2582%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (310 samples, 0.25%)</title><rect x="3.0082%" y="597" width="0.2450%" height="15" fill="rgb(213,201,24)" fg:x="3806" fg:w="310"/><text x="3.2582%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (310 samples, 0.25%)</title><rect x="3.0082%" y="581" width="0.2450%" height="15" fill="rgb(248,116,28)" fg:x="3806" fg:w="310"/><text x="3.2582%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (310 samples, 0.25%)</title><rect x="3.0082%" y="565" width="0.2450%" height="15" fill="rgb(219,72,43)" fg:x="3806" fg:w="310"/><text x="3.2582%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (310 samples, 0.25%)</title><rect x="3.0082%" y="549" width="0.2450%" height="15" fill="rgb(209,138,14)" fg:x="3806" fg:w="310"/><text x="3.2582%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="3.2564%" y="565" width="0.0103%" height="15" fill="rgb(222,18,33)" fg:x="4120" fg:w="13"/><text x="3.5064%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="3.2564%" y="549" width="0.0103%" height="15" fill="rgb(213,199,7)" fg:x="4120" fg:w="13"/><text x="3.5064%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (37 samples, 0.03%)</title><rect x="3.2777%" y="437" width="0.0292%" height="15" fill="rgb(250,110,10)" fg:x="4147" fg:w="37"/><text x="3.5277%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (30 samples, 0.02%)</title><rect x="3.2832%" y="421" width="0.0237%" height="15" fill="rgb(248,123,6)" fg:x="4154" fg:w="30"/><text x="3.5332%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (28 samples, 0.02%)</title><rect x="3.3125%" y="437" width="0.0221%" height="15" fill="rgb(206,91,31)" fg:x="4191" fg:w="28"/><text x="3.5625%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (28 samples, 0.02%)</title><rect x="3.3125%" y="421" width="0.0221%" height="15" fill="rgb(211,154,13)" fg:x="4191" fg:w="28"/><text x="3.5625%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (28 samples, 0.02%)</title><rect x="3.3125%" y="405" width="0.0221%" height="15" fill="rgb(225,148,7)" fg:x="4191" fg:w="28"/><text x="3.5625%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (28 samples, 0.02%)</title><rect x="3.3125%" y="389" width="0.0221%" height="15" fill="rgb(220,160,43)" fg:x="4191" fg:w="28"/><text x="3.5625%" y="399.50"></text></g><g><title> N]&gt;::hash (28 samples, 0.02%)</title><rect x="3.3125%" y="373" width="0.0221%" height="15" fill="rgb(213,52,39)" fg:x="4191" fg:w="28"/><text x="3.5625%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (21 samples, 0.02%)</title><rect x="3.3180%" y="357" width="0.0166%" height="15" fill="rgb(243,137,7)" fg:x="4198" fg:w="21"/><text x="3.5680%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.02%)</title><rect x="3.3188%" y="341" width="0.0158%" height="15" fill="rgb(230,79,13)" fg:x="4199" fg:w="20"/><text x="3.5688%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (86 samples, 0.07%)</title><rect x="3.2777%" y="453" width="0.0680%" height="15" fill="rgb(247,105,23)" fg:x="4147" fg:w="86"/><text x="3.5277%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.01%)</title><rect x="3.3346%" y="437" width="0.0111%" height="15" fill="rgb(223,179,41)" fg:x="4219" fg:w="14"/><text x="3.5846%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.02%)</title><rect x="3.3662%" y="357" width="0.0198%" height="15" fill="rgb(218,9,34)" fg:x="4259" fg:w="25"/><text x="3.6162%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (23 samples, 0.02%)</title><rect x="3.3678%" y="341" width="0.0182%" height="15" fill="rgb(222,106,8)" fg:x="4261" fg:w="23"/><text x="3.6178%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (17 samples, 0.01%)</title><rect x="3.3939%" y="277" width="0.0134%" height="15" fill="rgb(211,220,0)" fg:x="4294" fg:w="17"/><text x="3.6439%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (16 samples, 0.01%)</title><rect x="3.3947%" y="261" width="0.0126%" height="15" fill="rgb(229,52,16)" fg:x="4295" fg:w="16"/><text x="3.6447%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="3.3947%" y="245" width="0.0126%" height="15" fill="rgb(212,155,18)" fg:x="4295" fg:w="16"/><text x="3.6447%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.01%)</title><rect x="3.4152%" y="245" width="0.0134%" height="15" fill="rgb(242,21,14)" fg:x="4321" fg:w="17"/><text x="3.6652%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (48 samples, 0.04%)</title><rect x="3.3931%" y="309" width="0.0379%" height="15" fill="rgb(222,19,48)" fg:x="4293" fg:w="48"/><text x="3.6431%" y="319.50"></text></g><g><title> N]&gt;::hash (48 samples, 0.04%)</title><rect x="3.3931%" y="293" width="0.0379%" height="15" fill="rgb(232,45,27)" fg:x="4293" fg:w="48"/><text x="3.6431%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (29 samples, 0.02%)</title><rect x="3.4081%" y="277" width="0.0229%" height="15" fill="rgb(249,103,42)" fg:x="4312" fg:w="29"/><text x="3.6581%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 0.02%)</title><rect x="3.4089%" y="261" width="0.0221%" height="15" fill="rgb(246,81,33)" fg:x="4313" fg:w="28"/><text x="3.6589%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (49 samples, 0.04%)</title><rect x="3.3931%" y="325" width="0.0387%" height="15" fill="rgb(252,33,42)" fg:x="4293" fg:w="49"/><text x="3.6431%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (52 samples, 0.04%)</title><rect x="3.3915%" y="357" width="0.0411%" height="15" fill="rgb(209,212,41)" fg:x="4291" fg:w="52"/><text x="3.6415%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (50 samples, 0.04%)</title><rect x="3.3931%" y="341" width="0.0395%" height="15" fill="rgb(207,154,6)" fg:x="4293" fg:w="50"/><text x="3.6431%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (96 samples, 0.08%)</title><rect x="3.3646%" y="405" width="0.0759%" height="15" fill="rgb(223,64,47)" fg:x="4257" fg:w="96"/><text x="3.6146%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (94 samples, 0.07%)</title><rect x="3.3662%" y="389" width="0.0743%" height="15" fill="rgb(211,161,38)" fg:x="4259" fg:w="94"/><text x="3.6162%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (94 samples, 0.07%)</title><rect x="3.3662%" y="373" width="0.0743%" height="15" fill="rgb(219,138,40)" fg:x="4259" fg:w="94"/><text x="3.6162%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (14 samples, 0.01%)</title><rect x="3.4476%" y="373" width="0.0111%" height="15" fill="rgb(241,228,46)" fg:x="4362" fg:w="14"/><text x="3.6976%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (23 samples, 0.02%)</title><rect x="3.4421%" y="389" width="0.0182%" height="15" fill="rgb(223,209,38)" fg:x="4355" fg:w="23"/><text x="3.6921%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (26 samples, 0.02%)</title><rect x="3.4405%" y="405" width="0.0205%" height="15" fill="rgb(236,164,45)" fg:x="4353" fg:w="26"/><text x="3.6905%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (149 samples, 0.12%)</title><rect x="3.3520%" y="421" width="0.1178%" height="15" fill="rgb(231,15,5)" fg:x="4241" fg:w="149"/><text x="3.6020%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (152 samples, 0.12%)</title><rect x="3.3504%" y="437" width="0.1201%" height="15" fill="rgb(252,35,15)" fg:x="4239" fg:w="152"/><text x="3.6004%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (201 samples, 0.16%)</title><rect x="3.3465%" y="453" width="0.1589%" height="15" fill="rgb(248,181,18)" fg:x="4234" fg:w="201"/><text x="3.5965%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (44 samples, 0.03%)</title><rect x="3.4705%" y="437" width="0.0348%" height="15" fill="rgb(233,39,42)" fg:x="4391" fg:w="44"/><text x="3.7205%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (296 samples, 0.23%)</title><rect x="3.2729%" y="469" width="0.2340%" height="15" fill="rgb(238,110,33)" fg:x="4141" fg:w="296"/><text x="3.5229%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (298 samples, 0.24%)</title><rect x="3.2722%" y="485" width="0.2355%" height="15" fill="rgb(233,195,10)" fg:x="4140" fg:w="298"/><text x="3.5222%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (306 samples, 0.24%)</title><rect x="3.2666%" y="565" width="0.2419%" height="15" fill="rgb(254,105,3)" fg:x="4133" fg:w="306"/><text x="3.5166%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (304 samples, 0.24%)</title><rect x="3.2682%" y="549" width="0.2403%" height="15" fill="rgb(221,225,9)" fg:x="4135" fg:w="304"/><text x="3.5182%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (303 samples, 0.24%)</title><rect x="3.2690%" y="533" width="0.2395%" height="15" fill="rgb(224,227,45)" fg:x="4136" fg:w="303"/><text x="3.5190%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (301 samples, 0.24%)</title><rect x="3.2706%" y="517" width="0.2379%" height="15" fill="rgb(229,198,43)" fg:x="4138" fg:w="301"/><text x="3.5206%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (299 samples, 0.24%)</title><rect x="3.2722%" y="501" width="0.2363%" height="15" fill="rgb(206,209,35)" fg:x="4140" fg:w="299"/><text x="3.5222%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (765 samples, 0.60%)</title><rect x="2.9046%" y="789" width="0.6046%" height="15" fill="rgb(245,195,53)" fg:x="3675" fg:w="765"/><text x="3.1546%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (765 samples, 0.60%)</title><rect x="2.9046%" y="773" width="0.6046%" height="15" fill="rgb(240,92,26)" fg:x="3675" fg:w="765"/><text x="3.1546%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (765 samples, 0.60%)</title><rect x="2.9046%" y="757" width="0.6046%" height="15" fill="rgb(207,40,23)" fg:x="3675" fg:w="765"/><text x="3.1546%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (321 samples, 0.25%)</title><rect x="3.2556%" y="741" width="0.2537%" height="15" fill="rgb(223,111,35)" fg:x="4119" fg:w="321"/><text x="3.5056%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (321 samples, 0.25%)</title><rect x="3.2556%" y="725" width="0.2537%" height="15" fill="rgb(229,147,28)" fg:x="4119" fg:w="321"/><text x="3.5056%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (321 samples, 0.25%)</title><rect x="3.2556%" y="709" width="0.2537%" height="15" fill="rgb(211,29,28)" fg:x="4119" fg:w="321"/><text x="3.5056%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (321 samples, 0.25%)</title><rect x="3.2556%" y="693" width="0.2537%" height="15" fill="rgb(228,72,33)" fg:x="4119" fg:w="321"/><text x="3.5056%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (321 samples, 0.25%)</title><rect x="3.2556%" y="677" width="0.2537%" height="15" fill="rgb(205,214,31)" fg:x="4119" fg:w="321"/><text x="3.5056%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (321 samples, 0.25%)</title><rect x="3.2556%" y="661" width="0.2537%" height="15" fill="rgb(224,111,15)" fg:x="4119" fg:w="321"/><text x="3.5056%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (321 samples, 0.25%)</title><rect x="3.2556%" y="645" width="0.2537%" height="15" fill="rgb(253,21,26)" fg:x="4119" fg:w="321"/><text x="3.5056%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (321 samples, 0.25%)</title><rect x="3.2556%" y="629" width="0.2537%" height="15" fill="rgb(245,139,43)" fg:x="4119" fg:w="321"/><text x="3.5056%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (321 samples, 0.25%)</title><rect x="3.2556%" y="613" width="0.2537%" height="15" fill="rgb(252,170,7)" fg:x="4119" fg:w="321"/><text x="3.5056%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (321 samples, 0.25%)</title><rect x="3.2556%" y="597" width="0.2537%" height="15" fill="rgb(231,118,14)" fg:x="4119" fg:w="321"/><text x="3.5056%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (321 samples, 0.25%)</title><rect x="3.2556%" y="581" width="0.2537%" height="15" fill="rgb(238,83,0)" fg:x="4119" fg:w="321"/><text x="3.5056%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (24 samples, 0.02%)</title><rect x="3.5377%" y="501" width="0.0190%" height="15" fill="rgb(221,39,39)" fg:x="4476" fg:w="24"/><text x="3.7877%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.01%)</title><rect x="3.5425%" y="485" width="0.0142%" height="15" fill="rgb(222,119,46)" fg:x="4482" fg:w="18"/><text x="3.7925%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (29 samples, 0.02%)</title><rect x="3.5591%" y="501" width="0.0229%" height="15" fill="rgb(222,165,49)" fg:x="4503" fg:w="29"/><text x="3.8091%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (29 samples, 0.02%)</title><rect x="3.5591%" y="485" width="0.0229%" height="15" fill="rgb(219,113,52)" fg:x="4503" fg:w="29"/><text x="3.8091%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (29 samples, 0.02%)</title><rect x="3.5591%" y="469" width="0.0229%" height="15" fill="rgb(214,7,15)" fg:x="4503" fg:w="29"/><text x="3.8091%" y="479.50"></text></g><g><title> N]&gt;::hash (29 samples, 0.02%)</title><rect x="3.5591%" y="453" width="0.0229%" height="15" fill="rgb(235,32,4)" fg:x="4503" fg:w="29"/><text x="3.8091%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (18 samples, 0.01%)</title><rect x="3.5678%" y="437" width="0.0142%" height="15" fill="rgb(238,90,54)" fg:x="4514" fg:w="18"/><text x="3.8178%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="3.5693%" y="421" width="0.0126%" height="15" fill="rgb(213,208,19)" fg:x="4516" fg:w="16"/><text x="3.8193%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (65 samples, 0.05%)</title><rect x="3.5369%" y="517" width="0.0514%" height="15" fill="rgb(233,156,4)" fg:x="4475" fg:w="65"/><text x="3.7869%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (16 samples, 0.01%)</title><rect x="3.6081%" y="485" width="0.0126%" height="15" fill="rgb(207,194,5)" fg:x="4565" fg:w="16"/><text x="3.8581%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (116 samples, 0.09%)</title><rect x="3.5338%" y="581" width="0.0917%" height="15" fill="rgb(206,111,30)" fg:x="4471" fg:w="116"/><text x="3.7838%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (116 samples, 0.09%)</title><rect x="3.5338%" y="565" width="0.0917%" height="15" fill="rgb(243,70,54)" fg:x="4471" fg:w="116"/><text x="3.7838%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (115 samples, 0.09%)</title><rect x="3.5346%" y="549" width="0.0909%" height="15" fill="rgb(242,28,8)" fg:x="4472" fg:w="115"/><text x="3.7846%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (115 samples, 0.09%)</title><rect x="3.5346%" y="533" width="0.0909%" height="15" fill="rgb(219,106,18)" fg:x="4472" fg:w="115"/><text x="3.7846%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (46 samples, 0.04%)</title><rect x="3.5891%" y="517" width="0.0364%" height="15" fill="rgb(244,222,10)" fg:x="4541" fg:w="46"/><text x="3.8391%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (42 samples, 0.03%)</title><rect x="3.5923%" y="501" width="0.0332%" height="15" fill="rgb(236,179,52)" fg:x="4545" fg:w="42"/><text x="3.8423%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (121 samples, 0.10%)</title><rect x="3.5338%" y="597" width="0.0956%" height="15" fill="rgb(213,23,39)" fg:x="4471" fg:w="121"/><text x="3.7838%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (126 samples, 0.10%)</title><rect x="3.5306%" y="645" width="0.0996%" height="15" fill="rgb(238,48,10)" fg:x="4467" fg:w="126"/><text x="3.7806%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (122 samples, 0.10%)</title><rect x="3.5338%" y="629" width="0.0964%" height="15" fill="rgb(251,196,23)" fg:x="4471" fg:w="122"/><text x="3.7838%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (122 samples, 0.10%)</title><rect x="3.5338%" y="613" width="0.0964%" height="15" fill="rgb(250,152,24)" fg:x="4471" fg:w="122"/><text x="3.7838%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (136 samples, 0.11%)</title><rect x="3.5235%" y="677" width="0.1075%" height="15" fill="rgb(209,150,17)" fg:x="4458" fg:w="136"/><text x="3.7735%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (136 samples, 0.11%)</title><rect x="3.5235%" y="661" width="0.1075%" height="15" fill="rgb(234,202,34)" fg:x="4458" fg:w="136"/><text x="3.7735%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (155 samples, 0.12%)</title><rect x="3.5093%" y="789" width="0.1225%" height="15" fill="rgb(253,148,53)" fg:x="4440" fg:w="155"/><text x="3.7593%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::find_map (155 samples, 0.12%)</title><rect x="3.5093%" y="773" width="0.1225%" height="15" fill="rgb(218,129,16)" fg:x="4440" fg:w="155"/><text x="3.7593%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::try_fold (153 samples, 0.12%)</title><rect x="3.5109%" y="757" width="0.1209%" height="15" fill="rgb(216,85,19)" fg:x="4442" fg:w="153"/><text x="3.7609%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (139 samples, 0.11%)</title><rect x="3.5219%" y="741" width="0.1099%" height="15" fill="rgb(235,228,7)" fg:x="4456" fg:w="139"/><text x="3.7719%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (139 samples, 0.11%)</title><rect x="3.5219%" y="725" width="0.1099%" height="15" fill="rgb(245,175,0)" fg:x="4456" fg:w="139"/><text x="3.7719%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_all_files_decryptable::_{{closure}} (139 samples, 0.11%)</title><rect x="3.5219%" y="709" width="0.1099%" height="15" fill="rgb(208,168,36)" fg:x="4456" fg:w="139"/><text x="3.7719%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (137 samples, 0.11%)</title><rect x="3.5235%" y="693" width="0.1083%" height="15" fill="rgb(246,171,24)" fg:x="4458" fg:w="137"/><text x="3.7735%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="3.6373%" y="581" width="0.0174%" height="15" fill="rgb(215,142,24)" fg:x="4602" fg:w="22"/><text x="3.8873%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.01%)</title><rect x="3.6405%" y="565" width="0.0142%" height="15" fill="rgb(250,187,7)" fg:x="4606" fg:w="18"/><text x="3.8905%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.01%)</title><rect x="3.6634%" y="485" width="0.0111%" height="15" fill="rgb(228,66,33)" fg:x="4635" fg:w="14"/><text x="3.9134%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (27 samples, 0.02%)</title><rect x="3.6555%" y="581" width="0.0213%" height="15" fill="rgb(234,215,21)" fg:x="4625" fg:w="27"/><text x="3.9055%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (27 samples, 0.02%)</title><rect x="3.6555%" y="565" width="0.0213%" height="15" fill="rgb(222,191,20)" fg:x="4625" fg:w="27"/><text x="3.9055%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (27 samples, 0.02%)</title><rect x="3.6555%" y="549" width="0.0213%" height="15" fill="rgb(245,79,54)" fg:x="4625" fg:w="27"/><text x="3.9055%" y="559.50"></text></g><g><title> N]&gt;::hash (27 samples, 0.02%)</title><rect x="3.6555%" y="533" width="0.0213%" height="15" fill="rgb(240,10,37)" fg:x="4625" fg:w="27"/><text x="3.9055%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (20 samples, 0.02%)</title><rect x="3.6610%" y="517" width="0.0158%" height="15" fill="rgb(214,192,32)" fg:x="4632" fg:w="20"/><text x="3.9110%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.02%)</title><rect x="3.6610%" y="501" width="0.0158%" height="15" fill="rgb(209,36,54)" fg:x="4632" fg:w="20"/><text x="3.9110%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (59 samples, 0.05%)</title><rect x="3.6373%" y="597" width="0.0466%" height="15" fill="rgb(220,10,11)" fg:x="4602" fg:w="59"/><text x="3.8873%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (102 samples, 0.08%)</title><rect x="3.6357%" y="661" width="0.0806%" height="15" fill="rgb(221,106,17)" fg:x="4600" fg:w="102"/><text x="3.8857%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (101 samples, 0.08%)</title><rect x="3.6365%" y="645" width="0.0798%" height="15" fill="rgb(251,142,44)" fg:x="4601" fg:w="101"/><text x="3.8865%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (101 samples, 0.08%)</title><rect x="3.6365%" y="629" width="0.0798%" height="15" fill="rgb(238,13,15)" fg:x="4601" fg:w="101"/><text x="3.8865%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (101 samples, 0.08%)</title><rect x="3.6365%" y="613" width="0.0798%" height="15" fill="rgb(208,107,27)" fg:x="4601" fg:w="101"/><text x="3.8865%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (40 samples, 0.03%)</title><rect x="3.6847%" y="597" width="0.0316%" height="15" fill="rgb(205,136,37)" fg:x="4662" fg:w="40"/><text x="3.9347%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (40 samples, 0.03%)</title><rect x="3.6847%" y="581" width="0.0316%" height="15" fill="rgb(250,205,27)" fg:x="4662" fg:w="40"/><text x="3.9347%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="3.7187%" y="549" width="0.0174%" height="15" fill="rgb(210,80,43)" fg:x="4705" fg:w="22"/><text x="3.9687%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.01%)</title><rect x="3.7219%" y="533" width="0.0142%" height="15" fill="rgb(247,160,36)" fg:x="4709" fg:w="18"/><text x="3.9719%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (28 samples, 0.02%)</title><rect x="3.7369%" y="549" width="0.0221%" height="15" fill="rgb(234,13,49)" fg:x="4728" fg:w="28"/><text x="3.9869%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (28 samples, 0.02%)</title><rect x="3.7369%" y="533" width="0.0221%" height="15" fill="rgb(234,122,0)" fg:x="4728" fg:w="28"/><text x="3.9869%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (28 samples, 0.02%)</title><rect x="3.7369%" y="517" width="0.0221%" height="15" fill="rgb(207,146,38)" fg:x="4728" fg:w="28"/><text x="3.9869%" y="527.50"></text></g><g><title> N]&gt;::hash (28 samples, 0.02%)</title><rect x="3.7369%" y="501" width="0.0221%" height="15" fill="rgb(207,177,25)" fg:x="4728" fg:w="28"/><text x="3.9869%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (18 samples, 0.01%)</title><rect x="3.7448%" y="485" width="0.0142%" height="15" fill="rgb(211,178,42)" fg:x="4738" fg:w="18"/><text x="3.9948%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="3.7456%" y="469" width="0.0134%" height="15" fill="rgb(230,69,54)" fg:x="4739" fg:w="17"/><text x="3.9956%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (58 samples, 0.05%)</title><rect x="3.7187%" y="565" width="0.0458%" height="15" fill="rgb(214,135,41)" fg:x="4705" fg:w="58"/><text x="3.9687%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (103 samples, 0.08%)</title><rect x="3.7179%" y="629" width="0.0814%" height="15" fill="rgb(237,67,25)" fg:x="4704" fg:w="103"/><text x="3.9679%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (103 samples, 0.08%)</title><rect x="3.7179%" y="613" width="0.0814%" height="15" fill="rgb(222,189,50)" fg:x="4704" fg:w="103"/><text x="3.9679%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (103 samples, 0.08%)</title><rect x="3.7179%" y="597" width="0.0814%" height="15" fill="rgb(245,148,34)" fg:x="4704" fg:w="103"/><text x="3.9679%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (103 samples, 0.08%)</title><rect x="3.7179%" y="581" width="0.0814%" height="15" fill="rgb(222,29,6)" fg:x="4704" fg:w="103"/><text x="3.9679%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (44 samples, 0.03%)</title><rect x="3.7646%" y="565" width="0.0348%" height="15" fill="rgb(221,189,43)" fg:x="4763" fg:w="44"/><text x="4.0146%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (31 samples, 0.02%)</title><rect x="3.7748%" y="549" width="0.0245%" height="15" fill="rgb(207,36,27)" fg:x="4776" fg:w="31"/><text x="4.0248%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (107 samples, 0.08%)</title><rect x="3.7163%" y="661" width="0.0846%" height="15" fill="rgb(217,90,24)" fg:x="4702" fg:w="107"/><text x="3.9663%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (105 samples, 0.08%)</title><rect x="3.7179%" y="645" width="0.0830%" height="15" fill="rgb(224,66,35)" fg:x="4704" fg:w="105"/><text x="3.9679%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (210 samples, 0.17%)</title><rect x="3.6357%" y="725" width="0.1660%" height="15" fill="rgb(221,13,50)" fg:x="4600" fg:w="210"/><text x="3.8857%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (210 samples, 0.17%)</title><rect x="3.6357%" y="709" width="0.1660%" height="15" fill="rgb(236,68,49)" fg:x="4600" fg:w="210"/><text x="3.8857%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (210 samples, 0.17%)</title><rect x="3.6357%" y="693" width="0.1660%" height="15" fill="rgb(229,146,28)" fg:x="4600" fg:w="210"/><text x="3.8857%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (210 samples, 0.17%)</title><rect x="3.6357%" y="677" width="0.1660%" height="15" fill="rgb(225,31,38)" fg:x="4600" fg:w="210"/><text x="3.8857%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_all_files_decryptable (1,140 samples, 0.90%)</title><rect x="2.9015%" y="805" width="0.9010%" height="15" fill="rgb(250,208,3)" fg:x="3671" fg:w="1140"/><text x="3.1515%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::maybe_find_parent (216 samples, 0.17%)</title><rect x="3.6318%" y="789" width="0.1707%" height="15" fill="rgb(246,54,23)" fg:x="4595" fg:w="216"/><text x="3.8818%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (216 samples, 0.17%)</title><rect x="3.6318%" y="773" width="0.1707%" height="15" fill="rgb(243,76,11)" fg:x="4595" fg:w="216"/><text x="3.8818%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (216 samples, 0.17%)</title><rect x="3.6318%" y="757" width="0.1707%" height="15" fill="rgb(245,21,50)" fg:x="4595" fg:w="216"/><text x="3.8818%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (215 samples, 0.17%)</title><rect x="3.6326%" y="741" width="0.1699%" height="15" fill="rgb(228,9,43)" fg:x="4596" fg:w="215"/><text x="3.8826%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (28 samples, 0.02%)</title><rect x="3.8199%" y="597" width="0.0221%" height="15" fill="rgb(208,100,47)" fg:x="4833" fg:w="28"/><text x="4.0699%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.02%)</title><rect x="3.8262%" y="581" width="0.0158%" height="15" fill="rgb(232,26,8)" fg:x="4841" fg:w="20"/><text x="4.0762%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.01%)</title><rect x="3.8547%" y="501" width="0.0111%" height="15" fill="rgb(216,166,38)" fg:x="4877" fg:w="14"/><text x="4.1047%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (32 samples, 0.03%)</title><rect x="3.8452%" y="597" width="0.0253%" height="15" fill="rgb(251,202,51)" fg:x="4865" fg:w="32"/><text x="4.0952%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (31 samples, 0.02%)</title><rect x="3.8460%" y="581" width="0.0245%" height="15" fill="rgb(254,216,34)" fg:x="4866" fg:w="31"/><text x="4.0960%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (31 samples, 0.02%)</title><rect x="3.8460%" y="565" width="0.0245%" height="15" fill="rgb(251,32,27)" fg:x="4866" fg:w="31"/><text x="4.0960%" y="575.50"></text></g><g><title> N]&gt;::hash (31 samples, 0.02%)</title><rect x="3.8460%" y="549" width="0.0245%" height="15" fill="rgb(208,127,28)" fg:x="4866" fg:w="31"/><text x="4.0960%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (22 samples, 0.02%)</title><rect x="3.8531%" y="533" width="0.0174%" height="15" fill="rgb(224,137,22)" fg:x="4875" fg:w="22"/><text x="4.1031%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (22 samples, 0.02%)</title><rect x="3.8531%" y="517" width="0.0174%" height="15" fill="rgb(254,70,32)" fg:x="4875" fg:w="22"/><text x="4.1031%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (71 samples, 0.06%)</title><rect x="3.8191%" y="613" width="0.0561%" height="15" fill="rgb(229,75,37)" fg:x="4832" fg:w="71"/><text x="4.0691%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (114 samples, 0.09%)</title><rect x="3.8159%" y="677" width="0.0901%" height="15" fill="rgb(252,64,23)" fg:x="4828" fg:w="114"/><text x="4.0659%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (114 samples, 0.09%)</title><rect x="3.8159%" y="661" width="0.0901%" height="15" fill="rgb(232,162,48)" fg:x="4828" fg:w="114"/><text x="4.0659%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (114 samples, 0.09%)</title><rect x="3.8159%" y="645" width="0.0901%" height="15" fill="rgb(246,160,12)" fg:x="4828" fg:w="114"/><text x="4.0659%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (112 samples, 0.09%)</title><rect x="3.8175%" y="629" width="0.0885%" height="15" fill="rgb(247,166,0)" fg:x="4830" fg:w="112"/><text x="4.0675%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (39 samples, 0.03%)</title><rect x="3.8752%" y="613" width="0.0308%" height="15" fill="rgb(249,219,21)" fg:x="4903" fg:w="39"/><text x="4.1252%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (38 samples, 0.03%)</title><rect x="3.8760%" y="597" width="0.0300%" height="15" fill="rgb(205,209,3)" fg:x="4904" fg:w="38"/><text x="4.1260%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (27 samples, 0.02%)</title><rect x="3.9124%" y="565" width="0.0213%" height="15" fill="rgb(243,44,1)" fg:x="4950" fg:w="27"/><text x="4.1624%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21 samples, 0.02%)</title><rect x="3.9171%" y="549" width="0.0166%" height="15" fill="rgb(206,159,16)" fg:x="4956" fg:w="21"/><text x="4.1671%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.01%)</title><rect x="3.9471%" y="469" width="0.0134%" height="15" fill="rgb(244,77,30)" fg:x="4994" fg:w="17"/><text x="4.1971%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (32 samples, 0.03%)</title><rect x="3.9361%" y="565" width="0.0253%" height="15" fill="rgb(218,69,12)" fg:x="4980" fg:w="32"/><text x="4.1861%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (32 samples, 0.03%)</title><rect x="3.9361%" y="549" width="0.0253%" height="15" fill="rgb(212,87,7)" fg:x="4980" fg:w="32"/><text x="4.1861%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (32 samples, 0.03%)</title><rect x="3.9361%" y="533" width="0.0253%" height="15" fill="rgb(245,114,25)" fg:x="4980" fg:w="32"/><text x="4.1861%" y="543.50"></text></g><g><title> N]&gt;::hash (32 samples, 0.03%)</title><rect x="3.9361%" y="517" width="0.0253%" height="15" fill="rgb(210,61,42)" fg:x="4980" fg:w="32"/><text x="4.1861%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (23 samples, 0.02%)</title><rect x="3.9432%" y="501" width="0.0182%" height="15" fill="rgb(211,52,33)" fg:x="4989" fg:w="23"/><text x="4.1932%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.02%)</title><rect x="3.9456%" y="485" width="0.0158%" height="15" fill="rgb(234,58,33)" fg:x="4992" fg:w="20"/><text x="4.1956%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (69 samples, 0.05%)</title><rect x="3.9124%" y="581" width="0.0545%" height="15" fill="rgb(220,115,36)" fg:x="4950" fg:w="69"/><text x="4.1624%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.02%)</title><rect x="3.9716%" y="565" width="0.0158%" height="15" fill="rgb(243,153,54)" fg:x="5025" fg:w="20"/><text x="4.2216%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (104 samples, 0.08%)</title><rect x="3.9060%" y="677" width="0.0822%" height="15" fill="rgb(251,47,18)" fg:x="4942" fg:w="104"/><text x="4.1560%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (101 samples, 0.08%)</title><rect x="3.9084%" y="661" width="0.0798%" height="15" fill="rgb(242,102,42)" fg:x="4945" fg:w="101"/><text x="4.1584%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (101 samples, 0.08%)</title><rect x="3.9084%" y="645" width="0.0798%" height="15" fill="rgb(234,31,38)" fg:x="4945" fg:w="101"/><text x="4.1584%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (100 samples, 0.08%)</title><rect x="3.9092%" y="629" width="0.0790%" height="15" fill="rgb(221,117,51)" fg:x="4946" fg:w="100"/><text x="4.1592%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (98 samples, 0.08%)</title><rect x="3.9108%" y="613" width="0.0775%" height="15" fill="rgb(212,20,18)" fg:x="4948" fg:w="98"/><text x="4.1608%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (98 samples, 0.08%)</title><rect x="3.9108%" y="597" width="0.0775%" height="15" fill="rgb(245,133,36)" fg:x="4948" fg:w="98"/><text x="4.1608%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (26 samples, 0.02%)</title><rect x="3.9677%" y="581" width="0.0205%" height="15" fill="rgb(212,6,19)" fg:x="5020" fg:w="26"/><text x="4.2177%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (222 samples, 0.18%)</title><rect x="3.8136%" y="741" width="0.1755%" height="15" fill="rgb(218,1,36)" fg:x="4825" fg:w="222"/><text x="4.0636%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (219 samples, 0.17%)</title><rect x="3.8159%" y="725" width="0.1731%" height="15" fill="rgb(246,84,54)" fg:x="4828" fg:w="219"/><text x="4.0659%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (219 samples, 0.17%)</title><rect x="3.8159%" y="709" width="0.1731%" height="15" fill="rgb(242,110,6)" fg:x="4828" fg:w="219"/><text x="4.0659%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (219 samples, 0.17%)</title><rect x="3.8159%" y="693" width="0.1731%" height="15" fill="rgb(214,47,5)" fg:x="4828" fg:w="219"/><text x="4.0659%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (232 samples, 0.18%)</title><rect x="3.8072%" y="773" width="0.1834%" height="15" fill="rgb(218,159,25)" fg:x="4817" fg:w="232"/><text x="4.0572%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (231 samples, 0.18%)</title><rect x="3.8080%" y="757" width="0.1826%" height="15" fill="rgb(215,211,28)" fg:x="4818" fg:w="231"/><text x="4.0580%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (234 samples, 0.18%)</title><rect x="3.8065%" y="789" width="0.1849%" height="15" fill="rgb(238,59,32)" fg:x="4816" fg:w="234"/><text x="4.0565%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::fill_b32 (51 samples, 0.04%)</title><rect x="4.0349%" y="741" width="0.0403%" height="15" fill="rgb(226,82,3)" fg:x="5105" fg:w="51"/><text x="4.2849%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (32 samples, 0.03%)</title><rect x="4.0499%" y="725" width="0.0253%" height="15" fill="rgb(240,164,32)" fg:x="5124" fg:w="32"/><text x="4.2999%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::serialize (150 samples, 0.12%)</title><rect x="4.0293%" y="757" width="0.1186%" height="15" fill="rgb(232,46,7)" fg:x="5098" fg:w="150"/><text x="4.2793%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::normalize_var (92 samples, 0.07%)</title><rect x="4.0752%" y="741" width="0.0727%" height="15" fill="rgb(229,129,53)" fg:x="5156" fg:w="92"/><text x="4.3252%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (42 samples, 0.03%)</title><rect x="4.1147%" y="725" width="0.0332%" height="15" fill="rgb(234,188,29)" fg:x="5206" fg:w="42"/><text x="4.3647%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::model::file_metadata::Owner as core::cmp::PartialEq&gt;::eq (171 samples, 0.14%)</title><rect x="4.0151%" y="773" width="0.1352%" height="15" fill="rgb(246,141,4)" fg:x="5080" fg:w="171"/><text x="4.2651%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::cmp::PartialEq::ne (172 samples, 0.14%)</title><rect x="4.0151%" y="789" width="0.1359%" height="15" fill="rgb(229,23,39)" fg:x="5080" fg:w="172"/><text x="4.2651%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (28 samples, 0.02%)</title><rect x="4.1882%" y="581" width="0.0221%" height="15" fill="rgb(206,12,3)" fg:x="5299" fg:w="28"/><text x="4.4382%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (22 samples, 0.02%)</title><rect x="4.1929%" y="565" width="0.0174%" height="15" fill="rgb(252,226,20)" fg:x="5305" fg:w="22"/><text x="4.4429%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (25 samples, 0.02%)</title><rect x="4.2127%" y="581" width="0.0198%" height="15" fill="rgb(216,123,35)" fg:x="5330" fg:w="25"/><text x="4.4627%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (23 samples, 0.02%)</title><rect x="4.2143%" y="565" width="0.0182%" height="15" fill="rgb(212,68,40)" fg:x="5332" fg:w="23"/><text x="4.4643%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (23 samples, 0.02%)</title><rect x="4.2143%" y="549" width="0.0182%" height="15" fill="rgb(254,125,32)" fg:x="5332" fg:w="23"/><text x="4.4643%" y="559.50"></text></g><g><title> N]&gt;::hash (23 samples, 0.02%)</title><rect x="4.2143%" y="533" width="0.0182%" height="15" fill="rgb(253,97,22)" fg:x="5332" fg:w="23"/><text x="4.4643%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (15 samples, 0.01%)</title><rect x="4.2206%" y="517" width="0.0119%" height="15" fill="rgb(241,101,14)" fg:x="5340" fg:w="15"/><text x="4.4706%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="4.2206%" y="501" width="0.0119%" height="15" fill="rgb(238,103,29)" fg:x="5340" fg:w="15"/><text x="4.4706%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (68 samples, 0.05%)</title><rect x="4.1882%" y="597" width="0.0537%" height="15" fill="rgb(233,195,47)" fg:x="5299" fg:w="68"/><text x="4.4382%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (108 samples, 0.09%)</title><rect x="4.1866%" y="661" width="0.0854%" height="15" fill="rgb(246,218,30)" fg:x="5297" fg:w="108"/><text x="4.4366%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (108 samples, 0.09%)</title><rect x="4.1866%" y="645" width="0.0854%" height="15" fill="rgb(219,145,47)" fg:x="5297" fg:w="108"/><text x="4.4366%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (108 samples, 0.09%)</title><rect x="4.1866%" y="629" width="0.0854%" height="15" fill="rgb(243,12,26)" fg:x="5297" fg:w="108"/><text x="4.4366%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (108 samples, 0.09%)</title><rect x="4.1866%" y="613" width="0.0854%" height="15" fill="rgb(214,87,16)" fg:x="5297" fg:w="108"/><text x="4.4366%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (36 samples, 0.03%)</title><rect x="4.2435%" y="597" width="0.0285%" height="15" fill="rgb(208,99,42)" fg:x="5369" fg:w="36"/><text x="4.4935%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (34 samples, 0.03%)</title><rect x="4.2451%" y="581" width="0.0269%" height="15" fill="rgb(253,99,2)" fg:x="5371" fg:w="34"/><text x="4.4951%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (27 samples, 0.02%)</title><rect x="4.2767%" y="549" width="0.0213%" height="15" fill="rgb(220,168,23)" fg:x="5411" fg:w="27"/><text x="4.5267%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (19 samples, 0.02%)</title><rect x="4.2830%" y="533" width="0.0150%" height="15" fill="rgb(242,38,24)" fg:x="5419" fg:w="19"/><text x="4.5330%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (27 samples, 0.02%)</title><rect x="4.2996%" y="549" width="0.0213%" height="15" fill="rgb(225,182,9)" fg:x="5440" fg:w="27"/><text x="4.5496%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (27 samples, 0.02%)</title><rect x="4.2996%" y="533" width="0.0213%" height="15" fill="rgb(243,178,37)" fg:x="5440" fg:w="27"/><text x="4.5496%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (27 samples, 0.02%)</title><rect x="4.2996%" y="517" width="0.0213%" height="15" fill="rgb(232,139,19)" fg:x="5440" fg:w="27"/><text x="4.5496%" y="527.50"></text></g><g><title> N]&gt;::hash (27 samples, 0.02%)</title><rect x="4.2996%" y="501" width="0.0213%" height="15" fill="rgb(225,201,24)" fg:x="5440" fg:w="27"/><text x="4.5496%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (16 samples, 0.01%)</title><rect x="4.3083%" y="485" width="0.0126%" height="15" fill="rgb(221,47,46)" fg:x="5451" fg:w="16"/><text x="4.5583%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="4.3091%" y="469" width="0.0119%" height="15" fill="rgb(249,23,13)" fg:x="5452" fg:w="15"/><text x="4.5591%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (67 samples, 0.05%)</title><rect x="4.2759%" y="565" width="0.0530%" height="15" fill="rgb(219,9,5)" fg:x="5410" fg:w="67"/><text x="4.5259%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (227 samples, 0.18%)</title><rect x="4.1803%" y="773" width="0.1794%" height="15" fill="rgb(254,171,16)" fg:x="5289" fg:w="227"/><text x="4.4303%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (225 samples, 0.18%)</title><rect x="4.1819%" y="757" width="0.1778%" height="15" fill="rgb(230,171,20)" fg:x="5291" fg:w="225"/><text x="4.4319%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (224 samples, 0.18%)</title><rect x="4.1827%" y="741" width="0.1770%" height="15" fill="rgb(210,71,41)" fg:x="5292" fg:w="224"/><text x="4.4327%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (222 samples, 0.18%)</title><rect x="4.1843%" y="725" width="0.1755%" height="15" fill="rgb(206,173,20)" fg:x="5294" fg:w="222"/><text x="4.4343%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (220 samples, 0.17%)</title><rect x="4.1858%" y="709" width="0.1739%" height="15" fill="rgb(233,88,34)" fg:x="5296" fg:w="220"/><text x="4.4358%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (220 samples, 0.17%)</title><rect x="4.1858%" y="693" width="0.1739%" height="15" fill="rgb(223,209,46)" fg:x="5296" fg:w="220"/><text x="4.4358%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (220 samples, 0.17%)</title><rect x="4.1858%" y="677" width="0.1739%" height="15" fill="rgb(250,43,18)" fg:x="5296" fg:w="220"/><text x="4.4358%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (111 samples, 0.09%)</title><rect x="4.2720%" y="661" width="0.0877%" height="15" fill="rgb(208,13,10)" fg:x="5405" fg:w="111"/><text x="4.5220%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (109 samples, 0.09%)</title><rect x="4.2736%" y="645" width="0.0862%" height="15" fill="rgb(212,200,36)" fg:x="5407" fg:w="109"/><text x="4.5236%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (109 samples, 0.09%)</title><rect x="4.2736%" y="629" width="0.0862%" height="15" fill="rgb(225,90,30)" fg:x="5407" fg:w="109"/><text x="4.5236%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (109 samples, 0.09%)</title><rect x="4.2736%" y="613" width="0.0862%" height="15" fill="rgb(236,182,39)" fg:x="5407" fg:w="109"/><text x="4.5236%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (109 samples, 0.09%)</title><rect x="4.2736%" y="597" width="0.0862%" height="15" fill="rgb(212,144,35)" fg:x="5407" fg:w="109"/><text x="4.5236%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (109 samples, 0.09%)</title><rect x="4.2736%" y="581" width="0.0862%" height="15" fill="rgb(228,63,44)" fg:x="5407" fg:w="109"/><text x="4.5236%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (39 samples, 0.03%)</title><rect x="4.3289%" y="565" width="0.0308%" height="15" fill="rgb(228,109,6)" fg:x="5477" fg:w="39"/><text x="4.5789%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.03%)</title><rect x="4.3336%" y="549" width="0.0261%" height="15" fill="rgb(238,117,24)" fg:x="5483" fg:w="33"/><text x="4.5836%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::raw_vec::finish_grow (24 samples, 0.02%)</title><rect x="4.3716%" y="725" width="0.0190%" height="15" fill="rgb(242,26,26)" fg:x="5531" fg:w="24"/><text x="4.6216%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="4.3803%" y="709" width="0.0103%" height="15" fill="rgb(221,92,48)" fg:x="5542" fg:w="13"/><text x="4.6303%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="4.3803%" y="693" width="0.0103%" height="15" fill="rgb(209,209,32)" fg:x="5542" fg:w="13"/><text x="4.6303%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::vec::Vec&lt;T,A&gt;::push (41 samples, 0.03%)</title><rect x="4.3621%" y="773" width="0.0324%" height="15" fill="rgb(221,70,22)" fg:x="5519" fg:w="41"/><text x="4.6121%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (38 samples, 0.03%)</title><rect x="4.3645%" y="757" width="0.0300%" height="15" fill="rgb(248,145,5)" fg:x="5522" fg:w="38"/><text x="4.6145%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (36 samples, 0.03%)</title><rect x="4.3660%" y="741" width="0.0285%" height="15" fill="rgb(226,116,26)" fg:x="5524" fg:w="36"/><text x="4.6160%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;uuid::Uuid&gt;&gt; (16 samples, 0.01%)</title><rect x="4.3945%" y="773" width="0.0126%" height="15" fill="rgb(244,5,17)" fg:x="5560" fg:w="16"/><text x="4.6445%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="4.3945%" y="757" width="0.0126%" height="15" fill="rgb(252,159,33)" fg:x="5560" fg:w="16"/><text x="4.6445%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="4.4332%" y="565" width="0.0174%" height="15" fill="rgb(206,71,0)" fg:x="5609" fg:w="22"/><text x="4.6832%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.01%)</title><rect x="4.4388%" y="549" width="0.0119%" height="15" fill="rgb(233,118,54)" fg:x="5616" fg:w="15"/><text x="4.6888%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (27 samples, 0.02%)</title><rect x="4.4554%" y="565" width="0.0213%" height="15" fill="rgb(234,83,48)" fg:x="5637" fg:w="27"/><text x="4.7054%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (27 samples, 0.02%)</title><rect x="4.4554%" y="549" width="0.0213%" height="15" fill="rgb(228,3,54)" fg:x="5637" fg:w="27"/><text x="4.7054%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (27 samples, 0.02%)</title><rect x="4.4554%" y="533" width="0.0213%" height="15" fill="rgb(226,155,13)" fg:x="5637" fg:w="27"/><text x="4.7054%" y="543.50"></text></g><g><title> N]&gt;::hash (27 samples, 0.02%)</title><rect x="4.4554%" y="517" width="0.0213%" height="15" fill="rgb(241,28,37)" fg:x="5637" fg:w="27"/><text x="4.7054%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (23 samples, 0.02%)</title><rect x="4.4585%" y="501" width="0.0182%" height="15" fill="rgb(233,93,10)" fg:x="5641" fg:w="23"/><text x="4.7085%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="4.4601%" y="485" width="0.0166%" height="15" fill="rgb(225,113,19)" fg:x="5643" fg:w="21"/><text x="4.7101%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (59 samples, 0.05%)</title><rect x="4.4332%" y="581" width="0.0466%" height="15" fill="rgb(241,2,18)" fg:x="5609" fg:w="59"/><text x="4.6832%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (91 samples, 0.07%)</title><rect x="4.4316%" y="645" width="0.0719%" height="15" fill="rgb(228,207,21)" fg:x="5607" fg:w="91"/><text x="4.6816%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (91 samples, 0.07%)</title><rect x="4.4316%" y="629" width="0.0719%" height="15" fill="rgb(213,211,35)" fg:x="5607" fg:w="91"/><text x="4.6816%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (91 samples, 0.07%)</title><rect x="4.4316%" y="613" width="0.0719%" height="15" fill="rgb(209,83,10)" fg:x="5607" fg:w="91"/><text x="4.6816%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (90 samples, 0.07%)</title><rect x="4.4324%" y="597" width="0.0711%" height="15" fill="rgb(209,164,1)" fg:x="5608" fg:w="90"/><text x="4.6824%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (29 samples, 0.02%)</title><rect x="4.4806%" y="581" width="0.0229%" height="15" fill="rgb(213,184,43)" fg:x="5669" fg:w="29"/><text x="4.7306%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (23 samples, 0.02%)</title><rect x="4.4854%" y="565" width="0.0182%" height="15" fill="rgb(231,61,34)" fg:x="5675" fg:w="23"/><text x="4.7354%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (96 samples, 0.08%)</title><rect x="4.4293%" y="709" width="0.0759%" height="15" fill="rgb(235,75,3)" fg:x="5604" fg:w="96"/><text x="4.6793%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (94 samples, 0.07%)</title><rect x="4.4308%" y="693" width="0.0743%" height="15" fill="rgb(220,106,47)" fg:x="5606" fg:w="94"/><text x="4.6808%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (94 samples, 0.07%)</title><rect x="4.4308%" y="677" width="0.0743%" height="15" fill="rgb(210,196,33)" fg:x="5606" fg:w="94"/><text x="4.6808%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (93 samples, 0.07%)</title><rect x="4.4316%" y="661" width="0.0735%" height="15" fill="rgb(229,154,42)" fg:x="5607" fg:w="93"/><text x="4.6816%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (111 samples, 0.09%)</title><rect x="4.4229%" y="757" width="0.0877%" height="15" fill="rgb(228,114,26)" fg:x="5596" fg:w="111"/><text x="4.6729%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (111 samples, 0.09%)</title><rect x="4.4229%" y="741" width="0.0877%" height="15" fill="rgb(208,144,1)" fg:x="5596" fg:w="111"/><text x="4.6729%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (110 samples, 0.09%)</title><rect x="4.4237%" y="725" width="0.0869%" height="15" fill="rgb(239,112,37)" fg:x="5597" fg:w="110"/><text x="4.6737%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (113 samples, 0.09%)</title><rect x="4.4229%" y="773" width="0.0893%" height="15" fill="rgb(210,96,50)" fg:x="5596" fg:w="113"/><text x="4.6729%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="4.5241%" y="565" width="0.0158%" height="15" fill="rgb(222,178,2)" fg:x="5724" fg:w="20"/><text x="4.7741%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.01%)</title><rect x="4.5281%" y="549" width="0.0119%" height="15" fill="rgb(226,74,18)" fg:x="5729" fg:w="15"/><text x="4.7781%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (27 samples, 0.02%)</title><rect x="4.5415%" y="549" width="0.0213%" height="15" fill="rgb(225,67,54)" fg:x="5746" fg:w="27"/><text x="4.7915%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (27 samples, 0.02%)</title><rect x="4.5415%" y="533" width="0.0213%" height="15" fill="rgb(251,92,32)" fg:x="5746" fg:w="27"/><text x="4.7915%" y="543.50"></text></g><g><title> N]&gt;::hash (27 samples, 0.02%)</title><rect x="4.5415%" y="517" width="0.0213%" height="15" fill="rgb(228,149,22)" fg:x="5746" fg:w="27"/><text x="4.7915%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (17 samples, 0.01%)</title><rect x="4.5494%" y="501" width="0.0134%" height="15" fill="rgb(243,54,13)" fg:x="5756" fg:w="17"/><text x="4.7994%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="4.5502%" y="485" width="0.0126%" height="15" fill="rgb(243,180,28)" fg:x="5757" fg:w="16"/><text x="4.8002%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (28 samples, 0.02%)</title><rect x="4.5415%" y="565" width="0.0221%" height="15" fill="rgb(208,167,24)" fg:x="5746" fg:w="28"/><text x="4.7915%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (56 samples, 0.04%)</title><rect x="4.5225%" y="581" width="0.0443%" height="15" fill="rgb(245,73,45)" fg:x="5722" fg:w="56"/><text x="4.7725%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (90 samples, 0.07%)</title><rect x="4.5210%" y="645" width="0.0711%" height="15" fill="rgb(237,203,48)" fg:x="5720" fg:w="90"/><text x="4.7710%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (90 samples, 0.07%)</title><rect x="4.5210%" y="629" width="0.0711%" height="15" fill="rgb(211,197,16)" fg:x="5720" fg:w="90"/><text x="4.7710%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (90 samples, 0.07%)</title><rect x="4.5210%" y="613" width="0.0711%" height="15" fill="rgb(243,99,51)" fg:x="5720" fg:w="90"/><text x="4.7710%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (90 samples, 0.07%)</title><rect x="4.5210%" y="597" width="0.0711%" height="15" fill="rgb(215,123,29)" fg:x="5720" fg:w="90"/><text x="4.7710%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (32 samples, 0.03%)</title><rect x="4.5668%" y="581" width="0.0253%" height="15" fill="rgb(239,186,37)" fg:x="5778" fg:w="32"/><text x="4.8168%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (32 samples, 0.03%)</title><rect x="4.5668%" y="565" width="0.0253%" height="15" fill="rgb(252,136,39)" fg:x="5778" fg:w="32"/><text x="4.8168%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="4.5937%" y="533" width="0.0174%" height="15" fill="rgb(223,213,32)" fg:x="5812" fg:w="22"/><text x="4.8437%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.01%)</title><rect x="4.5992%" y="517" width="0.0119%" height="15" fill="rgb(233,115,5)" fg:x="5819" fg:w="15"/><text x="4.8492%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (27 samples, 0.02%)</title><rect x="4.6142%" y="501" width="0.0213%" height="15" fill="rgb(207,226,44)" fg:x="5838" fg:w="27"/><text x="4.8642%" y="511.50"></text></g><g><title> N]&gt;::hash (27 samples, 0.02%)</title><rect x="4.6142%" y="485" width="0.0213%" height="15" fill="rgb(208,126,0)" fg:x="5838" fg:w="27"/><text x="4.8642%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (16 samples, 0.01%)</title><rect x="4.6229%" y="469" width="0.0126%" height="15" fill="rgb(244,66,21)" fg:x="5849" fg:w="16"/><text x="4.8729%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="4.6237%" y="453" width="0.0119%" height="15" fill="rgb(222,97,12)" fg:x="5850" fg:w="15"/><text x="4.8737%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (28 samples, 0.02%)</title><rect x="4.6142%" y="533" width="0.0221%" height="15" fill="rgb(219,213,19)" fg:x="5838" fg:w="28"/><text x="4.8642%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (28 samples, 0.02%)</title><rect x="4.6142%" y="517" width="0.0221%" height="15" fill="rgb(252,169,30)" fg:x="5838" fg:w="28"/><text x="4.8642%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (65 samples, 0.05%)</title><rect x="4.5937%" y="549" width="0.0514%" height="15" fill="rgb(206,32,51)" fg:x="5812" fg:w="65"/><text x="4.8437%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (104 samples, 0.08%)</title><rect x="4.5921%" y="645" width="0.0822%" height="15" fill="rgb(250,172,42)" fg:x="5810" fg:w="104"/><text x="4.8421%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (104 samples, 0.08%)</title><rect x="4.5921%" y="629" width="0.0822%" height="15" fill="rgb(209,34,43)" fg:x="5810" fg:w="104"/><text x="4.8421%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (104 samples, 0.08%)</title><rect x="4.5921%" y="613" width="0.0822%" height="15" fill="rgb(223,11,35)" fg:x="5810" fg:w="104"/><text x="4.8421%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (103 samples, 0.08%)</title><rect x="4.5929%" y="597" width="0.0814%" height="15" fill="rgb(251,219,26)" fg:x="5811" fg:w="103"/><text x="4.8429%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (103 samples, 0.08%)</title><rect x="4.5929%" y="581" width="0.0814%" height="15" fill="rgb(231,119,3)" fg:x="5811" fg:w="103"/><text x="4.8429%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (102 samples, 0.08%)</title><rect x="4.5937%" y="565" width="0.0806%" height="15" fill="rgb(216,97,11)" fg:x="5812" fg:w="102"/><text x="4.8437%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (37 samples, 0.03%)</title><rect x="4.6450%" y="549" width="0.0292%" height="15" fill="rgb(223,59,9)" fg:x="5877" fg:w="37"/><text x="4.8950%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (26 samples, 0.02%)</title><rect x="4.6537%" y="533" width="0.0205%" height="15" fill="rgb(233,93,31)" fg:x="5888" fg:w="26"/><text x="4.9037%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (197 samples, 0.16%)</title><rect x="4.5194%" y="709" width="0.1557%" height="15" fill="rgb(239,81,33)" fg:x="5718" fg:w="197"/><text x="4.7694%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (195 samples, 0.15%)</title><rect x="4.5210%" y="693" width="0.1541%" height="15" fill="rgb(213,120,34)" fg:x="5720" fg:w="195"/><text x="4.7710%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (195 samples, 0.15%)</title><rect x="4.5210%" y="677" width="0.1541%" height="15" fill="rgb(243,49,53)" fg:x="5720" fg:w="195"/><text x="4.7710%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (195 samples, 0.15%)</title><rect x="4.5210%" y="661" width="0.1541%" height="15" fill="rgb(247,216,33)" fg:x="5720" fg:w="195"/><text x="4.7710%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (208 samples, 0.16%)</title><rect x="4.5123%" y="725" width="0.1644%" height="15" fill="rgb(226,26,14)" fg:x="5709" fg:w="208"/><text x="4.7623%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (209 samples, 0.17%)</title><rect x="4.5123%" y="741" width="0.1652%" height="15" fill="rgb(215,49,53)" fg:x="5709" fg:w="209"/><text x="4.7623%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (210 samples, 0.17%)</title><rect x="4.5123%" y="757" width="0.1660%" height="15" fill="rgb(245,162,40)" fg:x="5709" fg:w="210"/><text x="4.7623%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::maybe_find_parent (213 samples, 0.17%)</title><rect x="4.5123%" y="773" width="0.1684%" height="15" fill="rgb(229,68,17)" fg:x="5709" fg:w="213"/><text x="4.7623%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.02%)</title><rect x="4.6806%" y="725" width="0.0205%" height="15" fill="rgb(213,182,10)" fg:x="5922" fg:w="26"/><text x="4.9306%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.01%)</title><rect x="4.6877%" y="709" width="0.0134%" height="15" fill="rgb(245,125,30)" fg:x="5931" fg:w="17"/><text x="4.9377%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (29 samples, 0.02%)</title><rect x="4.7019%" y="725" width="0.0229%" height="15" fill="rgb(232,202,2)" fg:x="5949" fg:w="29"/><text x="4.9519%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (29 samples, 0.02%)</title><rect x="4.7019%" y="709" width="0.0229%" height="15" fill="rgb(237,140,51)" fg:x="5949" fg:w="29"/><text x="4.9519%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (29 samples, 0.02%)</title><rect x="4.7019%" y="693" width="0.0229%" height="15" fill="rgb(236,157,25)" fg:x="5949" fg:w="29"/><text x="4.9519%" y="703.50"></text></g><g><title> N]&gt;::hash (29 samples, 0.02%)</title><rect x="4.7019%" y="677" width="0.0229%" height="15" fill="rgb(219,209,0)" fg:x="5949" fg:w="29"/><text x="4.9519%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (22 samples, 0.02%)</title><rect x="4.7075%" y="661" width="0.0174%" height="15" fill="rgb(240,116,54)" fg:x="5956" fg:w="22"/><text x="4.9575%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="4.7099%" y="645" width="0.0150%" height="15" fill="rgb(216,10,36)" fg:x="5959" fg:w="19"/><text x="4.9599%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (60 samples, 0.05%)</title><rect x="4.6806%" y="741" width="0.0474%" height="15" fill="rgb(222,72,44)" fg:x="5922" fg:w="60"/><text x="4.9306%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (91 samples, 0.07%)</title><rect x="4.6806%" y="773" width="0.0719%" height="15" fill="rgb(232,159,9)" fg:x="5922" fg:w="91"/><text x="4.9306%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (91 samples, 0.07%)</title><rect x="4.6806%" y="757" width="0.0719%" height="15" fill="rgb(210,39,32)" fg:x="5922" fg:w="91"/><text x="4.9306%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (31 samples, 0.02%)</title><rect x="4.7280%" y="741" width="0.0245%" height="15" fill="rgb(216,194,45)" fg:x="5982" fg:w="31"/><text x="4.9780%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (31 samples, 0.02%)</title><rect x="4.7280%" y="725" width="0.0245%" height="15" fill="rgb(218,18,35)" fg:x="5982" fg:w="31"/><text x="4.9780%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (30 samples, 0.02%)</title><rect x="4.7581%" y="725" width="0.0237%" height="15" fill="rgb(207,83,51)" fg:x="6020" fg:w="30"/><text x="5.0081%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (22 samples, 0.02%)</title><rect x="4.7644%" y="709" width="0.0174%" height="15" fill="rgb(225,63,43)" fg:x="6028" fg:w="22"/><text x="5.0144%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (21 samples, 0.02%)</title><rect x="4.7873%" y="693" width="0.0166%" height="15" fill="rgb(207,57,36)" fg:x="6057" fg:w="21"/><text x="5.0373%" y="703.50"></text></g><g><title> N]&gt;::hash (21 samples, 0.02%)</title><rect x="4.7873%" y="677" width="0.0166%" height="15" fill="rgb(216,99,33)" fg:x="6057" fg:w="21"/><text x="5.0373%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (22 samples, 0.02%)</title><rect x="4.7873%" y="725" width="0.0174%" height="15" fill="rgb(225,42,16)" fg:x="6057" fg:w="22"/><text x="5.0373%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (22 samples, 0.02%)</title><rect x="4.7873%" y="709" width="0.0174%" height="15" fill="rgb(220,201,45)" fg:x="6057" fg:w="22"/><text x="5.0373%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (60 samples, 0.05%)</title><rect x="4.7581%" y="741" width="0.0474%" height="15" fill="rgb(225,33,4)" fg:x="6020" fg:w="60"/><text x="5.0081%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (38 samples, 0.03%)</title><rect x="4.8237%" y="645" width="0.0300%" height="15" fill="rgb(224,33,50)" fg:x="6103" fg:w="38"/><text x="5.0737%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (34 samples, 0.03%)</title><rect x="4.8268%" y="629" width="0.0269%" height="15" fill="rgb(246,198,51)" fg:x="6107" fg:w="34"/><text x="5.0768%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.01%)</title><rect x="4.8719%" y="549" width="0.0119%" height="15" fill="rgb(205,22,4)" fg:x="6164" fg:w="15"/><text x="5.1219%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (32 samples, 0.03%)</title><rect x="4.8600%" y="645" width="0.0253%" height="15" fill="rgb(206,3,8)" fg:x="6149" fg:w="32"/><text x="5.1100%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (31 samples, 0.02%)</title><rect x="4.8608%" y="629" width="0.0245%" height="15" fill="rgb(251,23,15)" fg:x="6150" fg:w="31"/><text x="5.1108%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (31 samples, 0.02%)</title><rect x="4.8608%" y="613" width="0.0245%" height="15" fill="rgb(252,88,28)" fg:x="6150" fg:w="31"/><text x="5.1108%" y="623.50"></text></g><g><title> N]&gt;::hash (31 samples, 0.02%)</title><rect x="4.8608%" y="597" width="0.0245%" height="15" fill="rgb(212,127,14)" fg:x="6150" fg:w="31"/><text x="5.1108%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (22 samples, 0.02%)</title><rect x="4.8679%" y="581" width="0.0174%" height="15" fill="rgb(247,145,37)" fg:x="6159" fg:w="22"/><text x="5.1179%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="4.8687%" y="565" width="0.0166%" height="15" fill="rgb(209,117,53)" fg:x="6160" fg:w="21"/><text x="5.1187%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (92 samples, 0.07%)</title><rect x="4.8221%" y="693" width="0.0727%" height="15" fill="rgb(212,90,42)" fg:x="6101" fg:w="92"/><text x="5.0721%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (91 samples, 0.07%)</title><rect x="4.8229%" y="677" width="0.0719%" height="15" fill="rgb(218,164,37)" fg:x="6102" fg:w="91"/><text x="5.0729%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (90 samples, 0.07%)</title><rect x="4.8237%" y="661" width="0.0711%" height="15" fill="rgb(246,65,34)" fg:x="6103" fg:w="90"/><text x="5.0737%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (14 samples, 0.01%)</title><rect x="4.8948%" y="693" width="0.0111%" height="15" fill="rgb(231,100,33)" fg:x="6193" fg:w="14"/><text x="5.1448%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (13 samples, 0.01%)</title><rect x="4.8956%" y="677" width="0.0103%" height="15" fill="rgb(228,126,14)" fg:x="6194" fg:w="13"/><text x="5.1456%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (128 samples, 0.10%)</title><rect x="4.8102%" y="725" width="0.1012%" height="15" fill="rgb(215,173,21)" fg:x="6086" fg:w="128"/><text x="5.0602%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (126 samples, 0.10%)</title><rect x="4.8118%" y="709" width="0.0996%" height="15" fill="rgb(210,6,40)" fg:x="6088" fg:w="126"/><text x="5.0618%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (174 samples, 0.14%)</title><rect x="4.8094%" y="741" width="0.1375%" height="15" fill="rgb(212,48,18)" fg:x="6085" fg:w="174"/><text x="5.0594%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (45 samples, 0.04%)</title><rect x="4.9114%" y="725" width="0.0356%" height="15" fill="rgb(230,214,11)" fg:x="6214" fg:w="45"/><text x="5.1614%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::calculate_deleted (1,005 samples, 0.79%)</title><rect x="4.1542%" y="789" width="0.7943%" height="15" fill="rgb(254,105,39)" fg:x="5256" fg:w="1005"/><text x="4.4042%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (248 samples, 0.20%)</title><rect x="4.7525%" y="773" width="0.1960%" height="15" fill="rgb(245,158,5)" fg:x="6013" fg:w="248"/><text x="5.0025%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (248 samples, 0.20%)</title><rect x="4.7525%" y="757" width="0.1960%" height="15" fill="rgb(249,208,11)" fg:x="6013" fg:w="248"/><text x="5.0025%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="4.9580%" y="581" width="0.0158%" height="15" fill="rgb(210,39,28)" fg:x="6273" fg:w="20"/><text x="5.2080%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.01%)</title><rect x="4.9620%" y="565" width="0.0119%" height="15" fill="rgb(211,56,53)" fg:x="6278" fg:w="15"/><text x="5.2120%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (19 samples, 0.02%)</title><rect x="4.9857%" y="485" width="0.0150%" height="15" fill="rgb(226,201,30)" fg:x="6308" fg:w="19"/><text x="5.2357%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.03%)</title><rect x="4.9754%" y="581" width="0.0277%" height="15" fill="rgb(239,101,34)" fg:x="6295" fg:w="35"/><text x="5.2254%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (35 samples, 0.03%)</title><rect x="4.9754%" y="565" width="0.0277%" height="15" fill="rgb(226,209,5)" fg:x="6295" fg:w="35"/><text x="5.2254%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (35 samples, 0.03%)</title><rect x="4.9754%" y="549" width="0.0277%" height="15" fill="rgb(250,105,47)" fg:x="6295" fg:w="35"/><text x="5.2254%" y="559.50"></text></g><g><title> N]&gt;::hash (35 samples, 0.03%)</title><rect x="4.9754%" y="533" width="0.0277%" height="15" fill="rgb(230,72,3)" fg:x="6295" fg:w="35"/><text x="5.2254%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (24 samples, 0.02%)</title><rect x="4.9841%" y="517" width="0.0190%" height="15" fill="rgb(232,218,39)" fg:x="6306" fg:w="24"/><text x="5.2341%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="4.9841%" y="501" width="0.0190%" height="15" fill="rgb(248,166,6)" fg:x="6306" fg:w="24"/><text x="5.2341%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (68 samples, 0.05%)</title><rect x="4.9580%" y="597" width="0.0537%" height="15" fill="rgb(247,89,20)" fg:x="6273" fg:w="68"/><text x="5.2080%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (111 samples, 0.09%)</title><rect x="4.9549%" y="661" width="0.0877%" height="15" fill="rgb(248,130,54)" fg:x="6269" fg:w="111"/><text x="5.2049%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (111 samples, 0.09%)</title><rect x="4.9549%" y="645" width="0.0877%" height="15" fill="rgb(234,196,4)" fg:x="6269" fg:w="111"/><text x="5.2049%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (108 samples, 0.09%)</title><rect x="4.9572%" y="629" width="0.0854%" height="15" fill="rgb(250,143,31)" fg:x="6272" fg:w="108"/><text x="5.2072%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (107 samples, 0.08%)</title><rect x="4.9580%" y="613" width="0.0846%" height="15" fill="rgb(211,110,34)" fg:x="6273" fg:w="107"/><text x="5.2080%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (38 samples, 0.03%)</title><rect x="5.0126%" y="597" width="0.0300%" height="15" fill="rgb(215,124,48)" fg:x="6342" fg:w="38"/><text x="5.2626%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (38 samples, 0.03%)</title><rect x="5.0126%" y="581" width="0.0300%" height="15" fill="rgb(216,46,13)" fg:x="6342" fg:w="38"/><text x="5.2626%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (17 samples, 0.01%)</title><rect x="5.0292%" y="565" width="0.0134%" height="15" fill="rgb(205,184,25)" fg:x="6363" fg:w="17"/><text x="5.2792%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (113 samples, 0.09%)</title><rect x="4.9541%" y="693" width="0.0893%" height="15" fill="rgb(228,1,10)" fg:x="6268" fg:w="113"/><text x="5.2041%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (112 samples, 0.09%)</title><rect x="4.9549%" y="677" width="0.0885%" height="15" fill="rgb(213,116,27)" fg:x="6269" fg:w="112"/><text x="5.2049%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (117 samples, 0.09%)</title><rect x="4.9517%" y="725" width="0.0925%" height="15" fill="rgb(241,95,50)" fg:x="6265" fg:w="117"/><text x="5.2017%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (114 samples, 0.09%)</title><rect x="4.9541%" y="709" width="0.0901%" height="15" fill="rgb(238,48,32)" fg:x="6268" fg:w="114"/><text x="5.2041%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (122 samples, 0.10%)</title><rect x="4.9485%" y="789" width="0.0964%" height="15" fill="rgb(235,113,49)" fg:x="6261" fg:w="122"/><text x="5.1985%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (122 samples, 0.10%)</title><rect x="4.9485%" y="773" width="0.0964%" height="15" fill="rgb(205,127,43)" fg:x="6261" fg:w="122"/><text x="5.1985%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (122 samples, 0.10%)</title><rect x="4.9485%" y="757" width="0.0964%" height="15" fill="rgb(250,162,2)" fg:x="6261" fg:w="122"/><text x="5.1985%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (122 samples, 0.10%)</title><rect x="4.9485%" y="741" width="0.0964%" height="15" fill="rgb(220,13,41)" fg:x="6261" fg:w="122"/><text x="5.1985%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (23 samples, 0.02%)</title><rect x="5.0568%" y="405" width="0.0182%" height="15" fill="rgb(249,221,25)" fg:x="6398" fg:w="23"/><text x="5.3068%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.02%)</title><rect x="5.0592%" y="389" width="0.0158%" height="15" fill="rgb(215,208,19)" fg:x="6401" fg:w="20"/><text x="5.3092%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (25 samples, 0.02%)</title><rect x="5.0774%" y="373" width="0.0198%" height="15" fill="rgb(236,175,2)" fg:x="6424" fg:w="25"/><text x="5.3274%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (25 samples, 0.02%)</title><rect x="5.0774%" y="357" width="0.0198%" height="15" fill="rgb(241,52,2)" fg:x="6424" fg:w="25"/><text x="5.3274%" y="367.50"></text></g><g><title> N]&gt;::hash (25 samples, 0.02%)</title><rect x="5.0774%" y="341" width="0.0198%" height="15" fill="rgb(248,140,14)" fg:x="6424" fg:w="25"/><text x="5.3274%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (16 samples, 0.01%)</title><rect x="5.0845%" y="325" width="0.0126%" height="15" fill="rgb(253,22,42)" fg:x="6433" fg:w="16"/><text x="5.3345%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="5.0853%" y="309" width="0.0119%" height="15" fill="rgb(234,61,47)" fg:x="6434" fg:w="15"/><text x="5.3353%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (28 samples, 0.02%)</title><rect x="5.0766%" y="405" width="0.0221%" height="15" fill="rgb(208,226,15)" fg:x="6423" fg:w="28"/><text x="5.3266%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (27 samples, 0.02%)</title><rect x="5.0774%" y="389" width="0.0213%" height="15" fill="rgb(217,221,4)" fg:x="6424" fg:w="27"/><text x="5.3274%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (61 samples, 0.05%)</title><rect x="5.0568%" y="421" width="0.0482%" height="15" fill="rgb(212,174,34)" fg:x="6398" fg:w="61"/><text x="5.3068%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (28 samples, 0.02%)</title><rect x="5.1058%" y="421" width="0.0221%" height="15" fill="rgb(253,83,4)" fg:x="6460" fg:w="28"/><text x="5.3558%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (26 samples, 0.02%)</title><rect x="5.1074%" y="405" width="0.0205%" height="15" fill="rgb(250,195,49)" fg:x="6462" fg:w="26"/><text x="5.3574%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (98 samples, 0.08%)</title><rect x="5.0521%" y="453" width="0.0775%" height="15" fill="rgb(241,192,25)" fg:x="6392" fg:w="98"/><text x="5.3021%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (96 samples, 0.08%)</title><rect x="5.0537%" y="437" width="0.0759%" height="15" fill="rgb(208,124,10)" fg:x="6394" fg:w="96"/><text x="5.3037%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (102 samples, 0.08%)</title><rect x="5.0497%" y="501" width="0.0806%" height="15" fill="rgb(222,33,0)" fg:x="6389" fg:w="102"/><text x="5.2997%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (101 samples, 0.08%)</title><rect x="5.0505%" y="485" width="0.0798%" height="15" fill="rgb(234,209,28)" fg:x="6390" fg:w="101"/><text x="5.3005%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (99 samples, 0.08%)</title><rect x="5.0521%" y="469" width="0.0782%" height="15" fill="rgb(224,11,23)" fg:x="6392" fg:w="99"/><text x="5.3021%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (104 samples, 0.08%)</title><rect x="5.0489%" y="517" width="0.0822%" height="15" fill="rgb(232,99,1)" fg:x="6388" fg:w="104"/><text x="5.2989%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (117 samples, 0.09%)</title><rect x="5.0466%" y="693" width="0.0925%" height="15" fill="rgb(237,95,45)" fg:x="6385" fg:w="117"/><text x="5.2966%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (117 samples, 0.09%)</title><rect x="5.0466%" y="677" width="0.0925%" height="15" fill="rgb(208,109,11)" fg:x="6385" fg:w="117"/><text x="5.2966%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (117 samples, 0.09%)</title><rect x="5.0466%" y="661" width="0.0925%" height="15" fill="rgb(216,190,48)" fg:x="6385" fg:w="117"/><text x="5.2966%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (117 samples, 0.09%)</title><rect x="5.0466%" y="645" width="0.0925%" height="15" fill="rgb(251,171,36)" fg:x="6385" fg:w="117"/><text x="5.2966%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (117 samples, 0.09%)</title><rect x="5.0466%" y="629" width="0.0925%" height="15" fill="rgb(230,62,22)" fg:x="6385" fg:w="117"/><text x="5.2966%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (117 samples, 0.09%)</title><rect x="5.0466%" y="613" width="0.0925%" height="15" fill="rgb(225,114,35)" fg:x="6385" fg:w="117"/><text x="5.2966%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (117 samples, 0.09%)</title><rect x="5.0466%" y="597" width="0.0925%" height="15" fill="rgb(215,118,42)" fg:x="6385" fg:w="117"/><text x="5.2966%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (117 samples, 0.09%)</title><rect x="5.0466%" y="581" width="0.0925%" height="15" fill="rgb(243,119,21)" fg:x="6385" fg:w="117"/><text x="5.2966%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (117 samples, 0.09%)</title><rect x="5.0466%" y="565" width="0.0925%" height="15" fill="rgb(252,177,53)" fg:x="6385" fg:w="117"/><text x="5.2966%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (117 samples, 0.09%)</title><rect x="5.0466%" y="549" width="0.0925%" height="15" fill="rgb(237,209,29)" fg:x="6385" fg:w="117"/><text x="5.2966%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (114 samples, 0.09%)</title><rect x="5.0489%" y="533" width="0.0901%" height="15" fill="rgb(212,65,23)" fg:x="6388" fg:w="114"/><text x="5.2989%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="5.1556%" y="405" width="0.0158%" height="15" fill="rgb(230,222,46)" fg:x="6523" fg:w="20"/><text x="5.4056%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.01%)</title><rect x="5.1596%" y="389" width="0.0119%" height="15" fill="rgb(215,135,32)" fg:x="6528" fg:w="15"/><text x="5.4096%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.01%)</title><rect x="5.1888%" y="293" width="0.0119%" height="15" fill="rgb(246,101,22)" fg:x="6565" fg:w="15"/><text x="5.4388%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.02%)</title><rect x="5.1770%" y="405" width="0.0245%" height="15" fill="rgb(206,107,13)" fg:x="6550" fg:w="31"/><text x="5.4270%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.02%)</title><rect x="5.1770%" y="389" width="0.0245%" height="15" fill="rgb(250,100,44)" fg:x="6550" fg:w="31"/><text x="5.4270%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (31 samples, 0.02%)</title><rect x="5.1770%" y="373" width="0.0245%" height="15" fill="rgb(231,147,38)" fg:x="6550" fg:w="31"/><text x="5.4270%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (31 samples, 0.02%)</title><rect x="5.1770%" y="357" width="0.0245%" height="15" fill="rgb(229,8,40)" fg:x="6550" fg:w="31"/><text x="5.4270%" y="367.50"></text></g><g><title> N]&gt;::hash (31 samples, 0.02%)</title><rect x="5.1770%" y="341" width="0.0245%" height="15" fill="rgb(221,135,30)" fg:x="6550" fg:w="31"/><text x="5.4270%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (21 samples, 0.02%)</title><rect x="5.1849%" y="325" width="0.0166%" height="15" fill="rgb(249,193,18)" fg:x="6560" fg:w="21"/><text x="5.4349%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.02%)</title><rect x="5.1857%" y="309" width="0.0158%" height="15" fill="rgb(209,133,39)" fg:x="6561" fg:w="20"/><text x="5.4357%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (67 samples, 0.05%)</title><rect x="5.1556%" y="421" width="0.0530%" height="15" fill="rgb(232,100,14)" fg:x="6523" fg:w="67"/><text x="5.4056%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (35 samples, 0.03%)</title><rect x="5.2307%" y="325" width="0.0277%" height="15" fill="rgb(224,185,1)" fg:x="6618" fg:w="35"/><text x="5.4807%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (29 samples, 0.02%)</title><rect x="5.2355%" y="309" width="0.0229%" height="15" fill="rgb(223,139,8)" fg:x="6624" fg:w="29"/><text x="5.4855%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (17 samples, 0.01%)</title><rect x="5.2623%" y="245" width="0.0134%" height="15" fill="rgb(232,213,38)" fg:x="6658" fg:w="17"/><text x="5.5123%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (17 samples, 0.01%)</title><rect x="5.2623%" y="229" width="0.0134%" height="15" fill="rgb(207,94,22)" fg:x="6658" fg:w="17"/><text x="5.5123%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="5.2623%" y="213" width="0.0134%" height="15" fill="rgb(219,183,54)" fg:x="6658" fg:w="17"/><text x="5.5123%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.01%)</title><rect x="5.2805%" y="213" width="0.0126%" height="15" fill="rgb(216,185,54)" fg:x="6681" fg:w="16"/><text x="5.5305%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (44 samples, 0.03%)</title><rect x="5.2607%" y="325" width="0.0348%" height="15" fill="rgb(254,217,39)" fg:x="6656" fg:w="44"/><text x="5.5107%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (44 samples, 0.03%)</title><rect x="5.2607%" y="309" width="0.0348%" height="15" fill="rgb(240,178,23)" fg:x="6656" fg:w="44"/><text x="5.5107%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (44 samples, 0.03%)</title><rect x="5.2607%" y="293" width="0.0348%" height="15" fill="rgb(218,11,47)" fg:x="6656" fg:w="44"/><text x="5.5107%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (42 samples, 0.03%)</title><rect x="5.2623%" y="277" width="0.0332%" height="15" fill="rgb(218,51,51)" fg:x="6658" fg:w="42"/><text x="5.5123%" y="287.50"></text></g><g><title> N]&gt;::hash (42 samples, 0.03%)</title><rect x="5.2623%" y="261" width="0.0332%" height="15" fill="rgb(238,126,27)" fg:x="6658" fg:w="42"/><text x="5.5123%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (25 samples, 0.02%)</title><rect x="5.2758%" y="245" width="0.0198%" height="15" fill="rgb(249,202,22)" fg:x="6675" fg:w="25"/><text x="5.5258%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="5.2766%" y="229" width="0.0190%" height="15" fill="rgb(254,195,49)" fg:x="6676" fg:w="24"/><text x="5.5266%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (98 samples, 0.08%)</title><rect x="5.2283%" y="373" width="0.0775%" height="15" fill="rgb(208,123,14)" fg:x="6615" fg:w="98"/><text x="5.4783%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (96 samples, 0.08%)</title><rect x="5.2299%" y="357" width="0.0759%" height="15" fill="rgb(224,200,8)" fg:x="6617" fg:w="96"/><text x="5.4799%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (95 samples, 0.08%)</title><rect x="5.2307%" y="341" width="0.0751%" height="15" fill="rgb(217,61,36)" fg:x="6618" fg:w="95"/><text x="5.4807%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.01%)</title><rect x="5.2955%" y="325" width="0.0103%" height="15" fill="rgb(206,35,45)" fg:x="6700" fg:w="13"/><text x="5.5455%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (16 samples, 0.01%)</title><rect x="5.3113%" y="341" width="0.0126%" height="15" fill="rgb(217,65,33)" fg:x="6720" fg:w="16"/><text x="5.5613%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (29 samples, 0.02%)</title><rect x="5.3058%" y="373" width="0.0229%" height="15" fill="rgb(222,158,48)" fg:x="6713" fg:w="29"/><text x="5.5558%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (29 samples, 0.02%)</title><rect x="5.3058%" y="357" width="0.0229%" height="15" fill="rgb(254,2,54)" fg:x="6713" fg:w="29"/><text x="5.5558%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (154 samples, 0.12%)</title><rect x="5.2133%" y="405" width="0.1217%" height="15" fill="rgb(250,143,38)" fg:x="6596" fg:w="154"/><text x="5.4633%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (147 samples, 0.12%)</title><rect x="5.2189%" y="389" width="0.1162%" height="15" fill="rgb(248,25,0)" fg:x="6603" fg:w="147"/><text x="5.4689%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (43 samples, 0.03%)</title><rect x="5.3350%" y="405" width="0.0340%" height="15" fill="rgb(206,152,27)" fg:x="6750" fg:w="43"/><text x="5.5850%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (201 samples, 0.16%)</title><rect x="5.2110%" y="421" width="0.1589%" height="15" fill="rgb(240,77,30)" fg:x="6593" fg:w="201"/><text x="5.4610%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (278 samples, 0.22%)</title><rect x="5.1525%" y="453" width="0.2197%" height="15" fill="rgb(231,5,3)" fg:x="6519" fg:w="278"/><text x="5.4025%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (277 samples, 0.22%)</title><rect x="5.1533%" y="437" width="0.2189%" height="15" fill="rgb(207,226,32)" fg:x="6520" fg:w="277"/><text x="5.4033%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::ids (415 samples, 0.33%)</title><rect x="5.0450%" y="725" width="0.3280%" height="15" fill="rgb(222,207,47)" fg:x="6383" fg:w="415"/><text x="5.2950%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (415 samples, 0.33%)</title><rect x="5.0450%" y="709" width="0.3280%" height="15" fill="rgb(229,115,45)" fg:x="6383" fg:w="415"/><text x="5.2950%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (296 samples, 0.23%)</title><rect x="5.1390%" y="693" width="0.2340%" height="15" fill="rgb(224,191,6)" fg:x="6502" fg:w="296"/><text x="5.3890%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (296 samples, 0.23%)</title><rect x="5.1390%" y="677" width="0.2340%" height="15" fill="rgb(230,227,24)" fg:x="6502" fg:w="296"/><text x="5.3890%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (296 samples, 0.23%)</title><rect x="5.1390%" y="661" width="0.2340%" height="15" fill="rgb(228,80,19)" fg:x="6502" fg:w="296"/><text x="5.3890%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (296 samples, 0.23%)</title><rect x="5.1390%" y="645" width="0.2340%" height="15" fill="rgb(247,229,0)" fg:x="6502" fg:w="296"/><text x="5.3890%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (296 samples, 0.23%)</title><rect x="5.1390%" y="629" width="0.2340%" height="15" fill="rgb(237,194,15)" fg:x="6502" fg:w="296"/><text x="5.3890%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (296 samples, 0.23%)</title><rect x="5.1390%" y="613" width="0.2340%" height="15" fill="rgb(219,203,20)" fg:x="6502" fg:w="296"/><text x="5.3890%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (296 samples, 0.23%)</title><rect x="5.1390%" y="597" width="0.2340%" height="15" fill="rgb(234,128,8)" fg:x="6502" fg:w="296"/><text x="5.3890%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (296 samples, 0.23%)</title><rect x="5.1390%" y="581" width="0.2340%" height="15" fill="rgb(248,202,8)" fg:x="6502" fg:w="296"/><text x="5.3890%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (296 samples, 0.23%)</title><rect x="5.1390%" y="565" width="0.2340%" height="15" fill="rgb(206,104,37)" fg:x="6502" fg:w="296"/><text x="5.3890%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (296 samples, 0.23%)</title><rect x="5.1390%" y="549" width="0.2340%" height="15" fill="rgb(223,8,27)" fg:x="6502" fg:w="296"/><text x="5.3890%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (296 samples, 0.23%)</title><rect x="5.1390%" y="533" width="0.2340%" height="15" fill="rgb(216,217,28)" fg:x="6502" fg:w="296"/><text x="5.3890%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (284 samples, 0.22%)</title><rect x="5.1485%" y="517" width="0.2245%" height="15" fill="rgb(249,199,1)" fg:x="6514" fg:w="284"/><text x="5.3985%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (284 samples, 0.22%)</title><rect x="5.1485%" y="501" width="0.2245%" height="15" fill="rgb(240,85,17)" fg:x="6514" fg:w="284"/><text x="5.3985%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (280 samples, 0.22%)</title><rect x="5.1517%" y="485" width="0.2213%" height="15" fill="rgb(206,108,45)" fg:x="6518" fg:w="280"/><text x="5.4017%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (279 samples, 0.22%)</title><rect x="5.1525%" y="469" width="0.2205%" height="15" fill="rgb(245,210,41)" fg:x="6519" fg:w="279"/><text x="5.4025%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="5.3738%" y="549" width="0.0150%" height="15" fill="rgb(206,13,37)" fg:x="6799" fg:w="19"/><text x="5.6238%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="5.3777%" y="533" width="0.0111%" height="15" fill="rgb(250,61,18)" fg:x="6804" fg:w="14"/><text x="5.6277%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (28 samples, 0.02%)</title><rect x="5.3999%" y="421" width="0.0221%" height="15" fill="rgb(235,172,48)" fg:x="6832" fg:w="28"/><text x="5.6499%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (22 samples, 0.02%)</title><rect x="5.4046%" y="405" width="0.0174%" height="15" fill="rgb(249,201,17)" fg:x="6838" fg:w="22"/><text x="5.6546%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (18 samples, 0.01%)</title><rect x="5.4315%" y="341" width="0.0142%" height="15" fill="rgb(219,208,6)" fg:x="6872" fg:w="18"/><text x="5.6815%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (18 samples, 0.01%)</title><rect x="5.4315%" y="325" width="0.0142%" height="15" fill="rgb(248,31,23)" fg:x="6872" fg:w="18"/><text x="5.6815%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="5.4323%" y="309" width="0.0134%" height="15" fill="rgb(245,15,42)" fg:x="6873" fg:w="17"/><text x="5.6823%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (32 samples, 0.03%)</title><rect x="5.4315%" y="373" width="0.0253%" height="15" fill="rgb(222,217,39)" fg:x="6872" fg:w="32"/><text x="5.6815%" y="383.50"></text></g><g><title> N]&gt;::hash (32 samples, 0.03%)</title><rect x="5.4315%" y="357" width="0.0253%" height="15" fill="rgb(210,219,27)" fg:x="6872" fg:w="32"/><text x="5.6815%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (14 samples, 0.01%)</title><rect x="5.4457%" y="341" width="0.0111%" height="15" fill="rgb(252,166,36)" fg:x="6890" fg:w="14"/><text x="5.6957%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="5.4465%" y="325" width="0.0103%" height="15" fill="rgb(245,132,34)" fg:x="6891" fg:w="13"/><text x="5.6965%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.03%)</title><rect x="5.4299%" y="421" width="0.0277%" height="15" fill="rgb(236,54,3)" fg:x="6870" fg:w="35"/><text x="5.6799%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (34 samples, 0.03%)</title><rect x="5.4307%" y="405" width="0.0269%" height="15" fill="rgb(241,173,43)" fg:x="6871" fg:w="34"/><text x="5.6807%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (34 samples, 0.03%)</title><rect x="5.4307%" y="389" width="0.0269%" height="15" fill="rgb(215,190,9)" fg:x="6871" fg:w="34"/><text x="5.6807%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (82 samples, 0.06%)</title><rect x="5.3999%" y="437" width="0.0648%" height="15" fill="rgb(242,101,16)" fg:x="6832" fg:w="82"/><text x="5.6499%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (36 samples, 0.03%)</title><rect x="5.4900%" y="341" width="0.0285%" height="15" fill="rgb(223,190,21)" fg:x="6946" fg:w="36"/><text x="5.7400%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (29 samples, 0.02%)</title><rect x="5.4955%" y="325" width="0.0229%" height="15" fill="rgb(215,228,25)" fg:x="6953" fg:w="29"/><text x="5.7455%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.01%)</title><rect x="5.5239%" y="213" width="0.0111%" height="15" fill="rgb(225,36,22)" fg:x="6989" fg:w="14"/><text x="5.7739%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (21 samples, 0.02%)</title><rect x="5.5224%" y="261" width="0.0166%" height="15" fill="rgb(251,106,46)" fg:x="6987" fg:w="21"/><text x="5.7724%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (21 samples, 0.02%)</title><rect x="5.5224%" y="245" width="0.0166%" height="15" fill="rgb(208,90,1)" fg:x="6987" fg:w="21"/><text x="5.7724%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="5.5224%" y="229" width="0.0166%" height="15" fill="rgb(243,10,4)" fg:x="6987" fg:w="21"/><text x="5.7724%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.01%)</title><rect x="5.5421%" y="229" width="0.0119%" height="15" fill="rgb(212,137,27)" fg:x="7012" fg:w="15"/><text x="5.7921%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (44 samples, 0.03%)</title><rect x="5.5224%" y="341" width="0.0348%" height="15" fill="rgb(231,220,49)" fg:x="6987" fg:w="44"/><text x="5.7724%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (44 samples, 0.03%)</title><rect x="5.5224%" y="325" width="0.0348%" height="15" fill="rgb(237,96,20)" fg:x="6987" fg:w="44"/><text x="5.7724%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (44 samples, 0.03%)</title><rect x="5.5224%" y="309" width="0.0348%" height="15" fill="rgb(239,229,30)" fg:x="6987" fg:w="44"/><text x="5.7724%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (44 samples, 0.03%)</title><rect x="5.5224%" y="293" width="0.0348%" height="15" fill="rgb(219,65,33)" fg:x="6987" fg:w="44"/><text x="5.7724%" y="303.50"></text></g><g><title> N]&gt;::hash (44 samples, 0.03%)</title><rect x="5.5224%" y="277" width="0.0348%" height="15" fill="rgb(243,134,7)" fg:x="6987" fg:w="44"/><text x="5.7724%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (23 samples, 0.02%)</title><rect x="5.5390%" y="261" width="0.0182%" height="15" fill="rgb(216,177,54)" fg:x="7008" fg:w="23"/><text x="5.7890%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 0.02%)</title><rect x="5.5390%" y="245" width="0.0182%" height="15" fill="rgb(211,160,20)" fg:x="7008" fg:w="23"/><text x="5.7890%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (101 samples, 0.08%)</title><rect x="5.4844%" y="389" width="0.0798%" height="15" fill="rgb(239,85,39)" fg:x="6939" fg:w="101"/><text x="5.7344%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (98 samples, 0.08%)</title><rect x="5.4868%" y="373" width="0.0775%" height="15" fill="rgb(232,125,22)" fg:x="6942" fg:w="98"/><text x="5.7368%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (96 samples, 0.08%)</title><rect x="5.4884%" y="357" width="0.0759%" height="15" fill="rgb(244,57,34)" fg:x="6944" fg:w="96"/><text x="5.7384%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (30 samples, 0.02%)</title><rect x="5.5642%" y="389" width="0.0237%" height="15" fill="rgb(214,203,32)" fg:x="7040" fg:w="30"/><text x="5.8142%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (25 samples, 0.02%)</title><rect x="5.5682%" y="373" width="0.0198%" height="15" fill="rgb(207,58,43)" fg:x="7045" fg:w="25"/><text x="5.8182%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (157 samples, 0.12%)</title><rect x="5.4662%" y="421" width="0.1241%" height="15" fill="rgb(215,193,15)" fg:x="6916" fg:w="157"/><text x="5.7162%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (151 samples, 0.12%)</title><rect x="5.4710%" y="405" width="0.1193%" height="15" fill="rgb(232,15,44)" fg:x="6922" fg:w="151"/><text x="5.7210%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (35 samples, 0.03%)</title><rect x="5.5903%" y="421" width="0.0277%" height="15" fill="rgb(212,3,48)" fg:x="7073" fg:w="35"/><text x="5.8403%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (194 samples, 0.15%)</title><rect x="5.4655%" y="437" width="0.1533%" height="15" fill="rgb(218,128,7)" fg:x="6915" fg:w="194"/><text x="5.7155%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (288 samples, 0.23%)</title><rect x="5.3959%" y="469" width="0.2276%" height="15" fill="rgb(226,216,39)" fg:x="6827" fg:w="288"/><text x="5.6459%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (286 samples, 0.23%)</title><rect x="5.3975%" y="453" width="0.2260%" height="15" fill="rgb(243,47,51)" fg:x="6829" fg:w="286"/><text x="5.6475%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (290 samples, 0.23%)</title><rect x="5.3959%" y="501" width="0.2292%" height="15" fill="rgb(241,183,40)" fg:x="6827" fg:w="290"/><text x="5.6459%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (290 samples, 0.23%)</title><rect x="5.3959%" y="485" width="0.2292%" height="15" fill="rgb(231,217,32)" fg:x="6827" fg:w="290"/><text x="5.6459%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (301 samples, 0.24%)</title><rect x="5.3888%" y="549" width="0.2379%" height="15" fill="rgb(229,61,38)" fg:x="6818" fg:w="301"/><text x="5.6388%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (300 samples, 0.24%)</title><rect x="5.3896%" y="533" width="0.2371%" height="15" fill="rgb(225,210,5)" fg:x="6819" fg:w="300"/><text x="5.6396%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (299 samples, 0.24%)</title><rect x="5.3904%" y="517" width="0.2363%" height="15" fill="rgb(231,79,45)" fg:x="6820" fg:w="299"/><text x="5.6404%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (322 samples, 0.25%)</title><rect x="5.3730%" y="693" width="0.2545%" height="15" fill="rgb(224,100,7)" fg:x="6798" fg:w="322"/><text x="5.6230%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (322 samples, 0.25%)</title><rect x="5.3730%" y="677" width="0.2545%" height="15" fill="rgb(241,198,18)" fg:x="6798" fg:w="322"/><text x="5.6230%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (322 samples, 0.25%)</title><rect x="5.3730%" y="661" width="0.2545%" height="15" fill="rgb(252,97,53)" fg:x="6798" fg:w="322"/><text x="5.6230%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (322 samples, 0.25%)</title><rect x="5.3730%" y="645" width="0.2545%" height="15" fill="rgb(220,88,7)" fg:x="6798" fg:w="322"/><text x="5.6230%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (322 samples, 0.25%)</title><rect x="5.3730%" y="629" width="0.2545%" height="15" fill="rgb(213,176,14)" fg:x="6798" fg:w="322"/><text x="5.6230%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (322 samples, 0.25%)</title><rect x="5.3730%" y="613" width="0.2545%" height="15" fill="rgb(246,73,7)" fg:x="6798" fg:w="322"/><text x="5.6230%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (322 samples, 0.25%)</title><rect x="5.3730%" y="597" width="0.2545%" height="15" fill="rgb(245,64,36)" fg:x="6798" fg:w="322"/><text x="5.6230%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (322 samples, 0.25%)</title><rect x="5.3730%" y="581" width="0.2545%" height="15" fill="rgb(245,80,10)" fg:x="6798" fg:w="322"/><text x="5.6230%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (322 samples, 0.25%)</title><rect x="5.3730%" y="565" width="0.2545%" height="15" fill="rgb(232,107,50)" fg:x="6798" fg:w="322"/><text x="5.6230%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (738 samples, 0.58%)</title><rect x="5.0450%" y="773" width="0.5833%" height="15" fill="rgb(253,3,0)" fg:x="6383" fg:w="738"/><text x="5.2950%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (738 samples, 0.58%)</title><rect x="5.0450%" y="757" width="0.5833%" height="15" fill="rgb(212,99,53)" fg:x="6383" fg:w="738"/><text x="5.2950%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (738 samples, 0.58%)</title><rect x="5.0450%" y="741" width="0.5833%" height="15" fill="rgb(249,111,54)" fg:x="6383" fg:w="738"/><text x="5.2950%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (323 samples, 0.26%)</title><rect x="5.3730%" y="725" width="0.2553%" height="15" fill="rgb(249,55,30)" fg:x="6798" fg:w="323"/><text x="5.6230%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (323 samples, 0.26%)</title><rect x="5.3730%" y="709" width="0.2553%" height="15" fill="rgb(237,47,42)" fg:x="6798" fg:w="323"/><text x="5.6230%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.02%)</title><rect x="5.6433%" y="469" width="0.0198%" height="15" fill="rgb(211,20,18)" fg:x="7140" fg:w="25"/><text x="5.8933%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.02%)</title><rect x="5.6472%" y="453" width="0.0158%" height="15" fill="rgb(231,203,46)" fg:x="7145" fg:w="20"/><text x="5.8972%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.01%)</title><rect x="5.6757%" y="373" width="0.0134%" height="15" fill="rgb(237,142,3)" fg:x="7181" fg:w="17"/><text x="5.9257%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (32 samples, 0.03%)</title><rect x="5.6654%" y="469" width="0.0253%" height="15" fill="rgb(241,107,1)" fg:x="7168" fg:w="32"/><text x="5.9154%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (32 samples, 0.03%)</title><rect x="5.6654%" y="453" width="0.0253%" height="15" fill="rgb(229,83,13)" fg:x="7168" fg:w="32"/><text x="5.9154%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (32 samples, 0.03%)</title><rect x="5.6654%" y="437" width="0.0253%" height="15" fill="rgb(241,91,40)" fg:x="7168" fg:w="32"/><text x="5.9154%" y="447.50"></text></g><g><title> N]&gt;::hash (32 samples, 0.03%)</title><rect x="5.6654%" y="421" width="0.0253%" height="15" fill="rgb(225,3,45)" fg:x="7168" fg:w="32"/><text x="5.9154%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (21 samples, 0.02%)</title><rect x="5.6741%" y="405" width="0.0166%" height="15" fill="rgb(244,223,14)" fg:x="7179" fg:w="21"/><text x="5.9241%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="5.6741%" y="389" width="0.0166%" height="15" fill="rgb(224,124,37)" fg:x="7179" fg:w="21"/><text x="5.9241%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (66 samples, 0.05%)</title><rect x="5.6433%" y="485" width="0.0522%" height="15" fill="rgb(251,171,30)" fg:x="7140" fg:w="66"/><text x="5.8933%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (34 samples, 0.03%)</title><rect x="5.6955%" y="485" width="0.0269%" height="15" fill="rgb(236,46,54)" fg:x="7206" fg:w="34"/><text x="5.9455%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (30 samples, 0.02%)</title><rect x="5.6986%" y="469" width="0.0237%" height="15" fill="rgb(245,213,5)" fg:x="7210" fg:w="30"/><text x="5.9486%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (111 samples, 0.09%)</title><rect x="5.6385%" y="501" width="0.0877%" height="15" fill="rgb(230,144,27)" fg:x="7134" fg:w="111"/><text x="5.8885%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (115 samples, 0.09%)</title><rect x="5.6362%" y="517" width="0.0909%" height="15" fill="rgb(220,86,6)" fg:x="7131" fg:w="115"/><text x="5.8862%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (121 samples, 0.10%)</title><rect x="5.6322%" y="565" width="0.0956%" height="15" fill="rgb(240,20,13)" fg:x="7126" fg:w="121"/><text x="5.8822%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (119 samples, 0.09%)</title><rect x="5.6338%" y="549" width="0.0941%" height="15" fill="rgb(217,89,34)" fg:x="7128" fg:w="119"/><text x="5.8838%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (116 samples, 0.09%)</title><rect x="5.6362%" y="533" width="0.0917%" height="15" fill="rgb(229,13,5)" fg:x="7131" fg:w="116"/><text x="5.8862%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (123 samples, 0.10%)</title><rect x="5.6314%" y="581" width="0.0972%" height="15" fill="rgb(244,67,35)" fg:x="7125" fg:w="123"/><text x="5.8814%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (126 samples, 0.10%)</title><rect x="5.6299%" y="597" width="0.0996%" height="15" fill="rgb(221,40,2)" fg:x="7123" fg:w="126"/><text x="5.8799%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (133 samples, 0.11%)</title><rect x="5.6283%" y="773" width="0.1051%" height="15" fill="rgb(237,157,21)" fg:x="7121" fg:w="133"/><text x="5.8783%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (133 samples, 0.11%)</title><rect x="5.6283%" y="757" width="0.1051%" height="15" fill="rgb(222,94,11)" fg:x="7121" fg:w="133"/><text x="5.8783%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (133 samples, 0.11%)</title><rect x="5.6283%" y="741" width="0.1051%" height="15" fill="rgb(249,113,6)" fg:x="7121" fg:w="133"/><text x="5.8783%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (133 samples, 0.11%)</title><rect x="5.6283%" y="725" width="0.1051%" height="15" fill="rgb(238,137,36)" fg:x="7121" fg:w="133"/><text x="5.8783%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (133 samples, 0.11%)</title><rect x="5.6283%" y="709" width="0.1051%" height="15" fill="rgb(210,102,26)" fg:x="7121" fg:w="133"/><text x="5.8783%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (133 samples, 0.11%)</title><rect x="5.6283%" y="693" width="0.1051%" height="15" fill="rgb(218,30,30)" fg:x="7121" fg:w="133"/><text x="5.8783%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (133 samples, 0.11%)</title><rect x="5.6283%" y="677" width="0.1051%" height="15" fill="rgb(214,67,26)" fg:x="7121" fg:w="133"/><text x="5.8783%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (133 samples, 0.11%)</title><rect x="5.6283%" y="661" width="0.1051%" height="15" fill="rgb(251,9,53)" fg:x="7121" fg:w="133"/><text x="5.8783%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (133 samples, 0.11%)</title><rect x="5.6283%" y="645" width="0.1051%" height="15" fill="rgb(228,204,25)" fg:x="7121" fg:w="133"/><text x="5.8783%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (133 samples, 0.11%)</title><rect x="5.6283%" y="629" width="0.1051%" height="15" fill="rgb(207,153,8)" fg:x="7121" fg:w="133"/><text x="5.8783%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (131 samples, 0.10%)</title><rect x="5.6299%" y="613" width="0.1035%" height="15" fill="rgb(242,9,16)" fg:x="7123" fg:w="131"/><text x="5.8799%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids (872 samples, 0.69%)</title><rect x="5.0450%" y="789" width="0.6892%" height="15" fill="rgb(217,211,10)" fg:x="6383" fg:w="872"/><text x="5.2950%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_all_files_same_owner_as_parent (2,445 samples, 1.93%)</title><rect x="3.8025%" y="805" width="1.9325%" height="15" fill="rgb(219,228,52)" fg:x="4811" fg:w="2445"/><text x="4.0525%" y="815.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_changes_authorized (13 samples, 0.01%)</title><rect x="5.7350%" y="805" width="0.0103%" height="15" fill="rgb(231,92,29)" fg:x="7256" fg:w="13"/><text x="5.9850%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="5.7555%" y="757" width="0.0103%" height="15" fill="rgb(232,8,23)" fg:x="7282" fg:w="13"/><text x="6.0055%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.01%)</title><rect x="5.7524%" y="789" width="0.0142%" height="15" fill="rgb(216,211,34)" fg:x="7278" fg:w="18"/><text x="6.0024%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.01%)</title><rect x="5.7524%" y="773" width="0.0142%" height="15" fill="rgb(236,151,0)" fg:x="7278" fg:w="18"/><text x="6.0024%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (30 samples, 0.02%)</title><rect x="5.7729%" y="581" width="0.0237%" height="15" fill="rgb(209,168,3)" fg:x="7304" fg:w="30"/><text x="6.0229%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21 samples, 0.02%)</title><rect x="5.7800%" y="565" width="0.0166%" height="15" fill="rgb(208,129,28)" fg:x="7313" fg:w="21"/><text x="6.0300%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (34 samples, 0.03%)</title><rect x="5.7990%" y="581" width="0.0269%" height="15" fill="rgb(229,78,22)" fg:x="7337" fg:w="34"/><text x="6.0490%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (34 samples, 0.03%)</title><rect x="5.7990%" y="565" width="0.0269%" height="15" fill="rgb(228,187,13)" fg:x="7337" fg:w="34"/><text x="6.0490%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (34 samples, 0.03%)</title><rect x="5.7990%" y="549" width="0.0269%" height="15" fill="rgb(240,119,24)" fg:x="7337" fg:w="34"/><text x="6.0490%" y="559.50"></text></g><g><title> N]&gt;::hash (34 samples, 0.03%)</title><rect x="5.7990%" y="533" width="0.0269%" height="15" fill="rgb(209,194,42)" fg:x="7337" fg:w="34"/><text x="6.0490%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (19 samples, 0.02%)</title><rect x="5.8108%" y="517" width="0.0150%" height="15" fill="rgb(247,200,46)" fg:x="7352" fg:w="19"/><text x="6.0608%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="5.8108%" y="501" width="0.0150%" height="15" fill="rgb(218,76,16)" fg:x="7352" fg:w="19"/><text x="6.0608%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (69 samples, 0.05%)</title><rect x="5.7729%" y="597" width="0.0545%" height="15" fill="rgb(225,21,48)" fg:x="7304" fg:w="69"/><text x="6.0229%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (111 samples, 0.09%)</title><rect x="5.7721%" y="661" width="0.0877%" height="15" fill="rgb(239,223,50)" fg:x="7303" fg:w="111"/><text x="6.0221%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (111 samples, 0.09%)</title><rect x="5.7721%" y="645" width="0.0877%" height="15" fill="rgb(244,45,21)" fg:x="7303" fg:w="111"/><text x="6.0221%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (111 samples, 0.09%)</title><rect x="5.7721%" y="629" width="0.0877%" height="15" fill="rgb(232,33,43)" fg:x="7303" fg:w="111"/><text x="6.0221%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (111 samples, 0.09%)</title><rect x="5.7721%" y="613" width="0.0877%" height="15" fill="rgb(209,8,3)" fg:x="7303" fg:w="111"/><text x="6.0221%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (41 samples, 0.03%)</title><rect x="5.8274%" y="597" width="0.0324%" height="15" fill="rgb(214,25,53)" fg:x="7373" fg:w="41"/><text x="6.0774%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (31 samples, 0.02%)</title><rect x="5.8353%" y="581" width="0.0245%" height="15" fill="rgb(254,186,54)" fg:x="7383" fg:w="31"/><text x="6.0853%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (116 samples, 0.09%)</title><rect x="5.7705%" y="725" width="0.0917%" height="15" fill="rgb(208,174,49)" fg:x="7301" fg:w="116"/><text x="6.0205%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (114 samples, 0.09%)</title><rect x="5.7721%" y="709" width="0.0901%" height="15" fill="rgb(233,191,51)" fg:x="7303" fg:w="114"/><text x="6.0221%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (114 samples, 0.09%)</title><rect x="5.7721%" y="693" width="0.0901%" height="15" fill="rgb(222,134,10)" fg:x="7303" fg:w="114"/><text x="6.0221%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (114 samples, 0.09%)</title><rect x="5.7721%" y="677" width="0.0901%" height="15" fill="rgb(230,226,20)" fg:x="7303" fg:w="114"/><text x="6.0221%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (123 samples, 0.10%)</title><rect x="5.7674%" y="773" width="0.0972%" height="15" fill="rgb(251,111,25)" fg:x="7297" fg:w="123"/><text x="6.0174%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (123 samples, 0.10%)</title><rect x="5.7674%" y="757" width="0.0972%" height="15" fill="rgb(224,40,46)" fg:x="7297" fg:w="123"/><text x="6.0174%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (122 samples, 0.10%)</title><rect x="5.7682%" y="741" width="0.0964%" height="15" fill="rgb(236,108,47)" fg:x="7298" fg:w="122"/><text x="6.0182%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (125 samples, 0.10%)</title><rect x="5.7666%" y="789" width="0.0988%" height="15" fill="rgb(234,93,0)" fg:x="7296" fg:w="125"/><text x="6.0166%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.02%)</title><rect x="5.8757%" y="405" width="0.0198%" height="15" fill="rgb(224,213,32)" fg:x="7434" fg:w="25"/><text x="6.1257%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (22 samples, 0.02%)</title><rect x="5.8780%" y="389" width="0.0174%" height="15" fill="rgb(251,11,48)" fg:x="7437" fg:w="22"/><text x="6.1280%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (24 samples, 0.02%)</title><rect x="5.8970%" y="405" width="0.0190%" height="15" fill="rgb(236,173,5)" fg:x="7461" fg:w="24"/><text x="6.1470%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (24 samples, 0.02%)</title><rect x="5.8970%" y="389" width="0.0190%" height="15" fill="rgb(230,95,12)" fg:x="7461" fg:w="24"/><text x="6.1470%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (24 samples, 0.02%)</title><rect x="5.8970%" y="373" width="0.0190%" height="15" fill="rgb(232,209,1)" fg:x="7461" fg:w="24"/><text x="6.1470%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (23 samples, 0.02%)</title><rect x="5.8978%" y="357" width="0.0182%" height="15" fill="rgb(232,6,1)" fg:x="7462" fg:w="23"/><text x="6.1478%" y="367.50"></text></g><g><title> N]&gt;::hash (23 samples, 0.02%)</title><rect x="5.8978%" y="341" width="0.0182%" height="15" fill="rgb(210,224,50)" fg:x="7462" fg:w="23"/><text x="6.1478%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (16 samples, 0.01%)</title><rect x="5.9033%" y="325" width="0.0126%" height="15" fill="rgb(228,127,35)" fg:x="7469" fg:w="16"/><text x="6.1533%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="5.9033%" y="309" width="0.0126%" height="15" fill="rgb(245,102,45)" fg:x="7469" fg:w="16"/><text x="6.1533%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (61 samples, 0.05%)</title><rect x="5.8757%" y="421" width="0.0482%" height="15" fill="rgb(214,1,49)" fg:x="7434" fg:w="61"/><text x="6.1257%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (34 samples, 0.03%)</title><rect x="5.9270%" y="405" width="0.0269%" height="15" fill="rgb(226,163,40)" fg:x="7499" fg:w="34"/><text x="6.1770%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (36 samples, 0.03%)</title><rect x="5.9262%" y="421" width="0.0285%" height="15" fill="rgb(239,212,28)" fg:x="7498" fg:w="36"/><text x="6.1762%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (108 samples, 0.09%)</title><rect x="5.8725%" y="437" width="0.0854%" height="15" fill="rgb(220,20,13)" fg:x="7430" fg:w="108"/><text x="6.1225%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (111 samples, 0.09%)</title><rect x="5.8709%" y="453" width="0.0877%" height="15" fill="rgb(210,164,35)" fg:x="7428" fg:w="111"/><text x="6.1209%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (114 samples, 0.09%)</title><rect x="5.8693%" y="501" width="0.0901%" height="15" fill="rgb(248,109,41)" fg:x="7426" fg:w="114"/><text x="6.1193%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (113 samples, 0.09%)</title><rect x="5.8701%" y="485" width="0.0893%" height="15" fill="rgb(238,23,50)" fg:x="7427" fg:w="113"/><text x="6.1201%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (112 samples, 0.09%)</title><rect x="5.8709%" y="469" width="0.0885%" height="15" fill="rgb(211,48,49)" fg:x="7428" fg:w="112"/><text x="6.1209%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (118 samples, 0.09%)</title><rect x="5.8678%" y="517" width="0.0933%" height="15" fill="rgb(223,36,21)" fg:x="7424" fg:w="118"/><text x="6.1178%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (125 samples, 0.10%)</title><rect x="5.8654%" y="597" width="0.0988%" height="15" fill="rgb(207,123,46)" fg:x="7421" fg:w="125"/><text x="6.1154%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.10%)</title><rect x="5.8654%" y="581" width="0.0988%" height="15" fill="rgb(240,218,32)" fg:x="7421" fg:w="125"/><text x="6.1154%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.10%)</title><rect x="5.8654%" y="565" width="0.0988%" height="15" fill="rgb(252,5,43)" fg:x="7421" fg:w="125"/><text x="6.1154%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.10%)</title><rect x="5.8654%" y="549" width="0.0988%" height="15" fill="rgb(252,84,19)" fg:x="7421" fg:w="125"/><text x="6.1154%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (124 samples, 0.10%)</title><rect x="5.8662%" y="533" width="0.0980%" height="15" fill="rgb(243,152,39)" fg:x="7422" fg:w="124"/><text x="6.1162%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (126 samples, 0.10%)</title><rect x="5.8654%" y="693" width="0.0996%" height="15" fill="rgb(234,160,15)" fg:x="7421" fg:w="126"/><text x="6.1154%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (126 samples, 0.10%)</title><rect x="5.8654%" y="677" width="0.0996%" height="15" fill="rgb(237,34,20)" fg:x="7421" fg:w="126"/><text x="6.1154%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (126 samples, 0.10%)</title><rect x="5.8654%" y="661" width="0.0996%" height="15" fill="rgb(229,97,13)" fg:x="7421" fg:w="126"/><text x="6.1154%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (126 samples, 0.10%)</title><rect x="5.8654%" y="645" width="0.0996%" height="15" fill="rgb(234,71,50)" fg:x="7421" fg:w="126"/><text x="6.1154%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (126 samples, 0.10%)</title><rect x="5.8654%" y="629" width="0.0996%" height="15" fill="rgb(253,155,4)" fg:x="7421" fg:w="126"/><text x="6.1154%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (126 samples, 0.10%)</title><rect x="5.8654%" y="613" width="0.0996%" height="15" fill="rgb(222,185,37)" fg:x="7421" fg:w="126"/><text x="6.1154%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="5.9673%" y="517" width="0.0111%" height="15" fill="rgb(251,177,13)" fg:x="7550" fg:w="14"/><text x="6.2173%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (23 samples, 0.02%)</title><rect x="5.9918%" y="405" width="0.0182%" height="15" fill="rgb(250,179,40)" fg:x="7581" fg:w="23"/><text x="6.2418%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (19 samples, 0.02%)</title><rect x="5.9950%" y="389" width="0.0150%" height="15" fill="rgb(242,44,2)" fg:x="7585" fg:w="19"/><text x="6.2450%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (18 samples, 0.01%)</title><rect x="6.0171%" y="325" width="0.0142%" height="15" fill="rgb(216,177,13)" fg:x="7613" fg:w="18"/><text x="6.2671%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (18 samples, 0.01%)</title><rect x="6.0171%" y="309" width="0.0142%" height="15" fill="rgb(216,106,43)" fg:x="7613" fg:w="18"/><text x="6.2671%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="6.0179%" y="293" width="0.0134%" height="15" fill="rgb(216,183,2)" fg:x="7614" fg:w="17"/><text x="6.2679%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (34 samples, 0.03%)</title><rect x="6.0156%" y="373" width="0.0269%" height="15" fill="rgb(249,75,3)" fg:x="7611" fg:w="34"/><text x="6.2656%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (33 samples, 0.03%)</title><rect x="6.0163%" y="357" width="0.0261%" height="15" fill="rgb(219,67,39)" fg:x="7612" fg:w="33"/><text x="6.2663%" y="367.50"></text></g><g><title> N]&gt;::hash (33 samples, 0.03%)</title><rect x="6.0163%" y="341" width="0.0261%" height="15" fill="rgb(253,228,2)" fg:x="7612" fg:w="33"/><text x="6.2663%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (14 samples, 0.01%)</title><rect x="6.0314%" y="325" width="0.0111%" height="15" fill="rgb(235,138,27)" fg:x="7631" fg:w="14"/><text x="6.2814%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="6.0314%" y="309" width="0.0111%" height="15" fill="rgb(236,97,51)" fg:x="7631" fg:w="14"/><text x="6.2814%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (36 samples, 0.03%)</title><rect x="6.0148%" y="405" width="0.0285%" height="15" fill="rgb(240,80,30)" fg:x="7610" fg:w="36"/><text x="6.2648%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.03%)</title><rect x="6.0156%" y="389" width="0.0277%" height="15" fill="rgb(230,178,19)" fg:x="7611" fg:w="35"/><text x="6.2656%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (80 samples, 0.06%)</title><rect x="5.9918%" y="421" width="0.0632%" height="15" fill="rgb(210,190,27)" fg:x="7581" fg:w="80"/><text x="6.2418%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.01%)</title><rect x="6.0432%" y="405" width="0.0119%" height="15" fill="rgb(222,107,31)" fg:x="7646" fg:w="15"/><text x="6.2932%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (31 samples, 0.02%)</title><rect x="6.0827%" y="325" width="0.0245%" height="15" fill="rgb(216,127,34)" fg:x="7696" fg:w="31"/><text x="6.3327%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (27 samples, 0.02%)</title><rect x="6.0859%" y="309" width="0.0213%" height="15" fill="rgb(234,116,52)" fg:x="7700" fg:w="27"/><text x="6.3359%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (17 samples, 0.01%)</title><rect x="6.1128%" y="245" width="0.0134%" height="15" fill="rgb(222,124,15)" fg:x="7734" fg:w="17"/><text x="6.3628%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (17 samples, 0.01%)</title><rect x="6.1128%" y="229" width="0.0134%" height="15" fill="rgb(231,179,28)" fg:x="7734" fg:w="17"/><text x="6.3628%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="6.1128%" y="213" width="0.0134%" height="15" fill="rgb(226,93,45)" fg:x="7734" fg:w="17"/><text x="6.3628%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (20 samples, 0.02%)</title><rect x="6.1286%" y="213" width="0.0158%" height="15" fill="rgb(215,8,51)" fg:x="7754" fg:w="20"/><text x="6.3786%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (43 samples, 0.03%)</title><rect x="6.1128%" y="325" width="0.0340%" height="15" fill="rgb(223,106,5)" fg:x="7734" fg:w="43"/><text x="6.3628%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (43 samples, 0.03%)</title><rect x="6.1128%" y="309" width="0.0340%" height="15" fill="rgb(250,191,5)" fg:x="7734" fg:w="43"/><text x="6.3628%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (43 samples, 0.03%)</title><rect x="6.1128%" y="293" width="0.0340%" height="15" fill="rgb(242,132,44)" fg:x="7734" fg:w="43"/><text x="6.3628%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (43 samples, 0.03%)</title><rect x="6.1128%" y="277" width="0.0340%" height="15" fill="rgb(251,152,29)" fg:x="7734" fg:w="43"/><text x="6.3628%" y="287.50"></text></g><g><title> N]&gt;::hash (43 samples, 0.03%)</title><rect x="6.1128%" y="261" width="0.0340%" height="15" fill="rgb(218,179,5)" fg:x="7734" fg:w="43"/><text x="6.3628%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (26 samples, 0.02%)</title><rect x="6.1262%" y="245" width="0.0205%" height="15" fill="rgb(227,67,19)" fg:x="7751" fg:w="26"/><text x="6.3762%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (25 samples, 0.02%)</title><rect x="6.1270%" y="229" width="0.0198%" height="15" fill="rgb(233,119,31)" fg:x="7752" fg:w="25"/><text x="6.3770%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (92 samples, 0.07%)</title><rect x="6.0796%" y="373" width="0.0727%" height="15" fill="rgb(241,120,22)" fg:x="7692" fg:w="92"/><text x="6.3296%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (89 samples, 0.07%)</title><rect x="6.0819%" y="357" width="0.0703%" height="15" fill="rgb(224,102,30)" fg:x="7695" fg:w="89"/><text x="6.3319%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (88 samples, 0.07%)</title><rect x="6.0827%" y="341" width="0.0696%" height="15" fill="rgb(210,164,37)" fg:x="7696" fg:w="88"/><text x="6.3327%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (16 samples, 0.01%)</title><rect x="6.1634%" y="341" width="0.0126%" height="15" fill="rgb(226,191,16)" fg:x="7798" fg:w="16"/><text x="6.4134%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (32 samples, 0.03%)</title><rect x="6.1562%" y="357" width="0.0253%" height="15" fill="rgb(214,40,45)" fg:x="7789" fg:w="32"/><text x="6.4062%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (38 samples, 0.03%)</title><rect x="6.1523%" y="373" width="0.0300%" height="15" fill="rgb(244,29,26)" fg:x="7784" fg:w="38"/><text x="6.4023%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (167 samples, 0.13%)</title><rect x="6.0598%" y="405" width="0.1320%" height="15" fill="rgb(216,16,5)" fg:x="7667" fg:w="167"/><text x="6.3098%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (162 samples, 0.13%)</title><rect x="6.0638%" y="389" width="0.1280%" height="15" fill="rgb(249,76,35)" fg:x="7672" fg:w="162"/><text x="6.3138%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (209 samples, 0.17%)</title><rect x="6.0574%" y="421" width="0.1652%" height="15" fill="rgb(207,11,44)" fg:x="7664" fg:w="209"/><text x="6.3074%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (39 samples, 0.03%)</title><rect x="6.1918%" y="405" width="0.0308%" height="15" fill="rgb(228,190,49)" fg:x="7834" fg:w="39"/><text x="6.4418%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (301 samples, 0.24%)</title><rect x="5.9887%" y="437" width="0.2379%" height="15" fill="rgb(214,173,12)" fg:x="7577" fg:w="301"/><text x="6.2387%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::ids (458 samples, 0.36%)</title><rect x="5.8654%" y="725" width="0.3620%" height="15" fill="rgb(218,26,35)" fg:x="7421" fg:w="458"/><text x="6.1154%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (458 samples, 0.36%)</title><rect x="5.8654%" y="709" width="0.3620%" height="15" fill="rgb(220,200,19)" fg:x="7421" fg:w="458"/><text x="6.1154%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (332 samples, 0.26%)</title><rect x="5.9650%" y="693" width="0.2624%" height="15" fill="rgb(239,95,49)" fg:x="7547" fg:w="332"/><text x="6.2150%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (332 samples, 0.26%)</title><rect x="5.9650%" y="677" width="0.2624%" height="15" fill="rgb(235,85,53)" fg:x="7547" fg:w="332"/><text x="6.2150%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (332 samples, 0.26%)</title><rect x="5.9650%" y="661" width="0.2624%" height="15" fill="rgb(233,133,31)" fg:x="7547" fg:w="332"/><text x="6.2150%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (332 samples, 0.26%)</title><rect x="5.9650%" y="645" width="0.2624%" height="15" fill="rgb(218,25,20)" fg:x="7547" fg:w="332"/><text x="6.2150%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (332 samples, 0.26%)</title><rect x="5.9650%" y="629" width="0.2624%" height="15" fill="rgb(252,210,38)" fg:x="7547" fg:w="332"/><text x="6.2150%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (332 samples, 0.26%)</title><rect x="5.9650%" y="613" width="0.2624%" height="15" fill="rgb(242,134,21)" fg:x="7547" fg:w="332"/><text x="6.2150%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (332 samples, 0.26%)</title><rect x="5.9650%" y="597" width="0.2624%" height="15" fill="rgb(213,28,48)" fg:x="7547" fg:w="332"/><text x="6.2150%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (332 samples, 0.26%)</title><rect x="5.9650%" y="581" width="0.2624%" height="15" fill="rgb(250,196,2)" fg:x="7547" fg:w="332"/><text x="6.2150%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (332 samples, 0.26%)</title><rect x="5.9650%" y="565" width="0.2624%" height="15" fill="rgb(227,5,17)" fg:x="7547" fg:w="332"/><text x="6.2150%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (332 samples, 0.26%)</title><rect x="5.9650%" y="549" width="0.2624%" height="15" fill="rgb(221,226,24)" fg:x="7547" fg:w="332"/><text x="6.2150%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (331 samples, 0.26%)</title><rect x="5.9658%" y="533" width="0.2616%" height="15" fill="rgb(211,5,48)" fg:x="7548" fg:w="331"/><text x="6.2158%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (315 samples, 0.25%)</title><rect x="5.9784%" y="517" width="0.2490%" height="15" fill="rgb(219,150,6)" fg:x="7564" fg:w="315"/><text x="6.2284%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (315 samples, 0.25%)</title><rect x="5.9784%" y="501" width="0.2490%" height="15" fill="rgb(251,46,16)" fg:x="7564" fg:w="315"/><text x="6.2284%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (306 samples, 0.24%)</title><rect x="5.9855%" y="485" width="0.2419%" height="15" fill="rgb(220,204,40)" fg:x="7573" fg:w="306"/><text x="6.2355%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (305 samples, 0.24%)</title><rect x="5.9863%" y="469" width="0.2411%" height="15" fill="rgb(211,85,2)" fg:x="7574" fg:w="305"/><text x="6.2363%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (305 samples, 0.24%)</title><rect x="5.9863%" y="453" width="0.2411%" height="15" fill="rgb(229,17,7)" fg:x="7574" fg:w="305"/><text x="6.2363%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.02%)</title><rect x="6.2479%" y="421" width="0.0166%" height="15" fill="rgb(239,72,28)" fg:x="7905" fg:w="21"/><text x="6.4979%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (19 samples, 0.02%)</title><rect x="6.2495%" y="405" width="0.0150%" height="15" fill="rgb(230,47,54)" fg:x="7907" fg:w="19"/><text x="6.4995%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.01%)</title><rect x="6.2787%" y="309" width="0.0134%" height="15" fill="rgb(214,50,8)" fg:x="7944" fg:w="17"/><text x="6.5287%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (34 samples, 0.03%)</title><rect x="6.2685%" y="389" width="0.0269%" height="15" fill="rgb(216,198,43)" fg:x="7931" fg:w="34"/><text x="6.5185%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (34 samples, 0.03%)</title><rect x="6.2685%" y="373" width="0.0269%" height="15" fill="rgb(234,20,35)" fg:x="7931" fg:w="34"/><text x="6.5185%" y="383.50"></text></g><g><title> N]&gt;::hash (34 samples, 0.03%)</title><rect x="6.2685%" y="357" width="0.0269%" height="15" fill="rgb(254,45,19)" fg:x="7931" fg:w="34"/><text x="6.5185%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (24 samples, 0.02%)</title><rect x="6.2764%" y="341" width="0.0190%" height="15" fill="rgb(219,14,44)" fg:x="7941" fg:w="24"/><text x="6.5264%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="6.2764%" y="325" width="0.0190%" height="15" fill="rgb(217,220,26)" fg:x="7941" fg:w="24"/><text x="6.5264%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.03%)</title><rect x="6.2685%" y="421" width="0.0277%" height="15" fill="rgb(213,158,28)" fg:x="7931" fg:w="35"/><text x="6.5185%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.03%)</title><rect x="6.2685%" y="405" width="0.0277%" height="15" fill="rgb(252,51,52)" fg:x="7931" fg:w="35"/><text x="6.5185%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (70 samples, 0.06%)</title><rect x="6.2479%" y="437" width="0.0553%" height="15" fill="rgb(246,89,16)" fg:x="7905" fg:w="70"/><text x="6.4979%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.02%)</title><rect x="6.3293%" y="341" width="0.0205%" height="15" fill="rgb(216,158,49)" fg:x="8008" fg:w="26"/><text x="6.5793%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (19 samples, 0.02%)</title><rect x="6.3349%" y="325" width="0.0150%" height="15" fill="rgb(236,107,19)" fg:x="8015" fg:w="19"/><text x="6.5849%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (19 samples, 0.02%)</title><rect x="6.3538%" y="261" width="0.0150%" height="15" fill="rgb(228,185,30)" fg:x="8039" fg:w="19"/><text x="6.6038%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (19 samples, 0.02%)</title><rect x="6.3538%" y="245" width="0.0150%" height="15" fill="rgb(246,134,8)" fg:x="8039" fg:w="19"/><text x="6.6038%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="6.3538%" y="229" width="0.0150%" height="15" fill="rgb(214,143,50)" fg:x="8039" fg:w="19"/><text x="6.6038%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.01%)</title><rect x="6.3728%" y="229" width="0.0126%" height="15" fill="rgb(228,75,8)" fg:x="8063" fg:w="16"/><text x="6.6228%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (43 samples, 0.03%)</title><rect x="6.3530%" y="309" width="0.0340%" height="15" fill="rgb(207,175,4)" fg:x="8038" fg:w="43"/><text x="6.6030%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (43 samples, 0.03%)</title><rect x="6.3530%" y="293" width="0.0340%" height="15" fill="rgb(205,108,24)" fg:x="8038" fg:w="43"/><text x="6.6030%" y="303.50"></text></g><g><title> N]&gt;::hash (43 samples, 0.03%)</title><rect x="6.3530%" y="277" width="0.0340%" height="15" fill="rgb(244,120,49)" fg:x="8038" fg:w="43"/><text x="6.6030%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (23 samples, 0.02%)</title><rect x="6.3689%" y="261" width="0.0182%" height="15" fill="rgb(223,47,38)" fg:x="8058" fg:w="23"/><text x="6.6189%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 0.02%)</title><rect x="6.3689%" y="245" width="0.0182%" height="15" fill="rgb(229,179,11)" fg:x="8058" fg:w="23"/><text x="6.6189%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (44 samples, 0.03%)</title><rect x="6.3530%" y="341" width="0.0348%" height="15" fill="rgb(231,122,1)" fg:x="8038" fg:w="44"/><text x="6.6030%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (44 samples, 0.03%)</title><rect x="6.3530%" y="325" width="0.0348%" height="15" fill="rgb(245,119,9)" fg:x="8038" fg:w="44"/><text x="6.6030%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (85 samples, 0.07%)</title><rect x="6.3278%" y="389" width="0.0672%" height="15" fill="rgb(241,163,25)" fg:x="8006" fg:w="85"/><text x="6.5778%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (83 samples, 0.07%)</title><rect x="6.3293%" y="373" width="0.0656%" height="15" fill="rgb(217,214,3)" fg:x="8008" fg:w="83"/><text x="6.5793%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (83 samples, 0.07%)</title><rect x="6.3293%" y="357" width="0.0656%" height="15" fill="rgb(240,86,28)" fg:x="8008" fg:w="83"/><text x="6.5793%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (21 samples, 0.02%)</title><rect x="6.3997%" y="357" width="0.0166%" height="15" fill="rgb(215,47,9)" fg:x="8097" fg:w="21"/><text x="6.6497%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (28 samples, 0.02%)</title><rect x="6.3949%" y="389" width="0.0221%" height="15" fill="rgb(252,25,45)" fg:x="8091" fg:w="28"/><text x="6.6449%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (27 samples, 0.02%)</title><rect x="6.3957%" y="373" width="0.0213%" height="15" fill="rgb(251,164,9)" fg:x="8092" fg:w="27"/><text x="6.6457%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (146 samples, 0.12%)</title><rect x="6.3064%" y="421" width="0.1154%" height="15" fill="rgb(233,194,0)" fg:x="7979" fg:w="146"/><text x="6.5564%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (144 samples, 0.11%)</title><rect x="6.3080%" y="405" width="0.1138%" height="15" fill="rgb(249,111,24)" fg:x="7981" fg:w="144"/><text x="6.5580%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (43 samples, 0.03%)</title><rect x="6.4218%" y="421" width="0.0340%" height="15" fill="rgb(250,223,3)" fg:x="8125" fg:w="43"/><text x="6.6718%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (193 samples, 0.15%)</title><rect x="6.3040%" y="437" width="0.1525%" height="15" fill="rgb(236,178,37)" fg:x="7976" fg:w="193"/><text x="6.5540%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (274 samples, 0.22%)</title><rect x="6.2416%" y="469" width="0.2166%" height="15" fill="rgb(241,158,50)" fg:x="7897" fg:w="274"/><text x="6.4916%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (272 samples, 0.21%)</title><rect x="6.2432%" y="453" width="0.2150%" height="15" fill="rgb(213,121,41)" fg:x="7899" fg:w="272"/><text x="6.4932%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (751 samples, 0.59%)</title><rect x="5.8654%" y="773" width="0.5936%" height="15" fill="rgb(240,92,3)" fg:x="7421" fg:w="751"/><text x="6.1154%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (751 samples, 0.59%)</title><rect x="5.8654%" y="757" width="0.5936%" height="15" fill="rgb(205,123,3)" fg:x="7421" fg:w="751"/><text x="6.1154%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (751 samples, 0.59%)</title><rect x="5.8654%" y="741" width="0.5936%" height="15" fill="rgb(205,97,47)" fg:x="7421" fg:w="751"/><text x="6.1154%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (293 samples, 0.23%)</title><rect x="6.2274%" y="725" width="0.2316%" height="15" fill="rgb(247,152,14)" fg:x="7879" fg:w="293"/><text x="6.4774%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (293 samples, 0.23%)</title><rect x="6.2274%" y="709" width="0.2316%" height="15" fill="rgb(248,195,53)" fg:x="7879" fg:w="293"/><text x="6.4774%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (293 samples, 0.23%)</title><rect x="6.2274%" y="693" width="0.2316%" height="15" fill="rgb(226,201,16)" fg:x="7879" fg:w="293"/><text x="6.4774%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (293 samples, 0.23%)</title><rect x="6.2274%" y="677" width="0.2316%" height="15" fill="rgb(205,98,0)" fg:x="7879" fg:w="293"/><text x="6.4774%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (293 samples, 0.23%)</title><rect x="6.2274%" y="661" width="0.2316%" height="15" fill="rgb(214,191,48)" fg:x="7879" fg:w="293"/><text x="6.4774%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (293 samples, 0.23%)</title><rect x="6.2274%" y="645" width="0.2316%" height="15" fill="rgb(237,112,39)" fg:x="7879" fg:w="293"/><text x="6.4774%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (293 samples, 0.23%)</title><rect x="6.2274%" y="629" width="0.2316%" height="15" fill="rgb(247,203,27)" fg:x="7879" fg:w="293"/><text x="6.4774%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (293 samples, 0.23%)</title><rect x="6.2274%" y="613" width="0.2316%" height="15" fill="rgb(235,124,28)" fg:x="7879" fg:w="293"/><text x="6.4774%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (293 samples, 0.23%)</title><rect x="6.2274%" y="597" width="0.2316%" height="15" fill="rgb(208,207,46)" fg:x="7879" fg:w="293"/><text x="6.4774%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (293 samples, 0.23%)</title><rect x="6.2274%" y="581" width="0.2316%" height="15" fill="rgb(234,176,4)" fg:x="7879" fg:w="293"/><text x="6.4774%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (293 samples, 0.23%)</title><rect x="6.2274%" y="565" width="0.2316%" height="15" fill="rgb(230,133,28)" fg:x="7879" fg:w="293"/><text x="6.4774%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (281 samples, 0.22%)</title><rect x="6.2369%" y="549" width="0.2221%" height="15" fill="rgb(211,137,40)" fg:x="7891" fg:w="281"/><text x="6.4869%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (281 samples, 0.22%)</title><rect x="6.2369%" y="533" width="0.2221%" height="15" fill="rgb(254,35,13)" fg:x="7891" fg:w="281"/><text x="6.4869%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (280 samples, 0.22%)</title><rect x="6.2377%" y="517" width="0.2213%" height="15" fill="rgb(225,49,51)" fg:x="7892" fg:w="280"/><text x="6.4877%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (276 samples, 0.22%)</title><rect x="6.2408%" y="501" width="0.2181%" height="15" fill="rgb(251,10,15)" fg:x="7896" fg:w="276"/><text x="6.4908%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (275 samples, 0.22%)</title><rect x="6.2416%" y="485" width="0.2174%" height="15" fill="rgb(228,207,15)" fg:x="7897" fg:w="275"/><text x="6.4916%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.01%)</title><rect x="6.4732%" y="469" width="0.0103%" height="15" fill="rgb(241,99,19)" fg:x="8190" fg:w="13"/><text x="6.7232%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (24 samples, 0.02%)</title><rect x="6.4866%" y="469" width="0.0190%" height="15" fill="rgb(207,104,49)" fg:x="8207" fg:w="24"/><text x="6.7366%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (24 samples, 0.02%)</title><rect x="6.4866%" y="453" width="0.0190%" height="15" fill="rgb(234,99,18)" fg:x="8207" fg:w="24"/><text x="6.7366%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (23 samples, 0.02%)</title><rect x="6.4874%" y="437" width="0.0182%" height="15" fill="rgb(213,191,49)" fg:x="8208" fg:w="23"/><text x="6.7374%" y="447.50"></text></g><g><title> N]&gt;::hash (23 samples, 0.02%)</title><rect x="6.4874%" y="421" width="0.0182%" height="15" fill="rgb(210,226,19)" fg:x="8208" fg:w="23"/><text x="6.7374%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (13 samples, 0.01%)</title><rect x="6.4953%" y="405" width="0.0103%" height="15" fill="rgb(229,97,18)" fg:x="8218" fg:w="13"/><text x="6.7453%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (47 samples, 0.04%)</title><rect x="6.4732%" y="485" width="0.0371%" height="15" fill="rgb(211,167,15)" fg:x="8190" fg:w="47"/><text x="6.7232%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (27 samples, 0.02%)</title><rect x="6.5111%" y="485" width="0.0213%" height="15" fill="rgb(210,169,34)" fg:x="8238" fg:w="27"/><text x="6.7611%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (23 samples, 0.02%)</title><rect x="6.5143%" y="469" width="0.0182%" height="15" fill="rgb(241,121,31)" fg:x="8242" fg:w="23"/><text x="6.7643%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (97 samples, 0.08%)</title><rect x="6.4621%" y="565" width="0.0767%" height="15" fill="rgb(232,40,11)" fg:x="8176" fg:w="97"/><text x="6.7121%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (94 samples, 0.07%)</title><rect x="6.4645%" y="549" width="0.0743%" height="15" fill="rgb(205,86,26)" fg:x="8179" fg:w="94"/><text x="6.7145%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (90 samples, 0.07%)</title><rect x="6.4676%" y="533" width="0.0711%" height="15" fill="rgb(231,126,28)" fg:x="8183" fg:w="90"/><text x="6.7176%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (88 samples, 0.07%)</title><rect x="6.4692%" y="517" width="0.0696%" height="15" fill="rgb(219,221,18)" fg:x="8185" fg:w="88"/><text x="6.7192%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (85 samples, 0.07%)</title><rect x="6.4716%" y="501" width="0.0672%" height="15" fill="rgb(211,40,0)" fg:x="8188" fg:w="85"/><text x="6.7216%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (98 samples, 0.08%)</title><rect x="6.4621%" y="597" width="0.0775%" height="15" fill="rgb(239,85,43)" fg:x="8176" fg:w="98"/><text x="6.7121%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (98 samples, 0.08%)</title><rect x="6.4621%" y="581" width="0.0775%" height="15" fill="rgb(231,55,21)" fg:x="8176" fg:w="98"/><text x="6.7121%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_no_broken_links (1,014 samples, 0.80%)</title><rect x="5.7452%" y="805" width="0.8014%" height="15" fill="rgb(225,184,43)" fg:x="7269" fg:w="1014"/><text x="5.9952%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids (862 samples, 0.68%)</title><rect x="5.8654%" y="789" width="0.6813%" height="15" fill="rgb(251,158,41)" fg:x="7421" fg:w="862"/><text x="6.1154%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (111 samples, 0.09%)</title><rect x="6.4590%" y="773" width="0.0877%" height="15" fill="rgb(234,159,37)" fg:x="8172" fg:w="111"/><text x="6.7090%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (111 samples, 0.09%)</title><rect x="6.4590%" y="757" width="0.0877%" height="15" fill="rgb(216,204,22)" fg:x="8172" fg:w="111"/><text x="6.7090%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (111 samples, 0.09%)</title><rect x="6.4590%" y="741" width="0.0877%" height="15" fill="rgb(214,17,3)" fg:x="8172" fg:w="111"/><text x="6.7090%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (111 samples, 0.09%)</title><rect x="6.4590%" y="725" width="0.0877%" height="15" fill="rgb(212,111,17)" fg:x="8172" fg:w="111"/><text x="6.7090%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (111 samples, 0.09%)</title><rect x="6.4590%" y="709" width="0.0877%" height="15" fill="rgb(221,157,24)" fg:x="8172" fg:w="111"/><text x="6.7090%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (111 samples, 0.09%)</title><rect x="6.4590%" y="693" width="0.0877%" height="15" fill="rgb(252,16,13)" fg:x="8172" fg:w="111"/><text x="6.7090%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (111 samples, 0.09%)</title><rect x="6.4590%" y="677" width="0.0877%" height="15" fill="rgb(221,62,2)" fg:x="8172" fg:w="111"/><text x="6.7090%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (111 samples, 0.09%)</title><rect x="6.4590%" y="661" width="0.0877%" height="15" fill="rgb(247,87,22)" fg:x="8172" fg:w="111"/><text x="6.7090%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (111 samples, 0.09%)</title><rect x="6.4590%" y="645" width="0.0877%" height="15" fill="rgb(215,73,9)" fg:x="8172" fg:w="111"/><text x="6.7090%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (111 samples, 0.09%)</title><rect x="6.4590%" y="629" width="0.0877%" height="15" fill="rgb(207,175,33)" fg:x="8172" fg:w="111"/><text x="6.7090%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (109 samples, 0.09%)</title><rect x="6.4605%" y="613" width="0.0862%" height="15" fill="rgb(243,129,54)" fg:x="8174" fg:w="109"/><text x="6.7105%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="6.5815%" y="661" width="0.0126%" height="15" fill="rgb(227,119,45)" fg:x="8327" fg:w="16"/><text x="6.8315%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (36 samples, 0.03%)</title><rect x="6.6060%" y="565" width="0.0285%" height="15" fill="rgb(205,109,36)" fg:x="8358" fg:w="36"/><text x="6.8560%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (33 samples, 0.03%)</title><rect x="6.6083%" y="549" width="0.0261%" height="15" fill="rgb(205,6,39)" fg:x="8361" fg:w="33"/><text x="6.8583%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (19 samples, 0.02%)</title><rect x="6.6376%" y="565" width="0.0150%" height="15" fill="rgb(221,32,16)" fg:x="8398" fg:w="19"/><text x="6.8876%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (19 samples, 0.02%)</title><rect x="6.6376%" y="549" width="0.0150%" height="15" fill="rgb(228,144,50)" fg:x="8398" fg:w="19"/><text x="6.8876%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (19 samples, 0.02%)</title><rect x="6.6376%" y="533" width="0.0150%" height="15" fill="rgb(229,201,53)" fg:x="8398" fg:w="19"/><text x="6.8876%" y="543.50"></text></g><g><title> N]&gt;::hash (19 samples, 0.02%)</title><rect x="6.6376%" y="517" width="0.0150%" height="15" fill="rgb(249,153,27)" fg:x="8398" fg:w="19"/><text x="6.8876%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (67 samples, 0.05%)</title><rect x="6.6052%" y="581" width="0.0530%" height="15" fill="rgb(227,106,25)" fg:x="8357" fg:w="67"/><text x="6.8552%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (16 samples, 0.01%)</title><rect x="6.6739%" y="549" width="0.0126%" height="15" fill="rgb(230,65,29)" fg:x="8444" fg:w="16"/><text x="6.9239%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (52 samples, 0.04%)</title><rect x="6.6613%" y="581" width="0.0411%" height="15" fill="rgb(221,57,46)" fg:x="8428" fg:w="52"/><text x="6.9113%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (50 samples, 0.04%)</title><rect x="6.6629%" y="565" width="0.0395%" height="15" fill="rgb(229,161,17)" fg:x="8430" fg:w="50"/><text x="6.9129%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (134 samples, 0.11%)</title><rect x="6.5996%" y="597" width="0.1059%" height="15" fill="rgb(222,213,11)" fg:x="8350" fg:w="134"/><text x="6.8496%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (142 samples, 0.11%)</title><rect x="6.5941%" y="661" width="0.1122%" height="15" fill="rgb(235,35,13)" fg:x="8343" fg:w="142"/><text x="6.8441%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (140 samples, 0.11%)</title><rect x="6.5957%" y="645" width="0.1107%" height="15" fill="rgb(233,158,34)" fg:x="8345" fg:w="140"/><text x="6.8457%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (138 samples, 0.11%)</title><rect x="6.5973%" y="629" width="0.1091%" height="15" fill="rgb(215,151,48)" fg:x="8347" fg:w="138"/><text x="6.8473%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (138 samples, 0.11%)</title><rect x="6.5973%" y="613" width="0.1091%" height="15" fill="rgb(229,84,14)" fg:x="8347" fg:w="138"/><text x="6.8473%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (177 samples, 0.14%)</title><rect x="6.5704%" y="677" width="0.1399%" height="15" fill="rgb(229,68,14)" fg:x="8313" fg:w="177"/><text x="6.8204%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (181 samples, 0.14%)</title><rect x="6.5680%" y="693" width="0.1431%" height="15" fill="rgb(243,106,26)" fg:x="8310" fg:w="181"/><text x="6.8180%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (185 samples, 0.15%)</title><rect x="6.5657%" y="741" width="0.1462%" height="15" fill="rgb(206,45,38)" fg:x="8307" fg:w="185"/><text x="6.8157%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (185 samples, 0.15%)</title><rect x="6.5657%" y="725" width="0.1462%" height="15" fill="rgb(226,6,15)" fg:x="8307" fg:w="185"/><text x="6.8157%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (183 samples, 0.14%)</title><rect x="6.5672%" y="709" width="0.1446%" height="15" fill="rgb(232,22,54)" fg:x="8309" fg:w="183"/><text x="6.8172%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (29 samples, 0.02%)</title><rect x="6.7332%" y="661" width="0.0229%" height="15" fill="rgb(229,222,32)" fg:x="8519" fg:w="29"/><text x="6.9832%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (25 samples, 0.02%)</title><rect x="6.7364%" y="645" width="0.0198%" height="15" fill="rgb(228,62,29)" fg:x="8523" fg:w="25"/><text x="6.9864%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (18 samples, 0.01%)</title><rect x="6.7617%" y="597" width="0.0142%" height="15" fill="rgb(251,103,34)" fg:x="8555" fg:w="18"/><text x="7.0117%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (18 samples, 0.01%)</title><rect x="6.7617%" y="581" width="0.0142%" height="15" fill="rgb(233,12,30)" fg:x="8555" fg:w="18"/><text x="7.0117%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="6.7625%" y="565" width="0.0134%" height="15" fill="rgb(238,52,0)" fg:x="8556" fg:w="17"/><text x="7.0125%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (45 samples, 0.04%)</title><rect x="6.7617%" y="661" width="0.0356%" height="15" fill="rgb(223,98,5)" fg:x="8555" fg:w="45"/><text x="7.0117%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (45 samples, 0.04%)</title><rect x="6.7617%" y="645" width="0.0356%" height="15" fill="rgb(228,75,37)" fg:x="8555" fg:w="45"/><text x="7.0117%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (45 samples, 0.04%)</title><rect x="6.7617%" y="629" width="0.0356%" height="15" fill="rgb(205,115,49)" fg:x="8555" fg:w="45"/><text x="7.0117%" y="639.50"></text></g><g><title> N]&gt;::hash (45 samples, 0.04%)</title><rect x="6.7617%" y="613" width="0.0356%" height="15" fill="rgb(250,154,43)" fg:x="8555" fg:w="45"/><text x="7.0117%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (27 samples, 0.02%)</title><rect x="6.7759%" y="597" width="0.0213%" height="15" fill="rgb(226,43,29)" fg:x="8573" fg:w="27"/><text x="7.0259%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (26 samples, 0.02%)</title><rect x="6.7767%" y="581" width="0.0205%" height="15" fill="rgb(249,228,39)" fg:x="8574" fg:w="26"/><text x="7.0267%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (92 samples, 0.07%)</title><rect x="6.7308%" y="709" width="0.0727%" height="15" fill="rgb(216,79,43)" fg:x="8516" fg:w="92"/><text x="6.9808%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (89 samples, 0.07%)</title><rect x="6.7332%" y="693" width="0.0703%" height="15" fill="rgb(228,95,12)" fg:x="8519" fg:w="89"/><text x="6.9832%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (89 samples, 0.07%)</title><rect x="6.7332%" y="677" width="0.0703%" height="15" fill="rgb(249,221,15)" fg:x="8519" fg:w="89"/><text x="6.9832%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (17 samples, 0.01%)</title><rect x="6.8130%" y="677" width="0.0134%" height="15" fill="rgb(233,34,13)" fg:x="8620" fg:w="17"/><text x="7.0630%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (33 samples, 0.03%)</title><rect x="6.8036%" y="709" width="0.0261%" height="15" fill="rgb(214,103,39)" fg:x="8608" fg:w="33"/><text x="7.0536%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (24 samples, 0.02%)</title><rect x="6.8107%" y="693" width="0.0190%" height="15" fill="rgb(251,126,39)" fg:x="8617" fg:w="24"/><text x="7.0607%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (157 samples, 0.12%)</title><rect x="6.7119%" y="741" width="0.1241%" height="15" fill="rgb(214,216,36)" fg:x="8492" fg:w="157"/><text x="6.9619%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (154 samples, 0.12%)</title><rect x="6.7142%" y="725" width="0.1217%" height="15" fill="rgb(220,221,8)" fg:x="8495" fg:w="154"/><text x="6.9642%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (350 samples, 0.28%)</title><rect x="6.5633%" y="757" width="0.2766%" height="15" fill="rgb(240,216,3)" fg:x="8304" fg:w="350"/><text x="6.8133%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (26 samples, 0.02%)</title><rect x="6.8439%" y="725" width="0.0205%" height="15" fill="rgb(232,218,17)" fg:x="8659" fg:w="26"/><text x="7.0939%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (31 samples, 0.02%)</title><rect x="6.8407%" y="741" width="0.0245%" height="15" fill="rgb(229,163,45)" fg:x="8655" fg:w="31"/><text x="7.0907%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (33 samples, 0.03%)</title><rect x="6.8399%" y="757" width="0.0261%" height="15" fill="rgb(231,110,42)" fg:x="8654" fg:w="33"/><text x="7.0899%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (391 samples, 0.31%)</title><rect x="6.5633%" y="789" width="0.3090%" height="15" fill="rgb(208,170,48)" fg:x="8304" fg:w="391"/><text x="6.8133%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (391 samples, 0.31%)</title><rect x="6.5633%" y="773" width="0.3090%" height="15" fill="rgb(239,116,25)" fg:x="8304" fg:w="391"/><text x="6.8133%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.01%)</title><rect x="6.8723%" y="789" width="0.0142%" height="15" fill="rgb(219,200,50)" fg:x="8695" fg:w="18"/><text x="7.1223%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.01%)</title><rect x="6.8723%" y="773" width="0.0142%" height="15" fill="rgb(245,200,0)" fg:x="8695" fg:w="18"/><text x="7.1223%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (23 samples, 0.02%)</title><rect x="6.8984%" y="581" width="0.0182%" height="15" fill="rgb(245,119,33)" fg:x="8728" fg:w="23"/><text x="7.1484%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (19 samples, 0.02%)</title><rect x="6.9016%" y="565" width="0.0150%" height="15" fill="rgb(231,125,12)" fg:x="8732" fg:w="19"/><text x="7.1516%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (22 samples, 0.02%)</title><rect x="6.9190%" y="581" width="0.0174%" height="15" fill="rgb(216,96,41)" fg:x="8754" fg:w="22"/><text x="7.1690%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (22 samples, 0.02%)</title><rect x="6.9190%" y="565" width="0.0174%" height="15" fill="rgb(248,43,45)" fg:x="8754" fg:w="22"/><text x="7.1690%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (22 samples, 0.02%)</title><rect x="6.9190%" y="549" width="0.0174%" height="15" fill="rgb(217,222,7)" fg:x="8754" fg:w="22"/><text x="7.1690%" y="559.50"></text></g><g><title> N]&gt;::hash (22 samples, 0.02%)</title><rect x="6.9190%" y="533" width="0.0174%" height="15" fill="rgb(233,28,6)" fg:x="8754" fg:w="22"/><text x="7.1690%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (13 samples, 0.01%)</title><rect x="6.9261%" y="517" width="0.0103%" height="15" fill="rgb(231,218,15)" fg:x="8763" fg:w="13"/><text x="7.1761%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="6.9261%" y="501" width="0.0103%" height="15" fill="rgb(226,171,48)" fg:x="8763" fg:w="13"/><text x="7.1761%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (51 samples, 0.04%)</title><rect x="6.8984%" y="597" width="0.0403%" height="15" fill="rgb(235,201,9)" fg:x="8728" fg:w="51"/><text x="7.1484%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (15 samples, 0.01%)</title><rect x="6.9537%" y="565" width="0.0119%" height="15" fill="rgb(217,80,15)" fg:x="8798" fg:w="15"/><text x="7.2037%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (88 samples, 0.07%)</title><rect x="6.8968%" y="661" width="0.0696%" height="15" fill="rgb(219,152,8)" fg:x="8726" fg:w="88"/><text x="7.1468%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (88 samples, 0.07%)</title><rect x="6.8968%" y="645" width="0.0696%" height="15" fill="rgb(243,107,38)" fg:x="8726" fg:w="88"/><text x="7.1468%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (88 samples, 0.07%)</title><rect x="6.8968%" y="629" width="0.0696%" height="15" fill="rgb(231,17,5)" fg:x="8726" fg:w="88"/><text x="7.1468%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (88 samples, 0.07%)</title><rect x="6.8968%" y="613" width="0.0696%" height="15" fill="rgb(209,25,54)" fg:x="8726" fg:w="88"/><text x="7.1468%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (35 samples, 0.03%)</title><rect x="6.9387%" y="597" width="0.0277%" height="15" fill="rgb(219,0,2)" fg:x="8779" fg:w="35"/><text x="7.1887%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (29 samples, 0.02%)</title><rect x="6.9435%" y="581" width="0.0229%" height="15" fill="rgb(246,9,5)" fg:x="8785" fg:w="29"/><text x="7.1935%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (94 samples, 0.07%)</title><rect x="6.8960%" y="725" width="0.0743%" height="15" fill="rgb(226,159,4)" fg:x="8725" fg:w="94"/><text x="7.1460%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (94 samples, 0.07%)</title><rect x="6.8960%" y="709" width="0.0743%" height="15" fill="rgb(219,175,34)" fg:x="8725" fg:w="94"/><text x="7.1460%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (94 samples, 0.07%)</title><rect x="6.8960%" y="693" width="0.0743%" height="15" fill="rgb(236,10,46)" fg:x="8725" fg:w="94"/><text x="7.1460%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (94 samples, 0.07%)</title><rect x="6.8960%" y="677" width="0.0743%" height="15" fill="rgb(240,211,16)" fg:x="8725" fg:w="94"/><text x="7.1460%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (100 samples, 0.08%)</title><rect x="6.8921%" y="757" width="0.0790%" height="15" fill="rgb(205,3,43)" fg:x="8720" fg:w="100"/><text x="7.1421%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (100 samples, 0.08%)</title><rect x="6.8921%" y="741" width="0.0790%" height="15" fill="rgb(245,7,22)" fg:x="8720" fg:w="100"/><text x="7.1421%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (101 samples, 0.08%)</title><rect x="6.8921%" y="789" width="0.0798%" height="15" fill="rgb(239,132,32)" fg:x="8720" fg:w="101"/><text x="7.1421%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (101 samples, 0.08%)</title><rect x="6.8921%" y="773" width="0.0798%" height="15" fill="rgb(228,202,34)" fg:x="8720" fg:w="101"/><text x="7.1421%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.02%)</title><rect x="6.9774%" y="581" width="0.0205%" height="15" fill="rgb(254,200,22)" fg:x="8828" fg:w="26"/><text x="7.2274%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (23 samples, 0.02%)</title><rect x="6.9798%" y="565" width="0.0182%" height="15" fill="rgb(219,10,39)" fg:x="8831" fg:w="23"/><text x="7.2298%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.01%)</title><rect x="7.0122%" y="485" width="0.0103%" height="15" fill="rgb(226,210,39)" fg:x="8872" fg:w="13"/><text x="7.2622%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (27 samples, 0.02%)</title><rect x="7.0019%" y="581" width="0.0213%" height="15" fill="rgb(208,219,16)" fg:x="8859" fg:w="27"/><text x="7.2519%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (27 samples, 0.02%)</title><rect x="7.0019%" y="565" width="0.0213%" height="15" fill="rgb(216,158,51)" fg:x="8859" fg:w="27"/><text x="7.2519%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (27 samples, 0.02%)</title><rect x="7.0019%" y="549" width="0.0213%" height="15" fill="rgb(233,14,44)" fg:x="8859" fg:w="27"/><text x="7.2519%" y="559.50"></text></g><g><title> N]&gt;::hash (27 samples, 0.02%)</title><rect x="7.0019%" y="533" width="0.0213%" height="15" fill="rgb(237,97,39)" fg:x="8859" fg:w="27"/><text x="7.2519%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (15 samples, 0.01%)</title><rect x="7.0114%" y="517" width="0.0119%" height="15" fill="rgb(218,198,43)" fg:x="8871" fg:w="15"/><text x="7.2614%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="7.0114%" y="501" width="0.0119%" height="15" fill="rgb(231,104,20)" fg:x="8871" fg:w="15"/><text x="7.2614%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (66 samples, 0.05%)</title><rect x="6.9774%" y="597" width="0.0522%" height="15" fill="rgb(254,36,13)" fg:x="8828" fg:w="66"/><text x="7.2274%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (103 samples, 0.08%)</title><rect x="6.9767%" y="661" width="0.0814%" height="15" fill="rgb(248,14,50)" fg:x="8827" fg:w="103"/><text x="7.2267%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (102 samples, 0.08%)</title><rect x="6.9774%" y="645" width="0.0806%" height="15" fill="rgb(217,107,29)" fg:x="8828" fg:w="102"/><text x="7.2274%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (102 samples, 0.08%)</title><rect x="6.9774%" y="629" width="0.0806%" height="15" fill="rgb(251,169,33)" fg:x="8828" fg:w="102"/><text x="7.2274%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (102 samples, 0.08%)</title><rect x="6.9774%" y="613" width="0.0806%" height="15" fill="rgb(217,108,32)" fg:x="8828" fg:w="102"/><text x="7.2274%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (36 samples, 0.03%)</title><rect x="7.0296%" y="597" width="0.0285%" height="15" fill="rgb(219,66,42)" fg:x="8894" fg:w="36"/><text x="7.2796%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (35 samples, 0.03%)</title><rect x="7.0304%" y="581" width="0.0277%" height="15" fill="rgb(206,180,7)" fg:x="8895" fg:w="35"/><text x="7.2804%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.02%)</title><rect x="7.0620%" y="549" width="0.0166%" height="15" fill="rgb(208,226,31)" fg:x="8935" fg:w="21"/><text x="7.3120%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.01%)</title><rect x="7.0652%" y="533" width="0.0134%" height="15" fill="rgb(218,26,49)" fg:x="8939" fg:w="17"/><text x="7.3152%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (23 samples, 0.02%)</title><rect x="7.0818%" y="549" width="0.0182%" height="15" fill="rgb(233,197,48)" fg:x="8960" fg:w="23"/><text x="7.3318%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (22 samples, 0.02%)</title><rect x="7.0826%" y="533" width="0.0174%" height="15" fill="rgb(252,181,51)" fg:x="8961" fg:w="22"/><text x="7.3326%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (22 samples, 0.02%)</title><rect x="7.0826%" y="517" width="0.0174%" height="15" fill="rgb(253,90,19)" fg:x="8961" fg:w="22"/><text x="7.3326%" y="527.50"></text></g><g><title> N]&gt;::hash (22 samples, 0.02%)</title><rect x="7.0826%" y="501" width="0.0174%" height="15" fill="rgb(215,171,30)" fg:x="8961" fg:w="22"/><text x="7.3326%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (13 samples, 0.01%)</title><rect x="7.0897%" y="485" width="0.0103%" height="15" fill="rgb(214,222,9)" fg:x="8970" fg:w="13"/><text x="7.3397%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="7.0897%" y="469" width="0.0103%" height="15" fill="rgb(223,3,22)" fg:x="8970" fg:w="13"/><text x="7.3397%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (64 samples, 0.05%)</title><rect x="7.0620%" y="565" width="0.0506%" height="15" fill="rgb(225,196,46)" fg:x="8935" fg:w="64"/><text x="7.3120%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (16 samples, 0.01%)</title><rect x="7.1000%" y="549" width="0.0126%" height="15" fill="rgb(209,110,37)" fg:x="8983" fg:w="16"/><text x="7.3500%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (96 samples, 0.08%)</title><rect x="7.0620%" y="581" width="0.0759%" height="15" fill="rgb(249,89,12)" fg:x="8935" fg:w="96"/><text x="7.3120%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (32 samples, 0.03%)</title><rect x="7.1126%" y="565" width="0.0253%" height="15" fill="rgb(226,27,33)" fg:x="8999" fg:w="32"/><text x="7.3626%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 0.02%)</title><rect x="7.1205%" y="549" width="0.0174%" height="15" fill="rgb(213,82,22)" fg:x="9009" fg:w="22"/><text x="7.3705%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (102 samples, 0.08%)</title><rect x="7.0581%" y="661" width="0.0806%" height="15" fill="rgb(248,140,0)" fg:x="8930" fg:w="102"/><text x="7.3081%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (99 samples, 0.08%)</title><rect x="7.0604%" y="645" width="0.0782%" height="15" fill="rgb(228,106,3)" fg:x="8933" fg:w="99"/><text x="7.3104%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (99 samples, 0.08%)</title><rect x="7.0604%" y="629" width="0.0782%" height="15" fill="rgb(209,23,37)" fg:x="8933" fg:w="99"/><text x="7.3104%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (99 samples, 0.08%)</title><rect x="7.0604%" y="613" width="0.0782%" height="15" fill="rgb(241,93,50)" fg:x="8933" fg:w="99"/><text x="7.3104%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (99 samples, 0.08%)</title><rect x="7.0604%" y="597" width="0.0782%" height="15" fill="rgb(253,46,43)" fg:x="8933" fg:w="99"/><text x="7.3104%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (207 samples, 0.16%)</title><rect x="6.9759%" y="725" width="0.1636%" height="15" fill="rgb(226,206,43)" fg:x="8826" fg:w="207"/><text x="7.2259%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (207 samples, 0.16%)</title><rect x="6.9759%" y="709" width="0.1636%" height="15" fill="rgb(217,54,7)" fg:x="8826" fg:w="207"/><text x="7.2259%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (207 samples, 0.16%)</title><rect x="6.9759%" y="693" width="0.1636%" height="15" fill="rgb(223,5,52)" fg:x="8826" fg:w="207"/><text x="7.2259%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (207 samples, 0.16%)</title><rect x="6.9759%" y="677" width="0.1636%" height="15" fill="rgb(206,52,46)" fg:x="8826" fg:w="207"/><text x="7.2259%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (216 samples, 0.17%)</title><rect x="6.9719%" y="773" width="0.1707%" height="15" fill="rgb(253,136,11)" fg:x="8821" fg:w="216"/><text x="7.2219%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (216 samples, 0.17%)</title><rect x="6.9719%" y="757" width="0.1707%" height="15" fill="rgb(208,106,33)" fg:x="8821" fg:w="216"/><text x="7.2219%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (216 samples, 0.17%)</title><rect x="6.9719%" y="741" width="0.1707%" height="15" fill="rgb(206,54,4)" fg:x="8821" fg:w="216"/><text x="7.2219%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::maybe_find_parent (219 samples, 0.17%)</title><rect x="6.9719%" y="789" width="0.1731%" height="15" fill="rgb(213,3,15)" fg:x="8821" fg:w="219"/><text x="7.2219%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="7.1561%" y="405" width="0.0174%" height="15" fill="rgb(252,211,39)" fg:x="9054" fg:w="22"/><text x="7.4061%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.01%)</title><rect x="7.1600%" y="389" width="0.0134%" height="15" fill="rgb(223,6,36)" fg:x="9059" fg:w="17"/><text x="7.4100%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (29 samples, 0.02%)</title><rect x="7.1806%" y="357" width="0.0229%" height="15" fill="rgb(252,169,45)" fg:x="9085" fg:w="29"/><text x="7.4306%" y="367.50"></text></g><g><title> N]&gt;::hash (29 samples, 0.02%)</title><rect x="7.1806%" y="341" width="0.0229%" height="15" fill="rgb(212,48,26)" fg:x="9085" fg:w="29"/><text x="7.4306%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (19 samples, 0.02%)</title><rect x="7.1885%" y="325" width="0.0150%" height="15" fill="rgb(251,102,48)" fg:x="9095" fg:w="19"/><text x="7.4385%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="7.1885%" y="309" width="0.0150%" height="15" fill="rgb(243,208,16)" fg:x="9095" fg:w="19"/><text x="7.4385%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (30 samples, 0.02%)</title><rect x="7.1806%" y="405" width="0.0237%" height="15" fill="rgb(219,96,24)" fg:x="9085" fg:w="30"/><text x="7.4306%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (30 samples, 0.02%)</title><rect x="7.1806%" y="389" width="0.0237%" height="15" fill="rgb(219,33,29)" fg:x="9085" fg:w="30"/><text x="7.4306%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (30 samples, 0.02%)</title><rect x="7.1806%" y="373" width="0.0237%" height="15" fill="rgb(223,176,5)" fg:x="9085" fg:w="30"/><text x="7.4306%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (74 samples, 0.06%)</title><rect x="7.1561%" y="421" width="0.0585%" height="15" fill="rgb(228,140,14)" fg:x="9054" fg:w="74"/><text x="7.4061%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.01%)</title><rect x="7.2043%" y="405" width="0.0103%" height="15" fill="rgb(217,179,31)" fg:x="9115" fg:w="13"/><text x="7.4543%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (44 samples, 0.03%)</title><rect x="7.2146%" y="421" width="0.0348%" height="15" fill="rgb(230,9,30)" fg:x="9128" fg:w="44"/><text x="7.4646%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (42 samples, 0.03%)</title><rect x="7.2161%" y="405" width="0.0332%" height="15" fill="rgb(230,136,20)" fg:x="9130" fg:w="42"/><text x="7.4661%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (131 samples, 0.10%)</title><rect x="7.1513%" y="453" width="0.1035%" height="15" fill="rgb(215,210,22)" fg:x="9048" fg:w="131"/><text x="7.4013%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (128 samples, 0.10%)</title><rect x="7.1537%" y="437" width="0.1012%" height="15" fill="rgb(218,43,5)" fg:x="9051" fg:w="128"/><text x="7.4037%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (135 samples, 0.11%)</title><rect x="7.1490%" y="501" width="0.1067%" height="15" fill="rgb(216,11,5)" fg:x="9045" fg:w="135"/><text x="7.3990%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (133 samples, 0.11%)</title><rect x="7.1505%" y="485" width="0.1051%" height="15" fill="rgb(209,82,29)" fg:x="9047" fg:w="133"/><text x="7.4005%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (133 samples, 0.11%)</title><rect x="7.1505%" y="469" width="0.1051%" height="15" fill="rgb(244,115,12)" fg:x="9047" fg:w="133"/><text x="7.4005%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (138 samples, 0.11%)</title><rect x="7.1474%" y="517" width="0.1091%" height="15" fill="rgb(222,82,18)" fg:x="9043" fg:w="138"/><text x="7.3974%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (145 samples, 0.11%)</title><rect x="7.1450%" y="693" width="0.1146%" height="15" fill="rgb(249,227,8)" fg:x="9040" fg:w="145"/><text x="7.3950%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (145 samples, 0.11%)</title><rect x="7.1450%" y="677" width="0.1146%" height="15" fill="rgb(253,141,45)" fg:x="9040" fg:w="145"/><text x="7.3950%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (145 samples, 0.11%)</title><rect x="7.1450%" y="661" width="0.1146%" height="15" fill="rgb(234,184,4)" fg:x="9040" fg:w="145"/><text x="7.3950%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (145 samples, 0.11%)</title><rect x="7.1450%" y="645" width="0.1146%" height="15" fill="rgb(218,194,23)" fg:x="9040" fg:w="145"/><text x="7.3950%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (145 samples, 0.11%)</title><rect x="7.1450%" y="629" width="0.1146%" height="15" fill="rgb(235,66,41)" fg:x="9040" fg:w="145"/><text x="7.3950%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (145 samples, 0.11%)</title><rect x="7.1450%" y="613" width="0.1146%" height="15" fill="rgb(245,217,1)" fg:x="9040" fg:w="145"/><text x="7.3950%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (145 samples, 0.11%)</title><rect x="7.1450%" y="597" width="0.1146%" height="15" fill="rgb(229,91,1)" fg:x="9040" fg:w="145"/><text x="7.3950%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (145 samples, 0.11%)</title><rect x="7.1450%" y="581" width="0.1146%" height="15" fill="rgb(207,101,30)" fg:x="9040" fg:w="145"/><text x="7.3950%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (145 samples, 0.11%)</title><rect x="7.1450%" y="565" width="0.1146%" height="15" fill="rgb(223,82,49)" fg:x="9040" fg:w="145"/><text x="7.3950%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (145 samples, 0.11%)</title><rect x="7.1450%" y="549" width="0.1146%" height="15" fill="rgb(218,167,17)" fg:x="9040" fg:w="145"/><text x="7.3950%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (143 samples, 0.11%)</title><rect x="7.1466%" y="533" width="0.1130%" height="15" fill="rgb(208,103,14)" fg:x="9042" fg:w="143"/><text x="7.3966%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="7.2596%" y="517" width="0.0111%" height="15" fill="rgb(238,20,8)" fg:x="9185" fg:w="14"/><text x="7.5096%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.02%)</title><rect x="7.2786%" y="405" width="0.0205%" height="15" fill="rgb(218,80,54)" fg:x="9209" fg:w="26"/><text x="7.5286%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (23 samples, 0.02%)</title><rect x="7.2809%" y="389" width="0.0182%" height="15" fill="rgb(240,144,17)" fg:x="9212" fg:w="23"/><text x="7.5309%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (23 samples, 0.02%)</title><rect x="7.3031%" y="373" width="0.0182%" height="15" fill="rgb(245,27,50)" fg:x="9240" fg:w="23"/><text x="7.5531%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (23 samples, 0.02%)</title><rect x="7.3031%" y="357" width="0.0182%" height="15" fill="rgb(251,51,7)" fg:x="9240" fg:w="23"/><text x="7.5531%" y="367.50"></text></g><g><title> N]&gt;::hash (23 samples, 0.02%)</title><rect x="7.3031%" y="341" width="0.0182%" height="15" fill="rgb(245,217,29)" fg:x="9240" fg:w="23"/><text x="7.5531%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (15 samples, 0.01%)</title><rect x="7.3094%" y="325" width="0.0119%" height="15" fill="rgb(221,176,29)" fg:x="9248" fg:w="15"/><text x="7.5594%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="7.3110%" y="309" width="0.0103%" height="15" fill="rgb(212,180,24)" fg:x="9250" fg:w="13"/><text x="7.5610%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (24 samples, 0.02%)</title><rect x="7.3031%" y="405" width="0.0190%" height="15" fill="rgb(254,24,2)" fg:x="9240" fg:w="24"/><text x="7.5531%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (24 samples, 0.02%)</title><rect x="7.3031%" y="389" width="0.0190%" height="15" fill="rgb(230,100,2)" fg:x="9240" fg:w="24"/><text x="7.5531%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (69 samples, 0.05%)</title><rect x="7.2786%" y="421" width="0.0545%" height="15" fill="rgb(219,142,25)" fg:x="9209" fg:w="69"/><text x="7.5286%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.01%)</title><rect x="7.3220%" y="405" width="0.0111%" height="15" fill="rgb(240,73,43)" fg:x="9264" fg:w="14"/><text x="7.5720%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (30 samples, 0.02%)</title><rect x="7.3639%" y="325" width="0.0237%" height="15" fill="rgb(214,114,15)" fg:x="9317" fg:w="30"/><text x="7.6139%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (26 samples, 0.02%)</title><rect x="7.3671%" y="309" width="0.0205%" height="15" fill="rgb(207,130,4)" fg:x="9321" fg:w="26"/><text x="7.6171%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.01%)</title><rect x="7.3987%" y="197" width="0.0103%" height="15" fill="rgb(221,25,40)" fg:x="9361" fg:w="13"/><text x="7.6487%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (21 samples, 0.02%)</title><rect x="7.3948%" y="245" width="0.0166%" height="15" fill="rgb(241,184,7)" fg:x="9356" fg:w="21"/><text x="7.6448%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (20 samples, 0.02%)</title><rect x="7.3956%" y="229" width="0.0158%" height="15" fill="rgb(235,159,4)" fg:x="9357" fg:w="20"/><text x="7.6456%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="7.3963%" y="213" width="0.0150%" height="15" fill="rgb(214,87,48)" fg:x="9358" fg:w="19"/><text x="7.6463%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.01%)</title><rect x="7.4161%" y="213" width="0.0126%" height="15" fill="rgb(246,198,24)" fg:x="9383" fg:w="16"/><text x="7.6661%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (48 samples, 0.04%)</title><rect x="7.3940%" y="277" width="0.0379%" height="15" fill="rgb(209,66,40)" fg:x="9355" fg:w="48"/><text x="7.6440%" y="287.50"></text></g><g><title> N]&gt;::hash (48 samples, 0.04%)</title><rect x="7.3940%" y="261" width="0.0379%" height="15" fill="rgb(233,147,39)" fg:x="9355" fg:w="48"/><text x="7.6440%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (26 samples, 0.02%)</title><rect x="7.4114%" y="245" width="0.0205%" height="15" fill="rgb(231,145,52)" fg:x="9377" fg:w="26"/><text x="7.6614%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (25 samples, 0.02%)</title><rect x="7.4121%" y="229" width="0.0198%" height="15" fill="rgb(206,20,26)" fg:x="9378" fg:w="25"/><text x="7.6621%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (49 samples, 0.04%)</title><rect x="7.3940%" y="293" width="0.0387%" height="15" fill="rgb(238,220,4)" fg:x="9355" fg:w="49"/><text x="7.6440%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (50 samples, 0.04%)</title><rect x="7.3940%" y="325" width="0.0395%" height="15" fill="rgb(252,195,42)" fg:x="9355" fg:w="50"/><text x="7.6440%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (50 samples, 0.04%)</title><rect x="7.3940%" y="309" width="0.0395%" height="15" fill="rgb(209,10,6)" fg:x="9355" fg:w="50"/><text x="7.6440%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (108 samples, 0.09%)</title><rect x="7.3616%" y="373" width="0.0854%" height="15" fill="rgb(229,3,52)" fg:x="9314" fg:w="108"/><text x="7.6116%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (105 samples, 0.08%)</title><rect x="7.3639%" y="357" width="0.0830%" height="15" fill="rgb(253,49,37)" fg:x="9317" fg:w="105"/><text x="7.6139%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (105 samples, 0.08%)</title><rect x="7.3639%" y="341" width="0.0830%" height="15" fill="rgb(240,103,49)" fg:x="9317" fg:w="105"/><text x="7.6139%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.01%)</title><rect x="7.4335%" y="325" width="0.0134%" height="15" fill="rgb(250,182,30)" fg:x="9405" fg:w="17"/><text x="7.6835%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (14 samples, 0.01%)</title><rect x="7.4517%" y="341" width="0.0111%" height="15" fill="rgb(248,8,30)" fg:x="9428" fg:w="14"/><text x="7.7017%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (30 samples, 0.02%)</title><rect x="7.4469%" y="373" width="0.0237%" height="15" fill="rgb(237,120,30)" fg:x="9422" fg:w="30"/><text x="7.6969%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (28 samples, 0.02%)</title><rect x="7.4485%" y="357" width="0.0221%" height="15" fill="rgb(221,146,34)" fg:x="9424" fg:w="28"/><text x="7.6985%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (174 samples, 0.14%)</title><rect x="7.3371%" y="405" width="0.1375%" height="15" fill="rgb(242,55,13)" fg:x="9283" fg:w="174"/><text x="7.5871%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (171 samples, 0.14%)</title><rect x="7.3394%" y="389" width="0.1352%" height="15" fill="rgb(242,112,31)" fg:x="9286" fg:w="171"/><text x="7.5894%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (31 samples, 0.02%)</title><rect x="7.4746%" y="405" width="0.0245%" height="15" fill="rgb(249,192,27)" fg:x="9457" fg:w="31"/><text x="7.7246%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (207 samples, 0.16%)</title><rect x="7.3363%" y="421" width="0.1636%" height="15" fill="rgb(208,204,44)" fg:x="9282" fg:w="207"/><text x="7.5863%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (293 samples, 0.23%)</title><rect x="7.2707%" y="501" width="0.2316%" height="15" fill="rgb(208,93,54)" fg:x="9199" fg:w="293"/><text x="7.5207%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (288 samples, 0.23%)</title><rect x="7.2746%" y="485" width="0.2276%" height="15" fill="rgb(242,1,31)" fg:x="9204" fg:w="288"/><text x="7.5246%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (286 samples, 0.23%)</title><rect x="7.2762%" y="469" width="0.2260%" height="15" fill="rgb(241,83,25)" fg:x="9206" fg:w="286"/><text x="7.5262%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (285 samples, 0.23%)</title><rect x="7.2770%" y="453" width="0.2253%" height="15" fill="rgb(205,169,50)" fg:x="9207" fg:w="285"/><text x="7.5270%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (285 samples, 0.23%)</title><rect x="7.2770%" y="437" width="0.2253%" height="15" fill="rgb(239,186,37)" fg:x="9207" fg:w="285"/><text x="7.5270%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::ids (453 samples, 0.36%)</title><rect x="7.1450%" y="725" width="0.3580%" height="15" fill="rgb(205,221,10)" fg:x="9040" fg:w="453"/><text x="7.3950%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (453 samples, 0.36%)</title><rect x="7.1450%" y="709" width="0.3580%" height="15" fill="rgb(218,196,15)" fg:x="9040" fg:w="453"/><text x="7.3950%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (308 samples, 0.24%)</title><rect x="7.2596%" y="693" width="0.2434%" height="15" fill="rgb(218,196,35)" fg:x="9185" fg:w="308"/><text x="7.5096%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (308 samples, 0.24%)</title><rect x="7.2596%" y="677" width="0.2434%" height="15" fill="rgb(233,63,24)" fg:x="9185" fg:w="308"/><text x="7.5096%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (308 samples, 0.24%)</title><rect x="7.2596%" y="661" width="0.2434%" height="15" fill="rgb(225,8,4)" fg:x="9185" fg:w="308"/><text x="7.5096%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (308 samples, 0.24%)</title><rect x="7.2596%" y="645" width="0.2434%" height="15" fill="rgb(234,105,35)" fg:x="9185" fg:w="308"/><text x="7.5096%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (308 samples, 0.24%)</title><rect x="7.2596%" y="629" width="0.2434%" height="15" fill="rgb(236,21,32)" fg:x="9185" fg:w="308"/><text x="7.5096%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (308 samples, 0.24%)</title><rect x="7.2596%" y="613" width="0.2434%" height="15" fill="rgb(228,109,6)" fg:x="9185" fg:w="308"/><text x="7.5096%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (308 samples, 0.24%)</title><rect x="7.2596%" y="597" width="0.2434%" height="15" fill="rgb(229,215,31)" fg:x="9185" fg:w="308"/><text x="7.5096%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (308 samples, 0.24%)</title><rect x="7.2596%" y="581" width="0.2434%" height="15" fill="rgb(221,52,54)" fg:x="9185" fg:w="308"/><text x="7.5096%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (308 samples, 0.24%)</title><rect x="7.2596%" y="565" width="0.2434%" height="15" fill="rgb(252,129,43)" fg:x="9185" fg:w="308"/><text x="7.5096%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (308 samples, 0.24%)</title><rect x="7.2596%" y="549" width="0.2434%" height="15" fill="rgb(248,183,27)" fg:x="9185" fg:w="308"/><text x="7.5096%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (308 samples, 0.24%)</title><rect x="7.2596%" y="533" width="0.2434%" height="15" fill="rgb(250,0,22)" fg:x="9185" fg:w="308"/><text x="7.5096%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (294 samples, 0.23%)</title><rect x="7.2707%" y="517" width="0.2324%" height="15" fill="rgb(213,166,10)" fg:x="9199" fg:w="294"/><text x="7.5207%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="7.5038%" y="549" width="0.0111%" height="15" fill="rgb(207,163,36)" fg:x="9494" fg:w="14"/><text x="7.7538%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (28 samples, 0.02%)</title><rect x="7.5236%" y="421" width="0.0221%" height="15" fill="rgb(208,122,22)" fg:x="9519" fg:w="28"/><text x="7.7736%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.02%)</title><rect x="7.5299%" y="405" width="0.0158%" height="15" fill="rgb(207,104,49)" fg:x="9527" fg:w="20"/><text x="7.7799%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (18 samples, 0.01%)</title><rect x="7.5552%" y="341" width="0.0142%" height="15" fill="rgb(248,211,50)" fg:x="9559" fg:w="18"/><text x="7.8052%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (18 samples, 0.01%)</title><rect x="7.5552%" y="325" width="0.0142%" height="15" fill="rgb(217,13,45)" fg:x="9559" fg:w="18"/><text x="7.8052%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.01%)</title><rect x="7.5552%" y="309" width="0.0142%" height="15" fill="rgb(211,216,49)" fg:x="9559" fg:w="18"/><text x="7.8052%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.01%)</title><rect x="7.5718%" y="309" width="0.0126%" height="15" fill="rgb(221,58,53)" fg:x="9580" fg:w="16"/><text x="7.8218%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (41 samples, 0.03%)</title><rect x="7.5536%" y="421" width="0.0324%" height="15" fill="rgb(220,112,41)" fg:x="9557" fg:w="41"/><text x="7.8036%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (41 samples, 0.03%)</title><rect x="7.5536%" y="405" width="0.0324%" height="15" fill="rgb(236,38,28)" fg:x="9557" fg:w="41"/><text x="7.8036%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (41 samples, 0.03%)</title><rect x="7.5536%" y="389" width="0.0324%" height="15" fill="rgb(227,195,22)" fg:x="9557" fg:w="41"/><text x="7.8036%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (40 samples, 0.03%)</title><rect x="7.5544%" y="373" width="0.0316%" height="15" fill="rgb(214,55,33)" fg:x="9558" fg:w="40"/><text x="7.8044%" y="383.50"></text></g><g><title> N]&gt;::hash (40 samples, 0.03%)</title><rect x="7.5544%" y="357" width="0.0316%" height="15" fill="rgb(248,80,13)" fg:x="9558" fg:w="40"/><text x="7.8044%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (21 samples, 0.02%)</title><rect x="7.5694%" y="341" width="0.0166%" height="15" fill="rgb(238,52,6)" fg:x="9577" fg:w="21"/><text x="7.8194%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.02%)</title><rect x="7.5702%" y="325" width="0.0158%" height="15" fill="rgb(224,198,47)" fg:x="9578" fg:w="20"/><text x="7.8202%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (87 samples, 0.07%)</title><rect x="7.5236%" y="437" width="0.0688%" height="15" fill="rgb(233,171,20)" fg:x="9519" fg:w="87"/><text x="7.7736%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (27 samples, 0.02%)</title><rect x="7.6145%" y="341" width="0.0213%" height="15" fill="rgb(241,30,25)" fg:x="9634" fg:w="27"/><text x="7.8645%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (24 samples, 0.02%)</title><rect x="7.6169%" y="325" width="0.0190%" height="15" fill="rgb(207,171,38)" fg:x="9637" fg:w="24"/><text x="7.8669%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (16 samples, 0.01%)</title><rect x="7.6398%" y="261" width="0.0126%" height="15" fill="rgb(234,70,1)" fg:x="9666" fg:w="16"/><text x="7.8898%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (16 samples, 0.01%)</title><rect x="7.6398%" y="245" width="0.0126%" height="15" fill="rgb(232,178,18)" fg:x="9666" fg:w="16"/><text x="7.8898%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="7.6398%" y="229" width="0.0126%" height="15" fill="rgb(241,78,40)" fg:x="9666" fg:w="16"/><text x="7.8898%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.01%)</title><rect x="7.6611%" y="229" width="0.0111%" height="15" fill="rgb(222,35,25)" fg:x="9693" fg:w="14"/><text x="7.9111%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (45 samples, 0.04%)</title><rect x="7.6398%" y="293" width="0.0356%" height="15" fill="rgb(207,92,16)" fg:x="9666" fg:w="45"/><text x="7.8898%" y="303.50"></text></g><g><title> N]&gt;::hash (45 samples, 0.04%)</title><rect x="7.6398%" y="277" width="0.0356%" height="15" fill="rgb(216,59,51)" fg:x="9666" fg:w="45"/><text x="7.8898%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (29 samples, 0.02%)</title><rect x="7.6524%" y="261" width="0.0229%" height="15" fill="rgb(213,80,28)" fg:x="9682" fg:w="29"/><text x="7.9024%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 0.02%)</title><rect x="7.6532%" y="245" width="0.0221%" height="15" fill="rgb(220,93,7)" fg:x="9683" fg:w="28"/><text x="7.9032%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (46 samples, 0.04%)</title><rect x="7.6398%" y="309" width="0.0364%" height="15" fill="rgb(225,24,44)" fg:x="9666" fg:w="46"/><text x="7.8898%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (48 samples, 0.04%)</title><rect x="7.6390%" y="341" width="0.0379%" height="15" fill="rgb(243,74,40)" fg:x="9665" fg:w="48"/><text x="7.8890%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (47 samples, 0.04%)</title><rect x="7.6398%" y="325" width="0.0371%" height="15" fill="rgb(228,39,7)" fg:x="9666" fg:w="47"/><text x="7.8898%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (96 samples, 0.08%)</title><rect x="7.6105%" y="389" width="0.0759%" height="15" fill="rgb(227,79,8)" fg:x="9629" fg:w="96"/><text x="7.8605%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (93 samples, 0.07%)</title><rect x="7.6129%" y="373" width="0.0735%" height="15" fill="rgb(236,58,11)" fg:x="9632" fg:w="93"/><text x="7.8629%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (91 samples, 0.07%)</title><rect x="7.6145%" y="357" width="0.0719%" height="15" fill="rgb(249,63,35)" fg:x="9634" fg:w="91"/><text x="7.8645%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (13 samples, 0.01%)</title><rect x="7.6896%" y="357" width="0.0103%" height="15" fill="rgb(252,114,16)" fg:x="9729" fg:w="13"/><text x="7.9396%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (18 samples, 0.01%)</title><rect x="7.6864%" y="389" width="0.0142%" height="15" fill="rgb(254,151,24)" fg:x="9725" fg:w="18"/><text x="7.9364%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (17 samples, 0.01%)</title><rect x="7.6872%" y="373" width="0.0134%" height="15" fill="rgb(253,54,39)" fg:x="9726" fg:w="17"/><text x="7.9372%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (139 samples, 0.11%)</title><rect x="7.5971%" y="421" width="0.1099%" height="15" fill="rgb(243,25,45)" fg:x="9612" fg:w="139"/><text x="7.8471%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (136 samples, 0.11%)</title><rect x="7.5995%" y="405" width="0.1075%" height="15" fill="rgb(234,134,9)" fg:x="9615" fg:w="136"/><text x="7.8495%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (176 samples, 0.14%)</title><rect x="7.5947%" y="437" width="0.1391%" height="15" fill="rgb(227,166,31)" fg:x="9609" fg:w="176"/><text x="7.8447%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (34 samples, 0.03%)</title><rect x="7.7070%" y="421" width="0.0269%" height="15" fill="rgb(245,143,41)" fg:x="9751" fg:w="34"/><text x="7.9570%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (271 samples, 0.21%)</title><rect x="7.5212%" y="453" width="0.2142%" height="15" fill="rgb(238,181,32)" fg:x="9516" fg:w="271"/><text x="7.7712%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (276 samples, 0.22%)</title><rect x="7.5181%" y="517" width="0.2181%" height="15" fill="rgb(224,113,18)" fg:x="9512" fg:w="276"/><text x="7.7681%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (273 samples, 0.22%)</title><rect x="7.5204%" y="501" width="0.2158%" height="15" fill="rgb(240,229,28)" fg:x="9515" fg:w="273"/><text x="7.7704%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (273 samples, 0.22%)</title><rect x="7.5204%" y="485" width="0.2158%" height="15" fill="rgb(250,185,3)" fg:x="9515" fg:w="273"/><text x="7.7704%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (272 samples, 0.21%)</title><rect x="7.5212%" y="469" width="0.2150%" height="15" fill="rgb(212,59,25)" fg:x="9516" fg:w="272"/><text x="7.7712%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (749 samples, 0.59%)</title><rect x="7.1450%" y="773" width="0.5920%" height="15" fill="rgb(221,87,20)" fg:x="9040" fg:w="749"/><text x="7.3950%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (749 samples, 0.59%)</title><rect x="7.1450%" y="757" width="0.5920%" height="15" fill="rgb(213,74,28)" fg:x="9040" fg:w="749"/><text x="7.3950%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (749 samples, 0.59%)</title><rect x="7.1450%" y="741" width="0.5920%" height="15" fill="rgb(224,132,34)" fg:x="9040" fg:w="749"/><text x="7.3950%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (296 samples, 0.23%)</title><rect x="7.5030%" y="725" width="0.2340%" height="15" fill="rgb(222,101,24)" fg:x="9493" fg:w="296"/><text x="7.7530%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (296 samples, 0.23%)</title><rect x="7.5030%" y="709" width="0.2340%" height="15" fill="rgb(254,142,4)" fg:x="9493" fg:w="296"/><text x="7.7530%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (296 samples, 0.23%)</title><rect x="7.5030%" y="693" width="0.2340%" height="15" fill="rgb(230,229,49)" fg:x="9493" fg:w="296"/><text x="7.7530%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (296 samples, 0.23%)</title><rect x="7.5030%" y="677" width="0.2340%" height="15" fill="rgb(238,70,47)" fg:x="9493" fg:w="296"/><text x="7.7530%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (296 samples, 0.23%)</title><rect x="7.5030%" y="661" width="0.2340%" height="15" fill="rgb(231,160,17)" fg:x="9493" fg:w="296"/><text x="7.7530%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (296 samples, 0.23%)</title><rect x="7.5030%" y="645" width="0.2340%" height="15" fill="rgb(218,68,53)" fg:x="9493" fg:w="296"/><text x="7.7530%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (296 samples, 0.23%)</title><rect x="7.5030%" y="629" width="0.2340%" height="15" fill="rgb(236,111,10)" fg:x="9493" fg:w="296"/><text x="7.7530%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (296 samples, 0.23%)</title><rect x="7.5030%" y="613" width="0.2340%" height="15" fill="rgb(224,34,41)" fg:x="9493" fg:w="296"/><text x="7.7530%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (296 samples, 0.23%)</title><rect x="7.5030%" y="597" width="0.2340%" height="15" fill="rgb(241,118,19)" fg:x="9493" fg:w="296"/><text x="7.7530%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (296 samples, 0.23%)</title><rect x="7.5030%" y="581" width="0.2340%" height="15" fill="rgb(238,129,25)" fg:x="9493" fg:w="296"/><text x="7.7530%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (296 samples, 0.23%)</title><rect x="7.5030%" y="565" width="0.2340%" height="15" fill="rgb(238,22,31)" fg:x="9493" fg:w="296"/><text x="7.7530%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (281 samples, 0.22%)</title><rect x="7.5149%" y="549" width="0.2221%" height="15" fill="rgb(222,174,48)" fg:x="9508" fg:w="281"/><text x="7.7649%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (278 samples, 0.22%)</title><rect x="7.5173%" y="533" width="0.2197%" height="15" fill="rgb(206,152,40)" fg:x="9511" fg:w="278"/><text x="7.7673%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (24 samples, 0.02%)</title><rect x="7.7528%" y="469" width="0.0190%" height="15" fill="rgb(218,99,54)" fg:x="9809" fg:w="24"/><text x="8.0028%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.02%)</title><rect x="7.7560%" y="453" width="0.0158%" height="15" fill="rgb(220,174,26)" fg:x="9813" fg:w="20"/><text x="8.0060%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (24 samples, 0.02%)</title><rect x="7.7765%" y="469" width="0.0190%" height="15" fill="rgb(245,116,9)" fg:x="9839" fg:w="24"/><text x="8.0265%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (24 samples, 0.02%)</title><rect x="7.7765%" y="453" width="0.0190%" height="15" fill="rgb(209,72,35)" fg:x="9839" fg:w="24"/><text x="8.0265%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (24 samples, 0.02%)</title><rect x="7.7765%" y="437" width="0.0190%" height="15" fill="rgb(226,126,21)" fg:x="9839" fg:w="24"/><text x="8.0265%" y="447.50"></text></g><g><title> N]&gt;::hash (24 samples, 0.02%)</title><rect x="7.7765%" y="421" width="0.0190%" height="15" fill="rgb(227,192,1)" fg:x="9839" fg:w="24"/><text x="8.0265%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (59 samples, 0.05%)</title><rect x="7.7528%" y="485" width="0.0466%" height="15" fill="rgb(237,180,29)" fg:x="9809" fg:w="59"/><text x="8.0028%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (35 samples, 0.03%)</title><rect x="7.8002%" y="485" width="0.0277%" height="15" fill="rgb(230,197,35)" fg:x="9869" fg:w="35"/><text x="8.0502%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (31 samples, 0.02%)</title><rect x="7.8034%" y="469" width="0.0245%" height="15" fill="rgb(246,193,31)" fg:x="9873" fg:w="31"/><text x="8.0534%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (101 samples, 0.08%)</title><rect x="7.7512%" y="501" width="0.0798%" height="15" fill="rgb(241,36,4)" fg:x="9807" fg:w="101"/><text x="8.0012%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (107 samples, 0.08%)</title><rect x="7.7481%" y="549" width="0.0846%" height="15" fill="rgb(241,130,17)" fg:x="9803" fg:w="107"/><text x="7.9981%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (107 samples, 0.08%)</title><rect x="7.7481%" y="533" width="0.0846%" height="15" fill="rgb(206,137,32)" fg:x="9803" fg:w="107"/><text x="7.9981%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (104 samples, 0.08%)</title><rect x="7.7504%" y="517" width="0.0822%" height="15" fill="rgb(237,228,51)" fg:x="9806" fg:w="104"/><text x="8.0004%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (113 samples, 0.09%)</title><rect x="7.7441%" y="581" width="0.0893%" height="15" fill="rgb(243,6,42)" fg:x="9798" fg:w="113"/><text x="7.9941%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (113 samples, 0.09%)</title><rect x="7.7441%" y="565" width="0.0893%" height="15" fill="rgb(251,74,28)" fg:x="9798" fg:w="113"/><text x="7.9941%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (118 samples, 0.09%)</title><rect x="7.7409%" y="597" width="0.0933%" height="15" fill="rgb(218,20,49)" fg:x="9794" fg:w="118"/><text x="7.9909%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids (877 samples, 0.69%)</title><rect x="7.1450%" y="789" width="0.6932%" height="15" fill="rgb(238,28,14)" fg:x="9040" fg:w="877"/><text x="7.3950%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (128 samples, 0.10%)</title><rect x="7.7370%" y="773" width="0.1012%" height="15" fill="rgb(229,40,46)" fg:x="9789" fg:w="128"/><text x="7.9870%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (128 samples, 0.10%)</title><rect x="7.7370%" y="757" width="0.1012%" height="15" fill="rgb(244,195,20)" fg:x="9789" fg:w="128"/><text x="7.9870%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (128 samples, 0.10%)</title><rect x="7.7370%" y="741" width="0.1012%" height="15" fill="rgb(253,56,35)" fg:x="9789" fg:w="128"/><text x="7.9870%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (128 samples, 0.10%)</title><rect x="7.7370%" y="725" width="0.1012%" height="15" fill="rgb(210,149,44)" fg:x="9789" fg:w="128"/><text x="7.9870%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (128 samples, 0.10%)</title><rect x="7.7370%" y="709" width="0.1012%" height="15" fill="rgb(240,135,12)" fg:x="9789" fg:w="128"/><text x="7.9870%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.10%)</title><rect x="7.7370%" y="693" width="0.1012%" height="15" fill="rgb(251,24,50)" fg:x="9789" fg:w="128"/><text x="7.9870%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.10%)</title><rect x="7.7370%" y="677" width="0.1012%" height="15" fill="rgb(243,200,47)" fg:x="9789" fg:w="128"/><text x="7.9870%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.10%)</title><rect x="7.7370%" y="661" width="0.1012%" height="15" fill="rgb(224,166,26)" fg:x="9789" fg:w="128"/><text x="7.9870%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.10%)</title><rect x="7.7370%" y="645" width="0.1012%" height="15" fill="rgb(233,0,47)" fg:x="9789" fg:w="128"/><text x="7.9870%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.10%)</title><rect x="7.7370%" y="629" width="0.1012%" height="15" fill="rgb(253,80,5)" fg:x="9789" fg:w="128"/><text x="7.9870%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (125 samples, 0.10%)</title><rect x="7.7394%" y="613" width="0.0988%" height="15" fill="rgb(214,133,25)" fg:x="9792" fg:w="125"/><text x="7.9894%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (51 samples, 0.04%)</title><rect x="7.8429%" y="741" width="0.0403%" height="15" fill="rgb(209,27,14)" fg:x="9923" fg:w="51"/><text x="8.0929%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (42 samples, 0.03%)</title><rect x="7.8500%" y="725" width="0.0332%" height="15" fill="rgb(219,102,51)" fg:x="9932" fg:w="42"/><text x="8.1000%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.01%)</title><rect x="7.8951%" y="629" width="0.0119%" height="15" fill="rgb(237,18,16)" fg:x="9989" fg:w="15"/><text x="8.1451%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (25 samples, 0.02%)</title><rect x="7.8887%" y="677" width="0.0198%" height="15" fill="rgb(241,85,17)" fg:x="9981" fg:w="25"/><text x="8.1387%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (25 samples, 0.02%)</title><rect x="7.8887%" y="661" width="0.0198%" height="15" fill="rgb(236,90,42)" fg:x="9981" fg:w="25"/><text x="8.1387%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (25 samples, 0.02%)</title><rect x="7.8887%" y="645" width="0.0198%" height="15" fill="rgb(249,57,21)" fg:x="9981" fg:w="25"/><text x="8.1387%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (23 samples, 0.02%)</title><rect x="7.9132%" y="645" width="0.0182%" height="15" fill="rgb(243,12,36)" fg:x="10012" fg:w="23"/><text x="8.1632%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (61 samples, 0.05%)</title><rect x="7.8880%" y="709" width="0.0482%" height="15" fill="rgb(253,128,47)" fg:x="9980" fg:w="61"/><text x="8.1380%" y="719.50"></text></g><g><title> N]&gt;::hash (61 samples, 0.05%)</title><rect x="7.8880%" y="693" width="0.0482%" height="15" fill="rgb(207,33,20)" fg:x="9980" fg:w="61"/><text x="8.1380%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (35 samples, 0.03%)</title><rect x="7.9085%" y="677" width="0.0277%" height="15" fill="rgb(233,215,35)" fg:x="10006" fg:w="35"/><text x="8.1585%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (34 samples, 0.03%)</title><rect x="7.9093%" y="661" width="0.0269%" height="15" fill="rgb(249,188,52)" fg:x="10007" fg:w="34"/><text x="8.1593%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (62 samples, 0.05%)</title><rect x="7.8880%" y="741" width="0.0490%" height="15" fill="rgb(225,12,32)" fg:x="9980" fg:w="62"/><text x="8.1380%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (62 samples, 0.05%)</title><rect x="7.8880%" y="725" width="0.0490%" height="15" fill="rgb(247,98,14)" fg:x="9980" fg:w="62"/><text x="8.1380%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (130 samples, 0.10%)</title><rect x="7.8429%" y="757" width="0.1027%" height="15" fill="rgb(247,219,48)" fg:x="9923" fg:w="130"/><text x="8.0929%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (17 samples, 0.01%)</title><rect x="7.9812%" y="725" width="0.0134%" height="15" fill="rgb(253,60,48)" fg:x="10098" fg:w="17"/><text x="8.2312%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (203 samples, 0.16%)</title><rect x="7.8382%" y="789" width="0.1604%" height="15" fill="rgb(245,15,52)" fg:x="9917" fg:w="203"/><text x="8.0882%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (202 samples, 0.16%)</title><rect x="7.8390%" y="773" width="0.1597%" height="15" fill="rgb(220,133,28)" fg:x="9918" fg:w="202"/><text x="8.0890%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (66 samples, 0.05%)</title><rect x="7.9464%" y="757" width="0.0522%" height="15" fill="rgb(217,180,4)" fg:x="10054" fg:w="66"/><text x="8.1964%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (57 samples, 0.05%)</title><rect x="7.9536%" y="741" width="0.0451%" height="15" fill="rgb(251,24,1)" fg:x="10063" fg:w="57"/><text x="8.2036%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="8.0041%" y="741" width="0.0174%" height="15" fill="rgb(212,185,49)" fg:x="10127" fg:w="22"/><text x="8.2541%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.01%)</title><rect x="8.0105%" y="725" width="0.0111%" height="15" fill="rgb(215,175,22)" fg:x="10135" fg:w="14"/><text x="8.2605%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (29 samples, 0.02%)</title><rect x="8.0239%" y="741" width="0.0229%" height="15" fill="rgb(250,205,14)" fg:x="10152" fg:w="29"/><text x="8.2739%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (29 samples, 0.02%)</title><rect x="8.0239%" y="725" width="0.0229%" height="15" fill="rgb(225,211,22)" fg:x="10152" fg:w="29"/><text x="8.2739%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (29 samples, 0.02%)</title><rect x="8.0239%" y="709" width="0.0229%" height="15" fill="rgb(251,179,42)" fg:x="10152" fg:w="29"/><text x="8.2739%" y="719.50"></text></g><g><title> N]&gt;::hash (29 samples, 0.02%)</title><rect x="8.0239%" y="693" width="0.0229%" height="15" fill="rgb(208,216,51)" fg:x="10152" fg:w="29"/><text x="8.2739%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (16 samples, 0.01%)</title><rect x="8.0342%" y="677" width="0.0126%" height="15" fill="rgb(235,36,11)" fg:x="10165" fg:w="16"/><text x="8.2842%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="8.0350%" y="661" width="0.0119%" height="15" fill="rgb(213,189,28)" fg:x="10166" fg:w="15"/><text x="8.2850%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (60 samples, 0.05%)</title><rect x="8.0041%" y="757" width="0.0474%" height="15" fill="rgb(227,203,42)" fg:x="10127" fg:w="60"/><text x="8.2541%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="8.1029%" y="629" width="0.0119%" height="15" fill="rgb(244,72,36)" fg:x="10252" fg:w="15"/><text x="8.3529%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.01%)</title><rect x="8.1029%" y="645" width="0.0134%" height="15" fill="rgb(213,53,17)" fg:x="10252" fg:w="17"/><text x="8.3529%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::new_uninitialized (21 samples, 0.02%)</title><rect x="8.1006%" y="677" width="0.0166%" height="15" fill="rgb(207,167,3)" fg:x="10249" fg:w="21"/><text x="8.3506%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::alloc::inner::do_alloc (18 samples, 0.01%)</title><rect x="8.1029%" y="661" width="0.0142%" height="15" fill="rgb(216,98,30)" fg:x="10252" fg:w="18"/><text x="8.3529%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fallible_with_capacity (38 samples, 0.03%)</title><rect x="8.0935%" y="693" width="0.0300%" height="15" fill="rgb(236,123,15)" fg:x="10240" fg:w="38"/><text x="8.3435%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_resize (44 samples, 0.03%)</title><rect x="8.0895%" y="709" width="0.0348%" height="15" fill="rgb(248,81,50)" fg:x="10235" fg:w="44"/><text x="8.3395%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (74 samples, 0.06%)</title><rect x="8.0666%" y="725" width="0.0585%" height="15" fill="rgb(214,120,4)" fg:x="10206" fg:w="74"/><text x="8.3166%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (96 samples, 0.08%)</title><rect x="8.0571%" y="741" width="0.0759%" height="15" fill="rgb(208,179,34)" fg:x="10194" fg:w="96"/><text x="8.3071%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (121 samples, 0.10%)</title><rect x="8.0531%" y="757" width="0.0956%" height="15" fill="rgb(227,140,7)" fg:x="10189" fg:w="121"/><text x="8.3031%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (20 samples, 0.02%)</title><rect x="8.1330%" y="741" width="0.0158%" height="15" fill="rgb(214,22,6)" fg:x="10290" fg:w="20"/><text x="8.3830%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (194 samples, 0.15%)</title><rect x="7.9986%" y="773" width="0.1533%" height="15" fill="rgb(207,137,27)" fg:x="10120" fg:w="194"/><text x="8.2486%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::set::HashSet&lt;T,S&gt;::insert (196 samples, 0.15%)</title><rect x="7.9986%" y="789" width="0.1549%" height="15" fill="rgb(210,8,46)" fg:x="10120" fg:w="196"/><text x="8.2486%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_no_cycles (2,038 samples, 1.61%)</title><rect x="6.5498%" y="805" width="1.6108%" height="15" fill="rgb(240,16,54)" fg:x="8287" fg:w="2038"/><text x="6.7998%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="8.1828%" y="789" width="0.0182%" height="15" fill="rgb(211,209,29)" fg:x="10353" fg:w="23"/><text x="8.4328%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="8.1836%" y="773" width="0.0174%" height="15" fill="rgb(226,228,24)" fg:x="10354" fg:w="22"/><text x="8.4336%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="8.1907%" y="757" width="0.0103%" height="15" fill="rgb(222,84,9)" fg:x="10363" fg:w="13"/><text x="8.4407%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (24 samples, 0.02%)</title><rect x="8.2420%" y="581" width="0.0190%" height="15" fill="rgb(234,203,30)" fg:x="10428" fg:w="24"/><text x="8.4920%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.02%)</title><rect x="8.2452%" y="565" width="0.0158%" height="15" fill="rgb(238,109,14)" fg:x="10432" fg:w="20"/><text x="8.4952%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (14 samples, 0.01%)</title><rect x="8.2650%" y="517" width="0.0111%" height="15" fill="rgb(233,206,34)" fg:x="10457" fg:w="14"/><text x="8.5150%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (14 samples, 0.01%)</title><rect x="8.2650%" y="501" width="0.0111%" height="15" fill="rgb(220,167,47)" fg:x="10457" fg:w="14"/><text x="8.5150%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="8.2658%" y="485" width="0.0103%" height="15" fill="rgb(238,105,10)" fg:x="10458" fg:w="13"/><text x="8.5158%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (18 samples, 0.01%)</title><rect x="8.2792%" y="485" width="0.0142%" height="15" fill="rgb(213,227,17)" fg:x="10475" fg:w="18"/><text x="8.5292%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (38 samples, 0.03%)</title><rect x="8.2650%" y="549" width="0.0300%" height="15" fill="rgb(217,132,38)" fg:x="10457" fg:w="38"/><text x="8.5150%" y="559.50"></text></g><g><title> N]&gt;::hash (38 samples, 0.03%)</title><rect x="8.2650%" y="533" width="0.0300%" height="15" fill="rgb(242,146,4)" fg:x="10457" fg:w="38"/><text x="8.5150%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (24 samples, 0.02%)</title><rect x="8.2760%" y="517" width="0.0190%" height="15" fill="rgb(212,61,9)" fg:x="10471" fg:w="24"/><text x="8.5260%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="8.2760%" y="501" width="0.0190%" height="15" fill="rgb(247,126,22)" fg:x="10471" fg:w="24"/><text x="8.5260%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (40 samples, 0.03%)</title><rect x="8.2642%" y="581" width="0.0316%" height="15" fill="rgb(220,196,2)" fg:x="10456" fg:w="40"/><text x="8.5142%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (40 samples, 0.03%)</title><rect x="8.2642%" y="565" width="0.0316%" height="15" fill="rgb(208,46,4)" fg:x="10456" fg:w="40"/><text x="8.5142%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (81 samples, 0.06%)</title><rect x="8.2405%" y="597" width="0.0640%" height="15" fill="rgb(252,104,46)" fg:x="10426" fg:w="81"/><text x="8.4905%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (23 samples, 0.02%)</title><rect x="8.3274%" y="565" width="0.0182%" height="15" fill="rgb(237,152,48)" fg:x="10536" fg:w="23"/><text x="8.5774%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (139 samples, 0.11%)</title><rect x="8.2373%" y="661" width="0.1099%" height="15" fill="rgb(221,59,37)" fg:x="10422" fg:w="139"/><text x="8.4873%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (139 samples, 0.11%)</title><rect x="8.2373%" y="645" width="0.1099%" height="15" fill="rgb(209,202,51)" fg:x="10422" fg:w="139"/><text x="8.4873%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (139 samples, 0.11%)</title><rect x="8.2373%" y="629" width="0.1099%" height="15" fill="rgb(228,81,30)" fg:x="10422" fg:w="139"/><text x="8.4873%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (139 samples, 0.11%)</title><rect x="8.2373%" y="613" width="0.1099%" height="15" fill="rgb(227,42,39)" fg:x="10422" fg:w="139"/><text x="8.4873%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (52 samples, 0.04%)</title><rect x="8.3061%" y="597" width="0.0411%" height="15" fill="rgb(221,26,2)" fg:x="10509" fg:w="52"/><text x="8.5561%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (47 samples, 0.04%)</title><rect x="8.3100%" y="581" width="0.0371%" height="15" fill="rgb(254,61,31)" fg:x="10514" fg:w="47"/><text x="8.5600%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (28 samples, 0.02%)</title><rect x="8.3480%" y="549" width="0.0221%" height="15" fill="rgb(222,173,38)" fg:x="10562" fg:w="28"/><text x="8.5980%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (26 samples, 0.02%)</title><rect x="8.3495%" y="533" width="0.0205%" height="15" fill="rgb(218,50,12)" fg:x="10564" fg:w="26"/><text x="8.5995%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.01%)</title><rect x="8.3827%" y="453" width="0.0103%" height="15" fill="rgb(223,88,40)" fg:x="10606" fg:w="13"/><text x="8.6327%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (28 samples, 0.02%)</title><rect x="8.3717%" y="549" width="0.0221%" height="15" fill="rgb(237,54,19)" fg:x="10592" fg:w="28"/><text x="8.6217%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (28 samples, 0.02%)</title><rect x="8.3717%" y="533" width="0.0221%" height="15" fill="rgb(251,129,25)" fg:x="10592" fg:w="28"/><text x="8.6217%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (28 samples, 0.02%)</title><rect x="8.3717%" y="517" width="0.0221%" height="15" fill="rgb(238,97,19)" fg:x="10592" fg:w="28"/><text x="8.6217%" y="527.50"></text></g><g><title> N]&gt;::hash (28 samples, 0.02%)</title><rect x="8.3717%" y="501" width="0.0221%" height="15" fill="rgb(240,169,18)" fg:x="10592" fg:w="28"/><text x="8.6217%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (17 samples, 0.01%)</title><rect x="8.3804%" y="485" width="0.0134%" height="15" fill="rgb(230,187,49)" fg:x="10603" fg:w="17"/><text x="8.6304%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="8.3804%" y="469" width="0.0134%" height="15" fill="rgb(209,44,26)" fg:x="10603" fg:w="17"/><text x="8.6304%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (64 samples, 0.05%)</title><rect x="8.3480%" y="565" width="0.0506%" height="15" fill="rgb(244,0,6)" fg:x="10562" fg:w="64"/><text x="8.5980%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (108 samples, 0.09%)</title><rect x="8.3472%" y="661" width="0.0854%" height="15" fill="rgb(248,18,21)" fg:x="10561" fg:w="108"/><text x="8.5972%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (108 samples, 0.09%)</title><rect x="8.3472%" y="645" width="0.0854%" height="15" fill="rgb(245,180,19)" fg:x="10561" fg:w="108"/><text x="8.5972%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (108 samples, 0.09%)</title><rect x="8.3472%" y="629" width="0.0854%" height="15" fill="rgb(252,118,36)" fg:x="10561" fg:w="108"/><text x="8.5972%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (108 samples, 0.09%)</title><rect x="8.3472%" y="613" width="0.0854%" height="15" fill="rgb(210,224,19)" fg:x="10561" fg:w="108"/><text x="8.5972%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (107 samples, 0.08%)</title><rect x="8.3480%" y="597" width="0.0846%" height="15" fill="rgb(218,30,24)" fg:x="10562" fg:w="107"/><text x="8.5980%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (107 samples, 0.08%)</title><rect x="8.3480%" y="581" width="0.0846%" height="15" fill="rgb(219,75,50)" fg:x="10562" fg:w="107"/><text x="8.5980%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (42 samples, 0.03%)</title><rect x="8.3993%" y="565" width="0.0332%" height="15" fill="rgb(234,72,50)" fg:x="10627" fg:w="42"/><text x="8.6493%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (35 samples, 0.03%)</title><rect x="8.4049%" y="549" width="0.0277%" height="15" fill="rgb(219,100,48)" fg:x="10634" fg:w="35"/><text x="8.6549%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (252 samples, 0.20%)</title><rect x="8.2341%" y="725" width="0.1992%" height="15" fill="rgb(253,5,41)" fg:x="10418" fg:w="252"/><text x="8.4841%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (250 samples, 0.20%)</title><rect x="8.2357%" y="709" width="0.1976%" height="15" fill="rgb(247,181,11)" fg:x="10420" fg:w="250"/><text x="8.4857%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (250 samples, 0.20%)</title><rect x="8.2357%" y="693" width="0.1976%" height="15" fill="rgb(222,223,25)" fg:x="10420" fg:w="250"/><text x="8.4857%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (249 samples, 0.20%)</title><rect x="8.2365%" y="677" width="0.1968%" height="15" fill="rgb(214,198,28)" fg:x="10421" fg:w="249"/><text x="8.4865%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (259 samples, 0.20%)</title><rect x="8.2294%" y="773" width="0.2047%" height="15" fill="rgb(230,46,43)" fg:x="10412" fg:w="259"/><text x="8.4794%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (259 samples, 0.20%)</title><rect x="8.2294%" y="757" width="0.2047%" height="15" fill="rgb(233,65,53)" fg:x="10412" fg:w="259"/><text x="8.4794%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (259 samples, 0.20%)</title><rect x="8.2294%" y="741" width="0.2047%" height="15" fill="rgb(221,121,27)" fg:x="10412" fg:w="259"/><text x="8.4794%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::raw_vec::finish_grow (24 samples, 0.02%)</title><rect x="8.4396%" y="725" width="0.0190%" height="15" fill="rgb(247,70,47)" fg:x="10678" fg:w="24"/><text x="8.6896%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 0.02%)</title><rect x="8.4381%" y="741" width="0.0229%" height="15" fill="rgb(228,85,35)" fg:x="10676" fg:w="29"/><text x="8.6881%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::vec::Vec&lt;T,A&gt;::push (32 samples, 0.03%)</title><rect x="8.4365%" y="773" width="0.0253%" height="15" fill="rgb(209,50,18)" fg:x="10674" fg:w="32"/><text x="8.6865%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (32 samples, 0.03%)</title><rect x="8.4365%" y="757" width="0.0253%" height="15" fill="rgb(250,19,35)" fg:x="10674" fg:w="32"/><text x="8.6865%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="8.4618%" y="757" width="0.0134%" height="15" fill="rgb(253,107,29)" fg:x="10706" fg:w="17"/><text x="8.7118%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;uuid::Uuid,alloc::alloc::Global&gt;&gt; (15 samples, 0.01%)</title><rect x="8.4634%" y="741" width="0.0119%" height="15" fill="rgb(252,179,29)" fg:x="10708" fg:w="15"/><text x="8.7134%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="8.4634%" y="725" width="0.0119%" height="15" fill="rgb(238,194,6)" fg:x="10708" fg:w="15"/><text x="8.7134%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;uuid::Uuid&gt;&gt; (14 samples, 0.01%)</title><rect x="8.4641%" y="709" width="0.0111%" height="15" fill="rgb(238,164,29)" fg:x="10709" fg:w="14"/><text x="8.7141%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;uuid::Uuid&gt;&gt; (18 samples, 0.01%)</title><rect x="8.4618%" y="773" width="0.0142%" height="15" fill="rgb(224,25,9)" fg:x="10706" fg:w="18"/><text x="8.7118%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (23 samples, 0.02%)</title><rect x="8.4894%" y="565" width="0.0182%" height="15" fill="rgb(244,153,23)" fg:x="10741" fg:w="23"/><text x="8.7394%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21 samples, 0.02%)</title><rect x="8.4910%" y="549" width="0.0166%" height="15" fill="rgb(212,203,14)" fg:x="10743" fg:w="21"/><text x="8.7410%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (15 samples, 0.01%)</title><rect x="8.5108%" y="501" width="0.0119%" height="15" fill="rgb(220,164,20)" fg:x="10768" fg:w="15"/><text x="8.7608%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (15 samples, 0.01%)</title><rect x="8.5108%" y="485" width="0.0119%" height="15" fill="rgb(222,203,48)" fg:x="10768" fg:w="15"/><text x="8.7608%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="8.5108%" y="469" width="0.0119%" height="15" fill="rgb(215,159,22)" fg:x="10768" fg:w="15"/><text x="8.7608%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.02%)</title><rect x="8.5100%" y="565" width="0.0245%" height="15" fill="rgb(216,183,47)" fg:x="10767" fg:w="31"/><text x="8.7600%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (30 samples, 0.02%)</title><rect x="8.5108%" y="549" width="0.0237%" height="15" fill="rgb(229,195,25)" fg:x="10768" fg:w="30"/><text x="8.7608%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (30 samples, 0.02%)</title><rect x="8.5108%" y="533" width="0.0237%" height="15" fill="rgb(224,132,51)" fg:x="10768" fg:w="30"/><text x="8.7608%" y="543.50"></text></g><g><title> N]&gt;::hash (30 samples, 0.02%)</title><rect x="8.5108%" y="517" width="0.0237%" height="15" fill="rgb(240,63,7)" fg:x="10768" fg:w="30"/><text x="8.7608%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (15 samples, 0.01%)</title><rect x="8.5226%" y="501" width="0.0119%" height="15" fill="rgb(249,182,41)" fg:x="10783" fg:w="15"/><text x="8.7726%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="8.5234%" y="485" width="0.0111%" height="15" fill="rgb(243,47,26)" fg:x="10784" fg:w="14"/><text x="8.7734%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (59 samples, 0.05%)</title><rect x="8.4894%" y="581" width="0.0466%" height="15" fill="rgb(233,48,2)" fg:x="10741" fg:w="59"/><text x="8.7394%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (94 samples, 0.07%)</title><rect x="8.4886%" y="645" width="0.0743%" height="15" fill="rgb(244,165,34)" fg:x="10740" fg:w="94"/><text x="8.7386%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (93 samples, 0.07%)</title><rect x="8.4894%" y="629" width="0.0735%" height="15" fill="rgb(207,89,7)" fg:x="10741" fg:w="93"/><text x="8.7394%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (93 samples, 0.07%)</title><rect x="8.4894%" y="613" width="0.0735%" height="15" fill="rgb(244,117,36)" fg:x="10741" fg:w="93"/><text x="8.7394%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (93 samples, 0.07%)</title><rect x="8.4894%" y="597" width="0.0735%" height="15" fill="rgb(226,144,34)" fg:x="10741" fg:w="93"/><text x="8.7394%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (31 samples, 0.02%)</title><rect x="8.5384%" y="581" width="0.0245%" height="15" fill="rgb(213,23,19)" fg:x="10803" fg:w="31"/><text x="8.7884%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (26 samples, 0.02%)</title><rect x="8.5424%" y="565" width="0.0205%" height="15" fill="rgb(217,75,12)" fg:x="10808" fg:w="26"/><text x="8.7924%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (99 samples, 0.08%)</title><rect x="8.4871%" y="709" width="0.0782%" height="15" fill="rgb(224,159,17)" fg:x="10738" fg:w="99"/><text x="8.7371%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (98 samples, 0.08%)</title><rect x="8.4879%" y="693" width="0.0775%" height="15" fill="rgb(217,118,1)" fg:x="10739" fg:w="98"/><text x="8.7379%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (98 samples, 0.08%)</title><rect x="8.4879%" y="677" width="0.0775%" height="15" fill="rgb(232,180,48)" fg:x="10739" fg:w="98"/><text x="8.7379%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (97 samples, 0.08%)</title><rect x="8.4886%" y="661" width="0.0767%" height="15" fill="rgb(230,27,33)" fg:x="10740" fg:w="97"/><text x="8.7386%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (105 samples, 0.08%)</title><rect x="8.4831%" y="741" width="0.0830%" height="15" fill="rgb(205,31,21)" fg:x="10733" fg:w="105"/><text x="8.7331%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (105 samples, 0.08%)</title><rect x="8.4831%" y="725" width="0.0830%" height="15" fill="rgb(253,59,4)" fg:x="10733" fg:w="105"/><text x="8.7331%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (106 samples, 0.08%)</title><rect x="8.4831%" y="757" width="0.0838%" height="15" fill="rgb(224,201,9)" fg:x="10733" fg:w="106"/><text x="8.7331%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (110 samples, 0.09%)</title><rect x="8.4823%" y="773" width="0.0869%" height="15" fill="rgb(229,206,30)" fg:x="10732" fg:w="110"/><text x="8.7323%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="8.5708%" y="725" width="0.0174%" height="15" fill="rgb(212,67,47)" fg:x="10844" fg:w="22"/><text x="8.8208%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.02%)</title><rect x="8.5724%" y="709" width="0.0158%" height="15" fill="rgb(211,96,50)" fg:x="10846" fg:w="20"/><text x="8.8224%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.01%)</title><rect x="8.5961%" y="629" width="0.0119%" height="15" fill="rgb(252,114,18)" fg:x="10876" fg:w="15"/><text x="8.8461%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (29 samples, 0.02%)</title><rect x="8.5882%" y="725" width="0.0229%" height="15" fill="rgb(223,58,37)" fg:x="10866" fg:w="29"/><text x="8.8382%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (28 samples, 0.02%)</title><rect x="8.5890%" y="709" width="0.0221%" height="15" fill="rgb(237,70,4)" fg:x="10867" fg:w="28"/><text x="8.8390%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (28 samples, 0.02%)</title><rect x="8.5890%" y="693" width="0.0221%" height="15" fill="rgb(244,85,46)" fg:x="10867" fg:w="28"/><text x="8.8390%" y="703.50"></text></g><g><title> N]&gt;::hash (28 samples, 0.02%)</title><rect x="8.5890%" y="677" width="0.0221%" height="15" fill="rgb(223,39,52)" fg:x="10867" fg:w="28"/><text x="8.8390%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (21 samples, 0.02%)</title><rect x="8.5946%" y="661" width="0.0166%" height="15" fill="rgb(218,200,14)" fg:x="10874" fg:w="21"/><text x="8.8446%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="8.5946%" y="645" width="0.0166%" height="15" fill="rgb(208,171,16)" fg:x="10874" fg:w="21"/><text x="8.8446%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (53 samples, 0.04%)</title><rect x="8.5708%" y="741" width="0.0419%" height="15" fill="rgb(234,200,18)" fg:x="10844" fg:w="53"/><text x="8.8208%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (95 samples, 0.08%)</title><rect x="8.5693%" y="773" width="0.0751%" height="15" fill="rgb(228,45,11)" fg:x="10842" fg:w="95"/><text x="8.8193%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (93 samples, 0.07%)</title><rect x="8.5708%" y="757" width="0.0735%" height="15" fill="rgb(237,182,11)" fg:x="10844" fg:w="93"/><text x="8.8208%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (38 samples, 0.03%)</title><rect x="8.6143%" y="741" width="0.0300%" height="15" fill="rgb(241,175,49)" fg:x="10899" fg:w="38"/><text x="8.8643%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (30 samples, 0.02%)</title><rect x="8.6206%" y="725" width="0.0237%" height="15" fill="rgb(247,38,35)" fg:x="10907" fg:w="30"/><text x="8.8706%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (27 samples, 0.02%)</title><rect x="8.6554%" y="725" width="0.0213%" height="15" fill="rgb(228,39,49)" fg:x="10951" fg:w="27"/><text x="8.9054%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (26 samples, 0.02%)</title><rect x="8.6562%" y="709" width="0.0205%" height="15" fill="rgb(226,101,26)" fg:x="10952" fg:w="26"/><text x="8.9062%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (19 samples, 0.02%)</title><rect x="8.6768%" y="725" width="0.0150%" height="15" fill="rgb(206,141,19)" fg:x="10978" fg:w="19"/><text x="8.9268%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (19 samples, 0.02%)</title><rect x="8.6768%" y="709" width="0.0150%" height="15" fill="rgb(211,200,13)" fg:x="10978" fg:w="19"/><text x="8.9268%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (19 samples, 0.02%)</title><rect x="8.6768%" y="693" width="0.0150%" height="15" fill="rgb(241,121,6)" fg:x="10978" fg:w="19"/><text x="8.9268%" y="703.50"></text></g><g><title> N]&gt;::hash (19 samples, 0.02%)</title><rect x="8.6768%" y="677" width="0.0150%" height="15" fill="rgb(234,221,29)" fg:x="10978" fg:w="19"/><text x="8.9268%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (13 samples, 0.01%)</title><rect x="8.6815%" y="661" width="0.0103%" height="15" fill="rgb(229,136,5)" fg:x="10984" fg:w="13"/><text x="8.9315%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (50 samples, 0.04%)</title><rect x="8.6554%" y="741" width="0.0395%" height="15" fill="rgb(238,36,11)" fg:x="10951" fg:w="50"/><text x="8.9054%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (34 samples, 0.03%)</title><rect x="8.6965%" y="741" width="0.0269%" height="15" fill="rgb(251,55,41)" fg:x="11003" fg:w="34"/><text x="8.9465%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (30 samples, 0.02%)</title><rect x="8.6997%" y="725" width="0.0237%" height="15" fill="rgb(242,34,40)" fg:x="11007" fg:w="30"/><text x="8.9497%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::calculate_deleted (660 samples, 0.52%)</title><rect x="8.2033%" y="789" width="0.5216%" height="15" fill="rgb(215,42,17)" fg:x="10379" fg:w="660"/><text x="8.4533%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (102 samples, 0.08%)</title><rect x="8.6443%" y="773" width="0.0806%" height="15" fill="rgb(207,44,46)" fg:x="10937" fg:w="102"/><text x="8.8943%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (101 samples, 0.08%)</title><rect x="8.6451%" y="757" width="0.0798%" height="15" fill="rgb(211,206,28)" fg:x="10938" fg:w="101"/><text x="8.8951%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (24 samples, 0.02%)</title><rect x="8.7305%" y="581" width="0.0190%" height="15" fill="rgb(237,167,16)" fg:x="11046" fg:w="24"/><text x="8.9805%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.01%)</title><rect x="8.7352%" y="565" width="0.0142%" height="15" fill="rgb(233,66,6)" fg:x="11052" fg:w="18"/><text x="8.9852%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (22 samples, 0.02%)</title><rect x="8.7510%" y="581" width="0.0174%" height="15" fill="rgb(246,123,29)" fg:x="11072" fg:w="22"/><text x="9.0010%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (22 samples, 0.02%)</title><rect x="8.7510%" y="565" width="0.0174%" height="15" fill="rgb(209,62,40)" fg:x="11072" fg:w="22"/><text x="9.0010%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (22 samples, 0.02%)</title><rect x="8.7510%" y="549" width="0.0174%" height="15" fill="rgb(218,4,25)" fg:x="11072" fg:w="22"/><text x="9.0010%" y="559.50"></text></g><g><title> N]&gt;::hash (22 samples, 0.02%)</title><rect x="8.7510%" y="533" width="0.0174%" height="15" fill="rgb(253,91,49)" fg:x="11072" fg:w="22"/><text x="9.0010%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (14 samples, 0.01%)</title><rect x="8.7574%" y="517" width="0.0111%" height="15" fill="rgb(228,155,29)" fg:x="11080" fg:w="14"/><text x="9.0074%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (51 samples, 0.04%)</title><rect x="8.7305%" y="597" width="0.0403%" height="15" fill="rgb(243,57,37)" fg:x="11046" fg:w="51"/><text x="8.9805%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (99 samples, 0.08%)</title><rect x="8.7289%" y="661" width="0.0782%" height="15" fill="rgb(244,167,17)" fg:x="11044" fg:w="99"/><text x="8.9789%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (99 samples, 0.08%)</title><rect x="8.7289%" y="645" width="0.0782%" height="15" fill="rgb(207,181,38)" fg:x="11044" fg:w="99"/><text x="8.9789%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (99 samples, 0.08%)</title><rect x="8.7289%" y="629" width="0.0782%" height="15" fill="rgb(211,8,23)" fg:x="11044" fg:w="99"/><text x="8.9789%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (98 samples, 0.08%)</title><rect x="8.7297%" y="613" width="0.0775%" height="15" fill="rgb(235,11,44)" fg:x="11045" fg:w="98"/><text x="8.9797%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (44 samples, 0.03%)</title><rect x="8.7724%" y="597" width="0.0348%" height="15" fill="rgb(248,18,52)" fg:x="11099" fg:w="44"/><text x="9.0224%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (39 samples, 0.03%)</title><rect x="8.7763%" y="581" width="0.0308%" height="15" fill="rgb(208,4,7)" fg:x="11104" fg:w="39"/><text x="9.0263%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (107 samples, 0.08%)</title><rect x="8.7258%" y="757" width="0.0846%" height="15" fill="rgb(240,17,39)" fg:x="11040" fg:w="107"/><text x="8.9758%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (107 samples, 0.08%)</title><rect x="8.7258%" y="741" width="0.0846%" height="15" fill="rgb(207,170,3)" fg:x="11040" fg:w="107"/><text x="8.9758%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (103 samples, 0.08%)</title><rect x="8.7289%" y="725" width="0.0814%" height="15" fill="rgb(236,100,52)" fg:x="11044" fg:w="103"/><text x="8.9789%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (103 samples, 0.08%)</title><rect x="8.7289%" y="709" width="0.0814%" height="15" fill="rgb(246,78,51)" fg:x="11044" fg:w="103"/><text x="8.9789%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (103 samples, 0.08%)</title><rect x="8.7289%" y="693" width="0.0814%" height="15" fill="rgb(211,17,15)" fg:x="11044" fg:w="103"/><text x="8.9789%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (103 samples, 0.08%)</title><rect x="8.7289%" y="677" width="0.0814%" height="15" fill="rgb(209,59,46)" fg:x="11044" fg:w="103"/><text x="8.9789%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (110 samples, 0.09%)</title><rect x="8.7250%" y="789" width="0.0869%" height="15" fill="rgb(210,92,25)" fg:x="11039" fg:w="110"/><text x="8.9750%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (109 samples, 0.09%)</title><rect x="8.7258%" y="773" width="0.0862%" height="15" fill="rgb(238,174,52)" fg:x="11040" fg:w="109"/><text x="8.9758%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.02%)</title><rect x="8.8253%" y="405" width="0.0166%" height="15" fill="rgb(230,73,7)" fg:x="11166" fg:w="21"/><text x="9.0753%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.01%)</title><rect x="8.8285%" y="389" width="0.0134%" height="15" fill="rgb(243,124,40)" fg:x="11170" fg:w="17"/><text x="9.0785%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (28 samples, 0.02%)</title><rect x="8.8435%" y="405" width="0.0221%" height="15" fill="rgb(244,170,11)" fg:x="11189" fg:w="28"/><text x="9.0935%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (28 samples, 0.02%)</title><rect x="8.8435%" y="389" width="0.0221%" height="15" fill="rgb(207,114,54)" fg:x="11189" fg:w="28"/><text x="9.0935%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (28 samples, 0.02%)</title><rect x="8.8435%" y="373" width="0.0221%" height="15" fill="rgb(205,42,20)" fg:x="11189" fg:w="28"/><text x="9.0935%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (28 samples, 0.02%)</title><rect x="8.8435%" y="357" width="0.0221%" height="15" fill="rgb(230,30,28)" fg:x="11189" fg:w="28"/><text x="9.0935%" y="367.50"></text></g><g><title> N]&gt;::hash (28 samples, 0.02%)</title><rect x="8.8435%" y="341" width="0.0221%" height="15" fill="rgb(205,73,54)" fg:x="11189" fg:w="28"/><text x="9.0935%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (18 samples, 0.01%)</title><rect x="8.8514%" y="325" width="0.0142%" height="15" fill="rgb(254,227,23)" fg:x="11199" fg:w="18"/><text x="9.1014%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.01%)</title><rect x="8.8514%" y="309" width="0.0142%" height="15" fill="rgb(228,202,34)" fg:x="11199" fg:w="18"/><text x="9.1014%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (68 samples, 0.05%)</title><rect x="8.8253%" y="421" width="0.0537%" height="15" fill="rgb(222,225,37)" fg:x="11166" fg:w="68"/><text x="9.0753%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.01%)</title><rect x="8.8657%" y="405" width="0.0134%" height="15" fill="rgb(221,14,54)" fg:x="11217" fg:w="17"/><text x="9.1157%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (32 samples, 0.03%)</title><rect x="8.8846%" y="405" width="0.0253%" height="15" fill="rgb(254,102,2)" fg:x="11241" fg:w="32"/><text x="9.1346%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (37 samples, 0.03%)</title><rect x="8.8815%" y="421" width="0.0292%" height="15" fill="rgb(232,104,17)" fg:x="11237" fg:w="37"/><text x="9.1315%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (123 samples, 0.10%)</title><rect x="8.8159%" y="485" width="0.0972%" height="15" fill="rgb(250,220,14)" fg:x="11154" fg:w="123"/><text x="9.0659%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (121 samples, 0.10%)</title><rect x="8.8174%" y="469" width="0.0956%" height="15" fill="rgb(241,158,9)" fg:x="11156" fg:w="121"/><text x="9.0674%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (121 samples, 0.10%)</title><rect x="8.8174%" y="453" width="0.0956%" height="15" fill="rgb(246,9,43)" fg:x="11156" fg:w="121"/><text x="9.0674%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (118 samples, 0.09%)</title><rect x="8.8198%" y="437" width="0.0933%" height="15" fill="rgb(206,73,33)" fg:x="11159" fg:w="118"/><text x="9.0698%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (126 samples, 0.10%)</title><rect x="8.8143%" y="517" width="0.0996%" height="15" fill="rgb(222,79,8)" fg:x="11152" fg:w="126"/><text x="9.0643%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (126 samples, 0.10%)</title><rect x="8.8143%" y="501" width="0.0996%" height="15" fill="rgb(234,8,54)" fg:x="11152" fg:w="126"/><text x="9.0643%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (138 samples, 0.11%)</title><rect x="8.8119%" y="693" width="0.1091%" height="15" fill="rgb(209,134,38)" fg:x="11149" fg:w="138"/><text x="9.0619%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (138 samples, 0.11%)</title><rect x="8.8119%" y="677" width="0.1091%" height="15" fill="rgb(230,127,29)" fg:x="11149" fg:w="138"/><text x="9.0619%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (138 samples, 0.11%)</title><rect x="8.8119%" y="661" width="0.1091%" height="15" fill="rgb(242,44,41)" fg:x="11149" fg:w="138"/><text x="9.0619%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (138 samples, 0.11%)</title><rect x="8.8119%" y="645" width="0.1091%" height="15" fill="rgb(222,56,43)" fg:x="11149" fg:w="138"/><text x="9.0619%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (138 samples, 0.11%)</title><rect x="8.8119%" y="629" width="0.1091%" height="15" fill="rgb(238,39,47)" fg:x="11149" fg:w="138"/><text x="9.0619%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (138 samples, 0.11%)</title><rect x="8.8119%" y="613" width="0.1091%" height="15" fill="rgb(226,79,43)" fg:x="11149" fg:w="138"/><text x="9.0619%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (138 samples, 0.11%)</title><rect x="8.8119%" y="597" width="0.1091%" height="15" fill="rgb(242,105,53)" fg:x="11149" fg:w="138"/><text x="9.0619%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (138 samples, 0.11%)</title><rect x="8.8119%" y="581" width="0.1091%" height="15" fill="rgb(251,132,46)" fg:x="11149" fg:w="138"/><text x="9.0619%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (138 samples, 0.11%)</title><rect x="8.8119%" y="565" width="0.1091%" height="15" fill="rgb(231,77,14)" fg:x="11149" fg:w="138"/><text x="9.0619%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (138 samples, 0.11%)</title><rect x="8.8119%" y="549" width="0.1091%" height="15" fill="rgb(240,135,9)" fg:x="11149" fg:w="138"/><text x="9.0619%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (135 samples, 0.11%)</title><rect x="8.8143%" y="533" width="0.1067%" height="15" fill="rgb(248,109,14)" fg:x="11152" fg:w="135"/><text x="9.0643%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.01%)</title><rect x="8.9336%" y="405" width="0.0142%" height="15" fill="rgb(227,146,52)" fg:x="11303" fg:w="18"/><text x="9.1836%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.01%)</title><rect x="8.9360%" y="389" width="0.0119%" height="15" fill="rgb(232,54,3)" fg:x="11306" fg:w="15"/><text x="9.1860%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (15 samples, 0.01%)</title><rect x="8.9534%" y="325" width="0.0119%" height="15" fill="rgb(229,201,43)" fg:x="11328" fg:w="15"/><text x="9.2034%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (14 samples, 0.01%)</title><rect x="8.9542%" y="309" width="0.0111%" height="15" fill="rgb(252,161,33)" fg:x="11329" fg:w="14"/><text x="9.2042%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="8.9542%" y="293" width="0.0111%" height="15" fill="rgb(226,146,40)" fg:x="11329" fg:w="14"/><text x="9.2042%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (34 samples, 0.03%)</title><rect x="8.9510%" y="405" width="0.0269%" height="15" fill="rgb(219,47,25)" fg:x="11325" fg:w="34"/><text x="9.2010%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (33 samples, 0.03%)</title><rect x="8.9518%" y="389" width="0.0261%" height="15" fill="rgb(250,135,13)" fg:x="11326" fg:w="33"/><text x="9.2018%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (33 samples, 0.03%)</title><rect x="8.9518%" y="373" width="0.0261%" height="15" fill="rgb(219,229,18)" fg:x="11326" fg:w="33"/><text x="9.2018%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (31 samples, 0.02%)</title><rect x="8.9534%" y="357" width="0.0245%" height="15" fill="rgb(217,152,27)" fg:x="11328" fg:w="31"/><text x="9.2034%" y="367.50"></text></g><g><title> N]&gt;::hash (31 samples, 0.02%)</title><rect x="8.9534%" y="341" width="0.0245%" height="15" fill="rgb(225,71,47)" fg:x="11328" fg:w="31"/><text x="9.2034%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (16 samples, 0.01%)</title><rect x="8.9652%" y="325" width="0.0126%" height="15" fill="rgb(220,139,14)" fg:x="11343" fg:w="16"/><text x="9.2152%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="8.9676%" y="309" width="0.0103%" height="15" fill="rgb(247,54,32)" fg:x="11346" fg:w="13"/><text x="9.2176%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (69 samples, 0.05%)</title><rect x="8.9336%" y="421" width="0.0545%" height="15" fill="rgb(252,131,39)" fg:x="11303" fg:w="69"/><text x="9.1836%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.01%)</title><rect x="8.9779%" y="405" width="0.0103%" height="15" fill="rgb(210,108,39)" fg:x="11359" fg:w="13"/><text x="9.2279%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (34 samples, 0.03%)</title><rect x="9.0158%" y="325" width="0.0269%" height="15" fill="rgb(205,23,29)" fg:x="11407" fg:w="34"/><text x="9.2658%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (28 samples, 0.02%)</title><rect x="9.0206%" y="309" width="0.0221%" height="15" fill="rgb(246,139,46)" fg:x="11413" fg:w="28"/><text x="9.2706%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (20 samples, 0.02%)</title><rect x="9.0601%" y="213" width="0.0158%" height="15" fill="rgb(250,81,26)" fg:x="11463" fg:w="20"/><text x="9.3101%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (44 samples, 0.03%)</title><rect x="9.0451%" y="277" width="0.0348%" height="15" fill="rgb(214,104,7)" fg:x="11444" fg:w="44"/><text x="9.2951%" y="287.50"></text></g><g><title> N]&gt;::hash (44 samples, 0.03%)</title><rect x="9.0451%" y="261" width="0.0348%" height="15" fill="rgb(233,189,8)" fg:x="11444" fg:w="44"/><text x="9.2951%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (34 samples, 0.03%)</title><rect x="9.0530%" y="245" width="0.0269%" height="15" fill="rgb(228,141,17)" fg:x="11454" fg:w="34"/><text x="9.3030%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (34 samples, 0.03%)</title><rect x="9.0530%" y="229" width="0.0269%" height="15" fill="rgb(247,157,1)" fg:x="11454" fg:w="34"/><text x="9.3030%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (45 samples, 0.04%)</title><rect x="9.0451%" y="293" width="0.0356%" height="15" fill="rgb(249,225,5)" fg:x="11444" fg:w="45"/><text x="9.2951%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (46 samples, 0.04%)</title><rect x="9.0451%" y="325" width="0.0364%" height="15" fill="rgb(242,55,13)" fg:x="11444" fg:w="46"/><text x="9.2951%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (46 samples, 0.04%)</title><rect x="9.0451%" y="309" width="0.0364%" height="15" fill="rgb(230,49,50)" fg:x="11444" fg:w="46"/><text x="9.2951%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (100 samples, 0.08%)</title><rect x="9.0079%" y="373" width="0.0790%" height="15" fill="rgb(241,111,38)" fg:x="11397" fg:w="100"/><text x="9.2579%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (93 samples, 0.07%)</title><rect x="9.0135%" y="357" width="0.0735%" height="15" fill="rgb(252,155,4)" fg:x="11404" fg:w="93"/><text x="9.2635%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (92 samples, 0.07%)</title><rect x="9.0142%" y="341" width="0.0727%" height="15" fill="rgb(212,69,32)" fg:x="11405" fg:w="92"/><text x="9.2642%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (15 samples, 0.01%)</title><rect x="9.0949%" y="341" width="0.0119%" height="15" fill="rgb(243,107,47)" fg:x="11507" fg:w="15"/><text x="9.3449%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (29 samples, 0.02%)</title><rect x="9.0870%" y="373" width="0.0229%" height="15" fill="rgb(247,130,12)" fg:x="11497" fg:w="29"/><text x="9.3370%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (27 samples, 0.02%)</title><rect x="9.0885%" y="357" width="0.0213%" height="15" fill="rgb(233,74,16)" fg:x="11499" fg:w="27"/><text x="9.3385%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (151 samples, 0.12%)</title><rect x="8.9921%" y="405" width="0.1193%" height="15" fill="rgb(208,58,18)" fg:x="11377" fg:w="151"/><text x="9.2421%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (146 samples, 0.12%)</title><rect x="8.9961%" y="389" width="0.1154%" height="15" fill="rgb(242,225,1)" fg:x="11382" fg:w="146"/><text x="9.2461%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (187 samples, 0.15%)</title><rect x="8.9897%" y="421" width="0.1478%" height="15" fill="rgb(249,39,40)" fg:x="11374" fg:w="187"/><text x="9.2397%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (33 samples, 0.03%)</title><rect x="9.1115%" y="405" width="0.0261%" height="15" fill="rgb(207,72,44)" fg:x="11528" fg:w="33"/><text x="9.3615%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (272 samples, 0.21%)</title><rect x="8.9257%" y="501" width="0.2150%" height="15" fill="rgb(215,193,12)" fg:x="11293" fg:w="272"/><text x="9.1757%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (264 samples, 0.21%)</title><rect x="8.9320%" y="485" width="0.2087%" height="15" fill="rgb(248,41,39)" fg:x="11301" fg:w="264"/><text x="9.1820%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (264 samples, 0.21%)</title><rect x="8.9320%" y="469" width="0.2087%" height="15" fill="rgb(253,85,4)" fg:x="11301" fg:w="264"/><text x="9.1820%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (264 samples, 0.21%)</title><rect x="8.9320%" y="453" width="0.2087%" height="15" fill="rgb(243,70,31)" fg:x="11301" fg:w="264"/><text x="9.1820%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (263 samples, 0.21%)</title><rect x="8.9328%" y="437" width="0.2079%" height="15" fill="rgb(253,195,26)" fg:x="11302" fg:w="263"/><text x="9.1828%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::ids (417 samples, 0.33%)</title><rect x="8.8119%" y="725" width="0.3296%" height="15" fill="rgb(243,42,11)" fg:x="11149" fg:w="417"/><text x="9.0619%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (417 samples, 0.33%)</title><rect x="8.8119%" y="709" width="0.3296%" height="15" fill="rgb(239,66,17)" fg:x="11149" fg:w="417"/><text x="9.0619%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (279 samples, 0.22%)</title><rect x="8.9210%" y="693" width="0.2205%" height="15" fill="rgb(217,132,21)" fg:x="11287" fg:w="279"/><text x="9.1710%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (279 samples, 0.22%)</title><rect x="8.9210%" y="677" width="0.2205%" height="15" fill="rgb(252,202,21)" fg:x="11287" fg:w="279"/><text x="9.1710%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (279 samples, 0.22%)</title><rect x="8.9210%" y="661" width="0.2205%" height="15" fill="rgb(233,98,36)" fg:x="11287" fg:w="279"/><text x="9.1710%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (279 samples, 0.22%)</title><rect x="8.9210%" y="645" width="0.2205%" height="15" fill="rgb(216,153,54)" fg:x="11287" fg:w="279"/><text x="9.1710%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (279 samples, 0.22%)</title><rect x="8.9210%" y="629" width="0.2205%" height="15" fill="rgb(250,99,7)" fg:x="11287" fg:w="279"/><text x="9.1710%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (279 samples, 0.22%)</title><rect x="8.9210%" y="613" width="0.2205%" height="15" fill="rgb(207,56,50)" fg:x="11287" fg:w="279"/><text x="9.1710%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (279 samples, 0.22%)</title><rect x="8.9210%" y="597" width="0.2205%" height="15" fill="rgb(244,61,34)" fg:x="11287" fg:w="279"/><text x="9.1710%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (279 samples, 0.22%)</title><rect x="8.9210%" y="581" width="0.2205%" height="15" fill="rgb(241,50,38)" fg:x="11287" fg:w="279"/><text x="9.1710%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (279 samples, 0.22%)</title><rect x="8.9210%" y="565" width="0.2205%" height="15" fill="rgb(212,166,30)" fg:x="11287" fg:w="279"/><text x="9.1710%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (279 samples, 0.22%)</title><rect x="8.9210%" y="549" width="0.2205%" height="15" fill="rgb(249,127,32)" fg:x="11287" fg:w="279"/><text x="9.1710%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (279 samples, 0.22%)</title><rect x="8.9210%" y="533" width="0.2205%" height="15" fill="rgb(209,103,0)" fg:x="11287" fg:w="279"/><text x="9.1710%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (273 samples, 0.22%)</title><rect x="8.9257%" y="517" width="0.2158%" height="15" fill="rgb(238,209,51)" fg:x="11293" fg:w="273"/><text x="9.1757%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="9.1447%" y="549" width="0.0158%" height="15" fill="rgb(237,56,23)" fg:x="11570" fg:w="20"/><text x="9.3947%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.01%)</title><rect x="9.1470%" y="533" width="0.0134%" height="15" fill="rgb(215,153,46)" fg:x="11573" fg:w="17"/><text x="9.3970%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (14 samples, 0.01%)</title><rect x="9.1494%" y="517" width="0.0111%" height="15" fill="rgb(224,49,31)" fg:x="11576" fg:w="14"/><text x="9.3994%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (23 samples, 0.02%)</title><rect x="9.1747%" y="421" width="0.0182%" height="15" fill="rgb(250,18,42)" fg:x="11608" fg:w="23"/><text x="9.4247%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21 samples, 0.02%)</title><rect x="9.1763%" y="405" width="0.0166%" height="15" fill="rgb(215,176,39)" fg:x="11610" fg:w="21"/><text x="9.4263%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (30 samples, 0.02%)</title><rect x="9.1992%" y="421" width="0.0237%" height="15" fill="rgb(223,77,29)" fg:x="11639" fg:w="30"/><text x="9.4492%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (30 samples, 0.02%)</title><rect x="9.1992%" y="405" width="0.0237%" height="15" fill="rgb(234,94,52)" fg:x="11639" fg:w="30"/><text x="9.4492%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (30 samples, 0.02%)</title><rect x="9.1992%" y="389" width="0.0237%" height="15" fill="rgb(220,154,50)" fg:x="11639" fg:w="30"/><text x="9.4492%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (30 samples, 0.02%)</title><rect x="9.1992%" y="373" width="0.0237%" height="15" fill="rgb(212,11,10)" fg:x="11639" fg:w="30"/><text x="9.4492%" y="383.50"></text></g><g><title> N]&gt;::hash (30 samples, 0.02%)</title><rect x="9.1992%" y="357" width="0.0237%" height="15" fill="rgb(205,166,19)" fg:x="11639" fg:w="30"/><text x="9.4492%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (17 samples, 0.01%)</title><rect x="9.2095%" y="341" width="0.0134%" height="15" fill="rgb(244,198,16)" fg:x="11652" fg:w="17"/><text x="9.4595%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="9.2110%" y="325" width="0.0119%" height="15" fill="rgb(219,69,12)" fg:x="11654" fg:w="15"/><text x="9.4610%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (68 samples, 0.05%)</title><rect x="9.1747%" y="437" width="0.0537%" height="15" fill="rgb(245,30,7)" fg:x="11608" fg:w="68"/><text x="9.4247%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (37 samples, 0.03%)</title><rect x="9.2514%" y="341" width="0.0292%" height="15" fill="rgb(218,221,48)" fg:x="11705" fg:w="37"/><text x="9.5014%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (32 samples, 0.03%)</title><rect x="9.2553%" y="325" width="0.0253%" height="15" fill="rgb(216,66,15)" fg:x="11710" fg:w="32"/><text x="9.5053%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (19 samples, 0.02%)</title><rect x="9.2861%" y="261" width="0.0150%" height="15" fill="rgb(226,122,50)" fg:x="11749" fg:w="19"/><text x="9.5361%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (19 samples, 0.02%)</title><rect x="9.2861%" y="245" width="0.0150%" height="15" fill="rgb(239,156,16)" fg:x="11749" fg:w="19"/><text x="9.5361%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.01%)</title><rect x="9.2869%" y="229" width="0.0142%" height="15" fill="rgb(224,27,38)" fg:x="11750" fg:w="18"/><text x="9.5369%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.01%)</title><rect x="9.2893%" y="213" width="0.0119%" height="15" fill="rgb(224,39,27)" fg:x="11753" fg:w="15"/><text x="9.5393%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.01%)</title><rect x="9.3067%" y="229" width="0.0103%" height="15" fill="rgb(215,92,29)" fg:x="11775" fg:w="13"/><text x="9.5567%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (43 samples, 0.03%)</title><rect x="9.2853%" y="341" width="0.0340%" height="15" fill="rgb(207,159,16)" fg:x="11748" fg:w="43"/><text x="9.5353%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (42 samples, 0.03%)</title><rect x="9.2861%" y="325" width="0.0332%" height="15" fill="rgb(238,163,47)" fg:x="11749" fg:w="42"/><text x="9.5361%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (42 samples, 0.03%)</title><rect x="9.2861%" y="309" width="0.0332%" height="15" fill="rgb(219,91,49)" fg:x="11749" fg:w="42"/><text x="9.5361%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (42 samples, 0.03%)</title><rect x="9.2861%" y="293" width="0.0332%" height="15" fill="rgb(227,167,31)" fg:x="11749" fg:w="42"/><text x="9.5361%" y="303.50"></text></g><g><title> N]&gt;::hash (42 samples, 0.03%)</title><rect x="9.2861%" y="277" width="0.0332%" height="15" fill="rgb(234,80,54)" fg:x="11749" fg:w="42"/><text x="9.5361%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (22 samples, 0.02%)</title><rect x="9.3019%" y="261" width="0.0174%" height="15" fill="rgb(212,114,2)" fg:x="11769" fg:w="22"/><text x="9.5519%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="9.3027%" y="245" width="0.0166%" height="15" fill="rgb(234,50,24)" fg:x="11770" fg:w="21"/><text x="9.5527%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (95 samples, 0.08%)</title><rect x="9.2474%" y="389" width="0.0751%" height="15" fill="rgb(221,68,8)" fg:x="11700" fg:w="95"/><text x="9.4974%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (90 samples, 0.07%)</title><rect x="9.2514%" y="373" width="0.0711%" height="15" fill="rgb(254,180,31)" fg:x="11705" fg:w="90"/><text x="9.5014%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (90 samples, 0.07%)</title><rect x="9.2514%" y="357" width="0.0711%" height="15" fill="rgb(247,130,50)" fg:x="11705" fg:w="90"/><text x="9.5014%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (13 samples, 0.01%)</title><rect x="9.3336%" y="357" width="0.0103%" height="15" fill="rgb(211,109,4)" fg:x="11809" fg:w="13"/><text x="9.5836%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (32 samples, 0.03%)</title><rect x="9.3241%" y="373" width="0.0253%" height="15" fill="rgb(238,50,21)" fg:x="11797" fg:w="32"/><text x="9.5741%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (35 samples, 0.03%)</title><rect x="9.3225%" y="389" width="0.0277%" height="15" fill="rgb(225,57,45)" fg:x="11795" fg:w="35"/><text x="9.5725%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (149 samples, 0.12%)</title><rect x="9.2355%" y="405" width="0.1178%" height="15" fill="rgb(209,196,50)" fg:x="11685" fg:w="149"/><text x="9.4855%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (152 samples, 0.12%)</title><rect x="9.2340%" y="421" width="0.1201%" height="15" fill="rgb(242,140,13)" fg:x="11683" fg:w="152"/><text x="9.4840%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (210 samples, 0.17%)</title><rect x="9.2300%" y="437" width="0.1660%" height="15" fill="rgb(217,111,7)" fg:x="11678" fg:w="210"/><text x="9.4800%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (53 samples, 0.04%)</title><rect x="9.3541%" y="421" width="0.0419%" height="15" fill="rgb(253,193,51)" fg:x="11835" fg:w="53"/><text x="9.6041%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (286 samples, 0.23%)</title><rect x="9.1731%" y="469" width="0.2260%" height="15" fill="rgb(252,70,29)" fg:x="11606" fg:w="286"/><text x="9.4231%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (285 samples, 0.23%)</title><rect x="9.1739%" y="453" width="0.2253%" height="15" fill="rgb(232,127,12)" fg:x="11607" fg:w="285"/><text x="9.4239%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (289 samples, 0.23%)</title><rect x="9.1715%" y="501" width="0.2284%" height="15" fill="rgb(211,180,21)" fg:x="11604" fg:w="289"/><text x="9.4215%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (288 samples, 0.23%)</title><rect x="9.1723%" y="485" width="0.2276%" height="15" fill="rgb(229,72,13)" fg:x="11605" fg:w="288"/><text x="9.4223%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (745 samples, 0.59%)</title><rect x="8.8119%" y="773" width="0.5888%" height="15" fill="rgb(240,211,49)" fg:x="11149" fg:w="745"/><text x="9.0619%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (745 samples, 0.59%)</title><rect x="8.8119%" y="757" width="0.5888%" height="15" fill="rgb(219,149,40)" fg:x="11149" fg:w="745"/><text x="9.0619%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (745 samples, 0.59%)</title><rect x="8.8119%" y="741" width="0.5888%" height="15" fill="rgb(210,127,46)" fg:x="11149" fg:w="745"/><text x="9.0619%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (325 samples, 0.26%)</title><rect x="9.1439%" y="725" width="0.2569%" height="15" fill="rgb(220,106,7)" fg:x="11569" fg:w="325"/><text x="9.3939%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (325 samples, 0.26%)</title><rect x="9.1439%" y="709" width="0.2569%" height="15" fill="rgb(249,31,22)" fg:x="11569" fg:w="325"/><text x="9.3939%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (325 samples, 0.26%)</title><rect x="9.1439%" y="693" width="0.2569%" height="15" fill="rgb(253,1,49)" fg:x="11569" fg:w="325"/><text x="9.3939%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (325 samples, 0.26%)</title><rect x="9.1439%" y="677" width="0.2569%" height="15" fill="rgb(227,144,33)" fg:x="11569" fg:w="325"/><text x="9.3939%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (325 samples, 0.26%)</title><rect x="9.1439%" y="661" width="0.2569%" height="15" fill="rgb(249,163,44)" fg:x="11569" fg:w="325"/><text x="9.3939%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (325 samples, 0.26%)</title><rect x="9.1439%" y="645" width="0.2569%" height="15" fill="rgb(234,15,39)" fg:x="11569" fg:w="325"/><text x="9.3939%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (325 samples, 0.26%)</title><rect x="9.1439%" y="629" width="0.2569%" height="15" fill="rgb(207,66,16)" fg:x="11569" fg:w="325"/><text x="9.3939%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (325 samples, 0.26%)</title><rect x="9.1439%" y="613" width="0.2569%" height="15" fill="rgb(233,112,24)" fg:x="11569" fg:w="325"/><text x="9.3939%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (325 samples, 0.26%)</title><rect x="9.1439%" y="597" width="0.2569%" height="15" fill="rgb(230,90,22)" fg:x="11569" fg:w="325"/><text x="9.3939%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (325 samples, 0.26%)</title><rect x="9.1439%" y="581" width="0.2569%" height="15" fill="rgb(229,61,13)" fg:x="11569" fg:w="325"/><text x="9.3939%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (324 samples, 0.26%)</title><rect x="9.1447%" y="565" width="0.2561%" height="15" fill="rgb(225,57,24)" fg:x="11570" fg:w="324"/><text x="9.3947%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (304 samples, 0.24%)</title><rect x="9.1605%" y="549" width="0.2403%" height="15" fill="rgb(208,169,48)" fg:x="11590" fg:w="304"/><text x="9.4105%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (302 samples, 0.24%)</title><rect x="9.1620%" y="533" width="0.2387%" height="15" fill="rgb(244,218,51)" fg:x="11592" fg:w="302"/><text x="9.4120%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (301 samples, 0.24%)</title><rect x="9.1628%" y="517" width="0.2379%" height="15" fill="rgb(214,148,10)" fg:x="11593" fg:w="301"/><text x="9.4128%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.02%)</title><rect x="9.4165%" y="469" width="0.0166%" height="15" fill="rgb(225,174,27)" fg:x="11914" fg:w="21"/><text x="9.6665%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.01%)</title><rect x="9.4189%" y="453" width="0.0142%" height="15" fill="rgb(230,96,26)" fg:x="11917" fg:w="18"/><text x="9.6689%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (27 samples, 0.02%)</title><rect x="9.4347%" y="437" width="0.0213%" height="15" fill="rgb(232,10,30)" fg:x="11937" fg:w="27"/><text x="9.6847%" y="447.50"></text></g><g><title> N]&gt;::hash (27 samples, 0.02%)</title><rect x="9.4347%" y="421" width="0.0213%" height="15" fill="rgb(222,8,50)" fg:x="11937" fg:w="27"/><text x="9.6847%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (15 samples, 0.01%)</title><rect x="9.4442%" y="405" width="0.0119%" height="15" fill="rgb(213,81,27)" fg:x="11949" fg:w="15"/><text x="9.6942%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="9.4442%" y="389" width="0.0119%" height="15" fill="rgb(245,50,10)" fg:x="11949" fg:w="15"/><text x="9.6942%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (28 samples, 0.02%)</title><rect x="9.4347%" y="469" width="0.0221%" height="15" fill="rgb(216,100,18)" fg:x="11937" fg:w="28"/><text x="9.6847%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (28 samples, 0.02%)</title><rect x="9.4347%" y="453" width="0.0221%" height="15" fill="rgb(236,147,54)" fg:x="11937" fg:w="28"/><text x="9.6847%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (55 samples, 0.04%)</title><rect x="9.4165%" y="485" width="0.0435%" height="15" fill="rgb(205,143,26)" fg:x="11914" fg:w="55"/><text x="9.6665%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (38 samples, 0.03%)</title><rect x="9.4608%" y="485" width="0.0300%" height="15" fill="rgb(236,26,9)" fg:x="11970" fg:w="38"/><text x="9.7108%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (36 samples, 0.03%)</title><rect x="9.4624%" y="469" width="0.0285%" height="15" fill="rgb(221,165,53)" fg:x="11972" fg:w="36"/><text x="9.7124%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (100 samples, 0.08%)</title><rect x="9.4142%" y="501" width="0.0790%" height="15" fill="rgb(214,110,17)" fg:x="11911" fg:w="100"/><text x="9.6642%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (111 samples, 0.09%)</title><rect x="9.4071%" y="565" width="0.0877%" height="15" fill="rgb(237,197,12)" fg:x="11902" fg:w="111"/><text x="9.6571%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (108 samples, 0.09%)</title><rect x="9.4094%" y="549" width="0.0854%" height="15" fill="rgb(205,84,17)" fg:x="11905" fg:w="108"/><text x="9.6594%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (104 samples, 0.08%)</title><rect x="9.4126%" y="533" width="0.0822%" height="15" fill="rgb(237,18,45)" fg:x="11909" fg:w="104"/><text x="9.6626%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (103 samples, 0.08%)</title><rect x="9.4134%" y="517" width="0.0814%" height="15" fill="rgb(221,87,14)" fg:x="11910" fg:w="103"/><text x="9.6634%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (115 samples, 0.09%)</title><rect x="9.4055%" y="597" width="0.0909%" height="15" fill="rgb(238,186,15)" fg:x="11900" fg:w="115"/><text x="9.6555%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (113 samples, 0.09%)</title><rect x="9.4071%" y="581" width="0.0893%" height="15" fill="rgb(208,115,11)" fg:x="11902" fg:w="113"/><text x="9.6571%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_no_duplicate_links (1,693 samples, 1.34%)</title><rect x="8.1606%" y="805" width="1.3381%" height="15" fill="rgb(254,175,0)" fg:x="10325" fg:w="1693"/><text x="8.4106%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids (869 samples, 0.69%)</title><rect x="8.8119%" y="789" width="0.6868%" height="15" fill="rgb(227,24,42)" fg:x="11149" fg:w="869"/><text x="9.0619%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (124 samples, 0.10%)</title><rect x="9.4007%" y="773" width="0.0980%" height="15" fill="rgb(223,211,37)" fg:x="11894" fg:w="124"/><text x="9.6507%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (124 samples, 0.10%)</title><rect x="9.4007%" y="757" width="0.0980%" height="15" fill="rgb(235,49,27)" fg:x="11894" fg:w="124"/><text x="9.6507%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (124 samples, 0.10%)</title><rect x="9.4007%" y="741" width="0.0980%" height="15" fill="rgb(254,97,51)" fg:x="11894" fg:w="124"/><text x="9.6507%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (124 samples, 0.10%)</title><rect x="9.4007%" y="725" width="0.0980%" height="15" fill="rgb(249,51,40)" fg:x="11894" fg:w="124"/><text x="9.6507%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (124 samples, 0.10%)</title><rect x="9.4007%" y="709" width="0.0980%" height="15" fill="rgb(210,128,45)" fg:x="11894" fg:w="124"/><text x="9.6507%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (124 samples, 0.10%)</title><rect x="9.4007%" y="693" width="0.0980%" height="15" fill="rgb(224,137,50)" fg:x="11894" fg:w="124"/><text x="9.6507%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (124 samples, 0.10%)</title><rect x="9.4007%" y="677" width="0.0980%" height="15" fill="rgb(242,15,9)" fg:x="11894" fg:w="124"/><text x="9.6507%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (124 samples, 0.10%)</title><rect x="9.4007%" y="661" width="0.0980%" height="15" fill="rgb(233,187,41)" fg:x="11894" fg:w="124"/><text x="9.6507%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (124 samples, 0.10%)</title><rect x="9.4007%" y="645" width="0.0980%" height="15" fill="rgb(227,2,29)" fg:x="11894" fg:w="124"/><text x="9.6507%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (124 samples, 0.10%)</title><rect x="9.4007%" y="629" width="0.0980%" height="15" fill="rgb(222,70,3)" fg:x="11894" fg:w="124"/><text x="9.6507%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (119 samples, 0.09%)</title><rect x="9.4047%" y="613" width="0.0941%" height="15" fill="rgb(213,11,42)" fg:x="11899" fg:w="119"/><text x="9.6547%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.01%)</title><rect x="9.5264%" y="597" width="0.0134%" height="15" fill="rgb(225,150,9)" fg:x="12053" fg:w="17"/><text x="9.7764%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.01%)</title><rect x="9.5280%" y="581" width="0.0119%" height="15" fill="rgb(230,162,45)" fg:x="12055" fg:w="15"/><text x="9.7780%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (28 samples, 0.02%)</title><rect x="9.5414%" y="597" width="0.0221%" height="15" fill="rgb(222,14,52)" fg:x="12072" fg:w="28"/><text x="9.7914%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (28 samples, 0.02%)</title><rect x="9.5414%" y="581" width="0.0221%" height="15" fill="rgb(254,198,14)" fg:x="12072" fg:w="28"/><text x="9.7914%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (28 samples, 0.02%)</title><rect x="9.5414%" y="565" width="0.0221%" height="15" fill="rgb(220,217,30)" fg:x="12072" fg:w="28"/><text x="9.7914%" y="575.50"></text></g><g><title> N]&gt;::hash (28 samples, 0.02%)</title><rect x="9.5414%" y="549" width="0.0221%" height="15" fill="rgb(215,146,41)" fg:x="12072" fg:w="28"/><text x="9.7914%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (16 samples, 0.01%)</title><rect x="9.5509%" y="533" width="0.0126%" height="15" fill="rgb(217,27,36)" fg:x="12084" fg:w="16"/><text x="9.8009%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="9.5517%" y="517" width="0.0119%" height="15" fill="rgb(219,218,39)" fg:x="12085" fg:w="15"/><text x="9.8017%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (53 samples, 0.04%)</title><rect x="9.5264%" y="613" width="0.0419%" height="15" fill="rgb(219,4,42)" fg:x="12053" fg:w="53"/><text x="9.7764%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (101 samples, 0.08%)</title><rect x="9.5240%" y="677" width="0.0798%" height="15" fill="rgb(249,119,36)" fg:x="12050" fg:w="101"/><text x="9.7740%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (101 samples, 0.08%)</title><rect x="9.5240%" y="661" width="0.0798%" height="15" fill="rgb(209,23,33)" fg:x="12050" fg:w="101"/><text x="9.7740%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (100 samples, 0.08%)</title><rect x="9.5248%" y="645" width="0.0790%" height="15" fill="rgb(211,10,0)" fg:x="12051" fg:w="100"/><text x="9.7748%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (99 samples, 0.08%)</title><rect x="9.5256%" y="629" width="0.0782%" height="15" fill="rgb(208,99,37)" fg:x="12052" fg:w="99"/><text x="9.7756%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (43 samples, 0.03%)</title><rect x="9.5699%" y="613" width="0.0340%" height="15" fill="rgb(213,132,31)" fg:x="12108" fg:w="43"/><text x="9.8199%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (35 samples, 0.03%)</title><rect x="9.5762%" y="597" width="0.0277%" height="15" fill="rgb(243,129,40)" fg:x="12116" fg:w="35"/><text x="9.8262%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (109 samples, 0.09%)</title><rect x="9.5201%" y="741" width="0.0862%" height="15" fill="rgb(210,66,33)" fg:x="12045" fg:w="109"/><text x="9.7701%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (106 samples, 0.08%)</title><rect x="9.5225%" y="725" width="0.0838%" height="15" fill="rgb(209,189,4)" fg:x="12048" fg:w="106"/><text x="9.7725%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (106 samples, 0.08%)</title><rect x="9.5225%" y="709" width="0.0838%" height="15" fill="rgb(214,107,37)" fg:x="12048" fg:w="106"/><text x="9.7725%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (104 samples, 0.08%)</title><rect x="9.5240%" y="693" width="0.0822%" height="15" fill="rgb(245,88,54)" fg:x="12050" fg:w="104"/><text x="9.7740%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (117 samples, 0.09%)</title><rect x="9.5146%" y="789" width="0.0925%" height="15" fill="rgb(205,146,20)" fg:x="12038" fg:w="117"/><text x="9.7646%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (117 samples, 0.09%)</title><rect x="9.5146%" y="773" width="0.0925%" height="15" fill="rgb(220,161,25)" fg:x="12038" fg:w="117"/><text x="9.7646%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (116 samples, 0.09%)</title><rect x="9.5153%" y="757" width="0.0917%" height="15" fill="rgb(215,152,15)" fg:x="12039" fg:w="116"/><text x="9.7653%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="9.6181%" y="421" width="0.0158%" height="15" fill="rgb(233,192,44)" fg:x="12169" fg:w="20"/><text x="9.8681%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.01%)</title><rect x="9.6205%" y="405" width="0.0134%" height="15" fill="rgb(240,170,46)" fg:x="12172" fg:w="17"/><text x="9.8705%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (13 samples, 0.01%)</title><rect x="9.6378%" y="341" width="0.0103%" height="15" fill="rgb(207,104,33)" fg:x="12194" fg:w="13"/><text x="9.8878%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (13 samples, 0.01%)</title><rect x="9.6378%" y="325" width="0.0103%" height="15" fill="rgb(219,21,39)" fg:x="12194" fg:w="13"/><text x="9.8878%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="9.6378%" y="309" width="0.0103%" height="15" fill="rgb(214,133,29)" fg:x="12194" fg:w="13"/><text x="9.8878%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.03%)</title><rect x="9.6363%" y="421" width="0.0277%" height="15" fill="rgb(226,93,6)" fg:x="12192" fg:w="35"/><text x="9.8863%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.03%)</title><rect x="9.6363%" y="405" width="0.0277%" height="15" fill="rgb(252,222,34)" fg:x="12192" fg:w="35"/><text x="9.8863%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (34 samples, 0.03%)</title><rect x="9.6371%" y="389" width="0.0269%" height="15" fill="rgb(252,92,48)" fg:x="12193" fg:w="34"/><text x="9.8871%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (34 samples, 0.03%)</title><rect x="9.6371%" y="373" width="0.0269%" height="15" fill="rgb(245,223,24)" fg:x="12193" fg:w="34"/><text x="9.8871%" y="383.50"></text></g><g><title> N]&gt;::hash (34 samples, 0.03%)</title><rect x="9.6371%" y="357" width="0.0269%" height="15" fill="rgb(205,176,3)" fg:x="12193" fg:w="34"/><text x="9.8871%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (20 samples, 0.02%)</title><rect x="9.6481%" y="341" width="0.0158%" height="15" fill="rgb(235,151,15)" fg:x="12207" fg:w="20"/><text x="9.8981%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="9.6489%" y="325" width="0.0150%" height="15" fill="rgb(237,209,11)" fg:x="12208" fg:w="19"/><text x="9.8989%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (71 samples, 0.06%)</title><rect x="9.6181%" y="437" width="0.0561%" height="15" fill="rgb(243,227,24)" fg:x="12169" fg:w="71"/><text x="9.8681%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.01%)</title><rect x="9.6639%" y="421" width="0.0103%" height="15" fill="rgb(239,193,16)" fg:x="12227" fg:w="13"/><text x="9.9139%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (37 samples, 0.03%)</title><rect x="9.6805%" y="421" width="0.0292%" height="15" fill="rgb(231,27,9)" fg:x="12248" fg:w="37"/><text x="9.9305%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (42 samples, 0.03%)</title><rect x="9.6774%" y="437" width="0.0332%" height="15" fill="rgb(219,169,10)" fg:x="12244" fg:w="42"/><text x="9.9274%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (132 samples, 0.10%)</title><rect x="9.6110%" y="533" width="0.1043%" height="15" fill="rgb(244,229,43)" fg:x="12160" fg:w="132"/><text x="9.8610%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (130 samples, 0.10%)</title><rect x="9.6126%" y="517" width="0.1027%" height="15" fill="rgb(254,38,20)" fg:x="12162" fg:w="130"/><text x="9.8626%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (130 samples, 0.10%)</title><rect x="9.6126%" y="501" width="0.1027%" height="15" fill="rgb(250,47,30)" fg:x="12162" fg:w="130"/><text x="9.8626%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (129 samples, 0.10%)</title><rect x="9.6133%" y="485" width="0.1020%" height="15" fill="rgb(224,124,36)" fg:x="12163" fg:w="129"/><text x="9.8633%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (129 samples, 0.10%)</title><rect x="9.6133%" y="469" width="0.1020%" height="15" fill="rgb(246,68,51)" fg:x="12163" fg:w="129"/><text x="9.8633%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (127 samples, 0.10%)</title><rect x="9.6149%" y="453" width="0.1004%" height="15" fill="rgb(253,43,49)" fg:x="12165" fg:w="127"/><text x="9.8649%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (143 samples, 0.11%)</title><rect x="9.6070%" y="709" width="0.1130%" height="15" fill="rgb(219,54,36)" fg:x="12155" fg:w="143"/><text x="9.8570%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (143 samples, 0.11%)</title><rect x="9.6070%" y="693" width="0.1130%" height="15" fill="rgb(227,133,34)" fg:x="12155" fg:w="143"/><text x="9.8570%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (143 samples, 0.11%)</title><rect x="9.6070%" y="677" width="0.1130%" height="15" fill="rgb(247,227,15)" fg:x="12155" fg:w="143"/><text x="9.8570%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (143 samples, 0.11%)</title><rect x="9.6070%" y="661" width="0.1130%" height="15" fill="rgb(229,96,14)" fg:x="12155" fg:w="143"/><text x="9.8570%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (143 samples, 0.11%)</title><rect x="9.6070%" y="645" width="0.1130%" height="15" fill="rgb(220,79,17)" fg:x="12155" fg:w="143"/><text x="9.8570%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (143 samples, 0.11%)</title><rect x="9.6070%" y="629" width="0.1130%" height="15" fill="rgb(205,131,53)" fg:x="12155" fg:w="143"/><text x="9.8570%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (143 samples, 0.11%)</title><rect x="9.6070%" y="613" width="0.1130%" height="15" fill="rgb(209,50,29)" fg:x="12155" fg:w="143"/><text x="9.8570%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (143 samples, 0.11%)</title><rect x="9.6070%" y="597" width="0.1130%" height="15" fill="rgb(245,86,46)" fg:x="12155" fg:w="143"/><text x="9.8570%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (143 samples, 0.11%)</title><rect x="9.6070%" y="581" width="0.1130%" height="15" fill="rgb(235,66,46)" fg:x="12155" fg:w="143"/><text x="9.8570%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (143 samples, 0.11%)</title><rect x="9.6070%" y="565" width="0.1130%" height="15" fill="rgb(232,148,31)" fg:x="12155" fg:w="143"/><text x="9.8570%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (141 samples, 0.11%)</title><rect x="9.6086%" y="549" width="0.1114%" height="15" fill="rgb(217,149,8)" fg:x="12157" fg:w="141"/><text x="9.8586%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.02%)</title><rect x="9.7390%" y="421" width="0.0166%" height="15" fill="rgb(209,183,11)" fg:x="12322" fg:w="21"/><text x="9.9890%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16 samples, 0.01%)</title><rect x="9.7430%" y="405" width="0.0126%" height="15" fill="rgb(208,55,20)" fg:x="12327" fg:w="16"/><text x="9.9930%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (19 samples, 0.02%)</title><rect x="9.7683%" y="309" width="0.0150%" height="15" fill="rgb(218,39,14)" fg:x="12359" fg:w="19"/><text x="10.0183%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (30 samples, 0.02%)</title><rect x="9.7619%" y="373" width="0.0237%" height="15" fill="rgb(216,169,33)" fg:x="12351" fg:w="30"/><text x="10.0119%" y="383.50"></text></g><g><title> N]&gt;::hash (30 samples, 0.02%)</title><rect x="9.7619%" y="357" width="0.0237%" height="15" fill="rgb(233,80,24)" fg:x="12351" fg:w="30"/><text x="10.0119%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (25 samples, 0.02%)</title><rect x="9.7659%" y="341" width="0.0198%" height="15" fill="rgb(213,179,31)" fg:x="12356" fg:w="25"/><text x="10.0159%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="9.7667%" y="325" width="0.0190%" height="15" fill="rgb(209,19,5)" fg:x="12357" fg:w="24"/><text x="10.0167%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (33 samples, 0.03%)</title><rect x="9.7604%" y="421" width="0.0261%" height="15" fill="rgb(219,18,35)" fg:x="12349" fg:w="33"/><text x="10.0104%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (32 samples, 0.03%)</title><rect x="9.7611%" y="405" width="0.0253%" height="15" fill="rgb(209,169,16)" fg:x="12350" fg:w="32"/><text x="10.0111%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (31 samples, 0.02%)</title><rect x="9.7619%" y="389" width="0.0245%" height="15" fill="rgb(245,90,51)" fg:x="12351" fg:w="31"/><text x="10.0119%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (70 samples, 0.06%)</title><rect x="9.7390%" y="437" width="0.0553%" height="15" fill="rgb(220,99,45)" fg:x="12322" fg:w="70"/><text x="9.9890%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (45 samples, 0.04%)</title><rect x="9.8220%" y="341" width="0.0356%" height="15" fill="rgb(249,89,25)" fg:x="12427" fg:w="45"/><text x="10.0720%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (36 samples, 0.03%)</title><rect x="9.8291%" y="325" width="0.0285%" height="15" fill="rgb(239,193,0)" fg:x="12436" fg:w="36"/><text x="10.0791%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (20 samples, 0.02%)</title><rect x="9.8607%" y="261" width="0.0158%" height="15" fill="rgb(231,126,1)" fg:x="12476" fg:w="20"/><text x="10.1107%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (20 samples, 0.02%)</title><rect x="9.8607%" y="245" width="0.0158%" height="15" fill="rgb(243,166,3)" fg:x="12476" fg:w="20"/><text x="10.1107%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.02%)</title><rect x="9.8607%" y="229" width="0.0158%" height="15" fill="rgb(223,22,34)" fg:x="12476" fg:w="20"/><text x="10.1107%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (18 samples, 0.01%)</title><rect x="9.8789%" y="229" width="0.0142%" height="15" fill="rgb(251,52,51)" fg:x="12499" fg:w="18"/><text x="10.1289%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (46 samples, 0.04%)</title><rect x="9.8607%" y="341" width="0.0364%" height="15" fill="rgb(221,165,28)" fg:x="12476" fg:w="46"/><text x="10.1107%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (46 samples, 0.04%)</title><rect x="9.8607%" y="325" width="0.0364%" height="15" fill="rgb(218,121,47)" fg:x="12476" fg:w="46"/><text x="10.1107%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (46 samples, 0.04%)</title><rect x="9.8607%" y="309" width="0.0364%" height="15" fill="rgb(209,120,9)" fg:x="12476" fg:w="46"/><text x="10.1107%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (46 samples, 0.04%)</title><rect x="9.8607%" y="293" width="0.0364%" height="15" fill="rgb(236,68,12)" fg:x="12476" fg:w="46"/><text x="10.1107%" y="303.50"></text></g><g><title> N]&gt;::hash (46 samples, 0.04%)</title><rect x="9.8607%" y="277" width="0.0364%" height="15" fill="rgb(225,194,26)" fg:x="12476" fg:w="46"/><text x="10.1107%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (26 samples, 0.02%)</title><rect x="9.8765%" y="261" width="0.0205%" height="15" fill="rgb(231,84,39)" fg:x="12496" fg:w="26"/><text x="10.1265%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (26 samples, 0.02%)</title><rect x="9.8765%" y="245" width="0.0205%" height="15" fill="rgb(210,11,45)" fg:x="12496" fg:w="26"/><text x="10.1265%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (105 samples, 0.08%)</title><rect x="9.8204%" y="389" width="0.0830%" height="15" fill="rgb(224,54,52)" fg:x="12425" fg:w="105"/><text x="10.0704%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (103 samples, 0.08%)</title><rect x="9.8220%" y="373" width="0.0814%" height="15" fill="rgb(238,102,14)" fg:x="12427" fg:w="103"/><text x="10.0720%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (103 samples, 0.08%)</title><rect x="9.8220%" y="357" width="0.0814%" height="15" fill="rgb(243,160,52)" fg:x="12427" fg:w="103"/><text x="10.0720%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (13 samples, 0.01%)</title><rect x="9.9121%" y="357" width="0.0103%" height="15" fill="rgb(216,114,19)" fg:x="12541" fg:w="13"/><text x="10.1621%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (28 samples, 0.02%)</title><rect x="9.9042%" y="373" width="0.0221%" height="15" fill="rgb(244,166,37)" fg:x="12531" fg:w="28"/><text x="10.1542%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (31 samples, 0.02%)</title><rect x="9.9034%" y="389" width="0.0245%" height="15" fill="rgb(246,29,44)" fg:x="12530" fg:w="31"/><text x="10.1534%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (172 samples, 0.14%)</title><rect x="9.7975%" y="421" width="0.1359%" height="15" fill="rgb(215,56,53)" fg:x="12396" fg:w="172"/><text x="10.0475%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (171 samples, 0.14%)</title><rect x="9.7983%" y="405" width="0.1352%" height="15" fill="rgb(217,60,2)" fg:x="12397" fg:w="171"/><text x="10.0483%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (225 samples, 0.18%)</title><rect x="9.7959%" y="437" width="0.1778%" height="15" fill="rgb(207,26,24)" fg:x="12394" fg:w="225"/><text x="10.0459%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (51 samples, 0.04%)</title><rect x="9.9335%" y="421" width="0.0403%" height="15" fill="rgb(252,210,15)" fg:x="12568" fg:w="51"/><text x="10.1835%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (307 samples, 0.24%)</title><rect x="9.7343%" y="469" width="0.2426%" height="15" fill="rgb(253,209,26)" fg:x="12316" fg:w="307"/><text x="9.9843%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (305 samples, 0.24%)</title><rect x="9.7359%" y="453" width="0.2411%" height="15" fill="rgb(238,170,14)" fg:x="12318" fg:w="305"/><text x="9.9859%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::ids (469 samples, 0.37%)</title><rect x="9.6070%" y="741" width="0.3707%" height="15" fill="rgb(216,178,15)" fg:x="12155" fg:w="469"/><text x="9.8570%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (469 samples, 0.37%)</title><rect x="9.6070%" y="725" width="0.3707%" height="15" fill="rgb(250,197,2)" fg:x="12155" fg:w="469"/><text x="9.8570%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (326 samples, 0.26%)</title><rect x="9.7200%" y="709" width="0.2577%" height="15" fill="rgb(212,70,42)" fg:x="12298" fg:w="326"/><text x="9.9700%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (326 samples, 0.26%)</title><rect x="9.7200%" y="693" width="0.2577%" height="15" fill="rgb(227,213,9)" fg:x="12298" fg:w="326"/><text x="9.9700%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (326 samples, 0.26%)</title><rect x="9.7200%" y="677" width="0.2577%" height="15" fill="rgb(245,99,25)" fg:x="12298" fg:w="326"/><text x="9.9700%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (326 samples, 0.26%)</title><rect x="9.7200%" y="661" width="0.2577%" height="15" fill="rgb(250,82,29)" fg:x="12298" fg:w="326"/><text x="9.9700%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (326 samples, 0.26%)</title><rect x="9.7200%" y="645" width="0.2577%" height="15" fill="rgb(241,226,54)" fg:x="12298" fg:w="326"/><text x="9.9700%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (326 samples, 0.26%)</title><rect x="9.7200%" y="629" width="0.2577%" height="15" fill="rgb(221,99,41)" fg:x="12298" fg:w="326"/><text x="9.9700%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (326 samples, 0.26%)</title><rect x="9.7200%" y="613" width="0.2577%" height="15" fill="rgb(213,90,21)" fg:x="12298" fg:w="326"/><text x="9.9700%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (326 samples, 0.26%)</title><rect x="9.7200%" y="597" width="0.2577%" height="15" fill="rgb(205,208,24)" fg:x="12298" fg:w="326"/><text x="9.9700%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (326 samples, 0.26%)</title><rect x="9.7200%" y="581" width="0.2577%" height="15" fill="rgb(246,31,12)" fg:x="12298" fg:w="326"/><text x="9.9700%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (326 samples, 0.26%)</title><rect x="9.7200%" y="565" width="0.2577%" height="15" fill="rgb(213,154,6)" fg:x="12298" fg:w="326"/><text x="9.9700%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (326 samples, 0.26%)</title><rect x="9.7200%" y="549" width="0.2577%" height="15" fill="rgb(222,163,29)" fg:x="12298" fg:w="326"/><text x="9.9700%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (314 samples, 0.25%)</title><rect x="9.7295%" y="533" width="0.2482%" height="15" fill="rgb(227,201,8)" fg:x="12310" fg:w="314"/><text x="9.9795%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (314 samples, 0.25%)</title><rect x="9.7295%" y="517" width="0.2482%" height="15" fill="rgb(233,9,32)" fg:x="12310" fg:w="314"/><text x="9.9795%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (309 samples, 0.24%)</title><rect x="9.7335%" y="501" width="0.2442%" height="15" fill="rgb(217,54,24)" fg:x="12315" fg:w="309"/><text x="9.9835%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (309 samples, 0.24%)</title><rect x="9.7335%" y="485" width="0.2442%" height="15" fill="rgb(235,192,0)" fg:x="12315" fg:w="309"/><text x="9.9835%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="9.9793%" y="565" width="0.0111%" height="15" fill="rgb(235,45,9)" fg:x="12626" fg:w="14"/><text x="10.2293%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.02%)</title><rect x="10.0022%" y="437" width="0.0198%" height="15" fill="rgb(246,42,40)" fg:x="12655" fg:w="25"/><text x="10.2522%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.01%)</title><rect x="10.0077%" y="421" width="0.0142%" height="15" fill="rgb(248,111,24)" fg:x="12662" fg:w="18"/><text x="10.2577%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.01%)</title><rect x="10.0291%" y="309" width="0.0103%" height="15" fill="rgb(249,65,22)" fg:x="12689" fg:w="13"/><text x="10.2791%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (18 samples, 0.01%)</title><rect x="10.0259%" y="357" width="0.0142%" height="15" fill="rgb(238,111,51)" fg:x="12685" fg:w="18"/><text x="10.2759%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (18 samples, 0.01%)</title><rect x="10.0259%" y="341" width="0.0142%" height="15" fill="rgb(250,118,22)" fg:x="12685" fg:w="18"/><text x="10.2759%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.01%)</title><rect x="10.0259%" y="325" width="0.0142%" height="15" fill="rgb(234,84,26)" fg:x="12685" fg:w="18"/><text x="10.2759%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (29 samples, 0.02%)</title><rect x="10.0251%" y="437" width="0.0229%" height="15" fill="rgb(243,172,12)" fg:x="12684" fg:w="29"/><text x="10.2751%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (29 samples, 0.02%)</title><rect x="10.0251%" y="421" width="0.0229%" height="15" fill="rgb(236,150,49)" fg:x="12684" fg:w="29"/><text x="10.2751%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (29 samples, 0.02%)</title><rect x="10.0251%" y="405" width="0.0229%" height="15" fill="rgb(225,197,26)" fg:x="12684" fg:w="29"/><text x="10.2751%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (29 samples, 0.02%)</title><rect x="10.0251%" y="389" width="0.0229%" height="15" fill="rgb(214,17,42)" fg:x="12684" fg:w="29"/><text x="10.2751%" y="399.50"></text></g><g><title> N]&gt;::hash (29 samples, 0.02%)</title><rect x="10.0251%" y="373" width="0.0229%" height="15" fill="rgb(224,165,40)" fg:x="12684" fg:w="29"/><text x="10.2751%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (66 samples, 0.05%)</title><rect x="10.0022%" y="453" width="0.0522%" height="15" fill="rgb(246,100,4)" fg:x="12655" fg:w="66"/><text x="10.2522%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (40 samples, 0.03%)</title><rect x="10.0733%" y="357" width="0.0316%" height="15" fill="rgb(222,103,0)" fg:x="12745" fg:w="40"/><text x="10.3233%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (37 samples, 0.03%)</title><rect x="10.0757%" y="341" width="0.0292%" height="15" fill="rgb(227,189,26)" fg:x="12748" fg:w="37"/><text x="10.3257%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (14 samples, 0.01%)</title><rect x="10.1081%" y="277" width="0.0111%" height="15" fill="rgb(214,202,17)" fg:x="12789" fg:w="14"/><text x="10.3581%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (14 samples, 0.01%)</title><rect x="10.1081%" y="261" width="0.0111%" height="15" fill="rgb(229,111,3)" fg:x="12789" fg:w="14"/><text x="10.3581%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="10.1089%" y="245" width="0.0103%" height="15" fill="rgb(229,172,15)" fg:x="12790" fg:w="13"/><text x="10.3589%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.01%)</title><rect x="10.1255%" y="245" width="0.0111%" height="15" fill="rgb(230,224,35)" fg:x="12811" fg:w="14"/><text x="10.3755%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (41 samples, 0.03%)</title><rect x="10.1073%" y="357" width="0.0324%" height="15" fill="rgb(251,141,6)" fg:x="12788" fg:w="41"/><text x="10.3573%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (41 samples, 0.03%)</title><rect x="10.1073%" y="341" width="0.0324%" height="15" fill="rgb(225,208,6)" fg:x="12788" fg:w="41"/><text x="10.3573%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (41 samples, 0.03%)</title><rect x="10.1073%" y="325" width="0.0324%" height="15" fill="rgb(246,181,16)" fg:x="12788" fg:w="41"/><text x="10.3573%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (41 samples, 0.03%)</title><rect x="10.1073%" y="309" width="0.0324%" height="15" fill="rgb(227,129,36)" fg:x="12788" fg:w="41"/><text x="10.3573%" y="319.50"></text></g><g><title> N]&gt;::hash (41 samples, 0.03%)</title><rect x="10.1073%" y="293" width="0.0324%" height="15" fill="rgb(248,117,24)" fg:x="12788" fg:w="41"/><text x="10.3573%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (25 samples, 0.02%)</title><rect x="10.1200%" y="277" width="0.0198%" height="15" fill="rgb(214,185,35)" fg:x="12804" fg:w="25"/><text x="10.3700%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (22 samples, 0.02%)</title><rect x="10.1224%" y="261" width="0.0174%" height="15" fill="rgb(236,150,34)" fg:x="12807" fg:w="22"/><text x="10.3724%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (96 samples, 0.08%)</title><rect x="10.0710%" y="405" width="0.0759%" height="15" fill="rgb(243,228,27)" fg:x="12742" fg:w="96"/><text x="10.3210%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (95 samples, 0.08%)</title><rect x="10.0718%" y="389" width="0.0751%" height="15" fill="rgb(245,77,44)" fg:x="12743" fg:w="95"/><text x="10.3218%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (94 samples, 0.07%)</title><rect x="10.0726%" y="373" width="0.0743%" height="15" fill="rgb(235,214,42)" fg:x="12744" fg:w="94"/><text x="10.3226%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (16 samples, 0.01%)</title><rect x="10.1540%" y="373" width="0.0126%" height="15" fill="rgb(221,74,3)" fg:x="12847" fg:w="16"/><text x="10.4040%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (24 samples, 0.02%)</title><rect x="10.1484%" y="389" width="0.0190%" height="15" fill="rgb(206,121,29)" fg:x="12840" fg:w="24"/><text x="10.3984%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (28 samples, 0.02%)</title><rect x="10.1469%" y="405" width="0.0221%" height="15" fill="rgb(249,131,53)" fg:x="12838" fg:w="28"/><text x="10.3969%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (152 samples, 0.12%)</title><rect x="10.0560%" y="437" width="0.1201%" height="15" fill="rgb(236,170,29)" fg:x="12723" fg:w="152"/><text x="10.3060%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (140 samples, 0.11%)</title><rect x="10.0654%" y="421" width="0.1107%" height="15" fill="rgb(247,96,15)" fg:x="12735" fg:w="140"/><text x="10.3154%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (190 samples, 0.15%)</title><rect x="10.0544%" y="453" width="0.1502%" height="15" fill="rgb(211,210,7)" fg:x="12721" fg:w="190"/><text x="10.3044%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (36 samples, 0.03%)</title><rect x="10.1761%" y="437" width="0.0285%" height="15" fill="rgb(240,88,50)" fg:x="12875" fg:w="36"/><text x="10.4261%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (261 samples, 0.21%)</title><rect x="10.0006%" y="485" width="0.2063%" height="15" fill="rgb(209,229,26)" fg:x="12653" fg:w="261"/><text x="10.2506%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (261 samples, 0.21%)</title><rect x="10.0006%" y="469" width="0.2063%" height="15" fill="rgb(210,68,23)" fg:x="12653" fg:w="261"/><text x="10.2506%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (760 samples, 0.60%)</title><rect x="9.6070%" y="773" width="0.6007%" height="15" fill="rgb(229,180,13)" fg:x="12155" fg:w="760"/><text x="9.8570%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (760 samples, 0.60%)</title><rect x="9.6070%" y="757" width="0.6007%" height="15" fill="rgb(236,53,44)" fg:x="12155" fg:w="760"/><text x="9.8570%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (291 samples, 0.23%)</title><rect x="9.9777%" y="741" width="0.2300%" height="15" fill="rgb(244,214,29)" fg:x="12624" fg:w="291"/><text x="10.2277%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (291 samples, 0.23%)</title><rect x="9.9777%" y="725" width="0.2300%" height="15" fill="rgb(220,75,29)" fg:x="12624" fg:w="291"/><text x="10.2277%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (291 samples, 0.23%)</title><rect x="9.9777%" y="709" width="0.2300%" height="15" fill="rgb(214,183,37)" fg:x="12624" fg:w="291"/><text x="10.2277%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (291 samples, 0.23%)</title><rect x="9.9777%" y="693" width="0.2300%" height="15" fill="rgb(239,117,29)" fg:x="12624" fg:w="291"/><text x="10.2277%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (291 samples, 0.23%)</title><rect x="9.9777%" y="677" width="0.2300%" height="15" fill="rgb(237,171,35)" fg:x="12624" fg:w="291"/><text x="10.2277%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (291 samples, 0.23%)</title><rect x="9.9777%" y="661" width="0.2300%" height="15" fill="rgb(229,178,53)" fg:x="12624" fg:w="291"/><text x="10.2277%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (291 samples, 0.23%)</title><rect x="9.9777%" y="645" width="0.2300%" height="15" fill="rgb(210,102,19)" fg:x="12624" fg:w="291"/><text x="10.2277%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (291 samples, 0.23%)</title><rect x="9.9777%" y="629" width="0.2300%" height="15" fill="rgb(235,127,22)" fg:x="12624" fg:w="291"/><text x="10.2277%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (291 samples, 0.23%)</title><rect x="9.9777%" y="613" width="0.2300%" height="15" fill="rgb(244,31,31)" fg:x="12624" fg:w="291"/><text x="10.2277%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (291 samples, 0.23%)</title><rect x="9.9777%" y="597" width="0.2300%" height="15" fill="rgb(231,43,21)" fg:x="12624" fg:w="291"/><text x="10.2277%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (291 samples, 0.23%)</title><rect x="9.9777%" y="581" width="0.2300%" height="15" fill="rgb(217,131,35)" fg:x="12624" fg:w="291"/><text x="10.2277%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (275 samples, 0.22%)</title><rect x="9.9904%" y="565" width="0.2174%" height="15" fill="rgb(221,149,4)" fg:x="12640" fg:w="275"/><text x="10.2404%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (272 samples, 0.21%)</title><rect x="9.9927%" y="549" width="0.2150%" height="15" fill="rgb(232,170,28)" fg:x="12643" fg:w="272"/><text x="10.2427%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (272 samples, 0.21%)</title><rect x="9.9927%" y="533" width="0.2150%" height="15" fill="rgb(238,56,10)" fg:x="12643" fg:w="272"/><text x="10.2427%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (264 samples, 0.21%)</title><rect x="9.9991%" y="517" width="0.2087%" height="15" fill="rgb(235,196,14)" fg:x="12651" fg:w="264"/><text x="10.2491%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (263 samples, 0.21%)</title><rect x="9.9998%" y="501" width="0.2079%" height="15" fill="rgb(216,45,48)" fg:x="12652" fg:w="263"/><text x="10.2498%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (30 samples, 0.02%)</title><rect x="10.2219%" y="469" width="0.0237%" height="15" fill="rgb(238,213,17)" fg:x="12933" fg:w="30"/><text x="10.4719%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (25 samples, 0.02%)</title><rect x="10.2259%" y="453" width="0.0198%" height="15" fill="rgb(212,13,2)" fg:x="12938" fg:w="25"/><text x="10.4759%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (25 samples, 0.02%)</title><rect x="10.2480%" y="469" width="0.0198%" height="15" fill="rgb(240,114,20)" fg:x="12966" fg:w="25"/><text x="10.4980%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (25 samples, 0.02%)</title><rect x="10.2480%" y="453" width="0.0198%" height="15" fill="rgb(228,41,40)" fg:x="12966" fg:w="25"/><text x="10.4980%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (25 samples, 0.02%)</title><rect x="10.2480%" y="437" width="0.0198%" height="15" fill="rgb(244,132,35)" fg:x="12966" fg:w="25"/><text x="10.4980%" y="447.50"></text></g><g><title> N]&gt;::hash (25 samples, 0.02%)</title><rect x="10.2480%" y="421" width="0.0198%" height="15" fill="rgb(253,189,4)" fg:x="12966" fg:w="25"/><text x="10.4980%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (14 samples, 0.01%)</title><rect x="10.2567%" y="405" width="0.0111%" height="15" fill="rgb(224,37,19)" fg:x="12977" fg:w="14"/><text x="10.5067%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="10.2567%" y="389" width="0.0111%" height="15" fill="rgb(235,223,18)" fg:x="12977" fg:w="14"/><text x="10.5067%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (65 samples, 0.05%)</title><rect x="10.2219%" y="485" width="0.0514%" height="15" fill="rgb(235,163,25)" fg:x="12933" fg:w="65"/><text x="10.4719%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (32 samples, 0.03%)</title><rect x="10.2741%" y="485" width="0.0253%" height="15" fill="rgb(217,145,28)" fg:x="12999" fg:w="32"/><text x="10.5241%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (29 samples, 0.02%)</title><rect x="10.2765%" y="469" width="0.0229%" height="15" fill="rgb(223,223,32)" fg:x="13002" fg:w="29"/><text x="10.5265%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (107 samples, 0.08%)</title><rect x="10.2188%" y="501" width="0.0846%" height="15" fill="rgb(227,189,39)" fg:x="12929" fg:w="107"/><text x="10.4688%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (121 samples, 0.10%)</title><rect x="10.2085%" y="597" width="0.0956%" height="15" fill="rgb(248,10,22)" fg:x="12916" fg:w="121"/><text x="10.4585%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (120 samples, 0.09%)</title><rect x="10.2093%" y="581" width="0.0948%" height="15" fill="rgb(248,46,39)" fg:x="12917" fg:w="120"/><text x="10.4593%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (120 samples, 0.09%)</title><rect x="10.2093%" y="565" width="0.0948%" height="15" fill="rgb(248,113,48)" fg:x="12917" fg:w="120"/><text x="10.4593%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (118 samples, 0.09%)</title><rect x="10.2109%" y="549" width="0.0933%" height="15" fill="rgb(245,16,25)" fg:x="12919" fg:w="118"/><text x="10.4609%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (113 samples, 0.09%)</title><rect x="10.2148%" y="533" width="0.0893%" height="15" fill="rgb(249,152,16)" fg:x="12924" fg:w="113"/><text x="10.4648%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (113 samples, 0.09%)</title><rect x="10.2148%" y="517" width="0.0893%" height="15" fill="rgb(250,16,1)" fg:x="12924" fg:w="113"/><text x="10.4648%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (129 samples, 0.10%)</title><rect x="10.2077%" y="709" width="0.1020%" height="15" fill="rgb(249,138,3)" fg:x="12915" fg:w="129"/><text x="10.4577%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (129 samples, 0.10%)</title><rect x="10.2077%" y="693" width="0.1020%" height="15" fill="rgb(227,71,41)" fg:x="12915" fg:w="129"/><text x="10.4577%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (129 samples, 0.10%)</title><rect x="10.2077%" y="677" width="0.1020%" height="15" fill="rgb(209,184,23)" fg:x="12915" fg:w="129"/><text x="10.4577%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (129 samples, 0.10%)</title><rect x="10.2077%" y="661" width="0.1020%" height="15" fill="rgb(223,215,31)" fg:x="12915" fg:w="129"/><text x="10.4577%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (129 samples, 0.10%)</title><rect x="10.2077%" y="645" width="0.1020%" height="15" fill="rgb(210,146,28)" fg:x="12915" fg:w="129"/><text x="10.4577%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (129 samples, 0.10%)</title><rect x="10.2077%" y="629" width="0.1020%" height="15" fill="rgb(209,183,41)" fg:x="12915" fg:w="129"/><text x="10.4577%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (128 samples, 0.10%)</title><rect x="10.2085%" y="613" width="0.1012%" height="15" fill="rgb(209,224,45)" fg:x="12916" fg:w="128"/><text x="10.4585%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (130 samples, 0.10%)</title><rect x="10.2077%" y="773" width="0.1027%" height="15" fill="rgb(224,209,51)" fg:x="12915" fg:w="130"/><text x="10.4577%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (130 samples, 0.10%)</title><rect x="10.2077%" y="757" width="0.1027%" height="15" fill="rgb(223,17,39)" fg:x="12915" fg:w="130"/><text x="10.4577%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (130 samples, 0.10%)</title><rect x="10.2077%" y="741" width="0.1027%" height="15" fill="rgb(234,204,37)" fg:x="12915" fg:w="130"/><text x="10.4577%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (130 samples, 0.10%)</title><rect x="10.2077%" y="725" width="0.1027%" height="15" fill="rgb(236,120,5)" fg:x="12915" fg:w="130"/><text x="10.4577%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_no_owned_links (1,028 samples, 0.81%)</title><rect x="9.4987%" y="805" width="0.8125%" height="15" fill="rgb(248,97,27)" fg:x="12018" fg:w="1028"/><text x="9.7487%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids (891 samples, 0.70%)</title><rect x="9.6070%" y="789" width="0.7042%" height="15" fill="rgb(240,66,17)" fg:x="12155" fg:w="891"/><text x="9.8570%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (28 samples, 0.02%)</title><rect x="10.3255%" y="597" width="0.0221%" height="15" fill="rgb(210,79,3)" fg:x="13064" fg:w="28"/><text x="10.5755%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (24 samples, 0.02%)</title><rect x="10.3286%" y="581" width="0.0190%" height="15" fill="rgb(214,176,27)" fg:x="13068" fg:w="24"/><text x="10.5786%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.01%)</title><rect x="10.3595%" y="501" width="0.0119%" height="15" fill="rgb(235,185,3)" fg:x="13107" fg:w="15"/><text x="10.6095%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (29 samples, 0.02%)</title><rect x="10.3492%" y="597" width="0.0229%" height="15" fill="rgb(227,24,12)" fg:x="13094" fg:w="29"/><text x="10.5992%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (29 samples, 0.02%)</title><rect x="10.3492%" y="581" width="0.0229%" height="15" fill="rgb(252,169,48)" fg:x="13094" fg:w="29"/><text x="10.5992%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (29 samples, 0.02%)</title><rect x="10.3492%" y="565" width="0.0229%" height="15" fill="rgb(212,65,1)" fg:x="13094" fg:w="29"/><text x="10.5992%" y="575.50"></text></g><g><title> N]&gt;::hash (29 samples, 0.02%)</title><rect x="10.3492%" y="549" width="0.0229%" height="15" fill="rgb(242,39,24)" fg:x="13094" fg:w="29"/><text x="10.5992%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (22 samples, 0.02%)</title><rect x="10.3547%" y="533" width="0.0174%" height="15" fill="rgb(249,32,23)" fg:x="13101" fg:w="22"/><text x="10.6047%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (22 samples, 0.02%)</title><rect x="10.3547%" y="517" width="0.0174%" height="15" fill="rgb(251,195,23)" fg:x="13101" fg:w="22"/><text x="10.6047%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (67 samples, 0.05%)</title><rect x="10.3247%" y="613" width="0.0530%" height="15" fill="rgb(236,174,8)" fg:x="13063" fg:w="67"/><text x="10.5747%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (30 samples, 0.02%)</title><rect x="10.3776%" y="597" width="0.0237%" height="15" fill="rgb(220,197,8)" fg:x="13130" fg:w="30"/><text x="10.6276%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (102 samples, 0.08%)</title><rect x="10.3231%" y="677" width="0.0806%" height="15" fill="rgb(240,108,37)" fg:x="13061" fg:w="102"/><text x="10.5731%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (102 samples, 0.08%)</title><rect x="10.3231%" y="661" width="0.0806%" height="15" fill="rgb(232,176,24)" fg:x="13061" fg:w="102"/><text x="10.5731%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (102 samples, 0.08%)</title><rect x="10.3231%" y="645" width="0.0806%" height="15" fill="rgb(243,35,29)" fg:x="13061" fg:w="102"/><text x="10.5731%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (101 samples, 0.08%)</title><rect x="10.3239%" y="629" width="0.0798%" height="15" fill="rgb(210,37,18)" fg:x="13062" fg:w="101"/><text x="10.5739%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (33 samples, 0.03%)</title><rect x="10.3776%" y="613" width="0.0261%" height="15" fill="rgb(224,184,40)" fg:x="13130" fg:w="33"/><text x="10.6276%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.02%)</title><rect x="10.4077%" y="565" width="0.0198%" height="15" fill="rgb(236,39,29)" fg:x="13168" fg:w="25"/><text x="10.6577%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (19 samples, 0.02%)</title><rect x="10.4124%" y="549" width="0.0150%" height="15" fill="rgb(232,48,39)" fg:x="13174" fg:w="19"/><text x="10.6624%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (22 samples, 0.02%)</title><rect x="10.4282%" y="565" width="0.0174%" height="15" fill="rgb(236,34,42)" fg:x="13194" fg:w="22"/><text x="10.6782%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (22 samples, 0.02%)</title><rect x="10.4282%" y="549" width="0.0174%" height="15" fill="rgb(243,106,37)" fg:x="13194" fg:w="22"/><text x="10.6782%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (22 samples, 0.02%)</title><rect x="10.4282%" y="533" width="0.0174%" height="15" fill="rgb(218,96,6)" fg:x="13194" fg:w="22"/><text x="10.6782%" y="543.50"></text></g><g><title> N]&gt;::hash (22 samples, 0.02%)</title><rect x="10.4282%" y="517" width="0.0174%" height="15" fill="rgb(235,130,12)" fg:x="13194" fg:w="22"/><text x="10.6782%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (13 samples, 0.01%)</title><rect x="10.4353%" y="501" width="0.0103%" height="15" fill="rgb(231,95,0)" fg:x="13203" fg:w="13"/><text x="10.6853%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="10.4353%" y="485" width="0.0103%" height="15" fill="rgb(228,12,23)" fg:x="13203" fg:w="13"/><text x="10.6853%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (55 samples, 0.04%)</title><rect x="10.4077%" y="581" width="0.0435%" height="15" fill="rgb(216,12,1)" fg:x="13168" fg:w="55"/><text x="10.6577%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (101 samples, 0.08%)</title><rect x="10.4037%" y="677" width="0.0798%" height="15" fill="rgb(219,59,3)" fg:x="13163" fg:w="101"/><text x="10.6537%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (99 samples, 0.08%)</title><rect x="10.4053%" y="661" width="0.0782%" height="15" fill="rgb(215,208,46)" fg:x="13165" fg:w="99"/><text x="10.6553%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (99 samples, 0.08%)</title><rect x="10.4053%" y="645" width="0.0782%" height="15" fill="rgb(254,224,29)" fg:x="13165" fg:w="99"/><text x="10.6553%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (98 samples, 0.08%)</title><rect x="10.4061%" y="629" width="0.0775%" height="15" fill="rgb(232,14,29)" fg:x="13166" fg:w="98"/><text x="10.6561%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (98 samples, 0.08%)</title><rect x="10.4061%" y="613" width="0.0775%" height="15" fill="rgb(208,45,52)" fg:x="13166" fg:w="98"/><text x="10.6561%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (97 samples, 0.08%)</title><rect x="10.4069%" y="597" width="0.0767%" height="15" fill="rgb(234,191,28)" fg:x="13167" fg:w="97"/><text x="10.6569%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (40 samples, 0.03%)</title><rect x="10.4519%" y="581" width="0.0316%" height="15" fill="rgb(244,67,43)" fg:x="13224" fg:w="40"/><text x="10.7019%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (38 samples, 0.03%)</title><rect x="10.4535%" y="565" width="0.0300%" height="15" fill="rgb(236,189,24)" fg:x="13226" fg:w="38"/><text x="10.7035%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (209 samples, 0.17%)</title><rect x="10.3199%" y="741" width="0.1652%" height="15" fill="rgb(239,214,33)" fg:x="13057" fg:w="209"/><text x="10.5699%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (207 samples, 0.16%)</title><rect x="10.3215%" y="725" width="0.1636%" height="15" fill="rgb(226,176,41)" fg:x="13059" fg:w="207"/><text x="10.5715%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (206 samples, 0.16%)</title><rect x="10.3223%" y="709" width="0.1628%" height="15" fill="rgb(248,47,8)" fg:x="13060" fg:w="206"/><text x="10.5723%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (206 samples, 0.16%)</title><rect x="10.3223%" y="693" width="0.1628%" height="15" fill="rgb(218,81,44)" fg:x="13060" fg:w="206"/><text x="10.5723%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (214 samples, 0.17%)</title><rect x="10.3168%" y="789" width="0.1691%" height="15" fill="rgb(213,98,6)" fg:x="13053" fg:w="214"/><text x="10.5668%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (214 samples, 0.17%)</title><rect x="10.3168%" y="773" width="0.1691%" height="15" fill="rgb(222,85,22)" fg:x="13053" fg:w="214"/><text x="10.5668%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (213 samples, 0.17%)</title><rect x="10.3176%" y="757" width="0.1684%" height="15" fill="rgb(239,46,39)" fg:x="13054" fg:w="213"/><text x="10.5676%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::alloc::Global::alloc_impl (23 samples, 0.02%)</title><rect x="10.5175%" y="693" width="0.0182%" height="15" fill="rgb(237,12,29)" fg:x="13307" fg:w="23"/><text x="10.7675%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.02%)</title><rect x="10.5152%" y="709" width="0.0229%" height="15" fill="rgb(214,77,8)" fg:x="13304" fg:w="29"/><text x="10.7652%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (49 samples, 0.04%)</title><rect x="10.5049%" y="741" width="0.0387%" height="15" fill="rgb(217,168,37)" fg:x="13291" fg:w="49"/><text x="10.7549%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (46 samples, 0.04%)</title><rect x="10.5073%" y="725" width="0.0364%" height="15" fill="rgb(221,217,23)" fg:x="13294" fg:w="46"/><text x="10.7573%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::secret_filename::SecretFileName as core::clone::Clone&gt;::clone (52 samples, 0.04%)</title><rect x="10.5041%" y="789" width="0.0411%" height="15" fill="rgb(243,229,36)" fg:x="13290" fg:w="52"/><text x="10.7541%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::crypto::AESEncrypted&lt;T&gt; as core::clone::Clone&gt;::clone (52 samples, 0.04%)</title><rect x="10.5041%" y="773" width="0.0411%" height="15" fill="rgb(251,163,40)" fg:x="13290" fg:w="52"/><text x="10.7541%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.04%)</title><rect x="10.5041%" y="757" width="0.0411%" height="15" fill="rgb(237,222,12)" fg:x="13290" fg:w="52"/><text x="10.7541%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="10.5452%" y="789" width="0.0190%" height="15" fill="rgb(248,132,6)" fg:x="13342" fg:w="24"/><text x="10.7952%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="10.5452%" y="773" width="0.0190%" height="15" fill="rgb(227,167,50)" fg:x="13342" fg:w="24"/><text x="10.7952%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="10.5531%" y="757" width="0.0111%" height="15" fill="rgb(242,84,37)" fg:x="13352" fg:w="14"/><text x="10.8031%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="10.5768%" y="597" width="0.0103%" height="15" fill="rgb(212,4,50)" fg:x="13382" fg:w="13"/><text x="10.8268%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;lb_rs::logic::secret_filename::SecretFileName,uuid::Uuid&gt;&gt; (36 samples, 0.03%)</title><rect x="10.5665%" y="789" width="0.0285%" height="15" fill="rgb(230,228,32)" fg:x="13369" fg:w="36"/><text x="10.8165%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;lb_rs::logic::secret_filename::SecretFileName,uuid::Uuid,std::hash::random::RandomState&gt;&gt; (36 samples, 0.03%)</title><rect x="10.5665%" y="773" width="0.0285%" height="15" fill="rgb(248,217,23)" fg:x="13369" fg:w="36"/><text x="10.8165%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(lb_rs::logic::secret_filename::SecretFileName,uuid::Uuid)&gt;&gt; (36 samples, 0.03%)</title><rect x="10.5665%" y="757" width="0.0285%" height="15" fill="rgb(238,197,32)" fg:x="13369" fg:w="36"/><text x="10.8165%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="10.5665%" y="741" width="0.0285%" height="15" fill="rgb(236,106,1)" fg:x="13369" fg:w="36"/><text x="10.8165%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::drop_inner_table (36 samples, 0.03%)</title><rect x="10.5665%" y="725" width="0.0285%" height="15" fill="rgb(219,228,13)" fg:x="13369" fg:w="36"/><text x="10.8165%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::drop_elements (36 samples, 0.03%)</title><rect x="10.5665%" y="709" width="0.0285%" height="15" fill="rgb(238,30,35)" fg:x="13369" fg:w="36"/><text x="10.8165%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::drop (27 samples, 0.02%)</title><rect x="10.5737%" y="693" width="0.0213%" height="15" fill="rgb(236,70,23)" fg:x="13378" fg:w="27"/><text x="10.8237%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::drop_in_place&lt;(lb_rs::logic::secret_filename::SecretFileName,uuid::Uuid)&gt; (26 samples, 0.02%)</title><rect x="10.5744%" y="677" width="0.0205%" height="15" fill="rgb(249,104,48)" fg:x="13379" fg:w="26"/><text x="10.8244%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::drop_in_place&lt;lb_rs::logic::secret_filename::SecretFileName&gt; (24 samples, 0.02%)</title><rect x="10.5760%" y="661" width="0.0190%" height="15" fill="rgb(254,117,50)" fg:x="13381" fg:w="24"/><text x="10.8260%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::drop_in_place&lt;lb_rs::logic::crypto::AESEncrypted&lt;alloc::string::String&gt;&gt; (24 samples, 0.02%)</title><rect x="10.5760%" y="645" width="0.0190%" height="15" fill="rgb(223,152,4)" fg:x="13381" fg:w="24"/><text x="10.8260%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (24 samples, 0.02%)</title><rect x="10.5760%" y="629" width="0.0190%" height="15" fill="rgb(245,6,2)" fg:x="13381" fg:w="24"/><text x="10.8260%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (24 samples, 0.02%)</title><rect x="10.5760%" y="613" width="0.0190%" height="15" fill="rgb(249,150,24)" fg:x="13381" fg:w="24"/><text x="10.8260%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (30 samples, 0.02%)</title><rect x="10.6377%" y="581" width="0.0237%" height="15" fill="rgb(228,185,42)" fg:x="13459" fg:w="30"/><text x="10.8877%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (24 samples, 0.02%)</title><rect x="10.6424%" y="565" width="0.0190%" height="15" fill="rgb(226,39,33)" fg:x="13465" fg:w="24"/><text x="10.8924%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (13 samples, 0.01%)</title><rect x="10.6638%" y="517" width="0.0103%" height="15" fill="rgb(221,166,19)" fg:x="13492" fg:w="13"/><text x="10.9138%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.01%)</title><rect x="10.6756%" y="485" width="0.0119%" height="15" fill="rgb(209,109,2)" fg:x="13507" fg:w="15"/><text x="10.9256%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.03%)</title><rect x="10.6622%" y="581" width="0.0277%" height="15" fill="rgb(252,216,26)" fg:x="13490" fg:w="35"/><text x="10.9122%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (35 samples, 0.03%)</title><rect x="10.6622%" y="565" width="0.0277%" height="15" fill="rgb(227,173,36)" fg:x="13490" fg:w="35"/><text x="10.9122%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (34 samples, 0.03%)</title><rect x="10.6630%" y="549" width="0.0269%" height="15" fill="rgb(209,90,7)" fg:x="13491" fg:w="34"/><text x="10.9130%" y="559.50"></text></g><g><title> N]&gt;::hash (34 samples, 0.03%)</title><rect x="10.6630%" y="533" width="0.0269%" height="15" fill="rgb(250,194,11)" fg:x="13491" fg:w="34"/><text x="10.9130%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (20 samples, 0.02%)</title><rect x="10.6740%" y="517" width="0.0158%" height="15" fill="rgb(220,72,50)" fg:x="13505" fg:w="20"/><text x="10.9240%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="10.6748%" y="501" width="0.0150%" height="15" fill="rgb(222,106,48)" fg:x="13506" fg:w="19"/><text x="10.9248%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (75 samples, 0.06%)</title><rect x="10.6361%" y="597" width="0.0593%" height="15" fill="rgb(216,220,45)" fg:x="13457" fg:w="75"/><text x="10.8861%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (34 samples, 0.03%)</title><rect x="10.6954%" y="581" width="0.0269%" height="15" fill="rgb(234,112,18)" fg:x="13532" fg:w="34"/><text x="10.9454%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (112 samples, 0.09%)</title><rect x="10.6345%" y="661" width="0.0885%" height="15" fill="rgb(206,179,9)" fg:x="13455" fg:w="112"/><text x="10.8845%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (112 samples, 0.09%)</title><rect x="10.6345%" y="645" width="0.0885%" height="15" fill="rgb(215,115,40)" fg:x="13455" fg:w="112"/><text x="10.8845%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (112 samples, 0.09%)</title><rect x="10.6345%" y="629" width="0.0885%" height="15" fill="rgb(222,69,34)" fg:x="13455" fg:w="112"/><text x="10.8845%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (112 samples, 0.09%)</title><rect x="10.6345%" y="613" width="0.0885%" height="15" fill="rgb(209,161,10)" fg:x="13455" fg:w="112"/><text x="10.8845%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (35 samples, 0.03%)</title><rect x="10.6954%" y="597" width="0.0277%" height="15" fill="rgb(217,6,38)" fg:x="13532" fg:w="35"/><text x="10.9454%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.01%)</title><rect x="10.7270%" y="549" width="0.0119%" height="15" fill="rgb(229,229,48)" fg:x="13572" fg:w="15"/><text x="10.9770%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.02%)</title><rect x="10.7404%" y="549" width="0.0245%" height="15" fill="rgb(225,21,28)" fg:x="13589" fg:w="31"/><text x="10.9904%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (31 samples, 0.02%)</title><rect x="10.7404%" y="533" width="0.0245%" height="15" fill="rgb(206,33,13)" fg:x="13589" fg:w="31"/><text x="10.9904%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (31 samples, 0.02%)</title><rect x="10.7404%" y="517" width="0.0245%" height="15" fill="rgb(242,178,17)" fg:x="13589" fg:w="31"/><text x="10.9904%" y="527.50"></text></g><g><title> N]&gt;::hash (31 samples, 0.02%)</title><rect x="10.7404%" y="501" width="0.0245%" height="15" fill="rgb(220,162,5)" fg:x="13589" fg:w="31"/><text x="10.9904%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (19 samples, 0.02%)</title><rect x="10.7499%" y="485" width="0.0150%" height="15" fill="rgb(210,33,43)" fg:x="13601" fg:w="19"/><text x="10.9999%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.01%)</title><rect x="10.7507%" y="469" width="0.0142%" height="15" fill="rgb(216,116,54)" fg:x="13602" fg:w="18"/><text x="11.0007%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (57 samples, 0.05%)</title><rect x="10.7270%" y="565" width="0.0451%" height="15" fill="rgb(249,92,24)" fg:x="13572" fg:w="57"/><text x="10.9770%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (91 samples, 0.07%)</title><rect x="10.7238%" y="629" width="0.0719%" height="15" fill="rgb(231,189,14)" fg:x="13568" fg:w="91"/><text x="10.9738%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (90 samples, 0.07%)</title><rect x="10.7246%" y="613" width="0.0711%" height="15" fill="rgb(230,8,41)" fg:x="13569" fg:w="90"/><text x="10.9746%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (90 samples, 0.07%)</title><rect x="10.7246%" y="597" width="0.0711%" height="15" fill="rgb(249,7,27)" fg:x="13569" fg:w="90"/><text x="10.9746%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (89 samples, 0.07%)</title><rect x="10.7254%" y="581" width="0.0703%" height="15" fill="rgb(232,86,5)" fg:x="13570" fg:w="89"/><text x="10.9754%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (30 samples, 0.02%)</title><rect x="10.7720%" y="565" width="0.0237%" height="15" fill="rgb(224,175,18)" fg:x="13629" fg:w="30"/><text x="11.0220%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (25 samples, 0.02%)</title><rect x="10.7760%" y="549" width="0.0198%" height="15" fill="rgb(220,129,12)" fg:x="13634" fg:w="25"/><text x="11.0260%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (209 samples, 0.17%)</title><rect x="10.6321%" y="693" width="0.1652%" height="15" fill="rgb(210,19,36)" fg:x="13452" fg:w="209"/><text x="10.8821%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (207 samples, 0.16%)</title><rect x="10.6337%" y="677" width="0.1636%" height="15" fill="rgb(219,96,14)" fg:x="13454" fg:w="207"/><text x="10.8837%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (94 samples, 0.07%)</title><rect x="10.7230%" y="661" width="0.0743%" height="15" fill="rgb(249,106,1)" fg:x="13567" fg:w="94"/><text x="10.9730%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (93 samples, 0.07%)</title><rect x="10.7238%" y="645" width="0.0735%" height="15" fill="rgb(249,155,20)" fg:x="13568" fg:w="93"/><text x="10.9738%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (213 samples, 0.17%)</title><rect x="10.6298%" y="725" width="0.1684%" height="15" fill="rgb(244,168,9)" fg:x="13449" fg:w="213"/><text x="10.8798%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (210 samples, 0.17%)</title><rect x="10.6321%" y="709" width="0.1660%" height="15" fill="rgb(216,23,50)" fg:x="13452" fg:w="210"/><text x="10.8821%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (222 samples, 0.18%)</title><rect x="10.6250%" y="773" width="0.1755%" height="15" fill="rgb(224,219,20)" fg:x="13443" fg:w="222"/><text x="10.8750%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (222 samples, 0.18%)</title><rect x="10.6250%" y="757" width="0.1755%" height="15" fill="rgb(222,156,15)" fg:x="13443" fg:w="222"/><text x="10.8750%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (221 samples, 0.17%)</title><rect x="10.6258%" y="741" width="0.1747%" height="15" fill="rgb(231,97,17)" fg:x="13444" fg:w="221"/><text x="10.8758%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::raw_vec::finish_grow (18 samples, 0.01%)</title><rect x="10.8068%" y="725" width="0.0142%" height="15" fill="rgb(218,70,48)" fg:x="13673" fg:w="18"/><text x="11.0568%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (26 samples, 0.02%)</title><rect x="10.8060%" y="741" width="0.0205%" height="15" fill="rgb(212,196,52)" fg:x="13672" fg:w="26"/><text x="11.0560%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::vec::Vec&lt;T,A&gt;::push (33 samples, 0.03%)</title><rect x="10.8013%" y="773" width="0.0261%" height="15" fill="rgb(243,203,18)" fg:x="13666" fg:w="33"/><text x="11.0513%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (28 samples, 0.02%)</title><rect x="10.8052%" y="757" width="0.0221%" height="15" fill="rgb(252,125,41)" fg:x="13671" fg:w="28"/><text x="11.0552%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="10.8274%" y="757" width="0.0119%" height="15" fill="rgb(223,180,33)" fg:x="13699" fg:w="15"/><text x="11.0774%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;uuid::Uuid&gt;&gt; (16 samples, 0.01%)</title><rect x="10.8274%" y="773" width="0.0126%" height="15" fill="rgb(254,159,46)" fg:x="13699" fg:w="16"/><text x="11.0774%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="10.8606%" y="565" width="0.0174%" height="15" fill="rgb(254,38,10)" fg:x="13741" fg:w="22"/><text x="11.1106%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.01%)</title><rect x="10.8645%" y="549" width="0.0134%" height="15" fill="rgb(208,217,32)" fg:x="13746" fg:w="17"/><text x="11.1145%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (13 samples, 0.01%)</title><rect x="10.8811%" y="501" width="0.0103%" height="15" fill="rgb(221,120,13)" fg:x="13767" fg:w="13"/><text x="11.1311%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (13 samples, 0.01%)</title><rect x="10.8811%" y="485" width="0.0103%" height="15" fill="rgb(246,54,52)" fg:x="13767" fg:w="13"/><text x="11.1311%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="10.8811%" y="469" width="0.0103%" height="15" fill="rgb(242,34,25)" fg:x="13767" fg:w="13"/><text x="11.1311%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (18 samples, 0.01%)</title><rect x="10.8961%" y="469" width="0.0142%" height="15" fill="rgb(247,209,9)" fg:x="13786" fg:w="18"/><text x="11.1461%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (43 samples, 0.03%)</title><rect x="10.8803%" y="565" width="0.0340%" height="15" fill="rgb(228,71,26)" fg:x="13766" fg:w="43"/><text x="11.1303%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (43 samples, 0.03%)</title><rect x="10.8803%" y="549" width="0.0340%" height="15" fill="rgb(222,145,49)" fg:x="13766" fg:w="43"/><text x="11.1303%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (43 samples, 0.03%)</title><rect x="10.8803%" y="533" width="0.0340%" height="15" fill="rgb(218,121,17)" fg:x="13766" fg:w="43"/><text x="11.1303%" y="543.50"></text></g><g><title> N]&gt;::hash (43 samples, 0.03%)</title><rect x="10.8803%" y="517" width="0.0340%" height="15" fill="rgb(244,50,7)" fg:x="13766" fg:w="43"/><text x="11.1303%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (29 samples, 0.02%)</title><rect x="10.8914%" y="501" width="0.0229%" height="15" fill="rgb(246,229,37)" fg:x="13780" fg:w="29"/><text x="11.1414%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 0.02%)</title><rect x="10.8922%" y="485" width="0.0221%" height="15" fill="rgb(225,18,5)" fg:x="13781" fg:w="28"/><text x="11.1422%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (73 samples, 0.06%)</title><rect x="10.8606%" y="581" width="0.0577%" height="15" fill="rgb(213,204,8)" fg:x="13741" fg:w="73"/><text x="11.1106%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (16 samples, 0.01%)</title><rect x="10.9388%" y="549" width="0.0126%" height="15" fill="rgb(238,103,6)" fg:x="13840" fg:w="16"/><text x="11.1888%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (119 samples, 0.09%)</title><rect x="10.8582%" y="645" width="0.0941%" height="15" fill="rgb(222,25,35)" fg:x="13738" fg:w="119"/><text x="11.1082%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (118 samples, 0.09%)</title><rect x="10.8590%" y="629" width="0.0933%" height="15" fill="rgb(213,203,35)" fg:x="13739" fg:w="118"/><text x="11.1090%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (118 samples, 0.09%)</title><rect x="10.8590%" y="613" width="0.0933%" height="15" fill="rgb(221,79,53)" fg:x="13739" fg:w="118"/><text x="11.1090%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (117 samples, 0.09%)</title><rect x="10.8598%" y="597" width="0.0925%" height="15" fill="rgb(243,200,35)" fg:x="13740" fg:w="117"/><text x="11.1098%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (43 samples, 0.03%)</title><rect x="10.9183%" y="581" width="0.0340%" height="15" fill="rgb(248,60,25)" fg:x="13814" fg:w="43"/><text x="11.1683%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (43 samples, 0.03%)</title><rect x="10.9183%" y="565" width="0.0340%" height="15" fill="rgb(227,53,46)" fg:x="13814" fg:w="43"/><text x="11.1683%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (129 samples, 0.10%)</title><rect x="10.8534%" y="709" width="0.1020%" height="15" fill="rgb(216,120,32)" fg:x="13732" fg:w="129"/><text x="11.1034%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (125 samples, 0.10%)</title><rect x="10.8566%" y="693" width="0.0988%" height="15" fill="rgb(220,134,1)" fg:x="13736" fg:w="125"/><text x="11.1066%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (125 samples, 0.10%)</title><rect x="10.8566%" y="677" width="0.0988%" height="15" fill="rgb(237,168,5)" fg:x="13736" fg:w="125"/><text x="11.1066%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (123 samples, 0.10%)</title><rect x="10.8582%" y="661" width="0.0972%" height="15" fill="rgb(231,100,33)" fg:x="13738" fg:w="123"/><text x="11.1082%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (138 samples, 0.11%)</title><rect x="10.8471%" y="757" width="0.1091%" height="15" fill="rgb(236,177,47)" fg:x="13724" fg:w="138"/><text x="11.0971%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (138 samples, 0.11%)</title><rect x="10.8471%" y="741" width="0.1091%" height="15" fill="rgb(235,7,49)" fg:x="13724" fg:w="138"/><text x="11.0971%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (137 samples, 0.11%)</title><rect x="10.8479%" y="725" width="0.1083%" height="15" fill="rgb(232,119,22)" fg:x="13725" fg:w="137"/><text x="11.0979%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (140 samples, 0.11%)</title><rect x="10.8471%" y="773" width="0.1107%" height="15" fill="rgb(254,73,53)" fg:x="13724" fg:w="140"/><text x="11.0971%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.02%)</title><rect x="10.9586%" y="725" width="0.0205%" height="15" fill="rgb(251,35,20)" fg:x="13865" fg:w="26"/><text x="11.2086%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21 samples, 0.02%)</title><rect x="10.9625%" y="709" width="0.0166%" height="15" fill="rgb(241,119,20)" fg:x="13870" fg:w="21"/><text x="11.2125%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (15 samples, 0.01%)</title><rect x="10.9831%" y="661" width="0.0119%" height="15" fill="rgb(207,102,14)" fg:x="13896" fg:w="15"/><text x="11.2331%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (14 samples, 0.01%)</title><rect x="10.9839%" y="645" width="0.0111%" height="15" fill="rgb(248,201,50)" fg:x="13897" fg:w="14"/><text x="11.2339%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="10.9839%" y="629" width="0.0111%" height="15" fill="rgb(222,185,44)" fg:x="13897" fg:w="14"/><text x="11.2339%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (30 samples, 0.02%)</title><rect x="10.9823%" y="725" width="0.0237%" height="15" fill="rgb(218,107,18)" fg:x="13895" fg:w="30"/><text x="11.2323%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (30 samples, 0.02%)</title><rect x="10.9823%" y="709" width="0.0237%" height="15" fill="rgb(237,177,39)" fg:x="13895" fg:w="30"/><text x="11.2323%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (30 samples, 0.02%)</title><rect x="10.9823%" y="693" width="0.0237%" height="15" fill="rgb(246,69,6)" fg:x="13895" fg:w="30"/><text x="11.2323%" y="703.50"></text></g><g><title> N]&gt;::hash (30 samples, 0.02%)</title><rect x="10.9823%" y="677" width="0.0237%" height="15" fill="rgb(234,208,37)" fg:x="13895" fg:w="30"/><text x="11.2323%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (14 samples, 0.01%)</title><rect x="10.9949%" y="661" width="0.0111%" height="15" fill="rgb(225,4,6)" fg:x="13911" fg:w="14"/><text x="11.2449%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="10.9957%" y="645" width="0.0103%" height="15" fill="rgb(233,45,0)" fg:x="13912" fg:w="13"/><text x="11.2457%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (66 samples, 0.05%)</title><rect x="10.9586%" y="741" width="0.0522%" height="15" fill="rgb(226,136,5)" fg:x="13865" fg:w="66"/><text x="11.2086%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (108 samples, 0.09%)</title><rect x="10.9578%" y="773" width="0.0854%" height="15" fill="rgb(211,91,47)" fg:x="13864" fg:w="108"/><text x="11.2078%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (108 samples, 0.09%)</title><rect x="10.9578%" y="757" width="0.0854%" height="15" fill="rgb(242,88,51)" fg:x="13864" fg:w="108"/><text x="11.2078%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (41 samples, 0.03%)</title><rect x="11.0107%" y="741" width="0.0324%" height="15" fill="rgb(230,91,28)" fg:x="13931" fg:w="41"/><text x="11.2607%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.03%)</title><rect x="11.0171%" y="725" width="0.0261%" height="15" fill="rgb(254,186,29)" fg:x="13939" fg:w="33"/><text x="11.2671%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.02%)</title><rect x="11.0510%" y="725" width="0.0205%" height="15" fill="rgb(238,6,4)" fg:x="13982" fg:w="26"/><text x="11.3010%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.01%)</title><rect x="11.0582%" y="709" width="0.0134%" height="15" fill="rgb(221,151,16)" fg:x="13991" fg:w="17"/><text x="11.3082%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.01%)</title><rect x="11.0858%" y="629" width="0.0103%" height="15" fill="rgb(251,143,52)" fg:x="14026" fg:w="13"/><text x="11.3358%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (30 samples, 0.02%)</title><rect x="11.0748%" y="693" width="0.0237%" height="15" fill="rgb(206,90,15)" fg:x="14012" fg:w="30"/><text x="11.3248%" y="703.50"></text></g><g><title> N]&gt;::hash (30 samples, 0.02%)</title><rect x="11.0748%" y="677" width="0.0237%" height="15" fill="rgb(218,35,8)" fg:x="14012" fg:w="30"/><text x="11.3248%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (19 samples, 0.02%)</title><rect x="11.0834%" y="661" width="0.0150%" height="15" fill="rgb(239,215,6)" fg:x="14023" fg:w="19"/><text x="11.3334%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.01%)</title><rect x="11.0842%" y="645" width="0.0142%" height="15" fill="rgb(245,116,39)" fg:x="14024" fg:w="18"/><text x="11.3342%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (33 samples, 0.03%)</title><rect x="11.0732%" y="725" width="0.0261%" height="15" fill="rgb(242,65,28)" fg:x="14010" fg:w="33"/><text x="11.3232%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (32 samples, 0.03%)</title><rect x="11.0740%" y="709" width="0.0253%" height="15" fill="rgb(252,132,53)" fg:x="14011" fg:w="32"/><text x="11.3240%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (69 samples, 0.05%)</title><rect x="11.0510%" y="741" width="0.0545%" height="15" fill="rgb(224,159,50)" fg:x="13982" fg:w="69"/><text x="11.3010%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::calculate_deleted (677 samples, 0.54%)</title><rect x="10.5958%" y="789" width="0.5351%" height="15" fill="rgb(224,93,4)" fg:x="13406" fg:w="677"/><text x="10.8458%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (111 samples, 0.09%)</title><rect x="11.0431%" y="773" width="0.0877%" height="15" fill="rgb(208,81,34)" fg:x="13972" fg:w="111"/><text x="11.2931%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (110 samples, 0.09%)</title><rect x="11.0439%" y="757" width="0.0869%" height="15" fill="rgb(233,92,54)" fg:x="13973" fg:w="110"/><text x="11.2939%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (29 samples, 0.02%)</title><rect x="11.1079%" y="741" width="0.0229%" height="15" fill="rgb(237,21,14)" fg:x="14054" fg:w="29"/><text x="11.3579%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (25 samples, 0.02%)</title><rect x="11.1111%" y="725" width="0.0198%" height="15" fill="rgb(249,128,51)" fg:x="14058" fg:w="25"/><text x="11.3611%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.02%)</title><rect x="11.1419%" y="581" width="0.0205%" height="15" fill="rgb(223,129,24)" fg:x="14097" fg:w="26"/><text x="11.3919%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (23 samples, 0.02%)</title><rect x="11.1443%" y="565" width="0.0182%" height="15" fill="rgb(231,168,25)" fg:x="14100" fg:w="23"/><text x="11.3943%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (27 samples, 0.02%)</title><rect x="11.1649%" y="581" width="0.0213%" height="15" fill="rgb(224,39,20)" fg:x="14126" fg:w="27"/><text x="11.4149%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (27 samples, 0.02%)</title><rect x="11.1649%" y="565" width="0.0213%" height="15" fill="rgb(225,152,53)" fg:x="14126" fg:w="27"/><text x="11.4149%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (27 samples, 0.02%)</title><rect x="11.1649%" y="549" width="0.0213%" height="15" fill="rgb(252,17,24)" fg:x="14126" fg:w="27"/><text x="11.4149%" y="559.50"></text></g><g><title> N]&gt;::hash (27 samples, 0.02%)</title><rect x="11.1649%" y="533" width="0.0213%" height="15" fill="rgb(250,114,30)" fg:x="14126" fg:w="27"/><text x="11.4149%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (19 samples, 0.02%)</title><rect x="11.1712%" y="517" width="0.0150%" height="15" fill="rgb(229,5,4)" fg:x="14134" fg:w="19"/><text x="11.4212%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="11.1736%" y="501" width="0.0126%" height="15" fill="rgb(225,176,49)" fg:x="14137" fg:w="16"/><text x="11.4236%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (61 samples, 0.05%)</title><rect x="11.1419%" y="597" width="0.0482%" height="15" fill="rgb(224,221,49)" fg:x="14097" fg:w="61"/><text x="11.3919%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.03%)</title><rect x="11.1917%" y="581" width="0.0261%" height="15" fill="rgb(253,169,27)" fg:x="14160" fg:w="33"/><text x="11.4417%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (100 samples, 0.08%)</title><rect x="11.1396%" y="661" width="0.0790%" height="15" fill="rgb(211,206,16)" fg:x="14094" fg:w="100"/><text x="11.3896%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (99 samples, 0.08%)</title><rect x="11.1404%" y="645" width="0.0782%" height="15" fill="rgb(244,87,35)" fg:x="14095" fg:w="99"/><text x="11.3904%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (99 samples, 0.08%)</title><rect x="11.1404%" y="629" width="0.0782%" height="15" fill="rgb(246,28,10)" fg:x="14095" fg:w="99"/><text x="11.3904%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (99 samples, 0.08%)</title><rect x="11.1404%" y="613" width="0.0782%" height="15" fill="rgb(229,12,44)" fg:x="14095" fg:w="99"/><text x="11.3904%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (36 samples, 0.03%)</title><rect x="11.1901%" y="597" width="0.0285%" height="15" fill="rgb(210,145,37)" fg:x="14158" fg:w="36"/><text x="11.4401%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (102 samples, 0.08%)</title><rect x="11.1388%" y="693" width="0.0806%" height="15" fill="rgb(227,112,52)" fg:x="14093" fg:w="102"/><text x="11.3888%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (102 samples, 0.08%)</title><rect x="11.1388%" y="677" width="0.0806%" height="15" fill="rgb(238,155,34)" fg:x="14093" fg:w="102"/><text x="11.3888%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (113 samples, 0.09%)</title><rect x="11.1309%" y="773" width="0.0893%" height="15" fill="rgb(239,226,36)" fg:x="14083" fg:w="113"/><text x="11.3809%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (113 samples, 0.09%)</title><rect x="11.1309%" y="757" width="0.0893%" height="15" fill="rgb(230,16,23)" fg:x="14083" fg:w="113"/><text x="11.3809%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (112 samples, 0.09%)</title><rect x="11.1317%" y="741" width="0.0885%" height="15" fill="rgb(236,171,36)" fg:x="14084" fg:w="112"/><text x="11.3817%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (105 samples, 0.08%)</title><rect x="11.1372%" y="725" width="0.0830%" height="15" fill="rgb(221,22,14)" fg:x="14091" fg:w="105"/><text x="11.3872%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (104 samples, 0.08%)</title><rect x="11.1380%" y="709" width="0.0822%" height="15" fill="rgb(242,43,11)" fg:x="14092" fg:w="104"/><text x="11.3880%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (114 samples, 0.09%)</title><rect x="11.1309%" y="789" width="0.0901%" height="15" fill="rgb(232,69,23)" fg:x="14083" fg:w="114"/><text x="11.3809%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.02%)</title><rect x="11.2320%" y="405" width="0.0205%" height="15" fill="rgb(216,180,54)" fg:x="14211" fg:w="26"/><text x="11.4820%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21 samples, 0.02%)</title><rect x="11.2360%" y="389" width="0.0166%" height="15" fill="rgb(216,5,24)" fg:x="14216" fg:w="21"/><text x="11.4860%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (15 samples, 0.01%)</title><rect x="11.2581%" y="325" width="0.0119%" height="15" fill="rgb(225,89,9)" fg:x="14244" fg:w="15"/><text x="11.5081%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (14 samples, 0.01%)</title><rect x="11.2589%" y="309" width="0.0111%" height="15" fill="rgb(243,75,33)" fg:x="14245" fg:w="14"/><text x="11.5089%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="11.2597%" y="293" width="0.0103%" height="15" fill="rgb(247,141,45)" fg:x="14246" fg:w="13"/><text x="11.5097%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (39 samples, 0.03%)</title><rect x="11.2542%" y="405" width="0.0308%" height="15" fill="rgb(232,177,36)" fg:x="14239" fg:w="39"/><text x="11.5042%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (36 samples, 0.03%)</title><rect x="11.2565%" y="389" width="0.0285%" height="15" fill="rgb(219,125,36)" fg:x="14242" fg:w="36"/><text x="11.5065%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (36 samples, 0.03%)</title><rect x="11.2565%" y="373" width="0.0285%" height="15" fill="rgb(227,94,9)" fg:x="14242" fg:w="36"/><text x="11.5065%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (36 samples, 0.03%)</title><rect x="11.2565%" y="357" width="0.0285%" height="15" fill="rgb(240,34,52)" fg:x="14242" fg:w="36"/><text x="11.5065%" y="367.50"></text></g><g><title> N]&gt;::hash (36 samples, 0.03%)</title><rect x="11.2565%" y="341" width="0.0285%" height="15" fill="rgb(216,45,12)" fg:x="14242" fg:w="36"/><text x="11.5065%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (19 samples, 0.02%)</title><rect x="11.2700%" y="325" width="0.0150%" height="15" fill="rgb(246,21,19)" fg:x="14259" fg:w="19"/><text x="11.5200%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="11.2723%" y="309" width="0.0126%" height="15" fill="rgb(213,98,42)" fg:x="14262" fg:w="16"/><text x="11.5223%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (80 samples, 0.06%)</title><rect x="11.2320%" y="421" width="0.0632%" height="15" fill="rgb(250,136,47)" fg:x="14211" fg:w="80"/><text x="11.4820%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.01%)</title><rect x="11.2850%" y="405" width="0.0103%" height="15" fill="rgb(251,124,27)" fg:x="14278" fg:w="13"/><text x="11.5350%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (35 samples, 0.03%)</title><rect x="11.2968%" y="421" width="0.0277%" height="15" fill="rgb(229,180,14)" fg:x="14293" fg:w="35"/><text x="11.5468%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (32 samples, 0.03%)</title><rect x="11.2992%" y="405" width="0.0253%" height="15" fill="rgb(245,216,25)" fg:x="14296" fg:w="32"/><text x="11.5492%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (133 samples, 0.11%)</title><rect x="11.2226%" y="501" width="0.1051%" height="15" fill="rgb(251,43,5)" fg:x="14199" fg:w="133"/><text x="11.4726%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (133 samples, 0.11%)</title><rect x="11.2226%" y="485" width="0.1051%" height="15" fill="rgb(250,128,24)" fg:x="14199" fg:w="133"/><text x="11.4726%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (131 samples, 0.10%)</title><rect x="11.2241%" y="469" width="0.1035%" height="15" fill="rgb(217,117,27)" fg:x="14201" fg:w="131"/><text x="11.4741%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (130 samples, 0.10%)</title><rect x="11.2249%" y="453" width="0.1027%" height="15" fill="rgb(245,147,4)" fg:x="14202" fg:w="130"/><text x="11.4749%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (126 samples, 0.10%)</title><rect x="11.2281%" y="437" width="0.0996%" height="15" fill="rgb(242,201,35)" fg:x="14206" fg:w="126"/><text x="11.4781%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (136 samples, 0.11%)</title><rect x="11.2218%" y="517" width="0.1075%" height="15" fill="rgb(218,181,1)" fg:x="14198" fg:w="136"/><text x="11.4718%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (144 samples, 0.11%)</title><rect x="11.2210%" y="693" width="0.1138%" height="15" fill="rgb(222,6,29)" fg:x="14197" fg:w="144"/><text x="11.4710%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (144 samples, 0.11%)</title><rect x="11.2210%" y="677" width="0.1138%" height="15" fill="rgb(208,186,3)" fg:x="14197" fg:w="144"/><text x="11.4710%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (144 samples, 0.11%)</title><rect x="11.2210%" y="661" width="0.1138%" height="15" fill="rgb(216,36,26)" fg:x="14197" fg:w="144"/><text x="11.4710%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (144 samples, 0.11%)</title><rect x="11.2210%" y="645" width="0.1138%" height="15" fill="rgb(248,201,23)" fg:x="14197" fg:w="144"/><text x="11.4710%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (144 samples, 0.11%)</title><rect x="11.2210%" y="629" width="0.1138%" height="15" fill="rgb(251,170,31)" fg:x="14197" fg:w="144"/><text x="11.4710%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (144 samples, 0.11%)</title><rect x="11.2210%" y="613" width="0.1138%" height="15" fill="rgb(207,110,25)" fg:x="14197" fg:w="144"/><text x="11.4710%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (144 samples, 0.11%)</title><rect x="11.2210%" y="597" width="0.1138%" height="15" fill="rgb(250,54,15)" fg:x="14197" fg:w="144"/><text x="11.4710%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (144 samples, 0.11%)</title><rect x="11.2210%" y="581" width="0.1138%" height="15" fill="rgb(227,68,33)" fg:x="14197" fg:w="144"/><text x="11.4710%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (144 samples, 0.11%)</title><rect x="11.2210%" y="565" width="0.1138%" height="15" fill="rgb(238,34,41)" fg:x="14197" fg:w="144"/><text x="11.4710%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (144 samples, 0.11%)</title><rect x="11.2210%" y="549" width="0.1138%" height="15" fill="rgb(220,11,15)" fg:x="14197" fg:w="144"/><text x="11.4710%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (143 samples, 0.11%)</title><rect x="11.2218%" y="533" width="0.1130%" height="15" fill="rgb(246,111,35)" fg:x="14198" fg:w="143"/><text x="11.4718%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="11.3348%" y="517" width="0.0103%" height="15" fill="rgb(209,88,53)" fg:x="14341" fg:w="13"/><text x="11.5848%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.02%)</title><rect x="11.3530%" y="405" width="0.0198%" height="15" fill="rgb(231,185,47)" fg:x="14364" fg:w="25"/><text x="11.6030%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (22 samples, 0.02%)</title><rect x="11.3553%" y="389" width="0.0174%" height="15" fill="rgb(233,154,1)" fg:x="14367" fg:w="22"/><text x="11.6053%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (13 samples, 0.01%)</title><rect x="11.3806%" y="325" width="0.0103%" height="15" fill="rgb(225,15,46)" fg:x="14399" fg:w="13"/><text x="11.6306%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.01%)</title><rect x="11.3941%" y="293" width="0.0134%" height="15" fill="rgb(211,135,41)" fg:x="14416" fg:w="17"/><text x="11.6441%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (40 samples, 0.03%)</title><rect x="11.3783%" y="373" width="0.0316%" height="15" fill="rgb(208,54,0)" fg:x="14396" fg:w="40"/><text x="11.6283%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (40 samples, 0.03%)</title><rect x="11.3783%" y="357" width="0.0316%" height="15" fill="rgb(244,136,14)" fg:x="14396" fg:w="40"/><text x="11.6283%" y="367.50"></text></g><g><title> N]&gt;::hash (40 samples, 0.03%)</title><rect x="11.3783%" y="341" width="0.0316%" height="15" fill="rgb(241,56,14)" fg:x="14396" fg:w="40"/><text x="11.6283%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (24 samples, 0.02%)</title><rect x="11.3909%" y="325" width="0.0190%" height="15" fill="rgb(205,80,24)" fg:x="14412" fg:w="24"/><text x="11.6409%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 0.02%)</title><rect x="11.3917%" y="309" width="0.0182%" height="15" fill="rgb(220,57,4)" fg:x="14413" fg:w="23"/><text x="11.6417%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (43 samples, 0.03%)</title><rect x="11.3767%" y="405" width="0.0340%" height="15" fill="rgb(226,193,50)" fg:x="14394" fg:w="43"/><text x="11.6267%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (41 samples, 0.03%)</title><rect x="11.3783%" y="389" width="0.0324%" height="15" fill="rgb(231,168,22)" fg:x="14396" fg:w="41"/><text x="11.6283%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (88 samples, 0.07%)</title><rect x="11.3530%" y="421" width="0.0696%" height="15" fill="rgb(254,215,14)" fg:x="14364" fg:w="88"/><text x="11.6030%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.01%)</title><rect x="11.4107%" y="405" width="0.0119%" height="15" fill="rgb(211,115,16)" fg:x="14437" fg:w="15"/><text x="11.6607%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (34 samples, 0.03%)</title><rect x="11.4462%" y="325" width="0.0269%" height="15" fill="rgb(236,210,16)" fg:x="14482" fg:w="34"/><text x="11.6962%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (31 samples, 0.02%)</title><rect x="11.4486%" y="309" width="0.0245%" height="15" fill="rgb(221,94,12)" fg:x="14485" fg:w="31"/><text x="11.6986%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (16 samples, 0.01%)</title><rect x="11.4794%" y="245" width="0.0126%" height="15" fill="rgb(235,218,49)" fg:x="14524" fg:w="16"/><text x="11.7294%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (15 samples, 0.01%)</title><rect x="11.4802%" y="229" width="0.0119%" height="15" fill="rgb(217,114,14)" fg:x="14525" fg:w="15"/><text x="11.7302%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="11.4802%" y="213" width="0.0119%" height="15" fill="rgb(216,145,22)" fg:x="14525" fg:w="15"/><text x="11.7302%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (37 samples, 0.03%)</title><rect x="11.4778%" y="325" width="0.0292%" height="15" fill="rgb(217,112,39)" fg:x="14522" fg:w="37"/><text x="11.7278%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (36 samples, 0.03%)</title><rect x="11.4786%" y="309" width="0.0285%" height="15" fill="rgb(225,85,32)" fg:x="14523" fg:w="36"/><text x="11.7286%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (35 samples, 0.03%)</title><rect x="11.4794%" y="293" width="0.0277%" height="15" fill="rgb(245,209,47)" fg:x="14524" fg:w="35"/><text x="11.7294%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (35 samples, 0.03%)</title><rect x="11.4794%" y="277" width="0.0277%" height="15" fill="rgb(218,220,15)" fg:x="14524" fg:w="35"/><text x="11.7294%" y="287.50"></text></g><g><title> N]&gt;::hash (35 samples, 0.03%)</title><rect x="11.4794%" y="261" width="0.0277%" height="15" fill="rgb(222,202,31)" fg:x="14524" fg:w="35"/><text x="11.7294%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (19 samples, 0.02%)</title><rect x="11.4921%" y="245" width="0.0150%" height="15" fill="rgb(243,203,4)" fg:x="14540" fg:w="19"/><text x="11.7421%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="11.4921%" y="229" width="0.0150%" height="15" fill="rgb(237,92,17)" fg:x="14540" fg:w="19"/><text x="11.7421%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (90 samples, 0.07%)</title><rect x="11.4423%" y="373" width="0.0711%" height="15" fill="rgb(231,119,7)" fg:x="14477" fg:w="90"/><text x="11.6923%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (87 samples, 0.07%)</title><rect x="11.4446%" y="357" width="0.0688%" height="15" fill="rgb(237,82,41)" fg:x="14480" fg:w="87"/><text x="11.6946%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (85 samples, 0.07%)</title><rect x="11.4462%" y="341" width="0.0672%" height="15" fill="rgb(226,81,48)" fg:x="14482" fg:w="85"/><text x="11.6962%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (16 samples, 0.01%)</title><rect x="11.5221%" y="341" width="0.0126%" height="15" fill="rgb(234,70,51)" fg:x="14578" fg:w="16"/><text x="11.7721%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (31 samples, 0.02%)</title><rect x="11.5150%" y="357" width="0.0245%" height="15" fill="rgb(251,86,4)" fg:x="14569" fg:w="31"/><text x="11.7650%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (34 samples, 0.03%)</title><rect x="11.5134%" y="373" width="0.0269%" height="15" fill="rgb(244,144,28)" fg:x="14567" fg:w="34"/><text x="11.7634%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (152 samples, 0.12%)</title><rect x="11.4257%" y="405" width="0.1201%" height="15" fill="rgb(232,161,39)" fg:x="14456" fg:w="152"/><text x="11.6757%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (152 samples, 0.12%)</title><rect x="11.4257%" y="389" width="0.1201%" height="15" fill="rgb(247,34,51)" fg:x="14456" fg:w="152"/><text x="11.6757%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (37 samples, 0.03%)</title><rect x="11.5466%" y="405" width="0.0292%" height="15" fill="rgb(225,132,2)" fg:x="14609" fg:w="37"/><text x="11.7966%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (193 samples, 0.15%)</title><rect x="11.4241%" y="421" width="0.1525%" height="15" fill="rgb(209,159,44)" fg:x="14454" fg:w="193"/><text x="11.6741%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (285 samples, 0.23%)</title><rect x="11.3530%" y="437" width="0.2253%" height="15" fill="rgb(251,214,1)" fg:x="14364" fg:w="285"/><text x="11.6030%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (295 samples, 0.23%)</title><rect x="11.3459%" y="501" width="0.2332%" height="15" fill="rgb(247,84,47)" fg:x="14355" fg:w="295"/><text x="11.5959%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (290 samples, 0.23%)</title><rect x="11.3498%" y="485" width="0.2292%" height="15" fill="rgb(240,111,43)" fg:x="14360" fg:w="290"/><text x="11.5998%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (288 samples, 0.23%)</title><rect x="11.3514%" y="469" width="0.2276%" height="15" fill="rgb(215,214,35)" fg:x="14362" fg:w="288"/><text x="11.6014%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (288 samples, 0.23%)</title><rect x="11.3514%" y="453" width="0.2276%" height="15" fill="rgb(248,207,23)" fg:x="14362" fg:w="288"/><text x="11.6014%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (297 samples, 0.23%)</title><rect x="11.3451%" y="517" width="0.2347%" height="15" fill="rgb(214,186,4)" fg:x="14354" fg:w="297"/><text x="11.5951%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::ids (455 samples, 0.36%)</title><rect x="11.2210%" y="725" width="0.3596%" height="15" fill="rgb(220,133,22)" fg:x="14197" fg:w="455"/><text x="11.4710%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (455 samples, 0.36%)</title><rect x="11.2210%" y="709" width="0.3596%" height="15" fill="rgb(239,134,19)" fg:x="14197" fg:w="455"/><text x="11.4710%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (311 samples, 0.25%)</title><rect x="11.3348%" y="693" width="0.2458%" height="15" fill="rgb(250,140,9)" fg:x="14341" fg:w="311"/><text x="11.5848%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (311 samples, 0.25%)</title><rect x="11.3348%" y="677" width="0.2458%" height="15" fill="rgb(225,59,14)" fg:x="14341" fg:w="311"/><text x="11.5848%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (311 samples, 0.25%)</title><rect x="11.3348%" y="661" width="0.2458%" height="15" fill="rgb(214,152,51)" fg:x="14341" fg:w="311"/><text x="11.5848%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (311 samples, 0.25%)</title><rect x="11.3348%" y="645" width="0.2458%" height="15" fill="rgb(251,227,43)" fg:x="14341" fg:w="311"/><text x="11.5848%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (311 samples, 0.25%)</title><rect x="11.3348%" y="629" width="0.2458%" height="15" fill="rgb(241,96,17)" fg:x="14341" fg:w="311"/><text x="11.5848%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (311 samples, 0.25%)</title><rect x="11.3348%" y="613" width="0.2458%" height="15" fill="rgb(234,198,43)" fg:x="14341" fg:w="311"/><text x="11.5848%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (311 samples, 0.25%)</title><rect x="11.3348%" y="597" width="0.2458%" height="15" fill="rgb(220,108,29)" fg:x="14341" fg:w="311"/><text x="11.5848%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (311 samples, 0.25%)</title><rect x="11.3348%" y="581" width="0.2458%" height="15" fill="rgb(226,163,33)" fg:x="14341" fg:w="311"/><text x="11.5848%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (311 samples, 0.25%)</title><rect x="11.3348%" y="565" width="0.2458%" height="15" fill="rgb(205,194,45)" fg:x="14341" fg:w="311"/><text x="11.5848%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (311 samples, 0.25%)</title><rect x="11.3348%" y="549" width="0.2458%" height="15" fill="rgb(206,143,44)" fg:x="14341" fg:w="311"/><text x="11.5848%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (311 samples, 0.25%)</title><rect x="11.3348%" y="533" width="0.2458%" height="15" fill="rgb(236,136,36)" fg:x="14341" fg:w="311"/><text x="11.5848%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="11.6027%" y="421" width="0.0158%" height="15" fill="rgb(249,172,42)" fg:x="14680" fg:w="20"/><text x="11.8527%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.01%)</title><rect x="11.6075%" y="405" width="0.0111%" height="15" fill="rgb(216,139,23)" fg:x="14686" fg:w="14"/><text x="11.8575%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (25 samples, 0.02%)</title><rect x="11.6225%" y="389" width="0.0198%" height="15" fill="rgb(207,166,20)" fg:x="14705" fg:w="25"/><text x="11.8725%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (25 samples, 0.02%)</title><rect x="11.6225%" y="373" width="0.0198%" height="15" fill="rgb(210,209,22)" fg:x="14705" fg:w="25"/><text x="11.8725%" y="383.50"></text></g><g><title> N]&gt;::hash (25 samples, 0.02%)</title><rect x="11.6225%" y="357" width="0.0198%" height="15" fill="rgb(232,118,20)" fg:x="14705" fg:w="25"/><text x="11.8725%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (16 samples, 0.01%)</title><rect x="11.6296%" y="341" width="0.0126%" height="15" fill="rgb(238,113,42)" fg:x="14714" fg:w="16"/><text x="11.8796%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="11.6304%" y="325" width="0.0119%" height="15" fill="rgb(231,42,5)" fg:x="14715" fg:w="15"/><text x="11.8804%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (26 samples, 0.02%)</title><rect x="11.6225%" y="421" width="0.0205%" height="15" fill="rgb(243,166,24)" fg:x="14705" fg:w="26"/><text x="11.8725%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (26 samples, 0.02%)</title><rect x="11.6225%" y="405" width="0.0205%" height="15" fill="rgb(237,226,12)" fg:x="14705" fg:w="26"/><text x="11.8725%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (61 samples, 0.05%)</title><rect x="11.6027%" y="437" width="0.0482%" height="15" fill="rgb(229,133,24)" fg:x="14680" fg:w="61"/><text x="11.8527%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (38 samples, 0.03%)</title><rect x="11.6731%" y="341" width="0.0300%" height="15" fill="rgb(238,33,43)" fg:x="14769" fg:w="38"/><text x="11.9231%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (30 samples, 0.02%)</title><rect x="11.6794%" y="325" width="0.0237%" height="15" fill="rgb(227,59,38)" fg:x="14777" fg:w="30"/><text x="11.9294%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (16 samples, 0.01%)</title><rect x="11.7078%" y="261" width="0.0126%" height="15" fill="rgb(230,97,0)" fg:x="14813" fg:w="16"/><text x="11.9578%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (16 samples, 0.01%)</title><rect x="11.7078%" y="245" width="0.0126%" height="15" fill="rgb(250,173,50)" fg:x="14813" fg:w="16"/><text x="11.9578%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="11.7078%" y="229" width="0.0126%" height="15" fill="rgb(240,15,50)" fg:x="14813" fg:w="16"/><text x="11.9578%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.01%)</title><rect x="11.7229%" y="229" width="0.0126%" height="15" fill="rgb(221,93,22)" fg:x="14832" fg:w="16"/><text x="11.9729%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (44 samples, 0.03%)</title><rect x="11.7063%" y="309" width="0.0348%" height="15" fill="rgb(245,180,53)" fg:x="14811" fg:w="44"/><text x="11.9563%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (44 samples, 0.03%)</title><rect x="11.7063%" y="293" width="0.0348%" height="15" fill="rgb(231,88,51)" fg:x="14811" fg:w="44"/><text x="11.9563%" y="303.50"></text></g><g><title> N]&gt;::hash (44 samples, 0.03%)</title><rect x="11.7063%" y="277" width="0.0348%" height="15" fill="rgb(240,58,21)" fg:x="14811" fg:w="44"/><text x="11.9563%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (26 samples, 0.02%)</title><rect x="11.7205%" y="261" width="0.0205%" height="15" fill="rgb(237,21,10)" fg:x="14829" fg:w="26"/><text x="11.9705%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="11.7221%" y="245" width="0.0190%" height="15" fill="rgb(218,43,11)" fg:x="14831" fg:w="24"/><text x="11.9721%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (45 samples, 0.04%)</title><rect x="11.7063%" y="341" width="0.0356%" height="15" fill="rgb(218,221,29)" fg:x="14811" fg:w="45"/><text x="11.9563%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (45 samples, 0.04%)</title><rect x="11.7063%" y="325" width="0.0356%" height="15" fill="rgb(214,118,42)" fg:x="14811" fg:w="45"/><text x="11.9563%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (102 samples, 0.08%)</title><rect x="11.6699%" y="389" width="0.0806%" height="15" fill="rgb(251,200,26)" fg:x="14765" fg:w="102"/><text x="11.9199%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (99 samples, 0.08%)</title><rect x="11.6723%" y="373" width="0.0782%" height="15" fill="rgb(237,101,39)" fg:x="14768" fg:w="99"/><text x="11.9223%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (98 samples, 0.08%)</title><rect x="11.6731%" y="357" width="0.0775%" height="15" fill="rgb(251,117,11)" fg:x="14769" fg:w="98"/><text x="11.9231%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (14 samples, 0.01%)</title><rect x="11.7584%" y="357" width="0.0111%" height="15" fill="rgb(216,223,23)" fg:x="14877" fg:w="14"/><text x="12.0084%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (28 samples, 0.02%)</title><rect x="11.7505%" y="389" width="0.0221%" height="15" fill="rgb(251,54,12)" fg:x="14867" fg:w="28"/><text x="12.0005%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (25 samples, 0.02%)</title><rect x="11.7529%" y="373" width="0.0198%" height="15" fill="rgb(254,176,54)" fg:x="14870" fg:w="25"/><text x="12.0029%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (161 samples, 0.13%)</title><rect x="11.6517%" y="421" width="0.1273%" height="15" fill="rgb(210,32,8)" fg:x="14742" fg:w="161"/><text x="11.9017%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (158 samples, 0.12%)</title><rect x="11.6541%" y="405" width="0.1249%" height="15" fill="rgb(235,52,38)" fg:x="14745" fg:w="158"/><text x="11.9041%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (202 samples, 0.16%)</title><rect x="11.6517%" y="437" width="0.1597%" height="15" fill="rgb(231,4,44)" fg:x="14742" fg:w="202"/><text x="11.9017%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (41 samples, 0.03%)</title><rect x="11.7790%" y="421" width="0.0324%" height="15" fill="rgb(249,2,32)" fg:x="14903" fg:w="41"/><text x="12.0290%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (277 samples, 0.22%)</title><rect x="11.5972%" y="469" width="0.2189%" height="15" fill="rgb(224,65,26)" fg:x="14673" fg:w="277"/><text x="11.8472%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (274 samples, 0.22%)</title><rect x="11.5996%" y="453" width="0.2166%" height="15" fill="rgb(250,73,40)" fg:x="14676" fg:w="274"/><text x="11.8496%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (280 samples, 0.22%)</title><rect x="11.5956%" y="501" width="0.2213%" height="15" fill="rgb(253,177,16)" fg:x="14671" fg:w="280"/><text x="11.8456%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (279 samples, 0.22%)</title><rect x="11.5964%" y="485" width="0.2205%" height="15" fill="rgb(217,32,34)" fg:x="14672" fg:w="279"/><text x="11.8464%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (287 samples, 0.23%)</title><rect x="11.5909%" y="549" width="0.2268%" height="15" fill="rgb(212,7,10)" fg:x="14665" fg:w="287"/><text x="11.8409%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (287 samples, 0.23%)</title><rect x="11.5909%" y="533" width="0.2268%" height="15" fill="rgb(245,89,8)" fg:x="14665" fg:w="287"/><text x="11.8409%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (284 samples, 0.22%)</title><rect x="11.5932%" y="517" width="0.2245%" height="15" fill="rgb(237,16,53)" fg:x="14668" fg:w="284"/><text x="11.8432%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (756 samples, 0.60%)</title><rect x="11.2210%" y="773" width="0.5975%" height="15" fill="rgb(250,204,30)" fg:x="14197" fg:w="756"/><text x="11.4710%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (756 samples, 0.60%)</title><rect x="11.2210%" y="757" width="0.5975%" height="15" fill="rgb(208,77,27)" fg:x="14197" fg:w="756"/><text x="11.4710%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (756 samples, 0.60%)</title><rect x="11.2210%" y="741" width="0.5975%" height="15" fill="rgb(250,204,28)" fg:x="14197" fg:w="756"/><text x="11.4710%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (301 samples, 0.24%)</title><rect x="11.5806%" y="725" width="0.2379%" height="15" fill="rgb(244,63,21)" fg:x="14652" fg:w="301"/><text x="11.8306%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (301 samples, 0.24%)</title><rect x="11.5806%" y="709" width="0.2379%" height="15" fill="rgb(236,85,44)" fg:x="14652" fg:w="301"/><text x="11.8306%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (301 samples, 0.24%)</title><rect x="11.5806%" y="693" width="0.2379%" height="15" fill="rgb(215,98,4)" fg:x="14652" fg:w="301"/><text x="11.8306%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (301 samples, 0.24%)</title><rect x="11.5806%" y="677" width="0.2379%" height="15" fill="rgb(235,38,11)" fg:x="14652" fg:w="301"/><text x="11.8306%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (301 samples, 0.24%)</title><rect x="11.5806%" y="661" width="0.2379%" height="15" fill="rgb(254,186,25)" fg:x="14652" fg:w="301"/><text x="11.8306%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (301 samples, 0.24%)</title><rect x="11.5806%" y="645" width="0.2379%" height="15" fill="rgb(225,55,31)" fg:x="14652" fg:w="301"/><text x="11.8306%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (301 samples, 0.24%)</title><rect x="11.5806%" y="629" width="0.2379%" height="15" fill="rgb(211,15,21)" fg:x="14652" fg:w="301"/><text x="11.8306%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (301 samples, 0.24%)</title><rect x="11.5806%" y="613" width="0.2379%" height="15" fill="rgb(215,187,41)" fg:x="14652" fg:w="301"/><text x="11.8306%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (301 samples, 0.24%)</title><rect x="11.5806%" y="597" width="0.2379%" height="15" fill="rgb(248,69,32)" fg:x="14652" fg:w="301"/><text x="11.8306%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (301 samples, 0.24%)</title><rect x="11.5806%" y="581" width="0.2379%" height="15" fill="rgb(252,102,52)" fg:x="14652" fg:w="301"/><text x="11.8306%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (301 samples, 0.24%)</title><rect x="11.5806%" y="565" width="0.2379%" height="15" fill="rgb(253,140,32)" fg:x="14652" fg:w="301"/><text x="11.8306%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.01%)</title><rect x="11.8311%" y="469" width="0.0142%" height="15" fill="rgb(216,56,42)" fg:x="14969" fg:w="18"/><text x="12.0811%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16 samples, 0.01%)</title><rect x="11.8327%" y="453" width="0.0126%" height="15" fill="rgb(216,184,14)" fg:x="14971" fg:w="16"/><text x="12.0827%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (14 samples, 0.01%)</title><rect x="11.8485%" y="405" width="0.0111%" height="15" fill="rgb(237,187,27)" fg:x="14991" fg:w="14"/><text x="12.0985%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (14 samples, 0.01%)</title><rect x="11.8485%" y="389" width="0.0111%" height="15" fill="rgb(219,65,3)" fg:x="14991" fg:w="14"/><text x="12.0985%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="11.8485%" y="373" width="0.0111%" height="15" fill="rgb(245,83,25)" fg:x="14991" fg:w="14"/><text x="12.0985%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (26 samples, 0.02%)</title><rect x="11.8477%" y="469" width="0.0205%" height="15" fill="rgb(214,205,45)" fg:x="14990" fg:w="26"/><text x="12.0977%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (25 samples, 0.02%)</title><rect x="11.8485%" y="453" width="0.0198%" height="15" fill="rgb(241,20,18)" fg:x="14991" fg:w="25"/><text x="12.0985%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (25 samples, 0.02%)</title><rect x="11.8485%" y="437" width="0.0198%" height="15" fill="rgb(232,163,23)" fg:x="14991" fg:w="25"/><text x="12.0985%" y="447.50"></text></g><g><title> N]&gt;::hash (25 samples, 0.02%)</title><rect x="11.8485%" y="421" width="0.0198%" height="15" fill="rgb(214,5,46)" fg:x="14991" fg:w="25"/><text x="12.0985%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (57 samples, 0.05%)</title><rect x="11.8311%" y="485" width="0.0451%" height="15" fill="rgb(229,78,17)" fg:x="14969" fg:w="57"/><text x="12.0811%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (39 samples, 0.03%)</title><rect x="11.8770%" y="485" width="0.0308%" height="15" fill="rgb(248,89,10)" fg:x="15027" fg:w="39"/><text x="12.1270%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (35 samples, 0.03%)</title><rect x="11.8801%" y="469" width="0.0277%" height="15" fill="rgb(248,54,15)" fg:x="15031" fg:w="35"/><text x="12.1301%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (109 samples, 0.09%)</title><rect x="11.8240%" y="565" width="0.0862%" height="15" fill="rgb(223,116,6)" fg:x="14960" fg:w="109"/><text x="12.0740%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (107 samples, 0.08%)</title><rect x="11.8256%" y="549" width="0.0846%" height="15" fill="rgb(205,125,38)" fg:x="14962" fg:w="107"/><text x="12.0756%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (105 samples, 0.08%)</title><rect x="11.8272%" y="533" width="0.0830%" height="15" fill="rgb(251,78,38)" fg:x="14964" fg:w="105"/><text x="12.0772%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (104 samples, 0.08%)</title><rect x="11.8280%" y="517" width="0.0822%" height="15" fill="rgb(253,78,28)" fg:x="14965" fg:w="104"/><text x="12.0780%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (102 samples, 0.08%)</title><rect x="11.8296%" y="501" width="0.0806%" height="15" fill="rgb(209,120,3)" fg:x="14967" fg:w="102"/><text x="12.0796%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (112 samples, 0.09%)</title><rect x="11.8232%" y="581" width="0.0885%" height="15" fill="rgb(238,229,9)" fg:x="14959" fg:w="112"/><text x="12.0732%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (116 samples, 0.09%)</title><rect x="11.8209%" y="597" width="0.0917%" height="15" fill="rgb(253,159,18)" fg:x="14956" fg:w="116"/><text x="12.0709%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.10%)</title><rect x="11.8185%" y="693" width="0.0988%" height="15" fill="rgb(244,42,34)" fg:x="14953" fg:w="125"/><text x="12.0685%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.10%)</title><rect x="11.8185%" y="677" width="0.0988%" height="15" fill="rgb(224,8,7)" fg:x="14953" fg:w="125"/><text x="12.0685%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.10%)</title><rect x="11.8185%" y="661" width="0.0988%" height="15" fill="rgb(210,201,45)" fg:x="14953" fg:w="125"/><text x="12.0685%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.10%)</title><rect x="11.8185%" y="645" width="0.0988%" height="15" fill="rgb(252,185,21)" fg:x="14953" fg:w="125"/><text x="12.0685%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.10%)</title><rect x="11.8185%" y="629" width="0.0988%" height="15" fill="rgb(223,131,1)" fg:x="14953" fg:w="125"/><text x="12.0685%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (123 samples, 0.10%)</title><rect x="11.8201%" y="613" width="0.0972%" height="15" fill="rgb(245,141,16)" fg:x="14955" fg:w="123"/><text x="12.0701%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (126 samples, 0.10%)</title><rect x="11.8185%" y="773" width="0.0996%" height="15" fill="rgb(229,55,45)" fg:x="14953" fg:w="126"/><text x="12.0685%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (126 samples, 0.10%)</title><rect x="11.8185%" y="757" width="0.0996%" height="15" fill="rgb(208,92,15)" fg:x="14953" fg:w="126"/><text x="12.0685%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (126 samples, 0.10%)</title><rect x="11.8185%" y="741" width="0.0996%" height="15" fill="rgb(234,185,47)" fg:x="14953" fg:w="126"/><text x="12.0685%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (126 samples, 0.10%)</title><rect x="11.8185%" y="725" width="0.0996%" height="15" fill="rgb(253,104,50)" fg:x="14953" fg:w="126"/><text x="12.0685%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (126 samples, 0.10%)</title><rect x="11.8185%" y="709" width="0.0996%" height="15" fill="rgb(205,70,7)" fg:x="14953" fg:w="126"/><text x="12.0685%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids (883 samples, 0.70%)</title><rect x="11.2210%" y="789" width="0.6979%" height="15" fill="rgb(240,178,43)" fg:x="14197" fg:w="883"/><text x="11.4710%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="11.9260%" y="741" width="0.0158%" height="15" fill="rgb(214,112,2)" fg:x="15089" fg:w="20"/><text x="12.1760%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.01%)</title><rect x="11.9276%" y="725" width="0.0142%" height="15" fill="rgb(206,46,17)" fg:x="15091" fg:w="18"/><text x="12.1776%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (25 samples, 0.02%)</title><rect x="11.9608%" y="645" width="0.0198%" height="15" fill="rgb(225,220,16)" fg:x="15133" fg:w="25"/><text x="12.2108%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (47 samples, 0.04%)</title><rect x="11.9457%" y="741" width="0.0371%" height="15" fill="rgb(238,65,40)" fg:x="15114" fg:w="47"/><text x="12.1957%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::secret_filename::SecretFileName as core::hash::Hash&gt;::hash (47 samples, 0.04%)</title><rect x="11.9457%" y="725" width="0.0371%" height="15" fill="rgb(230,151,21)" fg:x="15114" fg:w="47"/><text x="12.1957%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (47 samples, 0.04%)</title><rect x="11.9457%" y="709" width="0.0371%" height="15" fill="rgb(218,58,49)" fg:x="15114" fg:w="47"/><text x="12.1957%" y="719.50"></text></g><g><title> N]&gt;::hash (47 samples, 0.04%)</title><rect x="11.9457%" y="693" width="0.0371%" height="15" fill="rgb(219,179,14)" fg:x="15114" fg:w="47"/><text x="12.1957%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (35 samples, 0.03%)</title><rect x="11.9552%" y="677" width="0.0277%" height="15" fill="rgb(223,72,1)" fg:x="15126" fg:w="35"/><text x="12.2052%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (33 samples, 0.03%)</title><rect x="11.9568%" y="661" width="0.0261%" height="15" fill="rgb(238,126,10)" fg:x="15128" fg:w="33"/><text x="12.2068%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (83 samples, 0.07%)</title><rect x="11.9260%" y="757" width="0.0656%" height="15" fill="rgb(224,206,38)" fg:x="15089" fg:w="83"/><text x="12.1760%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (30 samples, 0.02%)</title><rect x="12.0216%" y="661" width="0.0237%" height="15" fill="rgb(212,201,54)" fg:x="15210" fg:w="30"/><text x="12.2716%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (28 samples, 0.02%)</title><rect x="12.0232%" y="645" width="0.0221%" height="15" fill="rgb(218,154,48)" fg:x="15212" fg:w="28"/><text x="12.2732%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (20 samples, 0.02%)</title><rect x="12.0517%" y="597" width="0.0158%" height="15" fill="rgb(232,93,24)" fg:x="15248" fg:w="20"/><text x="12.3017%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (20 samples, 0.02%)</title><rect x="12.0517%" y="581" width="0.0158%" height="15" fill="rgb(245,30,21)" fg:x="15248" fg:w="20"/><text x="12.3017%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="12.0524%" y="565" width="0.0150%" height="15" fill="rgb(242,148,29)" fg:x="15249" fg:w="19"/><text x="12.3024%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (32 samples, 0.03%)</title><rect x="12.0730%" y="565" width="0.0253%" height="15" fill="rgb(244,153,54)" fg:x="15275" fg:w="32"/><text x="12.3230%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (63 samples, 0.05%)</title><rect x="12.0509%" y="629" width="0.0498%" height="15" fill="rgb(252,87,22)" fg:x="15247" fg:w="63"/><text x="12.3009%" y="639.50"></text></g><g><title> N]&gt;::hash (63 samples, 0.05%)</title><rect x="12.0509%" y="613" width="0.0498%" height="15" fill="rgb(210,51,29)" fg:x="15247" fg:w="63"/><text x="12.3009%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (42 samples, 0.03%)</title><rect x="12.0675%" y="597" width="0.0332%" height="15" fill="rgb(242,136,47)" fg:x="15268" fg:w="42"/><text x="12.3175%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (41 samples, 0.03%)</title><rect x="12.0683%" y="581" width="0.0324%" height="15" fill="rgb(238,68,4)" fg:x="15269" fg:w="41"/><text x="12.3183%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (65 samples, 0.05%)</title><rect x="12.0501%" y="661" width="0.0514%" height="15" fill="rgb(242,161,30)" fg:x="15246" fg:w="65"/><text x="12.3001%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::secret_filename::SecretFileName as core::hash::Hash&gt;::hash (65 samples, 0.05%)</title><rect x="12.0501%" y="645" width="0.0514%" height="15" fill="rgb(218,58,44)" fg:x="15246" fg:w="65"/><text x="12.3001%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (120 samples, 0.09%)</title><rect x="12.0129%" y="709" width="0.0948%" height="15" fill="rgb(252,125,32)" fg:x="15199" fg:w="120"/><text x="12.2629%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (113 samples, 0.09%)</title><rect x="12.0185%" y="693" width="0.0893%" height="15" fill="rgb(219,178,0)" fg:x="15206" fg:w="113"/><text x="12.2685%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (110 samples, 0.09%)</title><rect x="12.0208%" y="677" width="0.0869%" height="15" fill="rgb(213,152,7)" fg:x="15209" fg:w="110"/><text x="12.2708%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (17 samples, 0.01%)</title><rect x="12.1141%" y="677" width="0.0134%" height="15" fill="rgb(249,109,34)" fg:x="15327" fg:w="17"/><text x="12.3641%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (32 samples, 0.03%)</title><rect x="12.1078%" y="709" width="0.0253%" height="15" fill="rgb(232,96,21)" fg:x="15319" fg:w="32"/><text x="12.3578%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (29 samples, 0.02%)</title><rect x="12.1101%" y="693" width="0.0229%" height="15" fill="rgb(228,27,39)" fg:x="15322" fg:w="29"/><text x="12.3601%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (182 samples, 0.14%)</title><rect x="11.9948%" y="725" width="0.1438%" height="15" fill="rgb(211,182,52)" fg:x="15176" fg:w="182"/><text x="12.2448%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (184 samples, 0.15%)</title><rect x="11.9948%" y="741" width="0.1454%" height="15" fill="rgb(234,178,38)" fg:x="15176" fg:w="184"/><text x="12.2448%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (13 samples, 0.01%)</title><rect x="12.1607%" y="725" width="0.0103%" height="15" fill="rgb(221,111,3)" fg:x="15386" fg:w="13"/><text x="12.4107%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (228 samples, 0.18%)</title><rect x="11.9924%" y="757" width="0.1802%" height="15" fill="rgb(228,175,21)" fg:x="15173" fg:w="228"/><text x="12.2424%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (41 samples, 0.03%)</title><rect x="12.1402%" y="741" width="0.0324%" height="15" fill="rgb(228,174,43)" fg:x="15360" fg:w="41"/><text x="12.3902%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (328 samples, 0.26%)</title><rect x="11.9197%" y="773" width="0.2592%" height="15" fill="rgb(211,191,0)" fg:x="15081" fg:w="328"/><text x="12.1697%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (331 samples, 0.26%)</title><rect x="11.9189%" y="789" width="0.2616%" height="15" fill="rgb(253,117,3)" fg:x="15080" fg:w="331"/><text x="12.1689%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (27 samples, 0.02%)</title><rect x="12.1837%" y="725" width="0.0213%" height="15" fill="rgb(241,127,19)" fg:x="15415" fg:w="27"/><text x="12.4337%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (23 samples, 0.02%)</title><rect x="12.1868%" y="709" width="0.0182%" height="15" fill="rgb(218,103,12)" fg:x="15419" fg:w="23"/><text x="12.4368%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (21 samples, 0.02%)</title><rect x="12.2192%" y="629" width="0.0166%" height="15" fill="rgb(236,214,43)" fg:x="15460" fg:w="21"/><text x="12.4692%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (37 samples, 0.03%)</title><rect x="12.2082%" y="693" width="0.0292%" height="15" fill="rgb(244,144,19)" fg:x="15446" fg:w="37"/><text x="12.4582%" y="703.50"></text></g><g><title> N]&gt;::hash (37 samples, 0.03%)</title><rect x="12.2082%" y="677" width="0.0292%" height="15" fill="rgb(246,188,10)" fg:x="15446" fg:w="37"/><text x="12.4582%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (26 samples, 0.02%)</title><rect x="12.2168%" y="661" width="0.0205%" height="15" fill="rgb(212,193,33)" fg:x="15457" fg:w="26"/><text x="12.4668%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="12.2184%" y="645" width="0.0190%" height="15" fill="rgb(241,51,29)" fg:x="15459" fg:w="24"/><text x="12.4684%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (38 samples, 0.03%)</title><rect x="12.2082%" y="725" width="0.0300%" height="15" fill="rgb(211,58,19)" fg:x="15446" fg:w="38"/><text x="12.4582%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::secret_filename::SecretFileName as core::hash::Hash&gt;::hash (38 samples, 0.03%)</title><rect x="12.2082%" y="709" width="0.0300%" height="15" fill="rgb(229,111,26)" fg:x="15446" fg:w="38"/><text x="12.4582%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (73 samples, 0.06%)</title><rect x="12.1837%" y="741" width="0.0577%" height="15" fill="rgb(213,115,40)" fg:x="15415" fg:w="73"/><text x="12.4337%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (104 samples, 0.08%)</title><rect x="12.1805%" y="789" width="0.0822%" height="15" fill="rgb(209,56,44)" fg:x="15411" fg:w="104"/><text x="12.4305%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (104 samples, 0.08%)</title><rect x="12.1805%" y="773" width="0.0822%" height="15" fill="rgb(230,108,32)" fg:x="15411" fg:w="104"/><text x="12.4305%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (100 samples, 0.08%)</title><rect x="12.1837%" y="757" width="0.0790%" height="15" fill="rgb(216,165,31)" fg:x="15415" fg:w="100"/><text x="12.4337%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (26 samples, 0.02%)</title><rect x="12.2421%" y="741" width="0.0205%" height="15" fill="rgb(218,122,21)" fg:x="15489" fg:w="26"/><text x="12.4921%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (26 samples, 0.02%)</title><rect x="12.2421%" y="725" width="0.0205%" height="15" fill="rgb(223,224,47)" fg:x="15489" fg:w="26"/><text x="12.4921%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_no_path_conflicts (2,472 samples, 1.95%)</title><rect x="10.3113%" y="805" width="1.9538%" height="15" fill="rgb(238,102,44)" fg:x="13046" fg:w="2472"/><text x="10.5613%" y="815.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.01%)</title><rect x="12.2745%" y="789" width="0.0142%" height="15" fill="rgb(236,46,40)" fg:x="15530" fg:w="18"/><text x="12.5245%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.01%)</title><rect x="12.2745%" y="773" width="0.0142%" height="15" fill="rgb(247,202,50)" fg:x="15530" fg:w="18"/><text x="12.5245%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="12.2769%" y="757" width="0.0119%" height="15" fill="rgb(209,99,20)" fg:x="15533" fg:w="15"/><text x="12.5269%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="12.2777%" y="741" width="0.0111%" height="15" fill="rgb(252,27,34)" fg:x="15534" fg:w="14"/><text x="12.5277%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (34 samples, 0.03%)</title><rect x="12.2983%" y="597" width="0.0269%" height="15" fill="rgb(215,206,23)" fg:x="15560" fg:w="34"/><text x="12.5483%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (30 samples, 0.02%)</title><rect x="12.3014%" y="581" width="0.0237%" height="15" fill="rgb(212,135,36)" fg:x="15564" fg:w="30"/><text x="12.5514%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (26 samples, 0.02%)</title><rect x="12.3299%" y="581" width="0.0205%" height="15" fill="rgb(240,189,1)" fg:x="15600" fg:w="26"/><text x="12.5799%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (26 samples, 0.02%)</title><rect x="12.3299%" y="565" width="0.0205%" height="15" fill="rgb(242,56,20)" fg:x="15600" fg:w="26"/><text x="12.5799%" y="575.50"></text></g><g><title> N]&gt;::hash (26 samples, 0.02%)</title><rect x="12.3299%" y="549" width="0.0205%" height="15" fill="rgb(247,132,33)" fg:x="15600" fg:w="26"/><text x="12.5799%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (14 samples, 0.01%)</title><rect x="12.3394%" y="533" width="0.0111%" height="15" fill="rgb(208,149,11)" fg:x="15612" fg:w="14"/><text x="12.5894%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="12.3401%" y="517" width="0.0103%" height="15" fill="rgb(211,33,11)" fg:x="15613" fg:w="13"/><text x="12.5901%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (27 samples, 0.02%)</title><rect x="12.3299%" y="597" width="0.0213%" height="15" fill="rgb(221,29,38)" fg:x="15600" fg:w="27"/><text x="12.5799%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (78 samples, 0.06%)</title><rect x="12.2975%" y="613" width="0.0616%" height="15" fill="rgb(206,182,49)" fg:x="15559" fg:w="78"/><text x="12.5475%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 0.02%)</title><rect x="12.3670%" y="597" width="0.0174%" height="15" fill="rgb(216,140,1)" fg:x="15647" fg:w="22"/><text x="12.6170%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (114 samples, 0.09%)</title><rect x="12.2951%" y="677" width="0.0901%" height="15" fill="rgb(232,57,40)" fg:x="15556" fg:w="114"/><text x="12.5451%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (114 samples, 0.09%)</title><rect x="12.2951%" y="661" width="0.0901%" height="15" fill="rgb(224,186,18)" fg:x="15556" fg:w="114"/><text x="12.5451%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (114 samples, 0.09%)</title><rect x="12.2951%" y="645" width="0.0901%" height="15" fill="rgb(215,121,11)" fg:x="15556" fg:w="114"/><text x="12.5451%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (114 samples, 0.09%)</title><rect x="12.2951%" y="629" width="0.0901%" height="15" fill="rgb(245,147,10)" fg:x="15556" fg:w="114"/><text x="12.5451%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (32 samples, 0.03%)</title><rect x="12.3599%" y="613" width="0.0253%" height="15" fill="rgb(238,153,13)" fg:x="15638" fg:w="32"/><text x="12.6099%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (121 samples, 0.10%)</title><rect x="12.2935%" y="741" width="0.0956%" height="15" fill="rgb(233,108,0)" fg:x="15554" fg:w="121"/><text x="12.5435%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (120 samples, 0.09%)</title><rect x="12.2943%" y="725" width="0.0948%" height="15" fill="rgb(212,157,17)" fg:x="15555" fg:w="120"/><text x="12.5443%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (120 samples, 0.09%)</title><rect x="12.2943%" y="709" width="0.0948%" height="15" fill="rgb(225,213,38)" fg:x="15555" fg:w="120"/><text x="12.5443%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (119 samples, 0.09%)</title><rect x="12.2951%" y="693" width="0.0941%" height="15" fill="rgb(248,16,11)" fg:x="15556" fg:w="119"/><text x="12.5451%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (127 samples, 0.10%)</title><rect x="12.2904%" y="757" width="0.1004%" height="15" fill="rgb(241,33,4)" fg:x="15550" fg:w="127"/><text x="12.5404%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (130 samples, 0.10%)</title><rect x="12.2888%" y="773" width="0.1027%" height="15" fill="rgb(222,26,43)" fg:x="15548" fg:w="130"/><text x="12.5388%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (132 samples, 0.10%)</title><rect x="12.2888%" y="789" width="0.1043%" height="15" fill="rgb(243,29,36)" fg:x="15548" fg:w="132"/><text x="12.5388%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.02%)</title><rect x="12.4065%" y="421" width="0.0166%" height="15" fill="rgb(241,9,27)" fg:x="15697" fg:w="21"/><text x="12.6565%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.01%)</title><rect x="12.4097%" y="405" width="0.0134%" height="15" fill="rgb(205,117,26)" fg:x="15701" fg:w="17"/><text x="12.6597%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (29 samples, 0.02%)</title><rect x="12.4263%" y="421" width="0.0229%" height="15" fill="rgb(209,80,39)" fg:x="15722" fg:w="29"/><text x="12.6763%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (29 samples, 0.02%)</title><rect x="12.4263%" y="405" width="0.0229%" height="15" fill="rgb(239,155,6)" fg:x="15722" fg:w="29"/><text x="12.6763%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (29 samples, 0.02%)</title><rect x="12.4263%" y="389" width="0.0229%" height="15" fill="rgb(212,104,12)" fg:x="15722" fg:w="29"/><text x="12.6763%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (29 samples, 0.02%)</title><rect x="12.4263%" y="373" width="0.0229%" height="15" fill="rgb(234,204,3)" fg:x="15722" fg:w="29"/><text x="12.6763%" y="383.50"></text></g><g><title> N]&gt;::hash (29 samples, 0.02%)</title><rect x="12.4263%" y="357" width="0.0229%" height="15" fill="rgb(251,218,7)" fg:x="15722" fg:w="29"/><text x="12.6763%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (19 samples, 0.02%)</title><rect x="12.4342%" y="341" width="0.0150%" height="15" fill="rgb(221,81,32)" fg:x="15732" fg:w="19"/><text x="12.6842%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="12.4358%" y="325" width="0.0134%" height="15" fill="rgb(214,152,26)" fg:x="15734" fg:w="17"/><text x="12.6858%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (61 samples, 0.05%)</title><rect x="12.4065%" y="437" width="0.0482%" height="15" fill="rgb(223,22,3)" fg:x="15697" fg:w="61"/><text x="12.6565%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (40 samples, 0.03%)</title><rect x="12.4555%" y="437" width="0.0316%" height="15" fill="rgb(207,174,7)" fg:x="15759" fg:w="40"/><text x="12.7055%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (38 samples, 0.03%)</title><rect x="12.4571%" y="421" width="0.0300%" height="15" fill="rgb(224,19,52)" fg:x="15761" fg:w="38"/><text x="12.7071%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (113 samples, 0.09%)</title><rect x="12.4026%" y="453" width="0.0893%" height="15" fill="rgb(228,24,14)" fg:x="15692" fg:w="113"/><text x="12.6526%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (117 samples, 0.09%)</title><rect x="12.4002%" y="469" width="0.0925%" height="15" fill="rgb(230,153,43)" fg:x="15689" fg:w="117"/><text x="12.6502%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (121 samples, 0.10%)</title><rect x="12.3978%" y="533" width="0.0956%" height="15" fill="rgb(231,106,12)" fg:x="15686" fg:w="121"/><text x="12.6478%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (119 samples, 0.09%)</title><rect x="12.3994%" y="517" width="0.0941%" height="15" fill="rgb(215,92,2)" fg:x="15688" fg:w="119"/><text x="12.6494%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (118 samples, 0.09%)</title><rect x="12.4002%" y="501" width="0.0933%" height="15" fill="rgb(249,143,25)" fg:x="15689" fg:w="118"/><text x="12.6502%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (118 samples, 0.09%)</title><rect x="12.4002%" y="485" width="0.0933%" height="15" fill="rgb(252,7,35)" fg:x="15689" fg:w="118"/><text x="12.6502%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (132 samples, 0.10%)</title><rect x="12.3939%" y="709" width="0.1043%" height="15" fill="rgb(216,69,40)" fg:x="15681" fg:w="132"/><text x="12.6439%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (132 samples, 0.10%)</title><rect x="12.3939%" y="693" width="0.1043%" height="15" fill="rgb(240,36,33)" fg:x="15681" fg:w="132"/><text x="12.6439%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (132 samples, 0.10%)</title><rect x="12.3939%" y="677" width="0.1043%" height="15" fill="rgb(231,128,14)" fg:x="15681" fg:w="132"/><text x="12.6439%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (132 samples, 0.10%)</title><rect x="12.3939%" y="661" width="0.1043%" height="15" fill="rgb(245,143,14)" fg:x="15681" fg:w="132"/><text x="12.6439%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (132 samples, 0.10%)</title><rect x="12.3939%" y="645" width="0.1043%" height="15" fill="rgb(222,130,28)" fg:x="15681" fg:w="132"/><text x="12.6439%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (132 samples, 0.10%)</title><rect x="12.3939%" y="629" width="0.1043%" height="15" fill="rgb(212,10,48)" fg:x="15681" fg:w="132"/><text x="12.6439%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (132 samples, 0.10%)</title><rect x="12.3939%" y="613" width="0.1043%" height="15" fill="rgb(254,118,45)" fg:x="15681" fg:w="132"/><text x="12.6439%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (132 samples, 0.10%)</title><rect x="12.3939%" y="597" width="0.1043%" height="15" fill="rgb(228,6,45)" fg:x="15681" fg:w="132"/><text x="12.6439%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (132 samples, 0.10%)</title><rect x="12.3939%" y="581" width="0.1043%" height="15" fill="rgb(241,18,35)" fg:x="15681" fg:w="132"/><text x="12.6439%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (132 samples, 0.10%)</title><rect x="12.3939%" y="565" width="0.1043%" height="15" fill="rgb(227,214,53)" fg:x="15681" fg:w="132"/><text x="12.6439%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (128 samples, 0.10%)</title><rect x="12.3971%" y="549" width="0.1012%" height="15" fill="rgb(224,107,51)" fg:x="15685" fg:w="128"/><text x="12.6471%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="12.4998%" y="533" width="0.0166%" height="15" fill="rgb(248,60,28)" fg:x="15815" fg:w="21"/><text x="12.7498%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="12.5014%" y="517" width="0.0150%" height="15" fill="rgb(249,101,23)" fg:x="15817" fg:w="19"/><text x="12.7514%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (18 samples, 0.01%)</title><rect x="12.5022%" y="501" width="0.0142%" height="15" fill="rgb(228,51,19)" fg:x="15818" fg:w="18"/><text x="12.7522%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.02%)</title><rect x="12.5275%" y="421" width="0.0205%" height="15" fill="rgb(213,20,6)" fg:x="15850" fg:w="26"/><text x="12.7775%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (24 samples, 0.02%)</title><rect x="12.5290%" y="405" width="0.0190%" height="15" fill="rgb(212,124,10)" fg:x="15852" fg:w="24"/><text x="12.7790%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.01%)</title><rect x="12.5678%" y="309" width="0.0111%" height="15" fill="rgb(248,3,40)" fg:x="15901" fg:w="14"/><text x="12.8178%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (34 samples, 0.03%)</title><rect x="12.5551%" y="373" width="0.0269%" height="15" fill="rgb(223,178,23)" fg:x="15885" fg:w="34"/><text x="12.8051%" y="383.50"></text></g><g><title> N]&gt;::hash (34 samples, 0.03%)</title><rect x="12.5551%" y="357" width="0.0269%" height="15" fill="rgb(240,132,45)" fg:x="15885" fg:w="34"/><text x="12.8051%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (21 samples, 0.02%)</title><rect x="12.5654%" y="341" width="0.0166%" height="15" fill="rgb(245,164,36)" fg:x="15898" fg:w="21"/><text x="12.8154%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.02%)</title><rect x="12.5662%" y="325" width="0.0158%" height="15" fill="rgb(231,188,53)" fg:x="15899" fg:w="20"/><text x="12.8162%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.03%)</title><rect x="12.5551%" y="421" width="0.0277%" height="15" fill="rgb(237,198,39)" fg:x="15885" fg:w="35"/><text x="12.8051%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.03%)</title><rect x="12.5551%" y="405" width="0.0277%" height="15" fill="rgb(223,120,35)" fg:x="15885" fg:w="35"/><text x="12.8051%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (35 samples, 0.03%)</title><rect x="12.5551%" y="389" width="0.0277%" height="15" fill="rgb(253,107,49)" fg:x="15885" fg:w="35"/><text x="12.8051%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (75 samples, 0.06%)</title><rect x="12.5275%" y="437" width="0.0593%" height="15" fill="rgb(216,44,31)" fg:x="15850" fg:w="75"/><text x="12.7775%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (31 samples, 0.02%)</title><rect x="12.6073%" y="341" width="0.0245%" height="15" fill="rgb(253,87,21)" fg:x="15951" fg:w="31"/><text x="12.8573%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (25 samples, 0.02%)</title><rect x="12.6120%" y="325" width="0.0198%" height="15" fill="rgb(226,18,2)" fg:x="15957" fg:w="25"/><text x="12.8620%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (17 samples, 0.01%)</title><rect x="12.6389%" y="261" width="0.0134%" height="15" fill="rgb(216,8,46)" fg:x="15991" fg:w="17"/><text x="12.8889%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (17 samples, 0.01%)</title><rect x="12.6389%" y="245" width="0.0134%" height="15" fill="rgb(226,140,39)" fg:x="15991" fg:w="17"/><text x="12.8889%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="12.6389%" y="229" width="0.0134%" height="15" fill="rgb(221,194,54)" fg:x="15991" fg:w="17"/><text x="12.8889%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (19 samples, 0.02%)</title><rect x="12.6555%" y="229" width="0.0150%" height="15" fill="rgb(213,92,11)" fg:x="16012" fg:w="19"/><text x="12.9055%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (43 samples, 0.03%)</title><rect x="12.6381%" y="293" width="0.0340%" height="15" fill="rgb(229,162,46)" fg:x="15990" fg:w="43"/><text x="12.8881%" y="303.50"></text></g><g><title> N]&gt;::hash (43 samples, 0.03%)</title><rect x="12.6381%" y="277" width="0.0340%" height="15" fill="rgb(214,111,36)" fg:x="15990" fg:w="43"/><text x="12.8881%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (25 samples, 0.02%)</title><rect x="12.6523%" y="261" width="0.0198%" height="15" fill="rgb(207,6,21)" fg:x="16008" fg:w="25"/><text x="12.9023%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 0.02%)</title><rect x="12.6539%" y="245" width="0.0182%" height="15" fill="rgb(213,127,38)" fg:x="16010" fg:w="23"/><text x="12.9039%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (45 samples, 0.04%)</title><rect x="12.6373%" y="341" width="0.0356%" height="15" fill="rgb(238,118,32)" fg:x="15989" fg:w="45"/><text x="12.8873%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (45 samples, 0.04%)</title><rect x="12.6373%" y="325" width="0.0356%" height="15" fill="rgb(240,139,39)" fg:x="15989" fg:w="45"/><text x="12.8873%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (44 samples, 0.03%)</title><rect x="12.6381%" y="309" width="0.0348%" height="15" fill="rgb(235,10,37)" fg:x="15990" fg:w="44"/><text x="12.8881%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (104 samples, 0.08%)</title><rect x="12.6041%" y="389" width="0.0822%" height="15" fill="rgb(249,171,38)" fg:x="15947" fg:w="104"/><text x="12.8541%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (101 samples, 0.08%)</title><rect x="12.6065%" y="373" width="0.0798%" height="15" fill="rgb(242,144,32)" fg:x="15950" fg:w="101"/><text x="12.8565%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (100 samples, 0.08%)</title><rect x="12.6073%" y="357" width="0.0790%" height="15" fill="rgb(217,117,21)" fg:x="15951" fg:w="100"/><text x="12.8573%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.01%)</title><rect x="12.6729%" y="341" width="0.0134%" height="15" fill="rgb(249,87,1)" fg:x="16034" fg:w="17"/><text x="12.9229%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (18 samples, 0.01%)</title><rect x="12.6927%" y="357" width="0.0142%" height="15" fill="rgb(248,196,48)" fg:x="16059" fg:w="18"/><text x="12.9427%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (28 samples, 0.02%)</title><rect x="12.6887%" y="373" width="0.0221%" height="15" fill="rgb(251,206,33)" fg:x="16054" fg:w="28"/><text x="12.9387%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (32 samples, 0.03%)</title><rect x="12.6863%" y="389" width="0.0253%" height="15" fill="rgb(232,141,28)" fg:x="16051" fg:w="32"/><text x="12.9363%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (163 samples, 0.13%)</title><rect x="12.5899%" y="421" width="0.1288%" height="15" fill="rgb(209,167,14)" fg:x="15929" fg:w="163"/><text x="12.8399%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (155 samples, 0.12%)</title><rect x="12.5962%" y="405" width="0.1225%" height="15" fill="rgb(225,11,50)" fg:x="15937" fg:w="155"/><text x="12.8462%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (13 samples, 0.01%)</title><rect x="12.7322%" y="405" width="0.0103%" height="15" fill="rgb(209,50,20)" fg:x="16109" fg:w="13"/><text x="12.9822%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (202 samples, 0.16%)</title><rect x="12.5883%" y="437" width="0.1597%" height="15" fill="rgb(212,17,46)" fg:x="15927" fg:w="202"/><text x="12.8383%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (37 samples, 0.03%)</title><rect x="12.7187%" y="421" width="0.0292%" height="15" fill="rgb(216,101,39)" fg:x="16092" fg:w="37"/><text x="12.9687%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (289 samples, 0.23%)</title><rect x="12.5251%" y="453" width="0.2284%" height="15" fill="rgb(212,228,48)" fg:x="15847" fg:w="289"/><text x="12.7751%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (294 samples, 0.23%)</title><rect x="12.5227%" y="469" width="0.2324%" height="15" fill="rgb(250,6,50)" fg:x="15844" fg:w="294"/><text x="12.7727%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (302 samples, 0.24%)</title><rect x="12.5172%" y="517" width="0.2387%" height="15" fill="rgb(250,160,48)" fg:x="15837" fg:w="302"/><text x="12.7672%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (296 samples, 0.23%)</title><rect x="12.5219%" y="501" width="0.2340%" height="15" fill="rgb(244,216,33)" fg:x="15843" fg:w="296"/><text x="12.7719%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (296 samples, 0.23%)</title><rect x="12.5219%" y="485" width="0.2340%" height="15" fill="rgb(207,157,5)" fg:x="15843" fg:w="296"/><text x="12.7719%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::ids (461 samples, 0.36%)</title><rect x="12.3931%" y="741" width="0.3644%" height="15" fill="rgb(228,199,8)" fg:x="15680" fg:w="461"/><text x="12.6431%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (461 samples, 0.36%)</title><rect x="12.3931%" y="725" width="0.3644%" height="15" fill="rgb(227,80,20)" fg:x="15680" fg:w="461"/><text x="12.6431%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (328 samples, 0.26%)</title><rect x="12.4982%" y="709" width="0.2592%" height="15" fill="rgb(222,9,33)" fg:x="15813" fg:w="328"/><text x="12.7482%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (328 samples, 0.26%)</title><rect x="12.4982%" y="693" width="0.2592%" height="15" fill="rgb(239,44,28)" fg:x="15813" fg:w="328"/><text x="12.7482%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (328 samples, 0.26%)</title><rect x="12.4982%" y="677" width="0.2592%" height="15" fill="rgb(249,187,43)" fg:x="15813" fg:w="328"/><text x="12.7482%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (328 samples, 0.26%)</title><rect x="12.4982%" y="661" width="0.2592%" height="15" fill="rgb(216,141,28)" fg:x="15813" fg:w="328"/><text x="12.7482%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (327 samples, 0.26%)</title><rect x="12.4990%" y="645" width="0.2585%" height="15" fill="rgb(230,154,53)" fg:x="15814" fg:w="327"/><text x="12.7490%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (327 samples, 0.26%)</title><rect x="12.4990%" y="629" width="0.2585%" height="15" fill="rgb(227,82,4)" fg:x="15814" fg:w="327"/><text x="12.7490%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (327 samples, 0.26%)</title><rect x="12.4990%" y="613" width="0.2585%" height="15" fill="rgb(220,107,16)" fg:x="15814" fg:w="327"/><text x="12.7490%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (327 samples, 0.26%)</title><rect x="12.4990%" y="597" width="0.2585%" height="15" fill="rgb(207,187,2)" fg:x="15814" fg:w="327"/><text x="12.7490%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (327 samples, 0.26%)</title><rect x="12.4990%" y="581" width="0.2585%" height="15" fill="rgb(210,162,52)" fg:x="15814" fg:w="327"/><text x="12.7490%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (327 samples, 0.26%)</title><rect x="12.4990%" y="565" width="0.2585%" height="15" fill="rgb(217,216,49)" fg:x="15814" fg:w="327"/><text x="12.7490%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (326 samples, 0.26%)</title><rect x="12.4998%" y="549" width="0.2577%" height="15" fill="rgb(218,146,49)" fg:x="15815" fg:w="326"/><text x="12.7498%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (305 samples, 0.24%)</title><rect x="12.5164%" y="533" width="0.2411%" height="15" fill="rgb(216,55,40)" fg:x="15836" fg:w="305"/><text x="12.7664%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="12.7575%" y="565" width="0.0103%" height="15" fill="rgb(208,196,21)" fg:x="16141" fg:w="13"/><text x="13.0075%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="12.7812%" y="437" width="0.0158%" height="15" fill="rgb(242,117,42)" fg:x="16171" fg:w="20"/><text x="13.0312%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.01%)</title><rect x="12.7835%" y="421" width="0.0134%" height="15" fill="rgb(210,11,23)" fg:x="16174" fg:w="17"/><text x="13.0335%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (21 samples, 0.02%)</title><rect x="12.8025%" y="437" width="0.0166%" height="15" fill="rgb(217,110,2)" fg:x="16198" fg:w="21"/><text x="13.0525%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (21 samples, 0.02%)</title><rect x="12.8025%" y="421" width="0.0166%" height="15" fill="rgb(229,77,54)" fg:x="16198" fg:w="21"/><text x="13.0525%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (21 samples, 0.02%)</title><rect x="12.8025%" y="405" width="0.0166%" height="15" fill="rgb(218,53,16)" fg:x="16198" fg:w="21"/><text x="13.0525%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (21 samples, 0.02%)</title><rect x="12.8025%" y="389" width="0.0166%" height="15" fill="rgb(215,38,13)" fg:x="16198" fg:w="21"/><text x="13.0525%" y="399.50"></text></g><g><title> N]&gt;::hash (21 samples, 0.02%)</title><rect x="12.8025%" y="373" width="0.0166%" height="15" fill="rgb(235,42,18)" fg:x="16198" fg:w="21"/><text x="13.0525%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (16 samples, 0.01%)</title><rect x="12.8065%" y="357" width="0.0126%" height="15" fill="rgb(219,66,54)" fg:x="16203" fg:w="16"/><text x="13.0565%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="12.8073%" y="341" width="0.0119%" height="15" fill="rgb(222,205,4)" fg:x="16204" fg:w="15"/><text x="13.0573%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (60 samples, 0.05%)</title><rect x="12.7812%" y="453" width="0.0474%" height="15" fill="rgb(227,213,46)" fg:x="16171" fg:w="60"/><text x="13.0312%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (41 samples, 0.03%)</title><rect x="12.8491%" y="357" width="0.0324%" height="15" fill="rgb(250,145,42)" fg:x="16257" fg:w="41"/><text x="13.0991%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (36 samples, 0.03%)</title><rect x="12.8531%" y="341" width="0.0285%" height="15" fill="rgb(219,15,2)" fg:x="16262" fg:w="36"/><text x="13.1031%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (18 samples, 0.01%)</title><rect x="12.8855%" y="277" width="0.0142%" height="15" fill="rgb(231,181,52)" fg:x="16303" fg:w="18"/><text x="13.1355%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (18 samples, 0.01%)</title><rect x="12.8855%" y="261" width="0.0142%" height="15" fill="rgb(235,1,42)" fg:x="16303" fg:w="18"/><text x="13.1355%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="12.8863%" y="245" width="0.0134%" height="15" fill="rgb(249,88,27)" fg:x="16304" fg:w="17"/><text x="13.1363%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (37 samples, 0.03%)</title><rect x="12.8839%" y="357" width="0.0292%" height="15" fill="rgb(235,145,16)" fg:x="16301" fg:w="37"/><text x="13.1339%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (37 samples, 0.03%)</title><rect x="12.8839%" y="341" width="0.0292%" height="15" fill="rgb(237,114,19)" fg:x="16301" fg:w="37"/><text x="13.1339%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (36 samples, 0.03%)</title><rect x="12.8847%" y="325" width="0.0285%" height="15" fill="rgb(238,51,50)" fg:x="16302" fg:w="36"/><text x="13.1347%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (36 samples, 0.03%)</title><rect x="12.8847%" y="309" width="0.0285%" height="15" fill="rgb(205,194,25)" fg:x="16302" fg:w="36"/><text x="13.1347%" y="319.50"></text></g><g><title> N]&gt;::hash (36 samples, 0.03%)</title><rect x="12.8847%" y="293" width="0.0285%" height="15" fill="rgb(215,203,17)" fg:x="16302" fg:w="36"/><text x="13.1347%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (17 samples, 0.01%)</title><rect x="12.8997%" y="277" width="0.0134%" height="15" fill="rgb(233,112,49)" fg:x="16321" fg:w="17"/><text x="13.1497%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="12.8997%" y="261" width="0.0134%" height="15" fill="rgb(241,130,26)" fg:x="16321" fg:w="17"/><text x="13.1497%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.01%)</title><rect x="12.9021%" y="245" width="0.0111%" height="15" fill="rgb(252,223,19)" fg:x="16324" fg:w="14"/><text x="13.1521%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (94 samples, 0.07%)</title><rect x="12.8460%" y="405" width="0.0743%" height="15" fill="rgb(211,95,25)" fg:x="16253" fg:w="94"/><text x="13.0960%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (91 samples, 0.07%)</title><rect x="12.8484%" y="389" width="0.0719%" height="15" fill="rgb(251,182,27)" fg:x="16256" fg:w="91"/><text x="13.0984%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (90 samples, 0.07%)</title><rect x="12.8491%" y="373" width="0.0711%" height="15" fill="rgb(238,24,4)" fg:x="16257" fg:w="90"/><text x="13.0991%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (15 samples, 0.01%)</title><rect x="12.9282%" y="373" width="0.0119%" height="15" fill="rgb(224,220,25)" fg:x="16357" fg:w="15"/><text x="13.1782%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (27 samples, 0.02%)</title><rect x="12.9219%" y="389" width="0.0213%" height="15" fill="rgb(239,133,26)" fg:x="16349" fg:w="27"/><text x="13.1719%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (30 samples, 0.02%)</title><rect x="12.9203%" y="405" width="0.0237%" height="15" fill="rgb(211,94,48)" fg:x="16347" fg:w="30"/><text x="13.1703%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (150 samples, 0.12%)</title><rect x="12.8333%" y="437" width="0.1186%" height="15" fill="rgb(239,87,6)" fg:x="16237" fg:w="150"/><text x="13.0833%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (149 samples, 0.12%)</title><rect x="12.8341%" y="421" width="0.1178%" height="15" fill="rgb(227,62,0)" fg:x="16238" fg:w="149"/><text x="13.0841%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (190 samples, 0.15%)</title><rect x="12.8326%" y="453" width="0.1502%" height="15" fill="rgb(211,226,4)" fg:x="16236" fg:w="190"/><text x="13.0826%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (39 samples, 0.03%)</title><rect x="12.9519%" y="437" width="0.0308%" height="15" fill="rgb(253,38,52)" fg:x="16387" fg:w="39"/><text x="13.2019%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (259 samples, 0.20%)</title><rect x="12.7788%" y="469" width="0.2047%" height="15" fill="rgb(229,126,40)" fg:x="16168" fg:w="259"/><text x="13.0288%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (262 samples, 0.21%)</title><rect x="12.7772%" y="485" width="0.2071%" height="15" fill="rgb(229,165,44)" fg:x="16166" fg:w="262"/><text x="13.0272%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (288 samples, 0.23%)</title><rect x="12.7575%" y="709" width="0.2276%" height="15" fill="rgb(247,95,47)" fg:x="16141" fg:w="288"/><text x="13.0075%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (288 samples, 0.23%)</title><rect x="12.7575%" y="693" width="0.2276%" height="15" fill="rgb(216,140,30)" fg:x="16141" fg:w="288"/><text x="13.0075%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (288 samples, 0.23%)</title><rect x="12.7575%" y="677" width="0.2276%" height="15" fill="rgb(246,214,8)" fg:x="16141" fg:w="288"/><text x="13.0075%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (288 samples, 0.23%)</title><rect x="12.7575%" y="661" width="0.2276%" height="15" fill="rgb(227,224,15)" fg:x="16141" fg:w="288"/><text x="13.0075%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (288 samples, 0.23%)</title><rect x="12.7575%" y="645" width="0.2276%" height="15" fill="rgb(233,175,4)" fg:x="16141" fg:w="288"/><text x="13.0075%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (288 samples, 0.23%)</title><rect x="12.7575%" y="629" width="0.2276%" height="15" fill="rgb(221,66,45)" fg:x="16141" fg:w="288"/><text x="13.0075%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (288 samples, 0.23%)</title><rect x="12.7575%" y="613" width="0.2276%" height="15" fill="rgb(221,178,18)" fg:x="16141" fg:w="288"/><text x="13.0075%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (288 samples, 0.23%)</title><rect x="12.7575%" y="597" width="0.2276%" height="15" fill="rgb(213,81,29)" fg:x="16141" fg:w="288"/><text x="13.0075%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (288 samples, 0.23%)</title><rect x="12.7575%" y="581" width="0.2276%" height="15" fill="rgb(220,89,49)" fg:x="16141" fg:w="288"/><text x="13.0075%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (275 samples, 0.22%)</title><rect x="12.7677%" y="565" width="0.2174%" height="15" fill="rgb(227,60,33)" fg:x="16154" fg:w="275"/><text x="13.0177%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (274 samples, 0.22%)</title><rect x="12.7685%" y="549" width="0.2166%" height="15" fill="rgb(205,113,12)" fg:x="16155" fg:w="274"/><text x="13.0185%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (273 samples, 0.22%)</title><rect x="12.7693%" y="533" width="0.2158%" height="15" fill="rgb(211,32,1)" fg:x="16156" fg:w="273"/><text x="13.0193%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (265 samples, 0.21%)</title><rect x="12.7756%" y="517" width="0.2094%" height="15" fill="rgb(246,2,12)" fg:x="16164" fg:w="265"/><text x="13.0256%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (263 samples, 0.21%)</title><rect x="12.7772%" y="501" width="0.2079%" height="15" fill="rgb(243,37,27)" fg:x="16166" fg:w="263"/><text x="13.0272%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (750 samples, 0.59%)</title><rect x="12.3931%" y="773" width="0.5928%" height="15" fill="rgb(248,211,31)" fg:x="15680" fg:w="750"/><text x="12.6431%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (750 samples, 0.59%)</title><rect x="12.3931%" y="757" width="0.5928%" height="15" fill="rgb(242,146,47)" fg:x="15680" fg:w="750"/><text x="12.6431%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (289 samples, 0.23%)</title><rect x="12.7575%" y="741" width="0.2284%" height="15" fill="rgb(206,70,20)" fg:x="16141" fg:w="289"/><text x="13.0075%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (289 samples, 0.23%)</title><rect x="12.7575%" y="725" width="0.2284%" height="15" fill="rgb(215,10,51)" fg:x="16141" fg:w="289"/><text x="13.0075%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.02%)</title><rect x="12.9977%" y="469" width="0.0205%" height="15" fill="rgb(243,178,53)" fg:x="16445" fg:w="26"/><text x="13.2477%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.02%)</title><rect x="13.0025%" y="453" width="0.0158%" height="15" fill="rgb(233,221,20)" fg:x="16451" fg:w="20"/><text x="13.2525%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (13 samples, 0.01%)</title><rect x="13.0207%" y="405" width="0.0103%" height="15" fill="rgb(218,95,35)" fg:x="16474" fg:w="13"/><text x="13.2707%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (13 samples, 0.01%)</title><rect x="13.0207%" y="389" width="0.0103%" height="15" fill="rgb(229,13,5)" fg:x="16474" fg:w="13"/><text x="13.2707%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="13.0207%" y="373" width="0.0103%" height="15" fill="rgb(252,164,30)" fg:x="16474" fg:w="13"/><text x="13.2707%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (33 samples, 0.03%)</title><rect x="13.0207%" y="437" width="0.0261%" height="15" fill="rgb(232,68,36)" fg:x="16474" fg:w="33"/><text x="13.2707%" y="447.50"></text></g><g><title> N]&gt;::hash (33 samples, 0.03%)</title><rect x="13.0207%" y="421" width="0.0261%" height="15" fill="rgb(219,59,54)" fg:x="16474" fg:w="33"/><text x="13.2707%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (19 samples, 0.02%)</title><rect x="13.0317%" y="405" width="0.0150%" height="15" fill="rgb(250,92,33)" fg:x="16488" fg:w="19"/><text x="13.2817%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="13.0333%" y="389" width="0.0134%" height="15" fill="rgb(229,162,54)" fg:x="16490" fg:w="17"/><text x="13.2833%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (34 samples, 0.03%)</title><rect x="13.0207%" y="469" width="0.0269%" height="15" fill="rgb(244,114,52)" fg:x="16474" fg:w="34"/><text x="13.2707%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (34 samples, 0.03%)</title><rect x="13.0207%" y="453" width="0.0269%" height="15" fill="rgb(212,211,43)" fg:x="16474" fg:w="34"/><text x="13.2707%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (75 samples, 0.06%)</title><rect x="12.9969%" y="485" width="0.0593%" height="15" fill="rgb(226,147,8)" fg:x="16444" fg:w="75"/><text x="13.2469%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (26 samples, 0.02%)</title><rect x="13.0578%" y="469" width="0.0205%" height="15" fill="rgb(226,23,13)" fg:x="16521" fg:w="26"/><text x="13.3078%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (29 samples, 0.02%)</title><rect x="13.0562%" y="485" width="0.0229%" height="15" fill="rgb(240,63,4)" fg:x="16519" fg:w="29"/><text x="13.3062%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (114 samples, 0.09%)</title><rect x="12.9954%" y="501" width="0.0901%" height="15" fill="rgb(221,1,32)" fg:x="16442" fg:w="114"/><text x="13.2454%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (126 samples, 0.10%)</title><rect x="12.9867%" y="597" width="0.0996%" height="15" fill="rgb(242,117,10)" fg:x="16431" fg:w="126"/><text x="13.2367%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (125 samples, 0.10%)</title><rect x="12.9875%" y="581" width="0.0988%" height="15" fill="rgb(249,172,44)" fg:x="16432" fg:w="125"/><text x="13.2375%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (124 samples, 0.10%)</title><rect x="12.9883%" y="565" width="0.0980%" height="15" fill="rgb(244,46,45)" fg:x="16433" fg:w="124"/><text x="13.2383%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (119 samples, 0.09%)</title><rect x="12.9922%" y="549" width="0.0941%" height="15" fill="rgb(206,43,17)" fg:x="16438" fg:w="119"/><text x="13.2422%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (117 samples, 0.09%)</title><rect x="12.9938%" y="533" width="0.0925%" height="15" fill="rgb(239,218,39)" fg:x="16440" fg:w="117"/><text x="13.2438%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (117 samples, 0.09%)</title><rect x="12.9938%" y="517" width="0.0925%" height="15" fill="rgb(208,169,54)" fg:x="16440" fg:w="117"/><text x="13.2438%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_no_shared_links (1,038 samples, 0.82%)</title><rect x="12.2674%" y="805" width="0.8204%" height="15" fill="rgb(247,25,42)" fg:x="15521" fg:w="1038"/><text x="12.5174%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids (879 samples, 0.69%)</title><rect x="12.3931%" y="789" width="0.6947%" height="15" fill="rgb(226,23,31)" fg:x="15680" fg:w="879"/><text x="12.6431%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (128 samples, 0.10%)</title><rect x="12.9867%" y="773" width="0.1012%" height="15" fill="rgb(247,16,28)" fg:x="16431" fg:w="128"/><text x="13.2367%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (128 samples, 0.10%)</title><rect x="12.9867%" y="757" width="0.1012%" height="15" fill="rgb(231,147,38)" fg:x="16431" fg:w="128"/><text x="13.2367%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (128 samples, 0.10%)</title><rect x="12.9867%" y="741" width="0.1012%" height="15" fill="rgb(253,81,48)" fg:x="16431" fg:w="128"/><text x="13.2367%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (128 samples, 0.10%)</title><rect x="12.9867%" y="725" width="0.1012%" height="15" fill="rgb(249,222,43)" fg:x="16431" fg:w="128"/><text x="13.2367%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (128 samples, 0.10%)</title><rect x="12.9867%" y="709" width="0.1012%" height="15" fill="rgb(221,3,27)" fg:x="16431" fg:w="128"/><text x="13.2367%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.10%)</title><rect x="12.9867%" y="693" width="0.1012%" height="15" fill="rgb(228,180,5)" fg:x="16431" fg:w="128"/><text x="13.2367%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.10%)</title><rect x="12.9867%" y="677" width="0.1012%" height="15" fill="rgb(227,131,42)" fg:x="16431" fg:w="128"/><text x="13.2367%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.10%)</title><rect x="12.9867%" y="661" width="0.1012%" height="15" fill="rgb(212,3,39)" fg:x="16431" fg:w="128"/><text x="13.2367%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.10%)</title><rect x="12.9867%" y="645" width="0.1012%" height="15" fill="rgb(226,45,5)" fg:x="16431" fg:w="128"/><text x="13.2367%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.10%)</title><rect x="12.9867%" y="629" width="0.1012%" height="15" fill="rgb(215,167,45)" fg:x="16431" fg:w="128"/><text x="13.2367%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (128 samples, 0.10%)</title><rect x="12.9867%" y="613" width="0.1012%" height="15" fill="rgb(250,218,53)" fg:x="16431" fg:w="128"/><text x="13.2367%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (24 samples, 0.02%)</title><rect x="13.1076%" y="613" width="0.0190%" height="15" fill="rgb(207,140,0)" fg:x="16584" fg:w="24"/><text x="13.3576%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21 samples, 0.02%)</title><rect x="13.1100%" y="597" width="0.0166%" height="15" fill="rgb(238,133,51)" fg:x="16587" fg:w="21"/><text x="13.3600%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.01%)</title><rect x="13.1392%" y="517" width="0.0111%" height="15" fill="rgb(218,203,53)" fg:x="16624" fg:w="14"/><text x="13.3892%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (28 samples, 0.02%)</title><rect x="13.1297%" y="581" width="0.0221%" height="15" fill="rgb(226,184,25)" fg:x="16612" fg:w="28"/><text x="13.3797%" y="591.50"></text></g><g><title> N]&gt;::hash (28 samples, 0.02%)</title><rect x="13.1297%" y="565" width="0.0221%" height="15" fill="rgb(231,121,21)" fg:x="16612" fg:w="28"/><text x="13.3797%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (21 samples, 0.02%)</title><rect x="13.1353%" y="549" width="0.0166%" height="15" fill="rgb(251,14,34)" fg:x="16619" fg:w="21"/><text x="13.3853%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="13.1353%" y="533" width="0.0166%" height="15" fill="rgb(249,193,11)" fg:x="16619" fg:w="21"/><text x="13.3853%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (29 samples, 0.02%)</title><rect x="13.1297%" y="613" width="0.0229%" height="15" fill="rgb(220,172,37)" fg:x="16612" fg:w="29"/><text x="13.3797%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (29 samples, 0.02%)</title><rect x="13.1297%" y="597" width="0.0229%" height="15" fill="rgb(231,229,43)" fg:x="16612" fg:w="29"/><text x="13.3797%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (67 samples, 0.05%)</title><rect x="13.1076%" y="629" width="0.0530%" height="15" fill="rgb(250,161,5)" fg:x="16584" fg:w="67"/><text x="13.3576%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (105 samples, 0.08%)</title><rect x="13.1044%" y="693" width="0.0830%" height="15" fill="rgb(218,225,18)" fg:x="16580" fg:w="105"/><text x="13.3544%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (104 samples, 0.08%)</title><rect x="13.1052%" y="677" width="0.0822%" height="15" fill="rgb(245,45,42)" fg:x="16581" fg:w="104"/><text x="13.3552%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (104 samples, 0.08%)</title><rect x="13.1052%" y="661" width="0.0822%" height="15" fill="rgb(211,115,1)" fg:x="16581" fg:w="104"/><text x="13.3552%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (103 samples, 0.08%)</title><rect x="13.1060%" y="645" width="0.0814%" height="15" fill="rgb(248,133,52)" fg:x="16582" fg:w="103"/><text x="13.3560%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (34 samples, 0.03%)</title><rect x="13.1606%" y="629" width="0.0269%" height="15" fill="rgb(238,100,21)" fg:x="16651" fg:w="34"/><text x="13.4106%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.03%)</title><rect x="13.1613%" y="613" width="0.0261%" height="15" fill="rgb(247,144,11)" fg:x="16652" fg:w="33"/><text x="13.4113%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.02%)</title><rect x="13.1930%" y="581" width="0.0166%" height="15" fill="rgb(206,164,16)" fg:x="16692" fg:w="21"/><text x="13.4430%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.01%)</title><rect x="13.1985%" y="565" width="0.0111%" height="15" fill="rgb(222,34,3)" fg:x="16699" fg:w="14"/><text x="13.4485%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (27 samples, 0.02%)</title><rect x="13.2135%" y="581" width="0.0213%" height="15" fill="rgb(248,82,4)" fg:x="16718" fg:w="27"/><text x="13.4635%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (27 samples, 0.02%)</title><rect x="13.2135%" y="565" width="0.0213%" height="15" fill="rgb(228,81,46)" fg:x="16718" fg:w="27"/><text x="13.4635%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (27 samples, 0.02%)</title><rect x="13.2135%" y="549" width="0.0213%" height="15" fill="rgb(227,67,47)" fg:x="16718" fg:w="27"/><text x="13.4635%" y="559.50"></text></g><g><title> N]&gt;::hash (27 samples, 0.02%)</title><rect x="13.2135%" y="533" width="0.0213%" height="15" fill="rgb(215,93,53)" fg:x="16718" fg:w="27"/><text x="13.4635%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (16 samples, 0.01%)</title><rect x="13.2222%" y="517" width="0.0126%" height="15" fill="rgb(248,194,39)" fg:x="16729" fg:w="16"/><text x="13.4722%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="13.2222%" y="501" width="0.0126%" height="15" fill="rgb(215,5,19)" fg:x="16729" fg:w="16"/><text x="13.4722%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (63 samples, 0.05%)</title><rect x="13.1930%" y="597" width="0.0498%" height="15" fill="rgb(226,215,51)" fg:x="16692" fg:w="63"/><text x="13.4430%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (110 samples, 0.09%)</title><rect x="13.1882%" y="693" width="0.0869%" height="15" fill="rgb(225,56,26)" fg:x="16686" fg:w="110"/><text x="13.4382%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (108 samples, 0.09%)</title><rect x="13.1898%" y="677" width="0.0854%" height="15" fill="rgb(222,75,29)" fg:x="16688" fg:w="108"/><text x="13.4398%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (108 samples, 0.09%)</title><rect x="13.1898%" y="661" width="0.0854%" height="15" fill="rgb(236,139,6)" fg:x="16688" fg:w="108"/><text x="13.4398%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (108 samples, 0.09%)</title><rect x="13.1898%" y="645" width="0.0854%" height="15" fill="rgb(223,137,36)" fg:x="16688" fg:w="108"/><text x="13.4398%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (108 samples, 0.09%)</title><rect x="13.1898%" y="629" width="0.0854%" height="15" fill="rgb(226,99,2)" fg:x="16688" fg:w="108"/><text x="13.4398%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (106 samples, 0.08%)</title><rect x="13.1914%" y="613" width="0.0838%" height="15" fill="rgb(206,133,23)" fg:x="16690" fg:w="106"/><text x="13.4414%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (39 samples, 0.03%)</title><rect x="13.2443%" y="597" width="0.0308%" height="15" fill="rgb(243,173,15)" fg:x="16757" fg:w="39"/><text x="13.4943%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (27 samples, 0.02%)</title><rect x="13.2538%" y="581" width="0.0213%" height="15" fill="rgb(228,69,28)" fg:x="16769" fg:w="27"/><text x="13.5038%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (221 samples, 0.17%)</title><rect x="13.1021%" y="757" width="0.1747%" height="15" fill="rgb(212,51,22)" fg:x="16577" fg:w="221"/><text x="13.3521%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (220 samples, 0.17%)</title><rect x="13.1029%" y="741" width="0.1739%" height="15" fill="rgb(227,113,0)" fg:x="16578" fg:w="220"/><text x="13.3529%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (219 samples, 0.17%)</title><rect x="13.1036%" y="725" width="0.1731%" height="15" fill="rgb(252,84,27)" fg:x="16579" fg:w="219"/><text x="13.3536%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (218 samples, 0.17%)</title><rect x="13.1044%" y="709" width="0.1723%" height="15" fill="rgb(223,145,39)" fg:x="16580" fg:w="218"/><text x="13.3544%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (236 samples, 0.19%)</title><rect x="13.0918%" y="789" width="0.1865%" height="15" fill="rgb(239,219,30)" fg:x="16564" fg:w="236"/><text x="13.3418%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (235 samples, 0.19%)</title><rect x="13.0926%" y="773" width="0.1857%" height="15" fill="rgb(224,196,39)" fg:x="16565" fg:w="235"/><text x="13.3426%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.02%)</title><rect x="13.2925%" y="421" width="0.0166%" height="15" fill="rgb(205,35,43)" fg:x="16818" fg:w="21"/><text x="13.5425%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.01%)</title><rect x="13.2949%" y="405" width="0.0142%" height="15" fill="rgb(228,201,21)" fg:x="16821" fg:w="18"/><text x="13.5449%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (15 samples, 0.01%)</title><rect x="13.3139%" y="341" width="0.0119%" height="15" fill="rgb(237,118,16)" fg:x="16845" fg:w="15"/><text x="13.5639%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (15 samples, 0.01%)</title><rect x="13.3139%" y="325" width="0.0119%" height="15" fill="rgb(241,17,19)" fg:x="16845" fg:w="15"/><text x="13.5639%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="13.3139%" y="309" width="0.0119%" height="15" fill="rgb(214,10,25)" fg:x="16845" fg:w="15"/><text x="13.5639%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.03%)</title><rect x="13.3123%" y="421" width="0.0277%" height="15" fill="rgb(238,37,29)" fg:x="16843" fg:w="35"/><text x="13.5623%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (34 samples, 0.03%)</title><rect x="13.3131%" y="405" width="0.0269%" height="15" fill="rgb(253,83,25)" fg:x="16844" fg:w="34"/><text x="13.5631%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (33 samples, 0.03%)</title><rect x="13.3139%" y="389" width="0.0261%" height="15" fill="rgb(234,192,12)" fg:x="16845" fg:w="33"/><text x="13.5639%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (33 samples, 0.03%)</title><rect x="13.3139%" y="373" width="0.0261%" height="15" fill="rgb(241,216,45)" fg:x="16845" fg:w="33"/><text x="13.5639%" y="383.50"></text></g><g><title> N]&gt;::hash (33 samples, 0.03%)</title><rect x="13.3139%" y="357" width="0.0261%" height="15" fill="rgb(242,22,33)" fg:x="16845" fg:w="33"/><text x="13.5639%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (18 samples, 0.01%)</title><rect x="13.3257%" y="341" width="0.0142%" height="15" fill="rgb(231,105,49)" fg:x="16860" fg:w="18"/><text x="13.5757%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="13.3265%" y="325" width="0.0134%" height="15" fill="rgb(218,204,15)" fg:x="16861" fg:w="17"/><text x="13.5765%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.01%)</title><rect x="13.3289%" y="309" width="0.0111%" height="15" fill="rgb(235,138,41)" fg:x="16864" fg:w="14"/><text x="13.5789%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (74 samples, 0.06%)</title><rect x="13.2925%" y="437" width="0.0585%" height="15" fill="rgb(246,0,9)" fg:x="16818" fg:w="74"/><text x="13.5425%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.01%)</title><rect x="13.3400%" y="421" width="0.0111%" height="15" fill="rgb(210,74,4)" fg:x="16878" fg:w="14"/><text x="13.5900%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (41 samples, 0.03%)</title><rect x="13.3542%" y="437" width="0.0324%" height="15" fill="rgb(250,60,41)" fg:x="16896" fg:w="41"/><text x="13.6042%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (35 samples, 0.03%)</title><rect x="13.3589%" y="421" width="0.0277%" height="15" fill="rgb(220,115,12)" fg:x="16902" fg:w="35"/><text x="13.6089%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (130 samples, 0.10%)</title><rect x="13.2862%" y="533" width="0.1027%" height="15" fill="rgb(237,100,13)" fg:x="16810" fg:w="130"/><text x="13.5362%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (129 samples, 0.10%)</title><rect x="13.2870%" y="517" width="0.1020%" height="15" fill="rgb(213,55,26)" fg:x="16811" fg:w="129"/><text x="13.5370%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (128 samples, 0.10%)</title><rect x="13.2878%" y="501" width="0.1012%" height="15" fill="rgb(216,17,4)" fg:x="16812" fg:w="128"/><text x="13.5378%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (128 samples, 0.10%)</title><rect x="13.2878%" y="485" width="0.1012%" height="15" fill="rgb(220,153,47)" fg:x="16812" fg:w="128"/><text x="13.5378%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (128 samples, 0.10%)</title><rect x="13.2878%" y="469" width="0.1012%" height="15" fill="rgb(215,131,9)" fg:x="16812" fg:w="128"/><text x="13.5378%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (125 samples, 0.10%)</title><rect x="13.2902%" y="453" width="0.0988%" height="15" fill="rgb(233,46,42)" fg:x="16815" fg:w="125"/><text x="13.5402%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (139 samples, 0.11%)</title><rect x="13.2839%" y="709" width="0.1099%" height="15" fill="rgb(226,86,7)" fg:x="16807" fg:w="139"/><text x="13.5339%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (139 samples, 0.11%)</title><rect x="13.2839%" y="693" width="0.1099%" height="15" fill="rgb(239,226,21)" fg:x="16807" fg:w="139"/><text x="13.5339%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (139 samples, 0.11%)</title><rect x="13.2839%" y="677" width="0.1099%" height="15" fill="rgb(244,137,22)" fg:x="16807" fg:w="139"/><text x="13.5339%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (139 samples, 0.11%)</title><rect x="13.2839%" y="661" width="0.1099%" height="15" fill="rgb(211,139,35)" fg:x="16807" fg:w="139"/><text x="13.5339%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (139 samples, 0.11%)</title><rect x="13.2839%" y="645" width="0.1099%" height="15" fill="rgb(214,62,50)" fg:x="16807" fg:w="139"/><text x="13.5339%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (139 samples, 0.11%)</title><rect x="13.2839%" y="629" width="0.1099%" height="15" fill="rgb(212,113,44)" fg:x="16807" fg:w="139"/><text x="13.5339%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (139 samples, 0.11%)</title><rect x="13.2839%" y="613" width="0.1099%" height="15" fill="rgb(226,150,43)" fg:x="16807" fg:w="139"/><text x="13.5339%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (139 samples, 0.11%)</title><rect x="13.2839%" y="597" width="0.1099%" height="15" fill="rgb(250,71,37)" fg:x="16807" fg:w="139"/><text x="13.5339%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (139 samples, 0.11%)</title><rect x="13.2839%" y="581" width="0.1099%" height="15" fill="rgb(219,76,19)" fg:x="16807" fg:w="139"/><text x="13.5339%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (139 samples, 0.11%)</title><rect x="13.2839%" y="565" width="0.1099%" height="15" fill="rgb(250,39,11)" fg:x="16807" fg:w="139"/><text x="13.5339%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (138 samples, 0.11%)</title><rect x="13.2846%" y="549" width="0.1091%" height="15" fill="rgb(230,64,31)" fg:x="16808" fg:w="138"/><text x="13.5346%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="13.3953%" y="533" width="0.0111%" height="15" fill="rgb(208,222,23)" fg:x="16948" fg:w="14"/><text x="13.6453%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="13.3961%" y="517" width="0.0103%" height="15" fill="rgb(227,125,18)" fg:x="16949" fg:w="13"/><text x="13.6461%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.01%)</title><rect x="13.4143%" y="421" width="0.0126%" height="15" fill="rgb(234,210,9)" fg:x="16972" fg:w="16"/><text x="13.6643%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.01%)</title><rect x="13.4166%" y="405" width="0.0103%" height="15" fill="rgb(217,127,24)" fg:x="16975" fg:w="13"/><text x="13.6666%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.01%)</title><rect x="13.4419%" y="309" width="0.0111%" height="15" fill="rgb(239,141,48)" fg:x="17007" fg:w="14"/><text x="13.6919%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (30 samples, 0.02%)</title><rect x="13.4317%" y="421" width="0.0237%" height="15" fill="rgb(227,109,8)" fg:x="16994" fg:w="30"/><text x="13.6817%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (30 samples, 0.02%)</title><rect x="13.4317%" y="405" width="0.0237%" height="15" fill="rgb(235,184,23)" fg:x="16994" fg:w="30"/><text x="13.6817%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (30 samples, 0.02%)</title><rect x="13.4317%" y="389" width="0.0237%" height="15" fill="rgb(227,226,48)" fg:x="16994" fg:w="30"/><text x="13.6817%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (30 samples, 0.02%)</title><rect x="13.4317%" y="373" width="0.0237%" height="15" fill="rgb(206,150,11)" fg:x="16994" fg:w="30"/><text x="13.6817%" y="383.50"></text></g><g><title> N]&gt;::hash (30 samples, 0.02%)</title><rect x="13.4317%" y="357" width="0.0237%" height="15" fill="rgb(254,2,33)" fg:x="16994" fg:w="30"/><text x="13.6817%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (21 samples, 0.02%)</title><rect x="13.4388%" y="341" width="0.0166%" height="15" fill="rgb(243,160,20)" fg:x="17003" fg:w="21"/><text x="13.6888%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="13.4404%" y="325" width="0.0150%" height="15" fill="rgb(218,208,30)" fg:x="17005" fg:w="19"/><text x="13.6904%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (66 samples, 0.05%)</title><rect x="13.4143%" y="437" width="0.0522%" height="15" fill="rgb(224,120,49)" fg:x="16972" fg:w="66"/><text x="13.6643%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.01%)</title><rect x="13.4554%" y="421" width="0.0111%" height="15" fill="rgb(246,12,2)" fg:x="17024" fg:w="14"/><text x="13.7054%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (36 samples, 0.03%)</title><rect x="13.4830%" y="341" width="0.0285%" height="15" fill="rgb(236,117,3)" fg:x="17059" fg:w="36"/><text x="13.7330%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (31 samples, 0.02%)</title><rect x="13.4870%" y="325" width="0.0245%" height="15" fill="rgb(216,128,52)" fg:x="17064" fg:w="31"/><text x="13.7370%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.01%)</title><rect x="13.5328%" y="229" width="0.0103%" height="15" fill="rgb(246,145,19)" fg:x="17122" fg:w="13"/><text x="13.7828%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (34 samples, 0.03%)</title><rect x="13.5194%" y="309" width="0.0269%" height="15" fill="rgb(222,11,46)" fg:x="17105" fg:w="34"/><text x="13.7694%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (34 samples, 0.03%)</title><rect x="13.5194%" y="293" width="0.0269%" height="15" fill="rgb(245,82,36)" fg:x="17105" fg:w="34"/><text x="13.7694%" y="303.50"></text></g><g><title> N]&gt;::hash (34 samples, 0.03%)</title><rect x="13.5194%" y="277" width="0.0269%" height="15" fill="rgb(250,73,51)" fg:x="17105" fg:w="34"/><text x="13.7694%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (22 samples, 0.02%)</title><rect x="13.5289%" y="261" width="0.0174%" height="15" fill="rgb(221,189,23)" fg:x="17117" fg:w="22"/><text x="13.7789%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.02%)</title><rect x="13.5305%" y="245" width="0.0158%" height="15" fill="rgb(210,33,7)" fg:x="17119" fg:w="20"/><text x="13.7805%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.03%)</title><rect x="13.5194%" y="341" width="0.0277%" height="15" fill="rgb(210,107,22)" fg:x="17105" fg:w="35"/><text x="13.7694%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.03%)</title><rect x="13.5194%" y="325" width="0.0277%" height="15" fill="rgb(222,116,37)" fg:x="17105" fg:w="35"/><text x="13.7694%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (94 samples, 0.07%)</title><rect x="13.4791%" y="389" width="0.0743%" height="15" fill="rgb(254,17,48)" fg:x="17054" fg:w="94"/><text x="13.7291%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (91 samples, 0.07%)</title><rect x="13.4814%" y="373" width="0.0719%" height="15" fill="rgb(224,36,32)" fg:x="17057" fg:w="91"/><text x="13.7314%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (89 samples, 0.07%)</title><rect x="13.4830%" y="357" width="0.0703%" height="15" fill="rgb(232,90,46)" fg:x="17059" fg:w="89"/><text x="13.7330%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (14 samples, 0.01%)</title><rect x="13.5589%" y="357" width="0.0111%" height="15" fill="rgb(241,66,40)" fg:x="17155" fg:w="14"/><text x="13.8089%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (28 samples, 0.02%)</title><rect x="13.5534%" y="389" width="0.0221%" height="15" fill="rgb(249,184,29)" fg:x="17148" fg:w="28"/><text x="13.8034%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (25 samples, 0.02%)</title><rect x="13.5557%" y="373" width="0.0198%" height="15" fill="rgb(231,181,1)" fg:x="17151" fg:w="25"/><text x="13.8057%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (145 samples, 0.11%)</title><rect x="13.4680%" y="421" width="0.1146%" height="15" fill="rgb(224,94,2)" fg:x="17040" fg:w="145"/><text x="13.7180%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (142 samples, 0.11%)</title><rect x="13.4704%" y="405" width="0.1122%" height="15" fill="rgb(229,170,15)" fg:x="17043" fg:w="142"/><text x="13.7204%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (13 samples, 0.01%)</title><rect x="13.6055%" y="405" width="0.0103%" height="15" fill="rgb(240,127,35)" fg:x="17214" fg:w="13"/><text x="13.8555%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (189 samples, 0.15%)</title><rect x="13.4672%" y="437" width="0.1494%" height="15" fill="rgb(248,196,34)" fg:x="17039" fg:w="189"/><text x="13.7172%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (43 samples, 0.03%)</title><rect x="13.5826%" y="421" width="0.0340%" height="15" fill="rgb(236,137,7)" fg:x="17185" fg:w="43"/><text x="13.8326%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (259 samples, 0.20%)</title><rect x="13.4135%" y="453" width="0.2047%" height="15" fill="rgb(235,127,16)" fg:x="16971" fg:w="259"/><text x="13.6635%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (269 samples, 0.21%)</title><rect x="13.4072%" y="517" width="0.2126%" height="15" fill="rgb(250,192,54)" fg:x="16963" fg:w="269"/><text x="13.6572%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (263 samples, 0.21%)</title><rect x="13.4119%" y="501" width="0.2079%" height="15" fill="rgb(218,98,20)" fg:x="16969" fg:w="263"/><text x="13.6619%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (263 samples, 0.21%)</title><rect x="13.4119%" y="485" width="0.2079%" height="15" fill="rgb(230,176,47)" fg:x="16969" fg:w="263"/><text x="13.6619%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (262 samples, 0.21%)</title><rect x="13.4127%" y="469" width="0.2071%" height="15" fill="rgb(244,2,33)" fg:x="16970" fg:w="262"/><text x="13.6627%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::ids (427 samples, 0.34%)</title><rect x="13.2831%" y="741" width="0.3375%" height="15" fill="rgb(231,100,17)" fg:x="16806" fg:w="427"/><text x="13.5331%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (427 samples, 0.34%)</title><rect x="13.2831%" y="725" width="0.3375%" height="15" fill="rgb(245,23,12)" fg:x="16806" fg:w="427"/><text x="13.5331%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (287 samples, 0.23%)</title><rect x="13.3937%" y="709" width="0.2268%" height="15" fill="rgb(249,55,22)" fg:x="16946" fg:w="287"/><text x="13.6437%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (287 samples, 0.23%)</title><rect x="13.3937%" y="693" width="0.2268%" height="15" fill="rgb(207,134,9)" fg:x="16946" fg:w="287"/><text x="13.6437%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (287 samples, 0.23%)</title><rect x="13.3937%" y="677" width="0.2268%" height="15" fill="rgb(218,134,0)" fg:x="16946" fg:w="287"/><text x="13.6437%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (287 samples, 0.23%)</title><rect x="13.3937%" y="661" width="0.2268%" height="15" fill="rgb(213,212,33)" fg:x="16946" fg:w="287"/><text x="13.6437%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (287 samples, 0.23%)</title><rect x="13.3937%" y="645" width="0.2268%" height="15" fill="rgb(252,106,18)" fg:x="16946" fg:w="287"/><text x="13.6437%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (287 samples, 0.23%)</title><rect x="13.3937%" y="629" width="0.2268%" height="15" fill="rgb(208,126,42)" fg:x="16946" fg:w="287"/><text x="13.6437%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (287 samples, 0.23%)</title><rect x="13.3937%" y="613" width="0.2268%" height="15" fill="rgb(246,175,29)" fg:x="16946" fg:w="287"/><text x="13.6437%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (287 samples, 0.23%)</title><rect x="13.3937%" y="597" width="0.2268%" height="15" fill="rgb(215,13,50)" fg:x="16946" fg:w="287"/><text x="13.6437%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (287 samples, 0.23%)</title><rect x="13.3937%" y="581" width="0.2268%" height="15" fill="rgb(216,172,15)" fg:x="16946" fg:w="287"/><text x="13.6437%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (287 samples, 0.23%)</title><rect x="13.3937%" y="565" width="0.2268%" height="15" fill="rgb(212,103,13)" fg:x="16946" fg:w="287"/><text x="13.6437%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (286 samples, 0.23%)</title><rect x="13.3945%" y="549" width="0.2260%" height="15" fill="rgb(231,171,36)" fg:x="16947" fg:w="286"/><text x="13.6445%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (270 samples, 0.21%)</title><rect x="13.4072%" y="533" width="0.2134%" height="15" fill="rgb(250,123,20)" fg:x="16963" fg:w="270"/><text x="13.6572%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (27 samples, 0.02%)</title><rect x="13.6395%" y="437" width="0.0213%" height="15" fill="rgb(212,53,50)" fg:x="17257" fg:w="27"/><text x="13.8895%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (22 samples, 0.02%)</title><rect x="13.6435%" y="421" width="0.0174%" height="15" fill="rgb(243,54,12)" fg:x="17262" fg:w="22"/><text x="13.8935%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (29 samples, 0.02%)</title><rect x="13.6648%" y="389" width="0.0229%" height="15" fill="rgb(234,101,34)" fg:x="17289" fg:w="29"/><text x="13.9148%" y="399.50"></text></g><g><title> N]&gt;::hash (29 samples, 0.02%)</title><rect x="13.6648%" y="373" width="0.0229%" height="15" fill="rgb(254,67,22)" fg:x="17289" fg:w="29"/><text x="13.9148%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (19 samples, 0.02%)</title><rect x="13.6727%" y="357" width="0.0150%" height="15" fill="rgb(250,35,47)" fg:x="17299" fg:w="19"/><text x="13.9227%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="13.6727%" y="341" width="0.0150%" height="15" fill="rgb(226,126,38)" fg:x="17299" fg:w="19"/><text x="13.9227%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (32 samples, 0.03%)</title><rect x="13.6640%" y="437" width="0.0253%" height="15" fill="rgb(216,138,53)" fg:x="17288" fg:w="32"/><text x="13.9140%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.02%)</title><rect x="13.6648%" y="421" width="0.0245%" height="15" fill="rgb(246,199,43)" fg:x="17289" fg:w="31"/><text x="13.9148%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (31 samples, 0.02%)</title><rect x="13.6648%" y="405" width="0.0245%" height="15" fill="rgb(232,125,11)" fg:x="17289" fg:w="31"/><text x="13.9148%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (72 samples, 0.06%)</title><rect x="13.6395%" y="453" width="0.0569%" height="15" fill="rgb(218,219,45)" fg:x="17257" fg:w="72"/><text x="13.8895%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (38 samples, 0.03%)</title><rect x="13.7233%" y="357" width="0.0300%" height="15" fill="rgb(216,102,54)" fg:x="17363" fg:w="38"/><text x="13.9733%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (33 samples, 0.03%)</title><rect x="13.7273%" y="341" width="0.0261%" height="15" fill="rgb(250,228,7)" fg:x="17368" fg:w="33"/><text x="13.9773%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (17 samples, 0.01%)</title><rect x="13.7589%" y="277" width="0.0134%" height="15" fill="rgb(226,125,25)" fg:x="17408" fg:w="17"/><text x="14.0089%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (16 samples, 0.01%)</title><rect x="13.7597%" y="261" width="0.0126%" height="15" fill="rgb(224,165,27)" fg:x="17409" fg:w="16"/><text x="14.0097%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.01%)</title><rect x="13.7597%" y="245" width="0.0126%" height="15" fill="rgb(233,86,3)" fg:x="17409" fg:w="16"/><text x="14.0097%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.01%)</title><rect x="13.7763%" y="245" width="0.0111%" height="15" fill="rgb(228,116,20)" fg:x="17430" fg:w="14"/><text x="14.0263%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (47 samples, 0.04%)</title><rect x="13.7581%" y="357" width="0.0371%" height="15" fill="rgb(209,192,17)" fg:x="17407" fg:w="47"/><text x="14.0081%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (46 samples, 0.04%)</title><rect x="13.7589%" y="341" width="0.0364%" height="15" fill="rgb(224,88,34)" fg:x="17408" fg:w="46"/><text x="14.0089%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (46 samples, 0.04%)</title><rect x="13.7589%" y="325" width="0.0364%" height="15" fill="rgb(233,38,6)" fg:x="17408" fg:w="46"/><text x="14.0089%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (46 samples, 0.04%)</title><rect x="13.7589%" y="309" width="0.0364%" height="15" fill="rgb(212,59,30)" fg:x="17408" fg:w="46"/><text x="14.0089%" y="319.50"></text></g><g><title> N]&gt;::hash (46 samples, 0.04%)</title><rect x="13.7589%" y="293" width="0.0364%" height="15" fill="rgb(213,80,3)" fg:x="17408" fg:w="46"/><text x="14.0089%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (28 samples, 0.02%)</title><rect x="13.7731%" y="277" width="0.0221%" height="15" fill="rgb(251,178,7)" fg:x="17426" fg:w="28"/><text x="14.0231%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.02%)</title><rect x="13.7739%" y="261" width="0.0213%" height="15" fill="rgb(213,154,26)" fg:x="17427" fg:w="27"/><text x="14.0239%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (103 samples, 0.08%)</title><rect x="13.7225%" y="405" width="0.0814%" height="15" fill="rgb(238,165,49)" fg:x="17362" fg:w="103"/><text x="13.9725%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (103 samples, 0.08%)</title><rect x="13.7225%" y="389" width="0.0814%" height="15" fill="rgb(248,91,46)" fg:x="17362" fg:w="103"/><text x="13.9725%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (102 samples, 0.08%)</title><rect x="13.7233%" y="373" width="0.0806%" height="15" fill="rgb(244,21,52)" fg:x="17363" fg:w="102"/><text x="13.9733%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (13 samples, 0.01%)</title><rect x="13.8110%" y="373" width="0.0103%" height="15" fill="rgb(247,122,20)" fg:x="17474" fg:w="13"/><text x="14.0610%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (28 samples, 0.02%)</title><rect x="13.8039%" y="405" width="0.0221%" height="15" fill="rgb(218,27,9)" fg:x="17465" fg:w="28"/><text x="14.0539%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (25 samples, 0.02%)</title><rect x="13.8063%" y="389" width="0.0198%" height="15" fill="rgb(246,7,6)" fg:x="17468" fg:w="25"/><text x="14.0563%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (167 samples, 0.13%)</title><rect x="13.7012%" y="437" width="0.1320%" height="15" fill="rgb(227,135,54)" fg:x="17335" fg:w="167"/><text x="13.9512%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (163 samples, 0.13%)</title><rect x="13.7043%" y="421" width="0.1288%" height="15" fill="rgb(247,14,11)" fg:x="17339" fg:w="163"/><text x="13.9543%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (209 samples, 0.17%)</title><rect x="13.6988%" y="453" width="0.1652%" height="15" fill="rgb(206,149,34)" fg:x="17332" fg:w="209"/><text x="13.9488%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (39 samples, 0.03%)</title><rect x="13.8332%" y="437" width="0.0308%" height="15" fill="rgb(227,228,4)" fg:x="17502" fg:w="39"/><text x="14.0832%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (740 samples, 0.58%)</title><rect x="13.2831%" y="773" width="0.5849%" height="15" fill="rgb(238,218,28)" fg:x="16806" fg:w="740"/><text x="13.5331%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (740 samples, 0.58%)</title><rect x="13.2831%" y="757" width="0.5849%" height="15" fill="rgb(252,86,40)" fg:x="16806" fg:w="740"/><text x="13.5331%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (312 samples, 0.25%)</title><rect x="13.6213%" y="741" width="0.2466%" height="15" fill="rgb(251,225,11)" fg:x="17234" fg:w="312"/><text x="13.8713%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (312 samples, 0.25%)</title><rect x="13.6213%" y="725" width="0.2466%" height="15" fill="rgb(206,46,49)" fg:x="17234" fg:w="312"/><text x="13.8713%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (312 samples, 0.25%)</title><rect x="13.6213%" y="709" width="0.2466%" height="15" fill="rgb(245,128,24)" fg:x="17234" fg:w="312"/><text x="13.8713%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (312 samples, 0.25%)</title><rect x="13.6213%" y="693" width="0.2466%" height="15" fill="rgb(219,177,34)" fg:x="17234" fg:w="312"/><text x="13.8713%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (312 samples, 0.25%)</title><rect x="13.6213%" y="677" width="0.2466%" height="15" fill="rgb(218,60,48)" fg:x="17234" fg:w="312"/><text x="13.8713%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (312 samples, 0.25%)</title><rect x="13.6213%" y="661" width="0.2466%" height="15" fill="rgb(221,11,5)" fg:x="17234" fg:w="312"/><text x="13.8713%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (312 samples, 0.25%)</title><rect x="13.6213%" y="645" width="0.2466%" height="15" fill="rgb(220,148,13)" fg:x="17234" fg:w="312"/><text x="13.8713%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (312 samples, 0.25%)</title><rect x="13.6213%" y="629" width="0.2466%" height="15" fill="rgb(210,16,3)" fg:x="17234" fg:w="312"/><text x="13.8713%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (312 samples, 0.25%)</title><rect x="13.6213%" y="613" width="0.2466%" height="15" fill="rgb(236,80,2)" fg:x="17234" fg:w="312"/><text x="13.8713%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (312 samples, 0.25%)</title><rect x="13.6213%" y="597" width="0.2466%" height="15" fill="rgb(239,129,19)" fg:x="17234" fg:w="312"/><text x="13.8713%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (312 samples, 0.25%)</title><rect x="13.6213%" y="581" width="0.2466%" height="15" fill="rgb(220,106,35)" fg:x="17234" fg:w="312"/><text x="13.8713%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (301 samples, 0.24%)</title><rect x="13.6300%" y="565" width="0.2379%" height="15" fill="rgb(252,139,45)" fg:x="17245" fg:w="301"/><text x="13.8800%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (300 samples, 0.24%)</title><rect x="13.6308%" y="549" width="0.2371%" height="15" fill="rgb(229,8,36)" fg:x="17246" fg:w="300"/><text x="13.8808%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (300 samples, 0.24%)</title><rect x="13.6308%" y="533" width="0.2371%" height="15" fill="rgb(230,126,33)" fg:x="17246" fg:w="300"/><text x="13.8808%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (297 samples, 0.23%)</title><rect x="13.6332%" y="517" width="0.2347%" height="15" fill="rgb(239,140,21)" fg:x="17249" fg:w="297"/><text x="13.8832%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (296 samples, 0.23%)</title><rect x="13.6340%" y="501" width="0.2340%" height="15" fill="rgb(254,104,9)" fg:x="17250" fg:w="296"/><text x="13.8840%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (295 samples, 0.23%)</title><rect x="13.6348%" y="485" width="0.2332%" height="15" fill="rgb(239,52,14)" fg:x="17251" fg:w="295"/><text x="13.8848%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (295 samples, 0.23%)</title><rect x="13.6348%" y="469" width="0.2332%" height="15" fill="rgb(208,227,44)" fg:x="17251" fg:w="295"/><text x="13.8848%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (23 samples, 0.02%)</title><rect x="13.8932%" y="581" width="0.0182%" height="15" fill="rgb(246,18,19)" fg:x="17578" fg:w="23"/><text x="14.1432%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.01%)</title><rect x="13.8980%" y="565" width="0.0134%" height="15" fill="rgb(235,228,25)" fg:x="17584" fg:w="17"/><text x="14.1480%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.02%)</title><rect x="13.9130%" y="581" width="0.0245%" height="15" fill="rgb(240,156,20)" fg:x="17603" fg:w="31"/><text x="14.1630%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (30 samples, 0.02%)</title><rect x="13.9138%" y="565" width="0.0237%" height="15" fill="rgb(224,8,20)" fg:x="17604" fg:w="30"/><text x="14.1638%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (30 samples, 0.02%)</title><rect x="13.9138%" y="549" width="0.0237%" height="15" fill="rgb(214,12,52)" fg:x="17604" fg:w="30"/><text x="14.1638%" y="559.50"></text></g><g><title> N]&gt;::hash (30 samples, 0.02%)</title><rect x="13.9138%" y="533" width="0.0237%" height="15" fill="rgb(211,220,47)" fg:x="17604" fg:w="30"/><text x="14.1638%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (20 samples, 0.02%)</title><rect x="13.9217%" y="517" width="0.0158%" height="15" fill="rgb(250,173,5)" fg:x="17614" fg:w="20"/><text x="14.1717%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="13.9225%" y="501" width="0.0150%" height="15" fill="rgb(250,125,52)" fg:x="17615" fg:w="19"/><text x="14.1725%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (61 samples, 0.05%)</title><rect x="13.8932%" y="597" width="0.0482%" height="15" fill="rgb(209,133,18)" fg:x="17578" fg:w="61"/><text x="14.1432%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (102 samples, 0.08%)</title><rect x="13.8901%" y="661" width="0.0806%" height="15" fill="rgb(216,173,22)" fg:x="17574" fg:w="102"/><text x="14.1401%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (102 samples, 0.08%)</title><rect x="13.8901%" y="645" width="0.0806%" height="15" fill="rgb(205,3,22)" fg:x="17574" fg:w="102"/><text x="14.1401%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (101 samples, 0.08%)</title><rect x="13.8909%" y="629" width="0.0798%" height="15" fill="rgb(248,22,20)" fg:x="17575" fg:w="101"/><text x="14.1409%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (101 samples, 0.08%)</title><rect x="13.8909%" y="613" width="0.0798%" height="15" fill="rgb(233,6,29)" fg:x="17575" fg:w="101"/><text x="14.1409%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (36 samples, 0.03%)</title><rect x="13.9422%" y="597" width="0.0285%" height="15" fill="rgb(240,22,54)" fg:x="17640" fg:w="36"/><text x="14.1922%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (32 samples, 0.03%)</title><rect x="13.9454%" y="581" width="0.0253%" height="15" fill="rgb(231,133,32)" fg:x="17644" fg:w="32"/><text x="14.1954%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (110 samples, 0.09%)</title><rect x="13.8877%" y="693" width="0.0869%" height="15" fill="rgb(248,193,4)" fg:x="17571" fg:w="110"/><text x="14.1377%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (110 samples, 0.09%)</title><rect x="13.8877%" y="677" width="0.0869%" height="15" fill="rgb(211,178,46)" fg:x="17571" fg:w="110"/><text x="14.1377%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (115 samples, 0.09%)</title><rect x="13.8853%" y="725" width="0.0909%" height="15" fill="rgb(224,5,42)" fg:x="17568" fg:w="115"/><text x="14.1353%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find::_{{closure}} (112 samples, 0.09%)</title><rect x="13.8877%" y="709" width="0.0885%" height="15" fill="rgb(239,176,25)" fg:x="17571" fg:w="112"/><text x="14.1377%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (125 samples, 0.10%)</title><rect x="13.8790%" y="757" width="0.0988%" height="15" fill="rgb(245,187,50)" fg:x="17560" fg:w="125"/><text x="14.1290%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (125 samples, 0.10%)</title><rect x="13.8790%" y="741" width="0.0988%" height="15" fill="rgb(248,24,15)" fg:x="17560" fg:w="125"/><text x="14.1290%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_only_folders_have_children (1,128 samples, 0.89%)</title><rect x="13.0878%" y="805" width="0.8915%" height="15" fill="rgb(205,166,13)" fg:x="16559" fg:w="1128"/><text x="13.3378%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::all_files (885 samples, 0.70%)</title><rect x="13.2799%" y="789" width="0.6995%" height="15" fill="rgb(208,114,23)" fg:x="16802" fg:w="885"/><text x="13.5299%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (128 samples, 0.10%)</title><rect x="13.8782%" y="773" width="0.1012%" height="15" fill="rgb(239,127,18)" fg:x="17559" fg:w="128"/><text x="14.1282%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::stage_validate_and_promote (14,939 samples, 11.81%)</title><rect x="2.1727%" y="837" width="11.8074%" height="15" fill="rgb(219,154,28)" fg:x="2749" fg:w="14939"/><text x="2.4227%" y="847.50">get_usage_tests-cf..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::validate (14,926 samples, 11.80%)</title><rect x="2.1830%" y="821" width="11.7972%" height="15" fill="rgb(225,157,23)" fg:x="2762" fg:w="14926"/><text x="2.4330%" y="831.50">get_usage_tests-c..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::AddAssign&gt;::add_assign (14 samples, 0.01%)</title><rect x="13.9936%" y="741" width="0.0111%" height="15" fill="rgb(219,8,6)" fg:x="17705" fg:w="14"/><text x="14.2436%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::AddAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::add_assign (13 samples, 0.01%)</title><rect x="13.9944%" y="725" width="0.0103%" height="15" fill="rgb(212,47,6)" fg:x="17706" fg:w="13"/><text x="14.2444%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (70 samples, 0.06%)</title><rect x="14.0063%" y="709" width="0.0553%" height="15" fill="rgb(224,190,4)" fg:x="17721" fg:w="70"/><text x="14.2563%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (83 samples, 0.07%)</title><rect x="14.0055%" y="725" width="0.0656%" height="15" fill="rgb(239,183,29)" fg:x="17720" fg:w="83"/><text x="14.2555%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::Mul&gt;::mul (87 samples, 0.07%)</title><rect x="14.0047%" y="741" width="0.0688%" height="15" fill="rgb(213,57,7)" fg:x="17719" fg:w="87"/><text x="14.2547%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (29 samples, 0.02%)</title><rect x="14.0734%" y="693" width="0.0229%" height="15" fill="rgb(216,148,1)" fg:x="17806" fg:w="29"/><text x="14.3234%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (34 samples, 0.03%)</title><rect x="14.0734%" y="709" width="0.0269%" height="15" fill="rgb(236,182,29)" fg:x="17806" fg:w="34"/><text x="14.3234%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::mul_assign (35 samples, 0.03%)</title><rect x="14.0734%" y="725" width="0.0277%" height="15" fill="rgb(244,120,48)" fg:x="17806" fg:w="35"/><text x="14.3234%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&gt;::mul_assign (38 samples, 0.03%)</title><rect x="14.0734%" y="741" width="0.0300%" height="15" fill="rgb(206,71,34)" fg:x="17806" fg:w="38"/><text x="14.3234%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (56 samples, 0.04%)</title><rect x="14.1288%" y="709" width="0.0443%" height="15" fill="rgb(242,32,6)" fg:x="17876" fg:w="56"/><text x="14.3788%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (64 samples, 0.05%)</title><rect x="14.1288%" y="725" width="0.0506%" height="15" fill="rgb(241,35,3)" fg:x="17876" fg:w="64"/><text x="14.3788%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (66 samples, 0.05%)</title><rect x="14.1280%" y="741" width="0.0522%" height="15" fill="rgb(222,62,19)" fg:x="17875" fg:w="66"/><text x="14.3780%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge_in_place (238 samples, 0.19%)</title><rect x="13.9928%" y="757" width="0.1881%" height="15" fill="rgb(223,110,41)" fg:x="17704" fg:w="238"/><text x="14.2428%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (259 samples, 0.20%)</title><rect x="13.9802%" y="789" width="0.2047%" height="15" fill="rgb(208,224,4)" fg:x="17688" fg:w="259"/><text x="14.2302%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge (244 samples, 0.19%)</title><rect x="13.9920%" y="773" width="0.1929%" height="15" fill="rgb(241,137,19)" fg:x="17703" fg:w="244"/><text x="14.2420%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (60 samples, 0.05%)</title><rect x="14.1904%" y="725" width="0.0474%" height="15" fill="rgb(244,24,17)" fg:x="17954" fg:w="60"/><text x="14.4404%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (65 samples, 0.05%)</title><rect x="14.1896%" y="741" width="0.0514%" height="15" fill="rgb(245,178,49)" fg:x="17953" fg:w="65"/><text x="14.4396%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (67 samples, 0.05%)</title><rect x="14.1896%" y="757" width="0.0530%" height="15" fill="rgb(219,160,38)" fg:x="17953" fg:w="67"/><text x="14.4396%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::inv (71 samples, 0.06%)</title><rect x="14.1880%" y="773" width="0.0561%" height="15" fill="rgb(228,137,14)" fg:x="17951" fg:w="71"/><text x="14.4380%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_ops::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;Staged&gt;&gt;::create (18,008 samples, 14.23%)</title><rect x="0.0126%" y="853" width="14.2331%" height="15" fill="rgb(237,134,11)" fg:x="16" fg:w="18008"/><text x="0.2626%" y="863.50">get_usage_tests-cf82cb..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::account::Account::public_key (336 samples, 0.27%)</title><rect x="13.9802%" y="837" width="0.2656%" height="15" fill="rgb(211,126,44)" fg:x="17688" fg:w="336"/><text x="14.2302%" y="847.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key (336 samples, 0.27%)</title><rect x="13.9802%" y="821" width="0.2656%" height="15" fill="rgb(226,171,33)" fg:x="17688" fg:w="336"/><text x="14.2302%" y="831.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key_with_context (336 samples, 0.27%)</title><rect x="13.9802%" y="805" width="0.2656%" height="15" fill="rgb(253,99,13)" fg:x="17688" fg:w="336"/><text x="14.2302%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Affine::set_gej (77 samples, 0.06%)</title><rect x="14.1849%" y="789" width="0.0609%" height="15" fill="rgb(244,48,7)" fg:x="17947" fg:w="77"/><text x="14.4349%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (19 samples, 0.02%)</title><rect x="14.2671%" y="661" width="0.0150%" height="15" fill="rgb(244,217,54)" fg:x="18051" fg:w="19"/><text x="14.5171%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.01%)</title><rect x="14.2710%" y="645" width="0.0111%" height="15" fill="rgb(224,15,18)" fg:x="18056" fg:w="14"/><text x="14.5210%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (13 samples, 0.01%)</title><rect x="14.2829%" y="597" width="0.0103%" height="15" fill="rgb(244,99,12)" fg:x="18071" fg:w="13"/><text x="14.5329%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (13 samples, 0.01%)</title><rect x="14.2829%" y="581" width="0.0103%" height="15" fill="rgb(233,226,8)" fg:x="18071" fg:w="13"/><text x="14.5329%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.01%)</title><rect x="14.2979%" y="565" width="0.0134%" height="15" fill="rgb(229,211,3)" fg:x="18090" fg:w="17"/><text x="14.5479%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (38 samples, 0.03%)</title><rect x="14.2829%" y="661" width="0.0300%" height="15" fill="rgb(216,140,21)" fg:x="18071" fg:w="38"/><text x="14.5329%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (38 samples, 0.03%)</title><rect x="14.2829%" y="645" width="0.0300%" height="15" fill="rgb(234,122,30)" fg:x="18071" fg:w="38"/><text x="14.5329%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (38 samples, 0.03%)</title><rect x="14.2829%" y="629" width="0.0300%" height="15" fill="rgb(236,25,46)" fg:x="18071" fg:w="38"/><text x="14.5329%" y="639.50"></text></g><g><title> N]&gt;::hash (38 samples, 0.03%)</title><rect x="14.2829%" y="613" width="0.0300%" height="15" fill="rgb(217,52,54)" fg:x="18071" fg:w="38"/><text x="14.5329%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (25 samples, 0.02%)</title><rect x="14.2932%" y="597" width="0.0198%" height="15" fill="rgb(222,29,26)" fg:x="18084" fg:w="25"/><text x="14.5432%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="14.2940%" y="581" width="0.0190%" height="15" fill="rgb(216,177,29)" fg:x="18085" fg:w="24"/><text x="14.5440%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (72 samples, 0.06%)</title><rect x="14.2671%" y="677" width="0.0569%" height="15" fill="rgb(247,136,51)" fg:x="18051" fg:w="72"/><text x="14.5171%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.01%)</title><rect x="14.3129%" y="661" width="0.0111%" height="15" fill="rgb(231,47,47)" fg:x="18109" fg:w="14"/><text x="14.5629%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (116 samples, 0.09%)</title><rect x="14.2631%" y="741" width="0.0917%" height="15" fill="rgb(211,192,36)" fg:x="18046" fg:w="116"/><text x="14.5131%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (114 samples, 0.09%)</title><rect x="14.2647%" y="725" width="0.0901%" height="15" fill="rgb(229,156,32)" fg:x="18048" fg:w="114"/><text x="14.5147%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (113 samples, 0.09%)</title><rect x="14.2655%" y="709" width="0.0893%" height="15" fill="rgb(248,213,20)" fg:x="18049" fg:w="113"/><text x="14.5155%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (113 samples, 0.09%)</title><rect x="14.2655%" y="693" width="0.0893%" height="15" fill="rgb(217,64,7)" fg:x="18049" fg:w="113"/><text x="14.5155%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (39 samples, 0.03%)</title><rect x="14.3240%" y="677" width="0.0308%" height="15" fill="rgb(232,142,8)" fg:x="18123" fg:w="39"/><text x="14.5740%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (29 samples, 0.02%)</title><rect x="14.3319%" y="661" width="0.0229%" height="15" fill="rgb(224,92,44)" fg:x="18133" fg:w="29"/><text x="14.5819%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (123 samples, 0.10%)</title><rect x="14.2631%" y="805" width="0.0972%" height="15" fill="rgb(214,169,17)" fg:x="18046" fg:w="123"/><text x="14.5131%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (123 samples, 0.10%)</title><rect x="14.2631%" y="789" width="0.0972%" height="15" fill="rgb(210,59,37)" fg:x="18046" fg:w="123"/><text x="14.5131%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (123 samples, 0.10%)</title><rect x="14.2631%" y="773" width="0.0972%" height="15" fill="rgb(214,116,48)" fg:x="18046" fg:w="123"/><text x="14.5131%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (123 samples, 0.10%)</title><rect x="14.2631%" y="757" width="0.0972%" height="15" fill="rgb(244,191,6)" fg:x="18046" fg:w="123"/><text x="14.5131%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (27 samples, 0.02%)</title><rect x="14.3738%" y="453" width="0.0213%" height="15" fill="rgb(241,50,52)" fg:x="18186" fg:w="27"/><text x="14.6238%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (25 samples, 0.02%)</title><rect x="14.3754%" y="437" width="0.0198%" height="15" fill="rgb(236,75,39)" fg:x="18188" fg:w="25"/><text x="14.6254%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (14 samples, 0.01%)</title><rect x="14.3983%" y="373" width="0.0111%" height="15" fill="rgb(236,99,0)" fg:x="18217" fg:w="14"/><text x="14.6483%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (14 samples, 0.01%)</title><rect x="14.3983%" y="357" width="0.0111%" height="15" fill="rgb(207,202,15)" fg:x="18217" fg:w="14"/><text x="14.6483%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="14.3983%" y="341" width="0.0111%" height="15" fill="rgb(233,207,14)" fg:x="18217" fg:w="14"/><text x="14.6483%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (32 samples, 0.03%)</title><rect x="14.3983%" y="405" width="0.0253%" height="15" fill="rgb(226,27,51)" fg:x="18217" fg:w="32"/><text x="14.6483%" y="415.50"></text></g><g><title> N]&gt;::hash (32 samples, 0.03%)</title><rect x="14.3983%" y="389" width="0.0253%" height="15" fill="rgb(206,104,42)" fg:x="18217" fg:w="32"/><text x="14.6483%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (18 samples, 0.01%)</title><rect x="14.4094%" y="373" width="0.0142%" height="15" fill="rgb(212,225,4)" fg:x="18231" fg:w="18"/><text x="14.6594%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="14.4101%" y="357" width="0.0134%" height="15" fill="rgb(233,96,42)" fg:x="18232" fg:w="17"/><text x="14.6601%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (33 samples, 0.03%)</title><rect x="14.3983%" y="453" width="0.0261%" height="15" fill="rgb(229,21,32)" fg:x="18217" fg:w="33"/><text x="14.6483%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (33 samples, 0.03%)</title><rect x="14.3983%" y="437" width="0.0261%" height="15" fill="rgb(226,216,24)" fg:x="18217" fg:w="33"/><text x="14.6483%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (33 samples, 0.03%)</title><rect x="14.3983%" y="421" width="0.0261%" height="15" fill="rgb(221,163,17)" fg:x="18217" fg:w="33"/><text x="14.6483%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (77 samples, 0.06%)</title><rect x="14.3738%" y="469" width="0.0609%" height="15" fill="rgb(216,216,42)" fg:x="18186" fg:w="77"/><text x="14.6238%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.01%)</title><rect x="14.4244%" y="453" width="0.0103%" height="15" fill="rgb(240,118,7)" fg:x="18250" fg:w="13"/><text x="14.6744%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (49 samples, 0.04%)</title><rect x="14.4346%" y="469" width="0.0387%" height="15" fill="rgb(221,67,37)" fg:x="18263" fg:w="49"/><text x="14.6846%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (42 samples, 0.03%)</title><rect x="14.4402%" y="453" width="0.0332%" height="15" fill="rgb(241,32,44)" fg:x="18270" fg:w="42"/><text x="14.6902%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (136 samples, 0.11%)</title><rect x="14.3690%" y="501" width="0.1075%" height="15" fill="rgb(235,204,43)" fg:x="18180" fg:w="136"/><text x="14.6190%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (133 samples, 0.11%)</title><rect x="14.3714%" y="485" width="0.1051%" height="15" fill="rgb(213,116,10)" fg:x="18183" fg:w="133"/><text x="14.6214%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (147 samples, 0.12%)</title><rect x="14.3619%" y="565" width="0.1162%" height="15" fill="rgb(239,15,48)" fg:x="18171" fg:w="147"/><text x="14.6119%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (142 samples, 0.11%)</title><rect x="14.3659%" y="549" width="0.1122%" height="15" fill="rgb(207,123,36)" fg:x="18176" fg:w="142"/><text x="14.6159%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (140 samples, 0.11%)</title><rect x="14.3675%" y="533" width="0.1107%" height="15" fill="rgb(209,103,30)" fg:x="18178" fg:w="140"/><text x="14.6175%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (138 samples, 0.11%)</title><rect x="14.3690%" y="517" width="0.1091%" height="15" fill="rgb(238,100,19)" fg:x="18180" fg:w="138"/><text x="14.6190%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (159 samples, 0.13%)</title><rect x="14.3611%" y="741" width="0.1257%" height="15" fill="rgb(244,30,14)" fg:x="18170" fg:w="159"/><text x="14.6111%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (159 samples, 0.13%)</title><rect x="14.3611%" y="725" width="0.1257%" height="15" fill="rgb(249,174,6)" fg:x="18170" fg:w="159"/><text x="14.6111%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (159 samples, 0.13%)</title><rect x="14.3611%" y="709" width="0.1257%" height="15" fill="rgb(235,213,41)" fg:x="18170" fg:w="159"/><text x="14.6111%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (159 samples, 0.13%)</title><rect x="14.3611%" y="693" width="0.1257%" height="15" fill="rgb(213,118,6)" fg:x="18170" fg:w="159"/><text x="14.6111%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (159 samples, 0.13%)</title><rect x="14.3611%" y="677" width="0.1257%" height="15" fill="rgb(235,44,51)" fg:x="18170" fg:w="159"/><text x="14.6111%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (159 samples, 0.13%)</title><rect x="14.3611%" y="661" width="0.1257%" height="15" fill="rgb(217,9,53)" fg:x="18170" fg:w="159"/><text x="14.6111%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (159 samples, 0.13%)</title><rect x="14.3611%" y="645" width="0.1257%" height="15" fill="rgb(237,172,34)" fg:x="18170" fg:w="159"/><text x="14.6111%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (159 samples, 0.13%)</title><rect x="14.3611%" y="629" width="0.1257%" height="15" fill="rgb(206,206,11)" fg:x="18170" fg:w="159"/><text x="14.6111%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (159 samples, 0.13%)</title><rect x="14.3611%" y="613" width="0.1257%" height="15" fill="rgb(214,149,29)" fg:x="18170" fg:w="159"/><text x="14.6111%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (159 samples, 0.13%)</title><rect x="14.3611%" y="597" width="0.1257%" height="15" fill="rgb(208,123,3)" fg:x="18170" fg:w="159"/><text x="14.6111%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (159 samples, 0.13%)</title><rect x="14.3611%" y="581" width="0.1257%" height="15" fill="rgb(229,126,4)" fg:x="18170" fg:w="159"/><text x="14.6111%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.01%)</title><rect x="14.4876%" y="565" width="0.0134%" height="15" fill="rgb(222,92,36)" fg:x="18330" fg:w="17"/><text x="14.7376%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.01%)</title><rect x="14.4876%" y="549" width="0.0134%" height="15" fill="rgb(216,39,41)" fg:x="18330" fg:w="17"/><text x="14.7376%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (14 samples, 0.01%)</title><rect x="14.4900%" y="533" width="0.0111%" height="15" fill="rgb(253,127,28)" fg:x="18333" fg:w="14"/><text x="14.7400%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.01%)</title><rect x="14.5066%" y="453" width="0.0126%" height="15" fill="rgb(249,152,51)" fg:x="18354" fg:w="16"/><text x="14.7566%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.02%)</title><rect x="14.5263%" y="453" width="0.0245%" height="15" fill="rgb(209,123,42)" fg:x="18379" fg:w="31"/><text x="14.7763%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.02%)</title><rect x="14.5263%" y="437" width="0.0245%" height="15" fill="rgb(241,118,22)" fg:x="18379" fg:w="31"/><text x="14.7763%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (31 samples, 0.02%)</title><rect x="14.5263%" y="421" width="0.0245%" height="15" fill="rgb(208,25,7)" fg:x="18379" fg:w="31"/><text x="14.7763%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (31 samples, 0.02%)</title><rect x="14.5263%" y="405" width="0.0245%" height="15" fill="rgb(243,144,39)" fg:x="18379" fg:w="31"/><text x="14.7763%" y="415.50"></text></g><g><title> N]&gt;::hash (31 samples, 0.02%)</title><rect x="14.5263%" y="389" width="0.0245%" height="15" fill="rgb(250,50,5)" fg:x="18379" fg:w="31"/><text x="14.7763%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (18 samples, 0.01%)</title><rect x="14.5366%" y="373" width="0.0142%" height="15" fill="rgb(207,67,11)" fg:x="18392" fg:w="18"/><text x="14.7866%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="14.5374%" y="357" width="0.0134%" height="15" fill="rgb(245,204,40)" fg:x="18393" fg:w="17"/><text x="14.7874%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (65 samples, 0.05%)</title><rect x="14.5066%" y="469" width="0.0514%" height="15" fill="rgb(238,228,24)" fg:x="18354" fg:w="65"/><text x="14.7566%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (28 samples, 0.02%)</title><rect x="14.5698%" y="373" width="0.0221%" height="15" fill="rgb(217,116,22)" fg:x="18434" fg:w="28"/><text x="14.8198%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21 samples, 0.02%)</title><rect x="14.5753%" y="357" width="0.0166%" height="15" fill="rgb(234,98,12)" fg:x="18441" fg:w="21"/><text x="14.8253%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.01%)</title><rect x="14.6038%" y="245" width="0.0103%" height="15" fill="rgb(242,170,50)" fg:x="18477" fg:w="13"/><text x="14.8538%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (22 samples, 0.02%)</title><rect x="14.5990%" y="293" width="0.0174%" height="15" fill="rgb(235,7,5)" fg:x="18471" fg:w="22"/><text x="14.8490%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (22 samples, 0.02%)</title><rect x="14.5990%" y="277" width="0.0174%" height="15" fill="rgb(241,114,28)" fg:x="18471" fg:w="22"/><text x="14.8490%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (22 samples, 0.02%)</title><rect x="14.5990%" y="261" width="0.0174%" height="15" fill="rgb(246,112,42)" fg:x="18471" fg:w="22"/><text x="14.8490%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (20 samples, 0.02%)</title><rect x="14.6196%" y="261" width="0.0158%" height="15" fill="rgb(248,228,14)" fg:x="18497" fg:w="20"/><text x="14.8696%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (49 samples, 0.04%)</title><rect x="14.5990%" y="325" width="0.0387%" height="15" fill="rgb(208,133,18)" fg:x="18471" fg:w="49"/><text x="14.8490%" y="335.50"></text></g><g><title> N]&gt;::hash (49 samples, 0.04%)</title><rect x="14.5990%" y="309" width="0.0387%" height="15" fill="rgb(207,35,49)" fg:x="18471" fg:w="49"/><text x="14.8490%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (27 samples, 0.02%)</title><rect x="14.6164%" y="293" width="0.0213%" height="15" fill="rgb(205,68,36)" fg:x="18493" fg:w="27"/><text x="14.8664%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.02%)</title><rect x="14.6164%" y="277" width="0.0213%" height="15" fill="rgb(245,62,40)" fg:x="18493" fg:w="27"/><text x="14.8664%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (51 samples, 0.04%)</title><rect x="14.5983%" y="373" width="0.0403%" height="15" fill="rgb(228,27,24)" fg:x="18470" fg:w="51"/><text x="14.8483%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (51 samples, 0.04%)</title><rect x="14.5983%" y="357" width="0.0403%" height="15" fill="rgb(253,19,12)" fg:x="18470" fg:w="51"/><text x="14.8483%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (50 samples, 0.04%)</title><rect x="14.5990%" y="341" width="0.0395%" height="15" fill="rgb(232,28,20)" fg:x="18471" fg:w="50"/><text x="14.8490%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (99 samples, 0.08%)</title><rect x="14.5698%" y="421" width="0.0782%" height="15" fill="rgb(218,35,51)" fg:x="18434" fg:w="99"/><text x="14.8198%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (99 samples, 0.08%)</title><rect x="14.5698%" y="405" width="0.0782%" height="15" fill="rgb(212,90,40)" fg:x="18434" fg:w="99"/><text x="14.8198%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (99 samples, 0.08%)</title><rect x="14.5698%" y="389" width="0.0782%" height="15" fill="rgb(220,172,12)" fg:x="18434" fg:w="99"/><text x="14.8198%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (25 samples, 0.02%)</title><rect x="14.6480%" y="421" width="0.0198%" height="15" fill="rgb(226,159,20)" fg:x="18533" fg:w="25"/><text x="14.8980%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (22 samples, 0.02%)</title><rect x="14.6504%" y="405" width="0.0174%" height="15" fill="rgb(234,205,16)" fg:x="18536" fg:w="22"/><text x="14.9004%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (150 samples, 0.12%)</title><rect x="14.5579%" y="453" width="0.1186%" height="15" fill="rgb(207,9,39)" fg:x="18419" fg:w="150"/><text x="14.8079%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (148 samples, 0.12%)</title><rect x="14.5595%" y="437" width="0.1170%" height="15" fill="rgb(249,143,15)" fg:x="18421" fg:w="148"/><text x="14.8095%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (13 samples, 0.01%)</title><rect x="14.6899%" y="437" width="0.0103%" height="15" fill="rgb(253,133,29)" fg:x="18586" fg:w="13"/><text x="14.9399%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (193 samples, 0.15%)</title><rect x="14.5579%" y="469" width="0.1525%" height="15" fill="rgb(221,187,0)" fg:x="18419" fg:w="193"/><text x="14.8079%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (43 samples, 0.03%)</title><rect x="14.6765%" y="453" width="0.0340%" height="15" fill="rgb(205,204,26)" fg:x="18569" fg:w="43"/><text x="14.9265%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (268 samples, 0.21%)</title><rect x="14.5010%" y="565" width="0.2118%" height="15" fill="rgb(224,68,54)" fg:x="18347" fg:w="268"/><text x="14.7510%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (267 samples, 0.21%)</title><rect x="14.5018%" y="549" width="0.2110%" height="15" fill="rgb(209,67,4)" fg:x="18348" fg:w="267"/><text x="14.7518%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (263 samples, 0.21%)</title><rect x="14.5050%" y="533" width="0.2079%" height="15" fill="rgb(228,229,18)" fg:x="18352" fg:w="263"/><text x="14.7550%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (263 samples, 0.21%)</title><rect x="14.5050%" y="517" width="0.2079%" height="15" fill="rgb(231,89,13)" fg:x="18352" fg:w="263"/><text x="14.7550%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (262 samples, 0.21%)</title><rect x="14.5058%" y="501" width="0.2071%" height="15" fill="rgb(210,182,18)" fg:x="18353" fg:w="262"/><text x="14.7558%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (261 samples, 0.21%)</title><rect x="14.5066%" y="485" width="0.2063%" height="15" fill="rgb(240,105,2)" fg:x="18354" fg:w="261"/><text x="14.7566%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (286 samples, 0.23%)</title><rect x="14.4876%" y="597" width="0.2260%" height="15" fill="rgb(207,170,50)" fg:x="18330" fg:w="286"/><text x="14.7376%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (286 samples, 0.23%)</title><rect x="14.4876%" y="581" width="0.2260%" height="15" fill="rgb(232,133,24)" fg:x="18330" fg:w="286"/><text x="14.7376%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (448 samples, 0.35%)</title><rect x="14.3603%" y="789" width="0.3541%" height="15" fill="rgb(235,166,27)" fg:x="18169" fg:w="448"/><text x="14.6103%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (448 samples, 0.35%)</title><rect x="14.3603%" y="773" width="0.3541%" height="15" fill="rgb(209,19,13)" fg:x="18169" fg:w="448"/><text x="14.6103%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (448 samples, 0.35%)</title><rect x="14.3603%" y="757" width="0.3541%" height="15" fill="rgb(226,79,39)" fg:x="18169" fg:w="448"/><text x="14.6103%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (288 samples, 0.23%)</title><rect x="14.4868%" y="741" width="0.2276%" height="15" fill="rgb(222,163,10)" fg:x="18329" fg:w="288"/><text x="14.7368%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (288 samples, 0.23%)</title><rect x="14.4868%" y="725" width="0.2276%" height="15" fill="rgb(214,44,19)" fg:x="18329" fg:w="288"/><text x="14.7368%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (288 samples, 0.23%)</title><rect x="14.4868%" y="709" width="0.2276%" height="15" fill="rgb(210,217,13)" fg:x="18329" fg:w="288"/><text x="14.7368%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (288 samples, 0.23%)</title><rect x="14.4868%" y="693" width="0.2276%" height="15" fill="rgb(237,61,54)" fg:x="18329" fg:w="288"/><text x="14.7368%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (287 samples, 0.23%)</title><rect x="14.4876%" y="677" width="0.2268%" height="15" fill="rgb(226,184,24)" fg:x="18330" fg:w="287"/><text x="14.7376%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (287 samples, 0.23%)</title><rect x="14.4876%" y="661" width="0.2268%" height="15" fill="rgb(223,226,4)" fg:x="18330" fg:w="287"/><text x="14.7376%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (287 samples, 0.23%)</title><rect x="14.4876%" y="645" width="0.2268%" height="15" fill="rgb(210,26,41)" fg:x="18330" fg:w="287"/><text x="14.7376%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (287 samples, 0.23%)</title><rect x="14.4876%" y="629" width="0.2268%" height="15" fill="rgb(220,221,6)" fg:x="18330" fg:w="287"/><text x="14.7376%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (287 samples, 0.23%)</title><rect x="14.4876%" y="613" width="0.2268%" height="15" fill="rgb(225,89,49)" fg:x="18330" fg:w="287"/><text x="14.7376%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (32 samples, 0.03%)</title><rect x="14.7247%" y="485" width="0.0253%" height="15" fill="rgb(218,70,45)" fg:x="18630" fg:w="32"/><text x="14.9747%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (28 samples, 0.02%)</title><rect x="14.7279%" y="469" width="0.0221%" height="15" fill="rgb(238,166,21)" fg:x="18634" fg:w="28"/><text x="14.9779%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (29 samples, 0.02%)</title><rect x="14.7500%" y="485" width="0.0229%" height="15" fill="rgb(224,141,44)" fg:x="18662" fg:w="29"/><text x="15.0000%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (29 samples, 0.02%)</title><rect x="14.7500%" y="469" width="0.0229%" height="15" fill="rgb(230,12,49)" fg:x="18662" fg:w="29"/><text x="15.0000%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (28 samples, 0.02%)</title><rect x="14.7508%" y="453" width="0.0221%" height="15" fill="rgb(212,174,12)" fg:x="18663" fg:w="28"/><text x="15.0008%" y="463.50"></text></g><g><title> N]&gt;::hash (28 samples, 0.02%)</title><rect x="14.7508%" y="437" width="0.0221%" height="15" fill="rgb(246,67,9)" fg:x="18663" fg:w="28"/><text x="15.0008%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (15 samples, 0.01%)</title><rect x="14.7611%" y="421" width="0.0119%" height="15" fill="rgb(239,35,23)" fg:x="18676" fg:w="15"/><text x="15.0111%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="14.7611%" y="405" width="0.0119%" height="15" fill="rgb(211,167,0)" fg:x="18676" fg:w="15"/><text x="15.0111%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (72 samples, 0.06%)</title><rect x="14.7247%" y="501" width="0.0569%" height="15" fill="rgb(225,119,45)" fg:x="18630" fg:w="72"/><text x="14.9747%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (38 samples, 0.03%)</title><rect x="14.7840%" y="501" width="0.0300%" height="15" fill="rgb(210,162,6)" fg:x="18705" fg:w="38"/><text x="15.0340%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (35 samples, 0.03%)</title><rect x="14.7864%" y="485" width="0.0277%" height="15" fill="rgb(208,118,35)" fg:x="18708" fg:w="35"/><text x="15.0364%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (120 samples, 0.09%)</title><rect x="14.7216%" y="533" width="0.0948%" height="15" fill="rgb(239,4,53)" fg:x="18626" fg:w="120"/><text x="14.9716%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (120 samples, 0.09%)</title><rect x="14.7216%" y="517" width="0.0948%" height="15" fill="rgb(213,130,21)" fg:x="18626" fg:w="120"/><text x="14.9716%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (130 samples, 0.10%)</title><rect x="14.7144%" y="613" width="0.1027%" height="15" fill="rgb(235,148,0)" fg:x="18617" fg:w="130"/><text x="14.9644%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (129 samples, 0.10%)</title><rect x="14.7152%" y="597" width="0.1020%" height="15" fill="rgb(244,224,18)" fg:x="18618" fg:w="129"/><text x="14.9652%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (128 samples, 0.10%)</title><rect x="14.7160%" y="581" width="0.1012%" height="15" fill="rgb(211,214,4)" fg:x="18619" fg:w="128"/><text x="14.9660%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (126 samples, 0.10%)</title><rect x="14.7176%" y="565" width="0.0996%" height="15" fill="rgb(206,119,25)" fg:x="18621" fg:w="126"/><text x="14.9676%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (122 samples, 0.10%)</title><rect x="14.7208%" y="549" width="0.0964%" height="15" fill="rgb(243,93,47)" fg:x="18625" fg:w="122"/><text x="14.9708%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::linked_by (728 samples, 0.58%)</title><rect x="14.2457%" y="821" width="0.5754%" height="15" fill="rgb(224,194,6)" fg:x="18024" fg:w="728"/><text x="14.4957%" y="831.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids (583 samples, 0.46%)</title><rect x="14.3603%" y="805" width="0.4608%" height="15" fill="rgb(243,229,6)" fg:x="18169" fg:w="583"/><text x="14.6103%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (135 samples, 0.11%)</title><rect x="14.7144%" y="789" width="0.1067%" height="15" fill="rgb(207,23,50)" fg:x="18617" fg:w="135"/><text x="14.9644%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (135 samples, 0.11%)</title><rect x="14.7144%" y="773" width="0.1067%" height="15" fill="rgb(253,192,32)" fg:x="18617" fg:w="135"/><text x="14.9644%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (135 samples, 0.11%)</title><rect x="14.7144%" y="757" width="0.1067%" height="15" fill="rgb(213,21,6)" fg:x="18617" fg:w="135"/><text x="14.9644%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (135 samples, 0.11%)</title><rect x="14.7144%" y="741" width="0.1067%" height="15" fill="rgb(243,151,13)" fg:x="18617" fg:w="135"/><text x="14.9644%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (135 samples, 0.11%)</title><rect x="14.7144%" y="725" width="0.1067%" height="15" fill="rgb(233,165,41)" fg:x="18617" fg:w="135"/><text x="14.9644%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (135 samples, 0.11%)</title><rect x="14.7144%" y="709" width="0.1067%" height="15" fill="rgb(246,176,45)" fg:x="18617" fg:w="135"/><text x="14.9644%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (135 samples, 0.11%)</title><rect x="14.7144%" y="693" width="0.1067%" height="15" fill="rgb(217,170,52)" fg:x="18617" fg:w="135"/><text x="14.9644%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (135 samples, 0.11%)</title><rect x="14.7144%" y="677" width="0.1067%" height="15" fill="rgb(214,203,54)" fg:x="18617" fg:w="135"/><text x="14.9644%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (135 samples, 0.11%)</title><rect x="14.7144%" y="661" width="0.1067%" height="15" fill="rgb(248,215,49)" fg:x="18617" fg:w="135"/><text x="14.9644%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (135 samples, 0.11%)</title><rect x="14.7144%" y="645" width="0.1067%" height="15" fill="rgb(208,46,10)" fg:x="18617" fg:w="135"/><text x="14.9644%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (135 samples, 0.11%)</title><rect x="14.7144%" y="629" width="0.1067%" height="15" fill="rgb(254,5,31)" fg:x="18617" fg:w="135"/><text x="14.9644%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Alg as aead::Aead&gt;::decrypt (20 samples, 0.02%)</title><rect x="14.8211%" y="773" width="0.0158%" height="15" fill="rgb(222,104,33)" fg:x="18752" fg:w="20"/><text x="15.0711%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aead::AeadInPlace::decrypt_in_place (19 samples, 0.02%)</title><rect x="14.8219%" y="757" width="0.0150%" height="15" fill="rgb(248,49,16)" fg:x="18753" fg:w="19"/><text x="15.0719%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (19 samples, 0.02%)</title><rect x="14.8219%" y="741" width="0.0150%" height="15" fill="rgb(232,198,41)" fg:x="18753" fg:w="19"/><text x="15.0719%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::symkey::decrypt (28 samples, 0.02%)</title><rect x="14.8211%" y="789" width="0.0221%" height="15" fill="rgb(214,125,3)" fg:x="18752" fg:w="28"/><text x="15.0711%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (86 samples, 0.07%)</title><rect x="14.8694%" y="661" width="0.0680%" height="15" fill="rgb(229,220,28)" fg:x="18813" fg:w="86"/><text x="15.1194%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (98 samples, 0.08%)</title><rect x="14.8686%" y="677" width="0.0775%" height="15" fill="rgb(222,64,37)" fg:x="18812" fg:w="98"/><text x="15.1186%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::Mul&gt;::mul (101 samples, 0.08%)</title><rect x="14.8686%" y="693" width="0.0798%" height="15" fill="rgb(249,184,13)" fg:x="18812" fg:w="101"/><text x="15.1186%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (33 samples, 0.03%)</title><rect x="14.9492%" y="645" width="0.0261%" height="15" fill="rgb(252,176,6)" fg:x="18914" fg:w="33"/><text x="15.1992%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (36 samples, 0.03%)</title><rect x="14.9484%" y="661" width="0.0285%" height="15" fill="rgb(228,153,7)" fg:x="18913" fg:w="36"/><text x="15.1984%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&gt;::mul_assign (37 samples, 0.03%)</title><rect x="14.9484%" y="693" width="0.0292%" height="15" fill="rgb(242,193,5)" fg:x="18913" fg:w="37"/><text x="15.1984%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::mul_assign (37 samples, 0.03%)</title><rect x="14.9484%" y="677" width="0.0292%" height="15" fill="rgb(232,140,9)" fg:x="18913" fg:w="37"/><text x="15.1984%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_int (13 samples, 0.01%)</title><rect x="14.9776%" y="693" width="0.0103%" height="15" fill="rgb(213,222,16)" fg:x="18950" fg:w="13"/><text x="15.2276%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::neg (13 samples, 0.01%)</title><rect x="14.9879%" y="693" width="0.0103%" height="15" fill="rgb(222,75,50)" fg:x="18963" fg:w="13"/><text x="15.2379%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::neg_in_place (13 samples, 0.01%)</title><rect x="14.9879%" y="677" width="0.0103%" height="15" fill="rgb(205,180,2)" fg:x="18963" fg:w="13"/><text x="15.2379%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (58 samples, 0.05%)</title><rect x="15.0108%" y="661" width="0.0458%" height="15" fill="rgb(216,34,7)" fg:x="18992" fg:w="58"/><text x="15.2608%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (69 samples, 0.05%)</title><rect x="15.0092%" y="677" width="0.0545%" height="15" fill="rgb(253,16,32)" fg:x="18990" fg:w="69"/><text x="15.2592%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (72 samples, 0.06%)</title><rect x="15.0092%" y="693" width="0.0569%" height="15" fill="rgb(208,97,28)" fg:x="18990" fg:w="72"/><text x="15.2592%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge_in_place (255 samples, 0.20%)</title><rect x="14.8654%" y="709" width="0.2015%" height="15" fill="rgb(225,92,11)" fg:x="18808" fg:w="255"/><text x="15.1154%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge (271 samples, 0.21%)</title><rect x="14.8591%" y="725" width="0.2142%" height="15" fill="rgb(243,38,12)" fg:x="18800" fg:w="271"/><text x="15.1091%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (292 samples, 0.23%)</title><rect x="14.8433%" y="741" width="0.2308%" height="15" fill="rgb(208,139,16)" fg:x="18780" fg:w="292"/><text x="15.0933%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (48 samples, 0.04%)</title><rect x="15.0812%" y="677" width="0.0379%" height="15" fill="rgb(227,24,9)" fg:x="19081" fg:w="48"/><text x="15.3312%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (56 samples, 0.04%)</title><rect x="15.0804%" y="709" width="0.0443%" height="15" fill="rgb(206,62,11)" fg:x="19080" fg:w="56"/><text x="15.3304%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (55 samples, 0.04%)</title><rect x="15.0812%" y="693" width="0.0435%" height="15" fill="rgb(228,134,27)" fg:x="19081" fg:w="55"/><text x="15.3312%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::inv (64 samples, 0.05%)</title><rect x="15.0748%" y="725" width="0.0506%" height="15" fill="rgb(205,55,33)" fg:x="19073" fg:w="64"/><text x="15.3248%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::account::Account::public_key (359 samples, 0.28%)</title><rect x="14.8433%" y="789" width="0.2837%" height="15" fill="rgb(243,75,43)" fg:x="18780" fg:w="359"/><text x="15.0933%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key (359 samples, 0.28%)</title><rect x="14.8433%" y="773" width="0.2837%" height="15" fill="rgb(223,27,42)" fg:x="18780" fg:w="359"/><text x="15.0933%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key_with_context (359 samples, 0.28%)</title><rect x="14.8433%" y="757" width="0.2837%" height="15" fill="rgb(232,189,33)" fg:x="18780" fg:w="359"/><text x="15.0933%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Affine::set_gej (66 samples, 0.05%)</title><rect x="15.0748%" y="741" width="0.0522%" height="15" fill="rgb(210,9,39)" fg:x="19073" fg:w="66"/><text x="15.3248%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::decrypt_key (389 samples, 0.31%)</title><rect x="14.8211%" y="805" width="0.3075%" height="15" fill="rgb(242,85,26)" fg:x="18752" fg:w="389"/><text x="15.0711%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Alg as aead::Aead&gt;::decrypt (17 samples, 0.01%)</title><rect x="15.1286%" y="789" width="0.0134%" height="15" fill="rgb(248,44,4)" fg:x="19141" fg:w="17"/><text x="15.3786%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aead::AeadInPlace::decrypt_in_place (17 samples, 0.01%)</title><rect x="15.1286%" y="773" width="0.0134%" height="15" fill="rgb(250,96,46)" fg:x="19141" fg:w="17"/><text x="15.3786%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (17 samples, 0.01%)</title><rect x="15.1286%" y="757" width="0.0134%" height="15" fill="rgb(229,116,26)" fg:x="19141" fg:w="17"/><text x="15.3786%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::secret_filename::SecretFileName::to_string (28 samples, 0.02%)</title><rect x="15.1286%" y="805" width="0.0221%" height="15" fill="rgb(246,94,34)" fg:x="19141" fg:w="28"/><text x="15.3786%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::name_using_links (1,147 samples, 0.91%)</title><rect x="14.2457%" y="837" width="0.9066%" height="15" fill="rgb(251,73,21)" fg:x="18024" fg:w="1147"/><text x="14.4957%" y="847.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::name (419 samples, 0.33%)</title><rect x="14.8211%" y="821" width="0.3312%" height="15" fill="rgb(254,121,25)" fg:x="18752" fg:w="419"/><text x="15.0711%" y="831.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="15.1642%" y="805" width="0.0166%" height="15" fill="rgb(215,161,49)" fg:x="19186" fg:w="21"/><text x="15.4142%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="15.1642%" y="789" width="0.0166%" height="15" fill="rgb(221,43,13)" fg:x="19186" fg:w="21"/><text x="15.4142%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.01%)</title><rect x="15.1665%" y="773" width="0.0142%" height="15" fill="rgb(249,5,37)" fg:x="19189" fg:w="18"/><text x="15.4165%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="15.1689%" y="757" width="0.0119%" height="15" fill="rgb(226,25,44)" fg:x="19192" fg:w="15"/><text x="15.4189%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (33 samples, 0.03%)</title><rect x="15.1855%" y="661" width="0.0261%" height="15" fill="rgb(238,189,16)" fg:x="19213" fg:w="33"/><text x="15.4355%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (29 samples, 0.02%)</title><rect x="15.1887%" y="645" width="0.0229%" height="15" fill="rgb(251,186,8)" fg:x="19217" fg:w="29"/><text x="15.4387%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (30 samples, 0.02%)</title><rect x="15.2140%" y="661" width="0.0237%" height="15" fill="rgb(254,34,31)" fg:x="19249" fg:w="30"/><text x="15.4640%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (30 samples, 0.02%)</title><rect x="15.2140%" y="645" width="0.0237%" height="15" fill="rgb(225,215,27)" fg:x="19249" fg:w="30"/><text x="15.4640%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (30 samples, 0.02%)</title><rect x="15.2140%" y="629" width="0.0237%" height="15" fill="rgb(221,192,48)" fg:x="19249" fg:w="30"/><text x="15.4640%" y="639.50"></text></g><g><title> N]&gt;::hash (30 samples, 0.02%)</title><rect x="15.2140%" y="613" width="0.0237%" height="15" fill="rgb(219,137,20)" fg:x="19249" fg:w="30"/><text x="15.4640%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (17 samples, 0.01%)</title><rect x="15.2242%" y="597" width="0.0134%" height="15" fill="rgb(219,84,11)" fg:x="19262" fg:w="17"/><text x="15.4742%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="15.2242%" y="581" width="0.0134%" height="15" fill="rgb(224,10,23)" fg:x="19262" fg:w="17"/><text x="15.4742%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (78 samples, 0.06%)</title><rect x="15.1855%" y="677" width="0.0616%" height="15" fill="rgb(248,22,39)" fg:x="19213" fg:w="78"/><text x="15.4355%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (14 samples, 0.01%)</title><rect x="15.2637%" y="645" width="0.0111%" height="15" fill="rgb(212,154,20)" fg:x="19312" fg:w="14"/><text x="15.5137%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (121 samples, 0.10%)</title><rect x="15.1815%" y="741" width="0.0956%" height="15" fill="rgb(236,199,50)" fg:x="19208" fg:w="121"/><text x="15.4315%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::maybe_find (119 samples, 0.09%)</title><rect x="15.1831%" y="725" width="0.0941%" height="15" fill="rgb(211,9,17)" fg:x="19210" fg:w="119"/><text x="15.4331%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (119 samples, 0.09%)</title><rect x="15.1831%" y="709" width="0.0941%" height="15" fill="rgb(243,216,36)" fg:x="19210" fg:w="119"/><text x="15.4331%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (118 samples, 0.09%)</title><rect x="15.1839%" y="693" width="0.0933%" height="15" fill="rgb(250,2,10)" fg:x="19211" fg:w="118"/><text x="15.4339%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (37 samples, 0.03%)</title><rect x="15.2479%" y="677" width="0.0292%" height="15" fill="rgb(226,50,48)" fg:x="19292" fg:w="37"/><text x="15.4979%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (32 samples, 0.03%)</title><rect x="15.2519%" y="661" width="0.0253%" height="15" fill="rgb(243,81,16)" fg:x="19297" fg:w="32"/><text x="15.5019%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (127 samples, 0.10%)</title><rect x="15.1808%" y="789" width="0.1004%" height="15" fill="rgb(250,14,2)" fg:x="19207" fg:w="127"/><text x="15.4308%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (127 samples, 0.10%)</title><rect x="15.1808%" y="773" width="0.1004%" height="15" fill="rgb(233,135,29)" fg:x="19207" fg:w="127"/><text x="15.4308%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (126 samples, 0.10%)</title><rect x="15.1815%" y="757" width="0.0996%" height="15" fill="rgb(224,64,43)" fg:x="19208" fg:w="126"/><text x="15.4315%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (130 samples, 0.10%)</title><rect x="15.1808%" y="805" width="0.1027%" height="15" fill="rgb(238,84,13)" fg:x="19207" fg:w="130"/><text x="15.4308%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (24 samples, 0.02%)</title><rect x="15.2985%" y="453" width="0.0190%" height="15" fill="rgb(253,48,26)" fg:x="19356" fg:w="24"/><text x="15.5485%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.01%)</title><rect x="15.3056%" y="437" width="0.0119%" height="15" fill="rgb(205,223,31)" fg:x="19365" fg:w="15"/><text x="15.5556%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (27 samples, 0.02%)</title><rect x="15.3191%" y="453" width="0.0213%" height="15" fill="rgb(221,41,32)" fg:x="19382" fg:w="27"/><text x="15.5691%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (26 samples, 0.02%)</title><rect x="15.3199%" y="437" width="0.0205%" height="15" fill="rgb(213,158,31)" fg:x="19383" fg:w="26"/><text x="15.5699%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (26 samples, 0.02%)</title><rect x="15.3199%" y="421" width="0.0205%" height="15" fill="rgb(245,126,43)" fg:x="19383" fg:w="26"/><text x="15.5699%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (26 samples, 0.02%)</title><rect x="15.3199%" y="405" width="0.0205%" height="15" fill="rgb(227,7,22)" fg:x="19383" fg:w="26"/><text x="15.5699%" y="415.50"></text></g><g><title> N]&gt;::hash (26 samples, 0.02%)</title><rect x="15.3199%" y="389" width="0.0205%" height="15" fill="rgb(252,90,44)" fg:x="19383" fg:w="26"/><text x="15.5699%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (15 samples, 0.01%)</title><rect x="15.3286%" y="373" width="0.0119%" height="15" fill="rgb(253,91,0)" fg:x="19394" fg:w="15"/><text x="15.5786%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="15.3286%" y="357" width="0.0119%" height="15" fill="rgb(252,175,49)" fg:x="19394" fg:w="15"/><text x="15.5786%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (63 samples, 0.05%)</title><rect x="15.2985%" y="469" width="0.0498%" height="15" fill="rgb(246,150,1)" fg:x="19356" fg:w="63"/><text x="15.5485%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (30 samples, 0.02%)</title><rect x="15.3515%" y="469" width="0.0237%" height="15" fill="rgb(241,192,25)" fg:x="19423" fg:w="30"/><text x="15.6015%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (26 samples, 0.02%)</title><rect x="15.3546%" y="453" width="0.0205%" height="15" fill="rgb(239,187,11)" fg:x="19427" fg:w="26"/><text x="15.6046%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (114 samples, 0.09%)</title><rect x="15.2883%" y="565" width="0.0901%" height="15" fill="rgb(218,202,51)" fg:x="19343" fg:w="114"/><text x="15.5383%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (112 samples, 0.09%)</title><rect x="15.2898%" y="549" width="0.0885%" height="15" fill="rgb(225,176,8)" fg:x="19345" fg:w="112"/><text x="15.5398%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (112 samples, 0.09%)</title><rect x="15.2898%" y="533" width="0.0885%" height="15" fill="rgb(219,122,41)" fg:x="19345" fg:w="112"/><text x="15.5398%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (110 samples, 0.09%)</title><rect x="15.2914%" y="517" width="0.0869%" height="15" fill="rgb(248,140,20)" fg:x="19347" fg:w="110"/><text x="15.5414%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (110 samples, 0.09%)</title><rect x="15.2914%" y="501" width="0.0869%" height="15" fill="rgb(245,41,37)" fg:x="19347" fg:w="110"/><text x="15.5414%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (108 samples, 0.09%)</title><rect x="15.2930%" y="485" width="0.0854%" height="15" fill="rgb(235,82,39)" fg:x="19349" fg:w="108"/><text x="15.5430%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (125 samples, 0.10%)</title><rect x="15.2859%" y="741" width="0.0988%" height="15" fill="rgb(230,108,42)" fg:x="19340" fg:w="125"/><text x="15.5359%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (125 samples, 0.10%)</title><rect x="15.2859%" y="725" width="0.0988%" height="15" fill="rgb(215,150,50)" fg:x="19340" fg:w="125"/><text x="15.5359%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (125 samples, 0.10%)</title><rect x="15.2859%" y="709" width="0.0988%" height="15" fill="rgb(233,212,5)" fg:x="19340" fg:w="125"/><text x="15.5359%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (125 samples, 0.10%)</title><rect x="15.2859%" y="693" width="0.0988%" height="15" fill="rgb(245,80,22)" fg:x="19340" fg:w="125"/><text x="15.5359%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (125 samples, 0.10%)</title><rect x="15.2859%" y="677" width="0.0988%" height="15" fill="rgb(238,129,16)" fg:x="19340" fg:w="125"/><text x="15.5359%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (125 samples, 0.10%)</title><rect x="15.2859%" y="661" width="0.0988%" height="15" fill="rgb(240,19,0)" fg:x="19340" fg:w="125"/><text x="15.5359%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (125 samples, 0.10%)</title><rect x="15.2859%" y="645" width="0.0988%" height="15" fill="rgb(232,42,35)" fg:x="19340" fg:w="125"/><text x="15.5359%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.10%)</title><rect x="15.2859%" y="629" width="0.0988%" height="15" fill="rgb(223,130,24)" fg:x="19340" fg:w="125"/><text x="15.5359%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.10%)</title><rect x="15.2859%" y="613" width="0.0988%" height="15" fill="rgb(237,16,22)" fg:x="19340" fg:w="125"/><text x="15.5359%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (125 samples, 0.10%)</title><rect x="15.2859%" y="597" width="0.0988%" height="15" fill="rgb(248,192,20)" fg:x="19340" fg:w="125"/><text x="15.5359%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (123 samples, 0.10%)</title><rect x="15.2875%" y="581" width="0.0972%" height="15" fill="rgb(233,167,2)" fg:x="19342" fg:w="123"/><text x="15.5375%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.02%)</title><rect x="15.3997%" y="453" width="0.0198%" height="15" fill="rgb(252,71,44)" fg:x="19484" fg:w="25"/><text x="15.6497%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (23 samples, 0.02%)</title><rect x="15.4013%" y="437" width="0.0182%" height="15" fill="rgb(238,37,47)" fg:x="19486" fg:w="23"/><text x="15.6513%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.01%)</title><rect x="15.4440%" y="341" width="0.0119%" height="15" fill="rgb(214,202,54)" fg:x="19540" fg:w="15"/><text x="15.6940%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (39 samples, 0.03%)</title><rect x="15.4281%" y="405" width="0.0308%" height="15" fill="rgb(254,165,40)" fg:x="19520" fg:w="39"/><text x="15.6781%" y="415.50"></text></g><g><title> N]&gt;::hash (39 samples, 0.03%)</title><rect x="15.4281%" y="389" width="0.0308%" height="15" fill="rgb(246,173,38)" fg:x="19520" fg:w="39"/><text x="15.6781%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (28 samples, 0.02%)</title><rect x="15.4368%" y="373" width="0.0221%" height="15" fill="rgb(215,3,27)" fg:x="19531" fg:w="28"/><text x="15.6868%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.02%)</title><rect x="15.4376%" y="357" width="0.0213%" height="15" fill="rgb(239,169,51)" fg:x="19532" fg:w="27"/><text x="15.6876%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (41 samples, 0.03%)</title><rect x="15.4274%" y="453" width="0.0324%" height="15" fill="rgb(212,5,25)" fg:x="19519" fg:w="41"/><text x="15.6774%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (41 samples, 0.03%)</title><rect x="15.4274%" y="437" width="0.0324%" height="15" fill="rgb(243,45,17)" fg:x="19519" fg:w="41"/><text x="15.6774%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (41 samples, 0.03%)</title><rect x="15.4274%" y="421" width="0.0324%" height="15" fill="rgb(242,97,9)" fg:x="19519" fg:w="41"/><text x="15.6774%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (88 samples, 0.07%)</title><rect x="15.3997%" y="469" width="0.0696%" height="15" fill="rgb(228,71,31)" fg:x="19484" fg:w="88"/><text x="15.6497%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="15.4937%" y="373" width="0.0174%" height="15" fill="rgb(252,184,16)" fg:x="19603" fg:w="22"/><text x="15.7437%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.01%)</title><rect x="15.4969%" y="357" width="0.0142%" height="15" fill="rgb(236,169,46)" fg:x="19607" fg:w="18"/><text x="15.7469%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.01%)</title><rect x="15.5175%" y="245" width="0.0103%" height="15" fill="rgb(207,17,47)" fg:x="19633" fg:w="13"/><text x="15.7675%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (17 samples, 0.01%)</title><rect x="15.5159%" y="293" width="0.0134%" height="15" fill="rgb(206,201,28)" fg:x="19631" fg:w="17"/><text x="15.7659%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (17 samples, 0.01%)</title><rect x="15.5159%" y="277" width="0.0134%" height="15" fill="rgb(224,184,23)" fg:x="19631" fg:w="17"/><text x="15.7659%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="15.5159%" y="261" width="0.0134%" height="15" fill="rgb(208,139,48)" fg:x="19631" fg:w="17"/><text x="15.7659%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (40 samples, 0.03%)</title><rect x="15.5151%" y="373" width="0.0316%" height="15" fill="rgb(208,130,10)" fg:x="19630" fg:w="40"/><text x="15.7651%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (40 samples, 0.03%)</title><rect x="15.5151%" y="357" width="0.0316%" height="15" fill="rgb(211,213,45)" fg:x="19630" fg:w="40"/><text x="15.7651%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (40 samples, 0.03%)</title><rect x="15.5151%" y="341" width="0.0316%" height="15" fill="rgb(235,100,30)" fg:x="19630" fg:w="40"/><text x="15.7651%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (39 samples, 0.03%)</title><rect x="15.5159%" y="325" width="0.0308%" height="15" fill="rgb(206,144,31)" fg:x="19631" fg:w="39"/><text x="15.7659%" y="335.50"></text></g><g><title> N]&gt;::hash (39 samples, 0.03%)</title><rect x="15.5159%" y="309" width="0.0308%" height="15" fill="rgb(224,200,26)" fg:x="19631" fg:w="39"/><text x="15.7659%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (21 samples, 0.02%)</title><rect x="15.5301%" y="293" width="0.0166%" height="15" fill="rgb(247,104,53)" fg:x="19649" fg:w="21"/><text x="15.7801%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.02%)</title><rect x="15.5317%" y="277" width="0.0150%" height="15" fill="rgb(220,14,17)" fg:x="19651" fg:w="19"/><text x="15.7817%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.01%)</title><rect x="15.5364%" y="261" width="0.0103%" height="15" fill="rgb(230,140,40)" fg:x="19657" fg:w="13"/><text x="15.7864%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (76 samples, 0.06%)</title><rect x="15.4922%" y="421" width="0.0601%" height="15" fill="rgb(229,2,41)" fg:x="19601" fg:w="76"/><text x="15.7422%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (74 samples, 0.06%)</title><rect x="15.4937%" y="405" width="0.0585%" height="15" fill="rgb(232,89,16)" fg:x="19603" fg:w="74"/><text x="15.7437%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (74 samples, 0.06%)</title><rect x="15.4937%" y="389" width="0.0585%" height="15" fill="rgb(247,59,52)" fg:x="19603" fg:w="74"/><text x="15.7437%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (23 samples, 0.02%)</title><rect x="15.5522%" y="421" width="0.0182%" height="15" fill="rgb(226,110,21)" fg:x="19677" fg:w="23"/><text x="15.8022%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (22 samples, 0.02%)</title><rect x="15.5530%" y="405" width="0.0174%" height="15" fill="rgb(224,176,43)" fg:x="19678" fg:w="22"/><text x="15.8030%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (128 samples, 0.10%)</title><rect x="15.4732%" y="437" width="0.1012%" height="15" fill="rgb(221,73,6)" fg:x="19577" fg:w="128"/><text x="15.7232%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (131 samples, 0.10%)</title><rect x="15.4716%" y="453" width="0.1035%" height="15" fill="rgb(232,78,19)" fg:x="19575" fg:w="131"/><text x="15.7216%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (178 samples, 0.14%)</title><rect x="15.4700%" y="469" width="0.1407%" height="15" fill="rgb(233,112,48)" fg:x="19573" fg:w="178"/><text x="15.7200%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (45 samples, 0.04%)</title><rect x="15.5752%" y="453" width="0.0356%" height="15" fill="rgb(243,131,47)" fg:x="19706" fg:w="45"/><text x="15.8252%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (279 samples, 0.22%)</title><rect x="15.3942%" y="549" width="0.2205%" height="15" fill="rgb(226,51,1)" fg:x="19477" fg:w="279"/><text x="15.6442%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (277 samples, 0.22%)</title><rect x="15.3957%" y="533" width="0.2189%" height="15" fill="rgb(247,58,7)" fg:x="19479" fg:w="277"/><text x="15.6457%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (277 samples, 0.22%)</title><rect x="15.3957%" y="517" width="0.2189%" height="15" fill="rgb(209,7,32)" fg:x="19479" fg:w="277"/><text x="15.6457%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (277 samples, 0.22%)</title><rect x="15.3957%" y="501" width="0.2189%" height="15" fill="rgb(209,39,41)" fg:x="19479" fg:w="277"/><text x="15.6457%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (276 samples, 0.22%)</title><rect x="15.3965%" y="485" width="0.2181%" height="15" fill="rgb(226,182,46)" fg:x="19480" fg:w="276"/><text x="15.6465%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (420 samples, 0.33%)</title><rect x="15.2835%" y="789" width="0.3320%" height="15" fill="rgb(230,219,10)" fg:x="19337" fg:w="420"/><text x="15.5335%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (420 samples, 0.33%)</title><rect x="15.2835%" y="773" width="0.3320%" height="15" fill="rgb(227,175,30)" fg:x="19337" fg:w="420"/><text x="15.5335%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (420 samples, 0.33%)</title><rect x="15.2835%" y="757" width="0.3320%" height="15" fill="rgb(217,2,50)" fg:x="19337" fg:w="420"/><text x="15.5335%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (292 samples, 0.23%)</title><rect x="15.3847%" y="741" width="0.2308%" height="15" fill="rgb(229,160,0)" fg:x="19465" fg:w="292"/><text x="15.6347%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (292 samples, 0.23%)</title><rect x="15.3847%" y="725" width="0.2308%" height="15" fill="rgb(207,78,37)" fg:x="19465" fg:w="292"/><text x="15.6347%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (292 samples, 0.23%)</title><rect x="15.3847%" y="709" width="0.2308%" height="15" fill="rgb(225,57,0)" fg:x="19465" fg:w="292"/><text x="15.6347%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (292 samples, 0.23%)</title><rect x="15.3847%" y="693" width="0.2308%" height="15" fill="rgb(232,154,2)" fg:x="19465" fg:w="292"/><text x="15.6347%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (292 samples, 0.23%)</title><rect x="15.3847%" y="677" width="0.2308%" height="15" fill="rgb(241,212,25)" fg:x="19465" fg:w="292"/><text x="15.6347%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (292 samples, 0.23%)</title><rect x="15.3847%" y="661" width="0.2308%" height="15" fill="rgb(226,69,20)" fg:x="19465" fg:w="292"/><text x="15.6347%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (292 samples, 0.23%)</title><rect x="15.3847%" y="645" width="0.2308%" height="15" fill="rgb(247,184,54)" fg:x="19465" fg:w="292"/><text x="15.6347%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (292 samples, 0.23%)</title><rect x="15.3847%" y="629" width="0.2308%" height="15" fill="rgb(210,145,0)" fg:x="19465" fg:w="292"/><text x="15.6347%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (292 samples, 0.23%)</title><rect x="15.3847%" y="613" width="0.2308%" height="15" fill="rgb(253,82,12)" fg:x="19465" fg:w="292"/><text x="15.6347%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (292 samples, 0.23%)</title><rect x="15.3847%" y="597" width="0.2308%" height="15" fill="rgb(245,42,11)" fg:x="19465" fg:w="292"/><text x="15.6347%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (292 samples, 0.23%)</title><rect x="15.3847%" y="581" width="0.2308%" height="15" fill="rgb(219,147,32)" fg:x="19465" fg:w="292"/><text x="15.6347%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (280 samples, 0.22%)</title><rect x="15.3942%" y="565" width="0.2213%" height="15" fill="rgb(246,12,7)" fg:x="19477" fg:w="280"/><text x="15.6442%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="15.6281%" y="485" width="0.0174%" height="15" fill="rgb(243,50,9)" fg:x="19773" fg:w="22"/><text x="15.8781%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.01%)</title><rect x="15.6313%" y="469" width="0.0142%" height="15" fill="rgb(219,149,6)" fg:x="19777" fg:w="18"/><text x="15.8813%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (23 samples, 0.02%)</title><rect x="15.6495%" y="453" width="0.0182%" height="15" fill="rgb(241,51,42)" fg:x="19800" fg:w="23"/><text x="15.8995%" y="463.50"></text></g><g><title> N]&gt;::hash (23 samples, 0.02%)</title><rect x="15.6495%" y="437" width="0.0182%" height="15" fill="rgb(226,128,27)" fg:x="19800" fg:w="23"/><text x="15.8995%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (25 samples, 0.02%)</title><rect x="15.6495%" y="485" width="0.0198%" height="15" fill="rgb(244,144,4)" fg:x="19800" fg:w="25"/><text x="15.8995%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (25 samples, 0.02%)</title><rect x="15.6495%" y="469" width="0.0198%" height="15" fill="rgb(221,4,13)" fg:x="19800" fg:w="25"/><text x="15.8995%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (61 samples, 0.05%)</title><rect x="15.6273%" y="501" width="0.0482%" height="15" fill="rgb(208,170,28)" fg:x="19772" fg:w="61"/><text x="15.8773%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (35 samples, 0.03%)</title><rect x="15.6755%" y="501" width="0.0277%" height="15" fill="rgb(226,131,13)" fg:x="19833" fg:w="35"/><text x="15.9255%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (34 samples, 0.03%)</title><rect x="15.6763%" y="485" width="0.0269%" height="15" fill="rgb(215,72,41)" fg:x="19834" fg:w="34"/><text x="15.9263%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (107 samples, 0.08%)</title><rect x="15.6226%" y="533" width="0.0846%" height="15" fill="rgb(243,108,20)" fg:x="19766" fg:w="107"/><text x="15.8726%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (104 samples, 0.08%)</title><rect x="15.6250%" y="517" width="0.0822%" height="15" fill="rgb(230,189,17)" fg:x="19769" fg:w="104"/><text x="15.8750%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (115 samples, 0.09%)</title><rect x="15.6170%" y="581" width="0.0909%" height="15" fill="rgb(220,50,17)" fg:x="19759" fg:w="115"/><text x="15.8670%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (113 samples, 0.09%)</title><rect x="15.6186%" y="565" width="0.0893%" height="15" fill="rgb(248,152,48)" fg:x="19761" fg:w="113"/><text x="15.8686%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (111 samples, 0.09%)</title><rect x="15.6202%" y="549" width="0.0877%" height="15" fill="rgb(244,91,11)" fg:x="19763" fg:w="111"/><text x="15.8702%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (119 samples, 0.09%)</title><rect x="15.6163%" y="613" width="0.0941%" height="15" fill="rgb(220,157,5)" fg:x="19758" fg:w="119"/><text x="15.8663%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (118 samples, 0.09%)</title><rect x="15.6170%" y="597" width="0.0933%" height="15" fill="rgb(253,137,8)" fg:x="19759" fg:w="118"/><text x="15.8670%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_ops::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::decrypt (1,861 samples, 1.47%)</title><rect x="14.2457%" y="853" width="1.4709%" height="15" fill="rgb(217,137,51)" fg:x="18024" fg:w="1861"/><text x="14.4957%" y="863.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::parent_using_links (714 samples, 0.56%)</title><rect x="15.1523%" y="837" width="0.5643%" height="15" fill="rgb(218,209,53)" fg:x="19171" fg:w="714"/><text x="15.4023%" y="847.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::linked_by (714 samples, 0.56%)</title><rect x="15.1523%" y="821" width="0.5643%" height="15" fill="rgb(249,137,25)" fg:x="19171" fg:w="714"/><text x="15.4023%" y="831.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids (548 samples, 0.43%)</title><rect x="15.2835%" y="805" width="0.4331%" height="15" fill="rgb(239,155,26)" fg:x="19337" fg:w="548"/><text x="15.5335%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (128 samples, 0.10%)</title><rect x="15.6155%" y="789" width="0.1012%" height="15" fill="rgb(227,85,46)" fg:x="19757" fg:w="128"/><text x="15.8655%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (128 samples, 0.10%)</title><rect x="15.6155%" y="773" width="0.1012%" height="15" fill="rgb(251,107,43)" fg:x="19757" fg:w="128"/><text x="15.8655%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (128 samples, 0.10%)</title><rect x="15.6155%" y="757" width="0.1012%" height="15" fill="rgb(234,170,33)" fg:x="19757" fg:w="128"/><text x="15.8655%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (128 samples, 0.10%)</title><rect x="15.6155%" y="741" width="0.1012%" height="15" fill="rgb(206,29,35)" fg:x="19757" fg:w="128"/><text x="15.8655%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (128 samples, 0.10%)</title><rect x="15.6155%" y="725" width="0.1012%" height="15" fill="rgb(227,138,25)" fg:x="19757" fg:w="128"/><text x="15.8655%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.10%)</title><rect x="15.6155%" y="709" width="0.1012%" height="15" fill="rgb(249,131,35)" fg:x="19757" fg:w="128"/><text x="15.8655%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.10%)</title><rect x="15.6155%" y="693" width="0.1012%" height="15" fill="rgb(239,6,40)" fg:x="19757" fg:w="128"/><text x="15.8655%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.10%)</title><rect x="15.6155%" y="677" width="0.1012%" height="15" fill="rgb(246,136,47)" fg:x="19757" fg:w="128"/><text x="15.8655%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.10%)</title><rect x="15.6155%" y="661" width="0.1012%" height="15" fill="rgb(253,58,26)" fg:x="19757" fg:w="128"/><text x="15.8655%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.10%)</title><rect x="15.6155%" y="645" width="0.1012%" height="15" fill="rgb(237,141,10)" fg:x="19757" fg:w="128"/><text x="15.8655%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (127 samples, 0.10%)</title><rect x="15.6163%" y="629" width="0.1004%" height="15" fill="rgb(234,156,12)" fg:x="19758" fg:w="127"/><text x="15.8663%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::file::_&lt;impl lb_rs::Lb&gt;::create_file::_{{closure}} (19,894 samples, 15.72%)</title><rect x="0.0047%" y="901" width="15.7237%" height="15" fill="rgb(243,224,36)" fg:x="6" fg:w="19894"/><text x="0.2547%" y="911.50">get_usage_tests-cf82cbf4..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::file::_&lt;impl lb_rs::Lb&gt;::create_file::_{{closure}}::_{{closure}} (19,894 samples, 15.72%)</title><rect x="0.0047%" y="885" width="15.7237%" height="15" fill="rgb(205,229,51)" fg:x="6" fg:w="19894"/><text x="0.2547%" y="895.50">get_usage_tests-cf82cbf4..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::file::_&lt;impl lb_rs::Lb&gt;::create_file::_{{closure}}::_{{closure}}::_{{closure}} (19,894 samples, 15.72%)</title><rect x="0.0047%" y="869" width="15.7237%" height="15" fill="rgb(223,189,4)" fg:x="6" fg:w="19894"/><text x="0.2547%" y="879.50">get_usage_tests-cf82cbf4..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (16 samples, 0.01%)</title><rect x="15.7340%" y="821" width="0.0126%" height="15" fill="rgb(249,167,54)" fg:x="19907" fg:w="16"/><text x="15.9840%" y="831.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (15 samples, 0.01%)</title><rect x="15.7348%" y="805" width="0.0119%" height="15" fill="rgb(218,34,28)" fg:x="19908" fg:w="15"/><text x="15.9848%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;alloc::vec::Vec&lt;F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (15 samples, 0.01%)</title><rect x="15.7348%" y="789" width="0.0119%" height="15" fill="rgb(232,109,42)" fg:x="19908" fg:w="15"/><text x="15.9848%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::decrypt_key (13 samples, 0.01%)</title><rect x="15.7593%" y="789" width="0.0103%" height="15" fill="rgb(248,214,46)" fg:x="19939" fg:w="13"/><text x="16.0093%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::aes256_encrypt (26 samples, 0.02%)</title><rect x="15.7838%" y="645" width="0.0205%" height="15" fill="rgb(244,216,40)" fg:x="19970" fg:w="26"/><text x="16.0338%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;Alg as cipher::block::BlockEncrypt&gt;::encrypt_block (31 samples, 0.02%)</title><rect x="15.7807%" y="677" width="0.0245%" height="15" fill="rgb(231,226,31)" fg:x="19966" fg:w="31"/><text x="16.0307%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes::soft::Aes256 as cipher::block::BlockEncrypt&gt;::encrypt_block (31 samples, 0.02%)</title><rect x="15.7807%" y="661" width="0.0245%" height="15" fill="rgb(238,38,43)" fg:x="19966" fg:w="31"/><text x="16.0307%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Alg as aead::Aead&gt;::encrypt (52 samples, 0.04%)</title><rect x="15.7751%" y="757" width="0.0411%" height="15" fill="rgb(208,88,43)" fg:x="19959" fg:w="52"/><text x="16.0251%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aead::AeadInPlace::encrypt_in_place (52 samples, 0.04%)</title><rect x="15.7751%" y="741" width="0.0411%" height="15" fill="rgb(205,136,37)" fg:x="19959" fg:w="52"/><text x="16.0251%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (52 samples, 0.04%)</title><rect x="15.7751%" y="725" width="0.0411%" height="15" fill="rgb(237,34,14)" fg:x="19959" fg:w="52"/><text x="16.0251%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`cipher::stream::StreamCipher::apply_keystream (45 samples, 0.04%)</title><rect x="15.7807%" y="709" width="0.0356%" height="15" fill="rgb(236,193,44)" fg:x="19966" fg:w="45"/><text x="16.0307%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;ctr::Ctr&lt;B,F&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (45 samples, 0.04%)</title><rect x="15.7807%" y="693" width="0.0356%" height="15" fill="rgb(231,48,10)" fg:x="19966" fg:w="45"/><text x="16.0307%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (15 samples, 0.01%)</title><rect x="15.8162%" y="757" width="0.0119%" height="15" fill="rgb(213,141,34)" fg:x="20011" fg:w="15"/><text x="16.0662%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`digest::fixed::FixedOutput::finalize_fixed (13 samples, 0.01%)</title><rect x="15.8178%" y="741" width="0.0103%" height="15" fill="rgb(249,130,34)" fg:x="20013" fg:w="13"/><text x="16.0678%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as aead::NewAead&gt;::new (14 samples, 0.01%)</title><rect x="15.8376%" y="741" width="0.0111%" height="15" fill="rgb(219,42,41)" fg:x="20038" fg:w="14"/><text x="16.0876%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::symkey::convert_key (16 samples, 0.01%)</title><rect x="15.8376%" y="757" width="0.0126%" height="15" fill="rgb(224,100,54)" fg:x="20038" fg:w="16"/><text x="16.0876%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::secret_filename::SecretFileName::from_str (97 samples, 0.08%)</title><rect x="15.7751%" y="773" width="0.0767%" height="15" fill="rgb(229,200,27)" fg:x="19959" fg:w="97"/><text x="16.0251%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Alg as aead::Aead&gt;::encrypt (19 samples, 0.02%)</title><rect x="15.8526%" y="757" width="0.0150%" height="15" fill="rgb(217,118,10)" fg:x="20057" fg:w="19"/><text x="16.1026%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aead::AeadInPlace::encrypt_in_place (19 samples, 0.02%)</title><rect x="15.8526%" y="741" width="0.0150%" height="15" fill="rgb(206,22,3)" fg:x="20057" fg:w="19"/><text x="16.1026%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (19 samples, 0.02%)</title><rect x="15.8526%" y="725" width="0.0150%" height="15" fill="rgb(232,163,46)" fg:x="20057" fg:w="19"/><text x="16.1026%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`cipher::stream::StreamCipher::apply_keystream (15 samples, 0.01%)</title><rect x="15.8557%" y="709" width="0.0119%" height="15" fill="rgb(206,95,13)" fg:x="20061" fg:w="15"/><text x="16.1057%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;ctr::Ctr&lt;B,F&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (15 samples, 0.01%)</title><rect x="15.8557%" y="693" width="0.0119%" height="15" fill="rgb(253,154,18)" fg:x="20061" fg:w="15"/><text x="16.1057%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as aead::NewAead&gt;::new (13 samples, 0.01%)</title><rect x="15.8708%" y="741" width="0.0103%" height="15" fill="rgb(219,32,23)" fg:x="20080" fg:w="13"/><text x="16.1208%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::symkey::convert_key (16 samples, 0.01%)</title><rect x="15.8708%" y="757" width="0.0126%" height="15" fill="rgb(230,191,45)" fg:x="20080" fg:w="16"/><text x="16.1208%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::file_metadata::FileMetadata::create (138 samples, 0.11%)</title><rect x="15.7751%" y="789" width="0.1091%" height="15" fill="rgb(229,64,36)" fg:x="19959" fg:w="138"/><text x="16.0251%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::symkey::encrypt (41 samples, 0.03%)</title><rect x="15.8518%" y="773" width="0.0324%" height="15" fill="rgb(205,129,25)" fg:x="20056" fg:w="41"/><text x="16.1018%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (22 samples, 0.02%)</title><rect x="15.8850%" y="741" width="0.0174%" height="15" fill="rgb(254,112,7)" fg:x="20098" fg:w="22"/><text x="16.1350%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::update (22 samples, 0.02%)</title><rect x="15.8850%" y="725" width="0.0174%" height="15" fill="rgb(226,53,48)" fg:x="20098" fg:w="22"/><text x="16.1350%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (22 samples, 0.02%)</title><rect x="15.8850%" y="709" width="0.0174%" height="15" fill="rgb(214,153,38)" fg:x="20098" fg:w="22"/><text x="16.1350%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::update::_{{closure}} (22 samples, 0.02%)</title><rect x="15.8850%" y="693" width="0.0174%" height="15" fill="rgb(243,101,7)" fg:x="20098" fg:w="22"/><text x="16.1350%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::compress256 (22 samples, 0.02%)</title><rect x="15.8850%" y="677" width="0.0174%" height="15" fill="rgb(240,140,22)" fg:x="20098" fg:w="22"/><text x="16.1350%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::soft::compress (22 samples, 0.02%)</title><rect x="15.8850%" y="661" width="0.0174%" height="15" fill="rgb(235,114,2)" fg:x="20098" fg:w="22"/><text x="16.1350%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;D as digest::digest::Digest&gt;::digest (29 samples, 0.02%)</title><rect x="15.8842%" y="757" width="0.0229%" height="15" fill="rgb(242,59,12)" fg:x="20097" fg:w="29"/><text x="16.1342%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::FieldStorage::cmov (26 samples, 0.02%)</title><rect x="15.9324%" y="709" width="0.0205%" height="15" fill="rgb(252,134,9)" fg:x="20158" fg:w="26"/><text x="16.1824%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::AddAssign&gt;::add_assign (21 samples, 0.02%)</title><rect x="15.9609%" y="677" width="0.0166%" height="15" fill="rgb(236,4,44)" fg:x="20194" fg:w="21"/><text x="16.2109%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::AddAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::add_assign (21 samples, 0.02%)</title><rect x="15.9609%" y="661" width="0.0166%" height="15" fill="rgb(254,172,41)" fg:x="20194" fg:w="21"/><text x="16.2109%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (17 samples, 0.01%)</title><rect x="15.9640%" y="645" width="0.0134%" height="15" fill="rgb(244,63,20)" fg:x="20198" fg:w="17"/><text x="16.2140%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (144 samples, 0.11%)</title><rect x="15.9798%" y="645" width="0.1138%" height="15" fill="rgb(250,73,31)" fg:x="20218" fg:w="144"/><text x="16.2298%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (169 samples, 0.13%)</title><rect x="15.9782%" y="661" width="0.1336%" height="15" fill="rgb(241,38,36)" fg:x="20216" fg:w="169"/><text x="16.2282%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (23 samples, 0.02%)</title><rect x="16.0936%" y="645" width="0.0182%" height="15" fill="rgb(245,211,2)" fg:x="20362" fg:w="23"/><text x="16.3436%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::Mul&gt;::mul (175 samples, 0.14%)</title><rect x="15.9775%" y="677" width="0.1383%" height="15" fill="rgb(206,120,28)" fg:x="20215" fg:w="175"/><text x="16.2275%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (66 samples, 0.05%)</title><rect x="16.1166%" y="629" width="0.0522%" height="15" fill="rgb(211,59,34)" fg:x="20391" fg:w="66"/><text x="16.3666%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (79 samples, 0.06%)</title><rect x="16.1166%" y="645" width="0.0624%" height="15" fill="rgb(233,168,5)" fg:x="20391" fg:w="79"/><text x="16.3666%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (13 samples, 0.01%)</title><rect x="16.1687%" y="629" width="0.0103%" height="15" fill="rgb(234,33,13)" fg:x="20457" fg:w="13"/><text x="16.4187%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&gt;::mul_assign (82 samples, 0.06%)</title><rect x="16.1158%" y="677" width="0.0648%" height="15" fill="rgb(231,150,26)" fg:x="20390" fg:w="82"/><text x="16.3658%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::mul_assign (82 samples, 0.06%)</title><rect x="16.1158%" y="661" width="0.0648%" height="15" fill="rgb(217,191,4)" fg:x="20390" fg:w="82"/><text x="16.3658%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_int (24 samples, 0.02%)</title><rect x="16.1806%" y="677" width="0.0190%" height="15" fill="rgb(246,198,38)" fg:x="20472" fg:w="24"/><text x="16.4306%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (17 samples, 0.01%)</title><rect x="16.1861%" y="661" width="0.0134%" height="15" fill="rgb(245,64,37)" fg:x="20479" fg:w="17"/><text x="16.4361%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::neg (16 samples, 0.01%)</title><rect x="16.1996%" y="677" width="0.0126%" height="15" fill="rgb(250,30,36)" fg:x="20496" fg:w="16"/><text x="16.4496%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::neg_in_place (15 samples, 0.01%)</title><rect x="16.2003%" y="661" width="0.0119%" height="15" fill="rgb(217,86,53)" fg:x="20497" fg:w="15"/><text x="16.4503%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (14 samples, 0.01%)</title><rect x="16.2011%" y="645" width="0.0111%" height="15" fill="rgb(228,157,16)" fg:x="20498" fg:w="14"/><text x="16.4511%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::normalize_weak (22 samples, 0.02%)</title><rect x="16.2122%" y="677" width="0.0174%" height="15" fill="rgb(217,59,31)" fg:x="20512" fg:w="22"/><text x="16.4622%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (14 samples, 0.01%)</title><rect x="16.2185%" y="661" width="0.0111%" height="15" fill="rgb(237,138,41)" fg:x="20520" fg:w="14"/><text x="16.4685%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (102 samples, 0.08%)</title><rect x="16.2351%" y="645" width="0.0806%" height="15" fill="rgb(227,91,49)" fg:x="20541" fg:w="102"/><text x="16.4851%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (124 samples, 0.10%)</title><rect x="16.2351%" y="661" width="0.0980%" height="15" fill="rgb(247,21,44)" fg:x="20541" fg:w="124"/><text x="16.4851%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (22 samples, 0.02%)</title><rect x="16.3157%" y="645" width="0.0174%" height="15" fill="rgb(219,210,51)" fg:x="20643" fg:w="22"/><text x="16.5657%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (127 samples, 0.10%)</title><rect x="16.2343%" y="677" width="0.1004%" height="15" fill="rgb(209,140,6)" fg:x="20540" fg:w="127"/><text x="16.4843%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge_in_place (482 samples, 0.38%)</title><rect x="15.9601%" y="693" width="0.3810%" height="15" fill="rgb(221,188,24)" fg:x="20193" fg:w="482"/><text x="16.2101%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (553 samples, 0.44%)</title><rect x="15.9158%" y="725" width="0.4371%" height="15" fill="rgb(232,154,20)" fg:x="20137" fg:w="553"/><text x="16.1658%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge (506 samples, 0.40%)</title><rect x="15.9530%" y="709" width="0.3999%" height="15" fill="rgb(244,137,50)" fg:x="20184" fg:w="506"/><text x="16.2030%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.01%)</title><rect x="16.3410%" y="693" width="0.0119%" height="15" fill="rgb(225,185,43)" fg:x="20675" fg:w="15"/><text x="16.5910%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (90 samples, 0.07%)</title><rect x="16.3655%" y="661" width="0.0711%" height="15" fill="rgb(213,205,38)" fg:x="20706" fg:w="90"/><text x="16.6155%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (112 samples, 0.09%)</title><rect x="16.3632%" y="677" width="0.0885%" height="15" fill="rgb(236,73,12)" fg:x="20703" fg:w="112"/><text x="16.6132%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (19 samples, 0.02%)</title><rect x="16.4367%" y="661" width="0.0150%" height="15" fill="rgb(235,219,13)" fg:x="20796" fg:w="19"/><text x="16.6867%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (116 samples, 0.09%)</title><rect x="16.3616%" y="693" width="0.0917%" height="15" fill="rgb(218,59,36)" fg:x="20701" fg:w="116"/><text x="16.6116%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Affine::set_gej (128 samples, 0.10%)</title><rect x="16.3529%" y="725" width="0.1012%" height="15" fill="rgb(205,110,39)" fg:x="20690" fg:w="128"/><text x="16.6029%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::inv (126 samples, 0.10%)</title><rect x="16.3545%" y="709" width="0.0996%" height="15" fill="rgb(218,206,42)" fg:x="20692" fg:w="126"/><text x="16.6045%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key (683 samples, 0.54%)</title><rect x="15.9158%" y="757" width="0.5398%" height="15" fill="rgb(248,125,24)" fg:x="20137" fg:w="683"/><text x="16.1658%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key_with_context (683 samples, 0.54%)</title><rect x="15.9158%" y="741" width="0.5398%" height="15" fill="rgb(242,28,27)" fg:x="20137" fg:w="683"/><text x="16.1658%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (14 samples, 0.01%)</title><rect x="16.4580%" y="693" width="0.0111%" height="15" fill="rgb(216,228,15)" fg:x="20823" fg:w="14"/><text x="16.7080%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (15 samples, 0.01%)</title><rect x="16.4778%" y="645" width="0.0119%" height="15" fill="rgb(235,116,46)" fg:x="20848" fg:w="15"/><text x="16.7278%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (15 samples, 0.01%)</title><rect x="16.4778%" y="629" width="0.0119%" height="15" fill="rgb(224,18,32)" fg:x="20848" fg:w="15"/><text x="16.7278%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (23 samples, 0.02%)</title><rect x="16.4746%" y="677" width="0.0182%" height="15" fill="rgb(252,5,12)" fg:x="20844" fg:w="23"/><text x="16.7246%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`digest::fixed::FixedOutput::finalize_fixed (19 samples, 0.02%)</title><rect x="16.4778%" y="661" width="0.0150%" height="15" fill="rgb(251,36,5)" fg:x="20848" fg:w="19"/><text x="16.7278%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_varkey (28 samples, 0.02%)</title><rect x="16.4928%" y="661" width="0.0221%" height="15" fill="rgb(217,53,14)" fg:x="20867" fg:w="28"/><text x="16.7428%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (18 samples, 0.01%)</title><rect x="16.5007%" y="645" width="0.0142%" height="15" fill="rgb(215,86,45)" fg:x="20877" fg:w="18"/><text x="16.7507%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::update (18 samples, 0.01%)</title><rect x="16.5007%" y="629" width="0.0142%" height="15" fill="rgb(242,169,11)" fg:x="20877" fg:w="18"/><text x="16.7507%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (17 samples, 0.01%)</title><rect x="16.5015%" y="613" width="0.0134%" height="15" fill="rgb(211,213,45)" fg:x="20878" fg:w="17"/><text x="16.7515%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::update::_{{closure}} (17 samples, 0.01%)</title><rect x="16.5015%" y="597" width="0.0134%" height="15" fill="rgb(205,88,11)" fg:x="20878" fg:w="17"/><text x="16.7515%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::compress256 (17 samples, 0.01%)</title><rect x="16.5015%" y="581" width="0.0134%" height="15" fill="rgb(252,69,26)" fg:x="20878" fg:w="17"/><text x="16.7515%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::soft::compress (16 samples, 0.01%)</title><rect x="16.5023%" y="565" width="0.0126%" height="15" fill="rgb(246,123,37)" fg:x="20879" fg:w="16"/><text x="16.7523%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::generate (76 samples, 0.06%)</title><rect x="16.4556%" y="725" width="0.0601%" height="15" fill="rgb(212,205,5)" fg:x="20820" fg:w="76"/><text x="16.7056%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::generate_to_slice (73 samples, 0.06%)</title><rect x="16.4580%" y="709" width="0.0577%" height="15" fill="rgb(253,148,0)" fg:x="20823" fg:w="73"/><text x="16.7080%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::update (52 samples, 0.04%)</title><rect x="16.4746%" y="693" width="0.0411%" height="15" fill="rgb(239,22,4)" fg:x="20844" fg:w="52"/><text x="16.7246%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::hmac (29 samples, 0.02%)</title><rect x="16.4928%" y="677" width="0.0229%" height="15" fill="rgb(226,26,53)" fg:x="20867" fg:w="29"/><text x="16.7428%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (38 samples, 0.03%)</title><rect x="16.5236%" y="661" width="0.0300%" height="15" fill="rgb(225,229,45)" fg:x="20906" fg:w="38"/><text x="16.7736%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (38 samples, 0.03%)</title><rect x="16.5236%" y="645" width="0.0300%" height="15" fill="rgb(220,60,37)" fg:x="20906" fg:w="38"/><text x="16.7736%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::finish (35 samples, 0.03%)</title><rect x="16.5260%" y="629" width="0.0277%" height="15" fill="rgb(217,180,35)" fg:x="20909" fg:w="35"/><text x="16.7760%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (35 samples, 0.03%)</title><rect x="16.5260%" y="613" width="0.0277%" height="15" fill="rgb(229,7,53)" fg:x="20909" fg:w="35"/><text x="16.7760%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::finish::_{{closure}} (35 samples, 0.03%)</title><rect x="16.5260%" y="597" width="0.0277%" height="15" fill="rgb(254,137,3)" fg:x="20909" fg:w="35"/><text x="16.7760%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::compress256 (35 samples, 0.03%)</title><rect x="16.5260%" y="581" width="0.0277%" height="15" fill="rgb(215,140,41)" fg:x="20909" fg:w="35"/><text x="16.7760%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::soft::compress (35 samples, 0.03%)</title><rect x="16.5260%" y="565" width="0.0277%" height="15" fill="rgb(250,80,15)" fg:x="20909" fg:w="35"/><text x="16.7760%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`digest::fixed::FixedOutput::finalize_fixed (43 samples, 0.03%)</title><rect x="16.5236%" y="677" width="0.0340%" height="15" fill="rgb(252,191,6)" fg:x="20906" fg:w="43"/><text x="16.7736%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (53 samples, 0.04%)</title><rect x="16.5165%" y="693" width="0.0419%" height="15" fill="rgb(246,217,18)" fg:x="20897" fg:w="53"/><text x="16.7665%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::soft::sha256_digest_block_u32 (13 samples, 0.01%)</title><rect x="16.5924%" y="565" width="0.0103%" height="15" fill="rgb(223,93,7)" fg:x="20993" fg:w="13"/><text x="16.8424%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_varkey (58 samples, 0.05%)</title><rect x="16.5663%" y="677" width="0.0458%" height="15" fill="rgb(225,55,52)" fg:x="20960" fg:w="58"/><text x="16.8163%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (36 samples, 0.03%)</title><rect x="16.5837%" y="661" width="0.0285%" height="15" fill="rgb(240,31,24)" fg:x="20982" fg:w="36"/><text x="16.8337%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::update (35 samples, 0.03%)</title><rect x="16.5845%" y="645" width="0.0277%" height="15" fill="rgb(205,56,52)" fg:x="20983" fg:w="35"/><text x="16.8345%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (34 samples, 0.03%)</title><rect x="16.5853%" y="629" width="0.0269%" height="15" fill="rgb(246,146,12)" fg:x="20984" fg:w="34"/><text x="16.8353%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::update::_{{closure}} (31 samples, 0.02%)</title><rect x="16.5876%" y="613" width="0.0245%" height="15" fill="rgb(239,84,36)" fg:x="20987" fg:w="31"/><text x="16.8376%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::compress256 (31 samples, 0.02%)</title><rect x="16.5876%" y="597" width="0.0245%" height="15" fill="rgb(207,41,40)" fg:x="20987" fg:w="31"/><text x="16.8376%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::soft::compress (30 samples, 0.02%)</title><rect x="16.5884%" y="581" width="0.0237%" height="15" fill="rgb(241,179,25)" fg:x="20988" fg:w="30"/><text x="16.8384%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::new (123 samples, 0.10%)</title><rect x="16.5157%" y="725" width="0.0972%" height="15" fill="rgb(210,0,34)" fg:x="20896" fg:w="123"/><text x="16.7657%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::update (122 samples, 0.10%)</title><rect x="16.5165%" y="709" width="0.0964%" height="15" fill="rgb(225,217,29)" fg:x="20897" fg:w="122"/><text x="16.7665%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::hmac (59 samples, 0.05%)</title><rect x="16.5663%" y="693" width="0.0466%" height="15" fill="rgb(216,191,38)" fg:x="20960" fg:w="59"/><text x="16.8163%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::FieldStorage::cmov (23 samples, 0.02%)</title><rect x="16.6335%" y="693" width="0.0182%" height="15" fill="rgb(232,140,52)" fg:x="21045" fg:w="23"/><text x="16.8835%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::AddAssign&gt;::add_assign (19 samples, 0.02%)</title><rect x="16.6611%" y="661" width="0.0150%" height="15" fill="rgb(223,158,51)" fg:x="21080" fg:w="19"/><text x="16.9111%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::AddAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::add_assign (19 samples, 0.02%)</title><rect x="16.6611%" y="645" width="0.0150%" height="15" fill="rgb(235,29,51)" fg:x="21080" fg:w="19"/><text x="16.9111%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (16 samples, 0.01%)</title><rect x="16.6635%" y="629" width="0.0126%" height="15" fill="rgb(215,181,18)" fg:x="21083" fg:w="16"/><text x="16.9135%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (153 samples, 0.12%)</title><rect x="16.6777%" y="629" width="0.1209%" height="15" fill="rgb(227,125,34)" fg:x="21101" fg:w="153"/><text x="16.9277%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (181 samples, 0.14%)</title><rect x="16.6769%" y="645" width="0.1431%" height="15" fill="rgb(230,197,49)" fg:x="21100" fg:w="181"/><text x="16.9269%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (27 samples, 0.02%)</title><rect x="16.7987%" y="629" width="0.0213%" height="15" fill="rgb(239,141,16)" fg:x="21254" fg:w="27"/><text x="17.0487%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::Mul&gt;::mul (186 samples, 0.15%)</title><rect x="16.6762%" y="661" width="0.1470%" height="15" fill="rgb(225,105,43)" fg:x="21099" fg:w="186"/><text x="16.9262%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (57 samples, 0.05%)</title><rect x="16.8240%" y="613" width="0.0451%" height="15" fill="rgb(214,131,14)" fg:x="21286" fg:w="57"/><text x="17.0740%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&gt;::mul_assign (67 samples, 0.05%)</title><rect x="16.8232%" y="661" width="0.0530%" height="15" fill="rgb(229,177,11)" fg:x="21285" fg:w="67"/><text x="17.0732%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::mul_assign (67 samples, 0.05%)</title><rect x="16.8232%" y="645" width="0.0530%" height="15" fill="rgb(231,180,14)" fg:x="21285" fg:w="67"/><text x="17.0732%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (67 samples, 0.05%)</title><rect x="16.8232%" y="629" width="0.0530%" height="15" fill="rgb(232,88,2)" fg:x="21285" fg:w="67"/><text x="17.0732%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_int (19 samples, 0.02%)</title><rect x="16.8761%" y="661" width="0.0150%" height="15" fill="rgb(205,220,8)" fg:x="21352" fg:w="19"/><text x="17.1261%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::neg_in_place (14 samples, 0.01%)</title><rect x="16.8935%" y="645" width="0.0111%" height="15" fill="rgb(225,23,53)" fg:x="21374" fg:w="14"/><text x="17.1435%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::neg (20 samples, 0.02%)</title><rect x="16.8911%" y="661" width="0.0158%" height="15" fill="rgb(213,62,29)" fg:x="21371" fg:w="20"/><text x="17.1411%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::normalize_weak (23 samples, 0.02%)</title><rect x="16.9069%" y="661" width="0.0182%" height="15" fill="rgb(227,75,7)" fg:x="21391" fg:w="23"/><text x="17.1569%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (18 samples, 0.01%)</title><rect x="16.9109%" y="645" width="0.0142%" height="15" fill="rgb(207,105,14)" fg:x="21396" fg:w="18"/><text x="17.1609%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (119 samples, 0.09%)</title><rect x="16.9346%" y="629" width="0.0941%" height="15" fill="rgb(245,62,29)" fg:x="21426" fg:w="119"/><text x="17.1846%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (143 samples, 0.11%)</title><rect x="16.9330%" y="645" width="0.1130%" height="15" fill="rgb(236,202,4)" fg:x="21424" fg:w="143"/><text x="17.1830%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (22 samples, 0.02%)</title><rect x="17.0287%" y="629" width="0.0174%" height="15" fill="rgb(250,67,1)" fg:x="21545" fg:w="22"/><text x="17.2787%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (146 samples, 0.12%)</title><rect x="16.9314%" y="661" width="0.1154%" height="15" fill="rgb(253,115,44)" fg:x="21422" fg:w="146"/><text x="17.1814%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge_in_place (491 samples, 0.39%)</title><rect x="16.6603%" y="677" width="0.3881%" height="15" fill="rgb(251,139,18)" fg:x="21079" fg:w="491"/><text x="16.9103%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge (512 samples, 0.40%)</title><rect x="16.6524%" y="693" width="0.4047%" height="15" fill="rgb(218,22,32)" fg:x="21069" fg:w="512"/><text x="16.9024%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (552 samples, 0.44%)</title><rect x="16.6216%" y="709" width="0.4363%" height="15" fill="rgb(243,53,5)" fg:x="21030" fg:w="552"/><text x="16.8716%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (89 samples, 0.07%)</title><rect x="17.0729%" y="645" width="0.0703%" height="15" fill="rgb(227,56,16)" fg:x="21601" fg:w="89"/><text x="17.3229%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (102 samples, 0.08%)</title><rect x="17.0729%" y="661" width="0.0806%" height="15" fill="rgb(245,53,0)" fg:x="21601" fg:w="102"/><text x="17.3229%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (13 samples, 0.01%)</title><rect x="17.1433%" y="645" width="0.0103%" height="15" fill="rgb(216,170,35)" fg:x="21690" fg:w="13"/><text x="17.3933%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (106 samples, 0.08%)</title><rect x="17.0721%" y="677" width="0.0838%" height="15" fill="rgb(211,200,8)" fg:x="21600" fg:w="106"/><text x="17.3221%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::inv (121 samples, 0.10%)</title><rect x="17.0611%" y="693" width="0.0956%" height="15" fill="rgb(228,204,44)" fg:x="21586" fg:w="121"/><text x="17.3111%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Affine::set_gej (124 samples, 0.10%)</title><rect x="17.0595%" y="709" width="0.0980%" height="15" fill="rgb(214,121,17)" fg:x="21584" fg:w="124"/><text x="17.3095%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::mul_512 (15 samples, 0.01%)</title><rect x="17.1591%" y="645" width="0.0119%" height="15" fill="rgb(233,64,38)" fg:x="21710" fg:w="15"/><text x="17.4091%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::scalar::Scalar as core::ops::arith::Mul&gt;::mul (23 samples, 0.02%)</title><rect x="17.1591%" y="677" width="0.0182%" height="15" fill="rgb(253,54,19)" fg:x="21710" fg:w="23"/><text x="17.4091%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::mul_in_place (23 samples, 0.02%)</title><rect x="17.1591%" y="661" width="0.0182%" height="15" fill="rgb(253,94,18)" fg:x="21710" fg:w="23"/><text x="17.4091%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::mul_512 (47 samples, 0.04%)</title><rect x="17.1772%" y="645" width="0.0371%" height="15" fill="rgb(227,57,52)" fg:x="21733" fg:w="47"/><text x="17.4272%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::scalar::Scalar as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::scalar::Scalar&gt;&gt;::mul_assign (106 samples, 0.08%)</title><rect x="17.1772%" y="677" width="0.0838%" height="15" fill="rgb(230,228,50)" fg:x="21733" fg:w="106"/><text x="17.4272%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::mul_in_place (106 samples, 0.08%)</title><rect x="17.1772%" y="661" width="0.0838%" height="15" fill="rgb(217,205,27)" fg:x="21733" fg:w="106"/><text x="17.4272%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::reduce_512 (59 samples, 0.05%)</title><rect x="17.2144%" y="645" width="0.0466%" height="15" fill="rgb(252,71,50)" fg:x="21780" fg:w="59"/><text x="17.4644%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (19 samples, 0.02%)</title><rect x="17.5203%" y="613" width="0.0150%" height="15" fill="rgb(209,86,4)" fg:x="22167" fg:w="19"/><text x="17.7703%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (15 samples, 0.01%)</title><rect x="17.5353%" y="581" width="0.0119%" height="15" fill="rgb(229,94,0)" fg:x="22186" fg:w="15"/><text x="17.7853%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;subtle::Choice as core::ops::bit::BitAnd&gt;::bitand (16 samples, 0.01%)</title><rect x="17.5353%" y="613" width="0.0126%" height="15" fill="rgb(252,223,21)" fg:x="22186" fg:w="16"/><text x="17.7853%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.01%)</title><rect x="17.5353%" y="597" width="0.0126%" height="15" fill="rgb(230,210,4)" fg:x="22186" fg:w="16"/><text x="17.7853%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (14 samples, 0.01%)</title><rect x="17.5614%" y="565" width="0.0111%" height="15" fill="rgb(240,149,38)" fg:x="22219" fg:w="14"/><text x="17.8114%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.01%)</title><rect x="17.5606%" y="581" width="0.0126%" height="15" fill="rgb(254,105,20)" fg:x="22218" fg:w="16"/><text x="17.8106%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;subtle::Choice as core::ops::bit::BitOrAssign&gt;::bitor_assign (31 samples, 0.02%)</title><rect x="17.5495%" y="613" width="0.0245%" height="15" fill="rgb(253,87,46)" fg:x="22204" fg:w="31"/><text x="17.7995%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;subtle::Choice as core::ops::bit::BitOr&gt;::bitor (26 samples, 0.02%)</title><rect x="17.5535%" y="597" width="0.0205%" height="15" fill="rgb(253,116,33)" fg:x="22209" fg:w="26"/><text x="17.8035%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::check_overflow (90 samples, 0.07%)</title><rect x="17.5132%" y="629" width="0.0711%" height="15" fill="rgb(229,198,5)" fg:x="22158" fg:w="90"/><text x="17.7632%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::reduce_512 (413 samples, 0.33%)</title><rect x="17.2666%" y="645" width="0.3264%" height="15" fill="rgb(242,38,37)" fg:x="21846" fg:w="413"/><text x="17.5166%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_ops::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::create_op (2,690 samples, 2.13%)</title><rect x="15.7522%" y="805" width="2.1261%" height="15" fill="rgb(242,69,53)" fg:x="19930" fg:w="2690"/><text x="16.0022%" y="815.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::file_metadata::FileMetadata::sign (2,523 samples, 1.99%)</title><rect x="15.8842%" y="789" width="1.9941%" height="15" fill="rgb(249,80,16)" fg:x="20097" fg:w="2523"/><text x="16.1342%" y="799.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::pubkey::sign (2,523 samples, 1.99%)</title><rect x="15.8842%" y="773" width="1.9941%" height="15" fill="rgb(206,128,11)" fg:x="20097" fg:w="2523"/><text x="16.1342%" y="783.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::sign (1,800 samples, 1.42%)</title><rect x="16.4556%" y="757" width="1.4227%" height="15" fill="rgb(212,35,20)" fg:x="20820" fg:w="1800"/><text x="16.7056%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::sign_with_context (1,800 samples, 1.42%)</title><rect x="16.4556%" y="741" width="1.4227%" height="15" fill="rgb(236,79,13)" fg:x="20820" fg:w="1800"/><text x="16.7056%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecdsa::_&lt;impl libsecp256k1_core::ecmult::ECMultGenContext&gt;::sign_raw (1,601 samples, 1.27%)</title><rect x="16.6129%" y="725" width="1.2654%" height="15" fill="rgb(233,123,3)" fg:x="21019" fg:w="1601"/><text x="16.8629%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::inv (912 samples, 0.72%)</title><rect x="17.1575%" y="709" width="0.7208%" height="15" fill="rgb(214,93,52)" fg:x="21708" fg:w="912"/><text x="17.4075%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::inv_in_place (912 samples, 0.72%)</title><rect x="17.1575%" y="693" width="0.7208%" height="15" fill="rgb(251,37,40)" fg:x="21708" fg:w="912"/><text x="17.4075%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::sqr (778 samples, 0.61%)</title><rect x="17.2634%" y="677" width="0.6149%" height="15" fill="rgb(227,80,54)" fg:x="21842" fg:w="778"/><text x="17.5134%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::sqr_in_place (777 samples, 0.61%)</title><rect x="17.2642%" y="661" width="0.6141%" height="15" fill="rgb(254,48,11)" fg:x="21843" fg:w="777"/><text x="17.5142%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::sqr_512 (361 samples, 0.29%)</title><rect x="17.5930%" y="645" width="0.2853%" height="15" fill="rgb(235,193,26)" fg:x="22259" fg:w="361"/><text x="17.8430%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLikeMut&gt;::insert (18 samples, 0.01%)</title><rect x="17.8783%" y="789" width="0.0142%" height="15" fill="rgb(229,99,21)" fg:x="22620" fg:w="18"/><text x="18.1283%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;alloc::vec::Vec&lt;F&gt; as lb_rs::logic::tree_like::TreeLikeMut&gt;::insert (18 samples, 0.01%)</title><rect x="17.8783%" y="773" width="0.0142%" height="15" fill="rgb(211,140,41)" fg:x="22620" fg:w="18"/><text x="18.1283%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::stage_and_promote (26 samples, 0.02%)</title><rect x="17.8783%" y="805" width="0.0205%" height="15" fill="rgb(240,227,30)" fg:x="22620" fg:w="26"/><text x="18.1283%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::core_ops::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;Staged&gt;&gt;::create_unvalidated (2,717 samples, 2.15%)</title><rect x="15.7522%" y="821" width="2.1475%" height="15" fill="rgb(215,224,45)" fg:x="19930" fg:w="2717"/><text x="16.0022%" y="831.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::access_mode (16 samples, 0.01%)</title><rect x="17.8997%" y="821" width="0.0126%" height="15" fill="rgb(206,123,31)" fg:x="22647" fg:w="16"/><text x="18.1497%" y="831.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (14 samples, 0.01%)</title><rect x="17.9123%" y="741" width="0.0111%" height="15" fill="rgb(210,138,16)" fg:x="22663" fg:w="14"/><text x="18.1623%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;alloc::vec::Vec&lt;F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (22 samples, 0.02%)</title><rect x="17.9123%" y="757" width="0.0174%" height="15" fill="rgb(228,57,28)" fg:x="22663" fg:w="22"/><text x="18.1623%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (23 samples, 0.02%)</title><rect x="17.9123%" y="805" width="0.0182%" height="15" fill="rgb(242,170,10)" fg:x="22663" fg:w="23"/><text x="18.1623%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (23 samples, 0.02%)</title><rect x="17.9123%" y="789" width="0.0182%" height="15" fill="rgb(228,214,39)" fg:x="22663" fg:w="23"/><text x="18.1623%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (23 samples, 0.02%)</title><rect x="17.9123%" y="773" width="0.0182%" height="15" fill="rgb(218,179,33)" fg:x="22663" fg:w="23"/><text x="18.1623%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (14 samples, 0.01%)</title><rect x="17.9400%" y="725" width="0.0111%" height="15" fill="rgb(235,193,39)" fg:x="22698" fg:w="14"/><text x="18.1900%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;alloc::vec::Vec&lt;F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (20 samples, 0.02%)</title><rect x="17.9400%" y="741" width="0.0158%" height="15" fill="rgb(219,221,36)" fg:x="22698" fg:w="20"/><text x="18.1900%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::maybe_find_parent (21 samples, 0.02%)</title><rect x="17.9400%" y="805" width="0.0166%" height="15" fill="rgb(248,218,19)" fg:x="22698" fg:w="21"/><text x="18.1900%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (21 samples, 0.02%)</title><rect x="17.9400%" y="789" width="0.0166%" height="15" fill="rgb(205,50,9)" fg:x="22698" fg:w="21"/><text x="18.1900%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (21 samples, 0.02%)</title><rect x="17.9400%" y="773" width="0.0166%" height="15" fill="rgb(238,81,28)" fg:x="22698" fg:w="21"/><text x="18.1900%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (21 samples, 0.02%)</title><rect x="17.9400%" y="757" width="0.0166%" height="15" fill="rgb(235,110,19)" fg:x="22698" fg:w="21"/><text x="18.1900%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::calculate_deleted (58 samples, 0.05%)</title><rect x="17.9123%" y="821" width="0.0458%" height="15" fill="rgb(214,7,14)" fg:x="22663" fg:w="58"/><text x="18.1623%" y="831.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Alg as aead::Aead&gt;::decrypt (15 samples, 0.01%)</title><rect x="17.9581%" y="773" width="0.0119%" height="15" fill="rgb(211,77,3)" fg:x="22721" fg:w="15"/><text x="18.2081%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aead::AeadInPlace::decrypt_in_place (15 samples, 0.01%)</title><rect x="17.9581%" y="757" width="0.0119%" height="15" fill="rgb(229,5,9)" fg:x="22721" fg:w="15"/><text x="18.2081%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (15 samples, 0.01%)</title><rect x="17.9581%" y="741" width="0.0119%" height="15" fill="rgb(225,90,11)" fg:x="22721" fg:w="15"/><text x="18.2081%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`cipher::stream::StreamCipher::apply_keystream (14 samples, 0.01%)</title><rect x="17.9589%" y="725" width="0.0111%" height="15" fill="rgb(242,56,8)" fg:x="22722" fg:w="14"/><text x="18.2089%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;ctr::Ctr&lt;B,F&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (14 samples, 0.01%)</title><rect x="17.9589%" y="709" width="0.0111%" height="15" fill="rgb(249,212,39)" fg:x="22722" fg:w="14"/><text x="18.2089%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::symkey::decrypt (26 samples, 0.02%)</title><rect x="17.9581%" y="789" width="0.0205%" height="15" fill="rgb(236,90,9)" fg:x="22721" fg:w="26"/><text x="18.2081%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::FieldStorage::cmov (23 samples, 0.02%)</title><rect x="17.9850%" y="725" width="0.0182%" height="15" fill="rgb(206,88,35)" fg:x="22755" fg:w="23"/><text x="18.2350%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (68 samples, 0.05%)</title><rect x="18.0166%" y="661" width="0.0537%" height="15" fill="rgb(205,126,30)" fg:x="22795" fg:w="68"/><text x="18.2666%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (73 samples, 0.06%)</title><rect x="18.0166%" y="677" width="0.0577%" height="15" fill="rgb(230,176,12)" fg:x="22795" fg:w="73"/><text x="18.2666%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::Mul&gt;::mul (78 samples, 0.06%)</title><rect x="18.0150%" y="693" width="0.0616%" height="15" fill="rgb(243,19,9)" fg:x="22793" fg:w="78"/><text x="18.2650%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (25 samples, 0.02%)</title><rect x="18.0767%" y="645" width="0.0198%" height="15" fill="rgb(245,171,17)" fg:x="22871" fg:w="25"/><text x="18.3267%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (29 samples, 0.02%)</title><rect x="18.0767%" y="661" width="0.0229%" height="15" fill="rgb(227,52,21)" fg:x="22871" fg:w="29"/><text x="18.3267%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&gt;::mul_assign (30 samples, 0.02%)</title><rect x="18.0767%" y="693" width="0.0237%" height="15" fill="rgb(238,69,14)" fg:x="22871" fg:w="30"/><text x="18.3267%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::mul_assign (30 samples, 0.02%)</title><rect x="18.0767%" y="677" width="0.0237%" height="15" fill="rgb(241,156,39)" fg:x="22871" fg:w="30"/><text x="18.3267%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::neg_in_place (16 samples, 0.01%)</title><rect x="18.1075%" y="677" width="0.0126%" height="15" fill="rgb(212,227,28)" fg:x="22910" fg:w="16"/><text x="18.3575%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::neg (18 samples, 0.01%)</title><rect x="18.1075%" y="693" width="0.0142%" height="15" fill="rgb(209,118,27)" fg:x="22910" fg:w="18"/><text x="18.3575%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::normalize_weak (15 samples, 0.01%)</title><rect x="18.1217%" y="693" width="0.0119%" height="15" fill="rgb(226,102,5)" fg:x="22928" fg:w="15"/><text x="18.3717%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (62 samples, 0.05%)</title><rect x="18.1368%" y="661" width="0.0490%" height="15" fill="rgb(223,34,3)" fg:x="22947" fg:w="62"/><text x="18.3868%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (75 samples, 0.06%)</title><rect x="18.1360%" y="677" width="0.0593%" height="15" fill="rgb(221,81,38)" fg:x="22946" fg:w="75"/><text x="18.3860%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (78 samples, 0.06%)</title><rect x="18.1352%" y="693" width="0.0616%" height="15" fill="rgb(236,219,28)" fg:x="22945" fg:w="78"/><text x="18.3852%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge_in_place (242 samples, 0.19%)</title><rect x="18.0071%" y="709" width="0.1913%" height="15" fill="rgb(213,200,14)" fg:x="22783" fg:w="242"/><text x="18.2571%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (283 samples, 0.22%)</title><rect x="17.9795%" y="741" width="0.2237%" height="15" fill="rgb(240,33,19)" fg:x="22748" fg:w="283"/><text x="18.2295%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge (253 samples, 0.20%)</title><rect x="18.0032%" y="725" width="0.2000%" height="15" fill="rgb(233,113,27)" fg:x="22778" fg:w="253"/><text x="18.2532%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (47 samples, 0.04%)</title><rect x="18.2126%" y="677" width="0.0371%" height="15" fill="rgb(220,221,18)" fg:x="23043" fg:w="47"/><text x="18.4626%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (57 samples, 0.05%)</title><rect x="18.2126%" y="693" width="0.0451%" height="15" fill="rgb(238,92,8)" fg:x="23043" fg:w="57"/><text x="18.4626%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::inv (68 samples, 0.05%)</title><rect x="18.2047%" y="725" width="0.0537%" height="15" fill="rgb(222,164,16)" fg:x="23033" fg:w="68"/><text x="18.4547%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (59 samples, 0.05%)</title><rect x="18.2119%" y="709" width="0.0466%" height="15" fill="rgb(241,119,3)" fg:x="23042" fg:w="59"/><text x="18.4619%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Affine::set_gej (71 samples, 0.06%)</title><rect x="18.2032%" y="741" width="0.0561%" height="15" fill="rgb(241,44,8)" fg:x="23031" fg:w="71"/><text x="18.4532%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::decrypt_key (382 samples, 0.30%)</title><rect x="17.9581%" y="805" width="0.3019%" height="15" fill="rgb(230,36,40)" fg:x="22721" fg:w="382"/><text x="18.2081%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::account::Account::public_key (355 samples, 0.28%)</title><rect x="17.9795%" y="789" width="0.2806%" height="15" fill="rgb(243,16,36)" fg:x="22748" fg:w="355"/><text x="18.2295%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key (355 samples, 0.28%)</title><rect x="17.9795%" y="773" width="0.2806%" height="15" fill="rgb(231,4,26)" fg:x="22748" fg:w="355"/><text x="18.2295%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key_with_context (355 samples, 0.28%)</title><rect x="17.9795%" y="757" width="0.2806%" height="15" fill="rgb(240,9,31)" fg:x="22748" fg:w="355"/><text x="18.2295%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Alg as aead::Aead&gt;::decrypt (18 samples, 0.01%)</title><rect x="18.2601%" y="789" width="0.0142%" height="15" fill="rgb(207,173,15)" fg:x="23103" fg:w="18"/><text x="18.5101%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aead::AeadInPlace::decrypt_in_place (18 samples, 0.01%)</title><rect x="18.2601%" y="773" width="0.0142%" height="15" fill="rgb(224,192,53)" fg:x="23103" fg:w="18"/><text x="18.5101%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (18 samples, 0.01%)</title><rect x="18.2601%" y="757" width="0.0142%" height="15" fill="rgb(223,67,28)" fg:x="23103" fg:w="18"/><text x="18.5101%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`cipher::stream::StreamCipher::apply_keystream (15 samples, 0.01%)</title><rect x="18.2624%" y="741" width="0.0119%" height="15" fill="rgb(211,20,47)" fg:x="23106" fg:w="15"/><text x="18.5124%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;ctr::Ctr&lt;B,F&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (15 samples, 0.01%)</title><rect x="18.2624%" y="725" width="0.0119%" height="15" fill="rgb(240,228,2)" fg:x="23106" fg:w="15"/><text x="18.5124%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::secret_filename::SecretFileName::to_string (27 samples, 0.02%)</title><rect x="18.2601%" y="805" width="0.0213%" height="15" fill="rgb(248,151,12)" fg:x="23103" fg:w="27"/><text x="18.5101%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::name (410 samples, 0.32%)</title><rect x="17.9581%" y="821" width="0.3241%" height="15" fill="rgb(244,8,39)" fg:x="22721" fg:w="410"/><text x="18.2081%" y="831.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_all_files_decryptable (14 samples, 0.01%)</title><rect x="18.3035%" y="805" width="0.0111%" height="15" fill="rgb(222,26,8)" fg:x="23158" fg:w="14"/><text x="18.5535%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::calculate_deleted (14 samples, 0.01%)</title><rect x="18.3201%" y="789" width="0.0111%" height="15" fill="rgb(213,106,44)" fg:x="23179" fg:w="14"/><text x="18.5701%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_all_files_same_owner_as_parent (29 samples, 0.02%)</title><rect x="18.3146%" y="805" width="0.0229%" height="15" fill="rgb(214,129,20)" fg:x="23172" fg:w="29"/><text x="18.5646%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_changes_authorized (26 samples, 0.02%)</title><rect x="18.3375%" y="805" width="0.0205%" height="15" fill="rgb(212,32,13)" fg:x="23201" fg:w="26"/><text x="18.5875%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_no_changes_to_deleted_files (15 samples, 0.01%)</title><rect x="18.3620%" y="805" width="0.0119%" height="15" fill="rgb(208,168,33)" fg:x="23232" fg:w="15"/><text x="18.6120%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::calculate_deleted (15 samples, 0.01%)</title><rect x="18.3620%" y="789" width="0.0119%" height="15" fill="rgb(231,207,8)" fg:x="23232" fg:w="15"/><text x="18.6120%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_no_cycles (16 samples, 0.01%)</title><rect x="18.3739%" y="805" width="0.0126%" height="15" fill="rgb(235,219,23)" fg:x="23247" fg:w="16"/><text x="18.6239%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::calculate_deleted (16 samples, 0.01%)</title><rect x="18.3865%" y="789" width="0.0126%" height="15" fill="rgb(226,216,26)" fg:x="23263" fg:w="16"/><text x="18.6365%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_no_duplicate_links (20 samples, 0.02%)</title><rect x="18.3865%" y="805" width="0.0158%" height="15" fill="rgb(239,137,16)" fg:x="23263" fg:w="20"/><text x="18.6365%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_no_path_conflicts (30 samples, 0.02%)</title><rect x="18.4071%" y="805" width="0.0237%" height="15" fill="rgb(207,12,36)" fg:x="23289" fg:w="30"/><text x="18.6571%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::validate (190 samples, 0.15%)</title><rect x="18.2996%" y="821" width="0.1502%" height="15" fill="rgb(210,214,24)" fg:x="23153" fg:w="190"/><text x="18.5496%" y="831.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::validate::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::assert_only_folders_have_children (14 samples, 0.01%)</title><rect x="18.4387%" y="805" width="0.0111%" height="15" fill="rgb(206,56,30)" fg:x="23329" fg:w="14"/><text x="18.6887%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::sync::_&lt;impl lb_rs::Lb&gt;::merge::_{{closure}} (3,441 samples, 2.72%)</title><rect x="15.7332%" y="837" width="2.7197%" height="15" fill="rgb(228,143,26)" fg:x="19906" fg:w="3441"/><text x="15.9832%" y="847.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;D as digest::digest::Digest&gt;::digest (13 samples, 0.01%)</title><rect x="18.4553%" y="789" width="0.0103%" height="15" fill="rgb(216,218,46)" fg:x="23350" fg:w="13"/><text x="18.7053%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::FieldStorage::cmov (13 samples, 0.01%)</title><rect x="18.4735%" y="741" width="0.0103%" height="15" fill="rgb(206,6,19)" fg:x="23373" fg:w="13"/><text x="18.7235%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (75 samples, 0.06%)</title><rect x="18.4964%" y="677" width="0.0593%" height="15" fill="rgb(239,177,51)" fg:x="23402" fg:w="75"/><text x="18.7464%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (90 samples, 0.07%)</title><rect x="18.4964%" y="693" width="0.0711%" height="15" fill="rgb(216,55,25)" fg:x="23402" fg:w="90"/><text x="18.7464%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (15 samples, 0.01%)</title><rect x="18.5557%" y="677" width="0.0119%" height="15" fill="rgb(231,163,29)" fg:x="23477" fg:w="15"/><text x="18.8057%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::Mul&gt;::mul (93 samples, 0.07%)</title><rect x="18.4956%" y="709" width="0.0735%" height="15" fill="rgb(232,149,50)" fg:x="23401" fg:w="93"/><text x="18.7456%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (26 samples, 0.02%)</title><rect x="18.5691%" y="661" width="0.0205%" height="15" fill="rgb(223,142,48)" fg:x="23494" fg:w="26"/><text x="18.8191%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (27 samples, 0.02%)</title><rect x="18.5691%" y="677" width="0.0213%" height="15" fill="rgb(245,83,23)" fg:x="23494" fg:w="27"/><text x="18.8191%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&gt;::mul_assign (28 samples, 0.02%)</title><rect x="18.5691%" y="709" width="0.0221%" height="15" fill="rgb(224,63,2)" fg:x="23494" fg:w="28"/><text x="18.8191%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::mul_assign (28 samples, 0.02%)</title><rect x="18.5691%" y="693" width="0.0221%" height="15" fill="rgb(218,65,53)" fg:x="23494" fg:w="28"/><text x="18.8191%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::neg (13 samples, 0.01%)</title><rect x="18.5960%" y="709" width="0.0103%" height="15" fill="rgb(221,84,29)" fg:x="23528" fg:w="13"/><text x="18.8460%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::neg_in_place (13 samples, 0.01%)</title><rect x="18.5960%" y="693" width="0.0103%" height="15" fill="rgb(234,0,32)" fg:x="23528" fg:w="13"/><text x="18.8460%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (68 samples, 0.05%)</title><rect x="18.6189%" y="677" width="0.0537%" height="15" fill="rgb(206,20,16)" fg:x="23557" fg:w="68"/><text x="18.8689%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (77 samples, 0.06%)</title><rect x="18.6181%" y="693" width="0.0609%" height="15" fill="rgb(244,172,18)" fg:x="23556" fg:w="77"/><text x="18.8681%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (81 samples, 0.06%)</title><rect x="18.6181%" y="709" width="0.0640%" height="15" fill="rgb(254,133,1)" fg:x="23556" fg:w="81"/><text x="18.8681%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge_in_place (248 samples, 0.20%)</title><rect x="18.4877%" y="725" width="0.1960%" height="15" fill="rgb(222,206,41)" fg:x="23391" fg:w="248"/><text x="18.7377%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (282 samples, 0.22%)</title><rect x="18.4687%" y="757" width="0.2229%" height="15" fill="rgb(212,3,42)" fg:x="23367" fg:w="282"/><text x="18.7187%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge (263 samples, 0.21%)</title><rect x="18.4837%" y="741" width="0.2079%" height="15" fill="rgb(241,11,4)" fg:x="23386" fg:w="263"/><text x="18.7337%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (56 samples, 0.04%)</title><rect x="18.7003%" y="693" width="0.0443%" height="15" fill="rgb(205,19,26)" fg:x="23660" fg:w="56"/><text x="18.9503%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (62 samples, 0.05%)</title><rect x="18.6995%" y="709" width="0.0490%" height="15" fill="rgb(210,179,32)" fg:x="23659" fg:w="62"/><text x="18.9495%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (64 samples, 0.05%)</title><rect x="18.6987%" y="725" width="0.0506%" height="15" fill="rgb(227,116,49)" fg:x="23658" fg:w="64"/><text x="18.9487%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Affine::set_gej (74 samples, 0.06%)</title><rect x="18.6916%" y="757" width="0.0585%" height="15" fill="rgb(211,146,6)" fg:x="23649" fg:w="74"/><text x="18.9416%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::inv (72 samples, 0.06%)</title><rect x="18.6932%" y="741" width="0.0569%" height="15" fill="rgb(219,44,39)" fg:x="23651" fg:w="72"/><text x="18.9432%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key (358 samples, 0.28%)</title><rect x="18.4679%" y="789" width="0.2830%" height="15" fill="rgb(234,128,11)" fg:x="23366" fg:w="358"/><text x="18.7179%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key_with_context (358 samples, 0.28%)</title><rect x="18.4679%" y="773" width="0.2830%" height="15" fill="rgb(220,183,53)" fg:x="23366" fg:w="358"/><text x="18.7179%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (13 samples, 0.01%)</title><rect x="18.7627%" y="709" width="0.0103%" height="15" fill="rgb(213,219,32)" fg:x="23739" fg:w="13"/><text x="19.0127%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`digest::fixed::FixedOutput::finalize_fixed (13 samples, 0.01%)</title><rect x="18.7627%" y="693" width="0.0103%" height="15" fill="rgb(232,156,16)" fg:x="23739" fg:w="13"/><text x="19.0127%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::generate (39 samples, 0.03%)</title><rect x="18.7509%" y="757" width="0.0308%" height="15" fill="rgb(246,135,34)" fg:x="23724" fg:w="39"/><text x="19.0009%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::generate_to_slice (39 samples, 0.03%)</title><rect x="18.7509%" y="741" width="0.0308%" height="15" fill="rgb(241,99,0)" fg:x="23724" fg:w="39"/><text x="19.0009%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::update (24 samples, 0.02%)</title><rect x="18.7627%" y="725" width="0.0190%" height="15" fill="rgb(222,103,45)" fg:x="23739" fg:w="24"/><text x="19.0127%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (17 samples, 0.01%)</title><rect x="18.7849%" y="693" width="0.0134%" height="15" fill="rgb(212,57,4)" fg:x="23767" fg:w="17"/><text x="19.0349%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (17 samples, 0.01%)</title><rect x="18.7849%" y="677" width="0.0134%" height="15" fill="rgb(215,68,47)" fg:x="23767" fg:w="17"/><text x="19.0349%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::finish (17 samples, 0.01%)</title><rect x="18.7849%" y="661" width="0.0134%" height="15" fill="rgb(230,84,2)" fg:x="23767" fg:w="17"/><text x="19.0349%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (17 samples, 0.01%)</title><rect x="18.7849%" y="645" width="0.0134%" height="15" fill="rgb(220,102,14)" fg:x="23767" fg:w="17"/><text x="19.0349%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::finish::_{{closure}} (17 samples, 0.01%)</title><rect x="18.7849%" y="629" width="0.0134%" height="15" fill="rgb(240,10,32)" fg:x="23767" fg:w="17"/><text x="19.0349%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::compress256 (17 samples, 0.01%)</title><rect x="18.7849%" y="613" width="0.0134%" height="15" fill="rgb(215,47,27)" fg:x="23767" fg:w="17"/><text x="19.0349%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::soft::compress (17 samples, 0.01%)</title><rect x="18.7849%" y="597" width="0.0134%" height="15" fill="rgb(233,188,43)" fg:x="23767" fg:w="17"/><text x="19.0349%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (21 samples, 0.02%)</title><rect x="18.7825%" y="725" width="0.0166%" height="15" fill="rgb(253,190,1)" fg:x="23764" fg:w="21"/><text x="19.0325%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`digest::fixed::FixedOutput::finalize_fixed (18 samples, 0.01%)</title><rect x="18.7849%" y="709" width="0.0142%" height="15" fill="rgb(206,114,52)" fg:x="23767" fg:w="18"/><text x="19.0349%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_varkey (24 samples, 0.02%)</title><rect x="18.8031%" y="709" width="0.0190%" height="15" fill="rgb(233,120,37)" fg:x="23790" fg:w="24"/><text x="19.0531%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (14 samples, 0.01%)</title><rect x="18.8110%" y="693" width="0.0111%" height="15" fill="rgb(214,52,39)" fg:x="23800" fg:w="14"/><text x="19.0610%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::update (13 samples, 0.01%)</title><rect x="18.8117%" y="677" width="0.0103%" height="15" fill="rgb(223,80,29)" fg:x="23801" fg:w="13"/><text x="19.0617%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (13 samples, 0.01%)</title><rect x="18.8117%" y="661" width="0.0103%" height="15" fill="rgb(230,101,40)" fg:x="23801" fg:w="13"/><text x="19.0617%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::update::_{{closure}} (13 samples, 0.01%)</title><rect x="18.8117%" y="645" width="0.0103%" height="15" fill="rgb(219,211,8)" fg:x="23801" fg:w="13"/><text x="19.0617%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::compress256 (13 samples, 0.01%)</title><rect x="18.8117%" y="629" width="0.0103%" height="15" fill="rgb(252,126,28)" fg:x="23801" fg:w="13"/><text x="19.0617%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::new (52 samples, 0.04%)</title><rect x="18.7817%" y="757" width="0.0411%" height="15" fill="rgb(215,56,38)" fg:x="23763" fg:w="52"/><text x="19.0317%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::update (51 samples, 0.04%)</title><rect x="18.7825%" y="741" width="0.0403%" height="15" fill="rgb(249,55,44)" fg:x="23764" fg:w="51"/><text x="19.0325%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hmac_drbg::HmacDRBG&lt;D&gt;::hmac (25 samples, 0.02%)</title><rect x="18.8031%" y="725" width="0.0198%" height="15" fill="rgb(220,221,32)" fg:x="23790" fg:w="25"/><text x="19.0531%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::AddAssign&gt;::add_assign (13 samples, 0.01%)</title><rect x="18.8489%" y="693" width="0.0103%" height="15" fill="rgb(212,216,41)" fg:x="23848" fg:w="13"/><text x="19.0989%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::AddAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::add_assign (13 samples, 0.01%)</title><rect x="18.8489%" y="677" width="0.0103%" height="15" fill="rgb(228,213,43)" fg:x="23848" fg:w="13"/><text x="19.0989%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (72 samples, 0.06%)</title><rect x="18.8615%" y="661" width="0.0569%" height="15" fill="rgb(211,31,26)" fg:x="23864" fg:w="72"/><text x="19.1115%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::Mul&gt;::mul (91 samples, 0.07%)</title><rect x="18.8592%" y="693" width="0.0719%" height="15" fill="rgb(229,202,19)" fg:x="23861" fg:w="91"/><text x="19.1092%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (90 samples, 0.07%)</title><rect x="18.8600%" y="677" width="0.0711%" height="15" fill="rgb(229,105,46)" fg:x="23862" fg:w="90"/><text x="19.1100%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (16 samples, 0.01%)</title><rect x="18.9184%" y="661" width="0.0126%" height="15" fill="rgb(235,108,1)" fg:x="23936" fg:w="16"/><text x="19.1684%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (35 samples, 0.03%)</title><rect x="18.9319%" y="645" width="0.0277%" height="15" fill="rgb(245,111,35)" fg:x="23953" fg:w="35"/><text x="19.1819%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (39 samples, 0.03%)</title><rect x="18.9319%" y="661" width="0.0308%" height="15" fill="rgb(219,185,31)" fg:x="23953" fg:w="39"/><text x="19.1819%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&gt;::mul_assign (40 samples, 0.03%)</title><rect x="18.9319%" y="693" width="0.0316%" height="15" fill="rgb(214,4,43)" fg:x="23953" fg:w="40"/><text x="19.1819%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::mul_assign (40 samples, 0.03%)</title><rect x="18.9319%" y="677" width="0.0316%" height="15" fill="rgb(235,227,40)" fg:x="23953" fg:w="40"/><text x="19.1819%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (59 samples, 0.05%)</title><rect x="18.9841%" y="661" width="0.0466%" height="15" fill="rgb(230,88,30)" fg:x="24019" fg:w="59"/><text x="19.2341%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (69 samples, 0.05%)</title><rect x="18.9841%" y="677" width="0.0545%" height="15" fill="rgb(216,217,1)" fg:x="24019" fg:w="69"/><text x="19.2341%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (71 samples, 0.06%)</title><rect x="18.9833%" y="693" width="0.0561%" height="15" fill="rgb(248,139,50)" fg:x="24018" fg:w="71"/><text x="19.2333%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge_in_place (244 samples, 0.19%)</title><rect x="18.8473%" y="709" width="0.1929%" height="15" fill="rgb(233,1,21)" fg:x="23846" fg:w="244"/><text x="19.0973%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge (257 samples, 0.20%)</title><rect x="18.8402%" y="725" width="0.2031%" height="15" fill="rgb(215,183,12)" fg:x="23837" fg:w="257"/><text x="19.0902%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (275 samples, 0.22%)</title><rect x="18.8268%" y="741" width="0.2174%" height="15" fill="rgb(229,104,42)" fg:x="23820" fg:w="275"/><text x="19.0768%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (46 samples, 0.04%)</title><rect x="19.0481%" y="677" width="0.0364%" height="15" fill="rgb(243,34,48)" fg:x="24100" fg:w="46"/><text x="19.2981%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (51 samples, 0.04%)</title><rect x="19.0481%" y="709" width="0.0403%" height="15" fill="rgb(239,11,44)" fg:x="24100" fg:w="51"/><text x="19.2981%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (51 samples, 0.04%)</title><rect x="19.0481%" y="693" width="0.0403%" height="15" fill="rgb(231,98,35)" fg:x="24100" fg:w="51"/><text x="19.2981%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Affine::set_gej (56 samples, 0.04%)</title><rect x="19.0449%" y="741" width="0.0443%" height="15" fill="rgb(233,28,25)" fg:x="24096" fg:w="56"/><text x="19.2949%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::inv (56 samples, 0.04%)</title><rect x="19.0449%" y="725" width="0.0443%" height="15" fill="rgb(234,123,11)" fg:x="24096" fg:w="56"/><text x="19.2949%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::scalar::Scalar as core::ops::arith::Mul&gt;::mul (13 samples, 0.01%)</title><rect x="19.0892%" y="709" width="0.0103%" height="15" fill="rgb(220,69,3)" fg:x="24152" fg:w="13"/><text x="19.3392%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::mul_in_place (13 samples, 0.01%)</title><rect x="19.0892%" y="693" width="0.0103%" height="15" fill="rgb(214,64,36)" fg:x="24152" fg:w="13"/><text x="19.3392%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::mul_512 (22 samples, 0.02%)</title><rect x="19.0994%" y="677" width="0.0174%" height="15" fill="rgb(211,138,32)" fg:x="24165" fg:w="22"/><text x="19.3494%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::scalar::Scalar as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::scalar::Scalar&gt;&gt;::mul_assign (49 samples, 0.04%)</title><rect x="19.0994%" y="709" width="0.0387%" height="15" fill="rgb(213,118,47)" fg:x="24165" fg:w="49"/><text x="19.3494%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::mul_in_place (49 samples, 0.04%)</title><rect x="19.0994%" y="693" width="0.0387%" height="15" fill="rgb(243,124,49)" fg:x="24165" fg:w="49"/><text x="19.3494%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::reduce_512 (27 samples, 0.02%)</title><rect x="19.1168%" y="677" width="0.0213%" height="15" fill="rgb(221,30,28)" fg:x="24187" fg:w="27"/><text x="19.3668%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (14 samples, 0.01%)</title><rect x="19.2907%" y="645" width="0.0111%" height="15" fill="rgb(246,37,13)" fg:x="24407" fg:w="14"/><text x="19.5407%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::check_overflow (32 samples, 0.03%)</title><rect x="19.2891%" y="661" width="0.0253%" height="15" fill="rgb(249,66,14)" fg:x="24405" fg:w="32"/><text x="19.5391%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::reduce_512 (226 samples, 0.18%)</title><rect x="19.1390%" y="677" width="0.1786%" height="15" fill="rgb(213,166,5)" fg:x="24215" fg:w="226"/><text x="19.3890%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::inv (461 samples, 0.36%)</title><rect x="19.0892%" y="741" width="0.3644%" height="15" fill="rgb(221,66,24)" fg:x="24152" fg:w="461"/><text x="19.3392%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::inv_in_place (461 samples, 0.36%)</title><rect x="19.0892%" y="725" width="0.3644%" height="15" fill="rgb(210,132,17)" fg:x="24152" fg:w="461"/><text x="19.3392%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::sqr (398 samples, 0.31%)</title><rect x="19.1390%" y="709" width="0.3146%" height="15" fill="rgb(243,202,5)" fg:x="24215" fg:w="398"/><text x="19.3890%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::sqr_in_place (398 samples, 0.31%)</title><rect x="19.1390%" y="693" width="0.3146%" height="15" fill="rgb(233,70,48)" fg:x="24215" fg:w="398"/><text x="19.3890%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::scalar::Scalar::sqr_512 (172 samples, 0.14%)</title><rect x="19.3176%" y="677" width="0.1359%" height="15" fill="rgb(238,41,26)" fg:x="24441" fg:w="172"/><text x="19.5676%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::file_metadata::FileMetadata::sign (1,265 samples, 1.00%)</title><rect x="18.4553%" y="821" width="0.9998%" height="15" fill="rgb(241,19,31)" fg:x="23350" fg:w="1265"/><text x="18.7053%" y="831.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::pubkey::sign (1,265 samples, 1.00%)</title><rect x="18.4553%" y="805" width="0.9998%" height="15" fill="rgb(214,76,10)" fg:x="23350" fg:w="1265"/><text x="18.7053%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::sign (891 samples, 0.70%)</title><rect x="18.7509%" y="789" width="0.7042%" height="15" fill="rgb(254,202,22)" fg:x="23724" fg:w="891"/><text x="19.0009%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::sign_with_context (891 samples, 0.70%)</title><rect x="18.7509%" y="773" width="0.7042%" height="15" fill="rgb(214,72,24)" fg:x="23724" fg:w="891"/><text x="19.0009%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecdsa::_&lt;impl libsecp256k1_core::ecmult::ECMultGenContext&gt;::sign_raw (800 samples, 0.63%)</title><rect x="18.8228%" y="757" width="0.6323%" height="15" fill="rgb(221,92,46)" fg:x="23815" fg:w="800"/><text x="19.0728%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;D as digest::digest::Digest&gt;::digest (15 samples, 0.01%)</title><rect x="19.4551%" y="757" width="0.0119%" height="15" fill="rgb(246,13,50)" fg:x="24615" fg:w="15"/><text x="19.7051%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (15 samples, 0.01%)</title><rect x="19.4551%" y="741" width="0.0119%" height="15" fill="rgb(240,165,38)" fg:x="24615" fg:w="15"/><text x="19.7051%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::update (15 samples, 0.01%)</title><rect x="19.4551%" y="725" width="0.0119%" height="15" fill="rgb(241,24,51)" fg:x="24615" fg:w="15"/><text x="19.7051%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (15 samples, 0.01%)</title><rect x="19.4551%" y="709" width="0.0119%" height="15" fill="rgb(227,51,44)" fg:x="24615" fg:w="15"/><text x="19.7051%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::Engine256::update::_{{closure}} (15 samples, 0.01%)</title><rect x="19.4551%" y="693" width="0.0119%" height="15" fill="rgb(231,121,3)" fg:x="24615" fg:w="15"/><text x="19.7051%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::compress256 (15 samples, 0.01%)</title><rect x="19.4551%" y="677" width="0.0119%" height="15" fill="rgb(245,3,41)" fg:x="24615" fg:w="15"/><text x="19.7051%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`sha2::sha256::soft::compress (14 samples, 0.01%)</title><rect x="19.4559%" y="661" width="0.0111%" height="15" fill="rgb(214,13,26)" fg:x="24616" fg:w="14"/><text x="19.7059%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::pubkey::sign (19 samples, 0.02%)</title><rect x="19.4551%" y="773" width="0.0150%" height="15" fill="rgb(252,75,11)" fg:x="24615" fg:w="19"/><text x="19.7051%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::network::Network::request::_{{closure}}::_{{closure}} (41 samples, 0.03%)</title><rect x="19.4551%" y="805" width="0.0324%" height="15" fill="rgb(218,226,17)" fg:x="24615" fg:w="41"/><text x="19.7051%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::network::Network::request::_{{closure}}::_{{closure}}::_{{closure}} (41 samples, 0.03%)</title><rect x="19.4551%" y="789" width="0.0324%" height="15" fill="rgb(248,89,38)" fg:x="24615" fg:w="41"/><text x="19.7051%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde_json::ser::to_vec (22 samples, 0.02%)</title><rect x="19.4701%" y="773" width="0.0174%" height="15" fill="rgb(237,73,46)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde_json::ser::to_writer (22 samples, 0.02%)</title><rect x="19.4701%" y="757" width="0.0174%" height="15" fill="rgb(242,78,33)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::api::_::_&lt;impl serde::ser::Serialize for lb_rs::model::api::RequestWrapper&lt;T&gt;&gt;::serialize (22 samples, 0.02%)</title><rect x="19.4701%" y="741" width="0.0174%" height="15" fill="rgb(235,60,3)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 0.02%)</title><rect x="19.4701%" y="725" width="0.0174%" height="15" fill="rgb(216,172,19)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde::ser::SerializeMap::serialize_entry (22 samples, 0.02%)</title><rect x="19.4701%" y="709" width="0.0174%" height="15" fill="rgb(227,6,42)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (22 samples, 0.02%)</title><rect x="19.4701%" y="693" width="0.0174%" height="15" fill="rgb(223,207,42)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::crypto::_::_&lt;impl serde::ser::Serialize for lb_rs::logic::crypto::ECSigned&lt;T&gt;&gt;::serialize (22 samples, 0.02%)</title><rect x="19.4701%" y="677" width="0.0174%" height="15" fill="rgb(246,138,30)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 0.02%)</title><rect x="19.4701%" y="661" width="0.0174%" height="15" fill="rgb(251,199,47)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde::ser::SerializeMap::serialize_entry (22 samples, 0.02%)</title><rect x="19.4701%" y="645" width="0.0174%" height="15" fill="rgb(228,218,44)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (22 samples, 0.02%)</title><rect x="19.4701%" y="629" width="0.0174%" height="15" fill="rgb(220,68,6)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::crypto::_::_&lt;impl serde::ser::Serialize for lb_rs::logic::crypto::Timestamped&lt;T&gt;&gt;::serialize (22 samples, 0.02%)</title><rect x="19.4701%" y="613" width="0.0174%" height="15" fill="rgb(240,60,26)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 0.02%)</title><rect x="19.4701%" y="597" width="0.0174%" height="15" fill="rgb(211,200,19)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde::ser::SerializeMap::serialize_entry (22 samples, 0.02%)</title><rect x="19.4701%" y="581" width="0.0174%" height="15" fill="rgb(242,145,30)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (22 samples, 0.02%)</title><rect x="19.4701%" y="565" width="0.0174%" height="15" fill="rgb(225,64,13)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::api::_::_&lt;impl serde::ser::Serialize for lb_rs::model::api::UpsertRequest&gt;::serialize (22 samples, 0.02%)</title><rect x="19.4701%" y="549" width="0.0174%" height="15" fill="rgb(218,103,35)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 0.02%)</title><rect x="19.4701%" y="533" width="0.0174%" height="15" fill="rgb(216,93,46)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde::ser::SerializeMap::serialize_entry (22 samples, 0.02%)</title><rect x="19.4701%" y="517" width="0.0174%" height="15" fill="rgb(225,159,27)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (22 samples, 0.02%)</title><rect x="19.4701%" y="501" width="0.0174%" height="15" fill="rgb(225,204,11)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (22 samples, 0.02%)</title><rect x="19.4701%" y="485" width="0.0174%" height="15" fill="rgb(205,56,4)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde::ser::Serializer::collect_seq (22 samples, 0.02%)</title><rect x="19.4701%" y="469" width="0.0174%" height="15" fill="rgb(206,6,35)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::try_for_each (22 samples, 0.02%)</title><rect x="19.4701%" y="453" width="0.0174%" height="15" fill="rgb(247,73,52)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::try_fold (22 samples, 0.02%)</title><rect x="19.4701%" y="437" width="0.0174%" height="15" fill="rgb(246,97,4)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (22 samples, 0.02%)</title><rect x="19.4701%" y="421" width="0.0174%" height="15" fill="rgb(212,37,15)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde::ser::Serializer::collect_seq::_{{closure}} (22 samples, 0.02%)</title><rect x="19.4701%" y="405" width="0.0174%" height="15" fill="rgb(208,130,40)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (22 samples, 0.02%)</title><rect x="19.4701%" y="389" width="0.0174%" height="15" fill="rgb(236,55,29)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (22 samples, 0.02%)</title><rect x="19.4701%" y="373" width="0.0174%" height="15" fill="rgb(209,156,45)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::file_metadata::_::_&lt;impl serde::ser::Serialize for lb_rs::model::file_metadata::FileDiff&lt;F&gt;&gt;::serialize (22 samples, 0.02%)</title><rect x="19.4701%" y="357" width="0.0174%" height="15" fill="rgb(249,107,4)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 0.02%)</title><rect x="19.4701%" y="341" width="0.0174%" height="15" fill="rgb(227,7,13)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde::ser::SerializeMap::serialize_entry (22 samples, 0.02%)</title><rect x="19.4701%" y="325" width="0.0174%" height="15" fill="rgb(250,129,14)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (22 samples, 0.02%)</title><rect x="19.4701%" y="309" width="0.0174%" height="15" fill="rgb(229,92,13)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::crypto::_::_&lt;impl serde::ser::Serialize for lb_rs::logic::crypto::ECSigned&lt;T&gt;&gt;::serialize (22 samples, 0.02%)</title><rect x="19.4701%" y="293" width="0.0174%" height="15" fill="rgb(245,98,39)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 0.02%)</title><rect x="19.4701%" y="277" width="0.0174%" height="15" fill="rgb(234,135,48)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde::ser::SerializeMap::serialize_entry (22 samples, 0.02%)</title><rect x="19.4701%" y="261" width="0.0174%" height="15" fill="rgb(230,98,28)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (22 samples, 0.02%)</title><rect x="19.4701%" y="245" width="0.0174%" height="15" fill="rgb(223,121,0)" fg:x="24634" fg:w="22"/><text x="19.7201%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::crypto::_::_&lt;impl serde::ser::Serialize for lb_rs::logic::crypto::Timestamped&lt;T&gt;&gt;::serialize (18 samples, 0.01%)</title><rect x="19.4733%" y="229" width="0.0142%" height="15" fill="rgb(234,173,33)" fg:x="24638" fg:w="18"/><text x="19.7233%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 0.01%)</title><rect x="19.4733%" y="213" width="0.0142%" height="15" fill="rgb(245,47,8)" fg:x="24638" fg:w="18"/><text x="19.7233%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde::ser::SerializeMap::serialize_entry (18 samples, 0.01%)</title><rect x="19.4733%" y="197" width="0.0142%" height="15" fill="rgb(205,17,20)" fg:x="24638" fg:w="18"/><text x="19.7233%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 0.01%)</title><rect x="19.4733%" y="181" width="0.0142%" height="15" fill="rgb(232,151,16)" fg:x="24638" fg:w="18"/><text x="19.7233%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::file_metadata::_::_&lt;impl serde::ser::Serialize for lb_rs::model::file_metadata::FileMetadata&gt;::serialize (18 samples, 0.01%)</title><rect x="19.4733%" y="165" width="0.0142%" height="15" fill="rgb(208,30,32)" fg:x="24638" fg:w="18"/><text x="19.7233%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 0.01%)</title><rect x="19.4733%" y="149" width="0.0142%" height="15" fill="rgb(254,26,3)" fg:x="24638" fg:w="18"/><text x="19.7233%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde::ser::SerializeMap::serialize_entry (18 samples, 0.01%)</title><rect x="19.4733%" y="133" width="0.0142%" height="15" fill="rgb(240,177,30)" fg:x="24638" fg:w="18"/><text x="19.7233%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 0.01%)</title><rect x="19.4749%" y="117" width="0.0126%" height="15" fill="rgb(248,76,44)" fg:x="24640" fg:w="16"/><text x="19.7249%" y="127.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::sync::_&lt;impl lb_rs::Lb&gt;::sync::_{{closure}} (4,755 samples, 3.76%)</title><rect x="15.7301%" y="901" width="3.7582%" height="15" fill="rgb(241,186,54)" fg:x="19902" fg:w="4755"/><text x="15.9801%" y="911.50">get_..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::sync::_&lt;impl lb_rs::Lb&gt;::sync::_{{closure}}::_{{closure}} (4,755 samples, 3.76%)</title><rect x="15.7301%" y="885" width="3.7582%" height="15" fill="rgb(249,171,29)" fg:x="19902" fg:w="4755"/><text x="15.9801%" y="895.50">get_..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::sync::_&lt;impl lb_rs::Lb&gt;::sync::_{{closure}}::_{{closure}}::_{{closure}} (4,755 samples, 3.76%)</title><rect x="15.7301%" y="869" width="3.7582%" height="15" fill="rgb(237,151,44)" fg:x="19902" fg:w="4755"/><text x="15.9801%" y="879.50">get_..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::sync::_&lt;impl lb_rs::Lb&gt;::sync::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (4,754 samples, 3.76%)</title><rect x="15.7309%" y="853" width="3.7574%" height="15" fill="rgb(228,174,30)" fg:x="19903" fg:w="4754"/><text x="15.9809%" y="863.50">get_..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::sync::_&lt;impl lb_rs::Lb&gt;::push_meta::_{{closure}} (1,309 samples, 1.03%)</title><rect x="18.4537%" y="837" width="1.0346%" height="15" fill="rgb(252,14,37)" fg:x="23348" fg:w="1309"/><text x="18.7037%" y="847.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::network::Network::request::_{{closure}} (42 samples, 0.03%)</title><rect x="19.4551%" y="821" width="0.0332%" height="15" fill="rgb(207,111,40)" fg:x="24615" fg:w="42"/><text x="19.7051%" y="831.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`test_utils::test_core_with_account::_{{closure}} (41 samples, 0.03%)</title><rect x="19.4883%" y="901" width="0.0324%" height="15" fill="rgb(248,171,54)" fg:x="24657" fg:w="41"/><text x="19.7383%" y="911.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`test_utils::test_core::_{{closure}} (37 samples, 0.03%)</title><rect x="19.4915%" y="885" width="0.0292%" height="15" fill="rgb(211,127,2)" fg:x="24661" fg:w="37"/><text x="19.7415%" y="895.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::Lb::init::_{{closure}} (37 samples, 0.03%)</title><rect x="19.4915%" y="869" width="0.0292%" height="15" fill="rgb(236,87,47)" fg:x="24661" fg:w="37"/><text x="19.7415%" y="879.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::Lb::init::_{{closure}}::_{{closure}} (37 samples, 0.03%)</title><rect x="19.4915%" y="853" width="0.0292%" height="15" fill="rgb(223,190,45)" fg:x="24661" fg:w="37"/><text x="19.7415%" y="863.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::Lb::init::_{{closure}}::_{{closure}}::_{{closure}} (37 samples, 0.03%)</title><rect x="19.4915%" y="837" width="0.0292%" height="15" fill="rgb(215,5,16)" fg:x="24661" fg:w="37"/><text x="19.7415%" y="847.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::service::network::Network as core::default::Default&gt;::default (36 samples, 0.03%)</title><rect x="19.4923%" y="821" width="0.0285%" height="15" fill="rgb(252,82,33)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="831.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;reqwest::async_impl::client::Client as core::default::Default&gt;::default (36 samples, 0.03%)</title><rect x="19.4923%" y="805" width="0.0285%" height="15" fill="rgb(247,213,44)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="815.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`reqwest::async_impl::client::Client::new (36 samples, 0.03%)</title><rect x="19.4923%" y="789" width="0.0285%" height="15" fill="rgb(205,196,44)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="799.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`reqwest::async_impl::client::ClientBuilder::build (36 samples, 0.03%)</title><rect x="19.4923%" y="773" width="0.0285%" height="15" fill="rgb(237,96,54)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="783.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`reqwest::proxy::Proxy::system (36 samples, 0.03%)</title><rect x="19.4923%" y="757" width="0.0285%" height="15" fill="rgb(230,113,34)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="767.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (36 samples, 0.03%)</title><rect x="19.4923%" y="741" width="0.0285%" height="15" fill="rgb(221,224,12)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="751.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`once_cell::sync::Lazy&lt;T,F&gt;::force (36 samples, 0.03%)</title><rect x="19.4923%" y="725" width="0.0285%" height="15" fill="rgb(219,112,44)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="735.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (36 samples, 0.03%)</title><rect x="19.4923%" y="709" width="0.0285%" height="15" fill="rgb(210,31,13)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="719.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (36 samples, 0.03%)</title><rect x="19.4923%" y="693" width="0.0285%" height="15" fill="rgb(230,25,16)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="703.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`once_cell::imp::OnceCell&lt;T&gt;::initialize (36 samples, 0.03%)</title><rect x="19.4923%" y="677" width="0.0285%" height="15" fill="rgb(246,108,53)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="687.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`once_cell::imp::initialize_or_wait (36 samples, 0.03%)</title><rect x="19.4923%" y="661" width="0.0285%" height="15" fill="rgb(241,172,50)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="671.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (36 samples, 0.03%)</title><rect x="19.4923%" y="645" width="0.0285%" height="15" fill="rgb(235,141,10)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (36 samples, 0.03%)</title><rect x="19.4923%" y="629" width="0.0285%" height="15" fill="rgb(220,174,43)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (36 samples, 0.03%)</title><rect x="19.4923%" y="613" width="0.0285%" height="15" fill="rgb(215,181,40)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (36 samples, 0.03%)</title><rect x="19.4923%" y="597" width="0.0285%" height="15" fill="rgb(230,97,2)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::FnOnce::call_once (36 samples, 0.03%)</title><rect x="19.4923%" y="581" width="0.0285%" height="15" fill="rgb(211,25,27)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::FnOnce::call_once (36 samples, 0.03%)</title><rect x="19.4923%" y="565" width="0.0285%" height="15" fill="rgb(230,87,26)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`reqwest::proxy::SYS_PROXIES::_{{closure}} (36 samples, 0.03%)</title><rect x="19.4923%" y="549" width="0.0285%" height="15" fill="rgb(227,160,17)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`reqwest::proxy::get_from_platform (36 samples, 0.03%)</title><rect x="19.4923%" y="533" width="0.0285%" height="15" fill="rgb(244,85,34)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`reqwest::proxy::get_from_platform_impl (36 samples, 0.03%)</title><rect x="19.4923%" y="517" width="0.0285%" height="15" fill="rgb(207,70,0)" fg:x="24662" fg:w="36"/><text x="19.7423%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`system_configuration::dynamic_store::SCDynamicStoreBuilder&lt;T&gt;::build (35 samples, 0.03%)</title><rect x="19.4931%" y="501" width="0.0277%" height="15" fill="rgb(223,129,7)" fg:x="24663" fg:w="35"/><text x="19.7431%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`system_configuration::dynamic_store::SCDynamicStore::create (35 samples, 0.03%)</title><rect x="19.4931%" y="485" width="0.0277%" height="15" fill="rgb(246,105,7)" fg:x="24663" fg:w="35"/><text x="19.7431%" y="495.50"></text></g><g><title>SystemConfiguration`SCDynamicStoreCreateWithOptions (35 samples, 0.03%)</title><rect x="19.4931%" y="469" width="0.0277%" height="15" fill="rgb(215,154,42)" fg:x="24663" fg:w="35"/><text x="19.7431%" y="479.50"></text></g><g><title>SystemConfiguration`_SC_getApplicationBundleID (35 samples, 0.03%)</title><rect x="19.4931%" y="453" width="0.0277%" height="15" fill="rgb(220,215,30)" fg:x="24663" fg:w="35"/><text x="19.7431%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (35 samples, 0.03%)</title><rect x="19.4931%" y="437" width="0.0277%" height="15" fill="rgb(228,81,51)" fg:x="24663" fg:w="35"/><text x="19.7431%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (35 samples, 0.03%)</title><rect x="19.4931%" y="421" width="0.0277%" height="15" fill="rgb(247,71,54)" fg:x="24663" fg:w="35"/><text x="19.7431%" y="431.50"></text></g><g><title>SystemConfiguration`___SC_getApplicationBundleID_block_invoke (35 samples, 0.03%)</title><rect x="19.4931%" y="405" width="0.0277%" height="15" fill="rgb(234,176,34)" fg:x="24663" fg:w="35"/><text x="19.7431%" y="415.50"></text></g><g><title>CoreFoundation`CFBundleGetMainBundle (35 samples, 0.03%)</title><rect x="19.4931%" y="389" width="0.0277%" height="15" fill="rgb(241,103,54)" fg:x="24663" fg:w="35"/><text x="19.7431%" y="399.50"></text></g><g><title>CoreFoundation`_CFBundleCreate (35 samples, 0.03%)</title><rect x="19.4931%" y="373" width="0.0277%" height="15" fill="rgb(228,22,34)" fg:x="24663" fg:w="35"/><text x="19.7431%" y="383.50"></text></g><g><title>CoreFoundation`_CFBundleGetBundleVersionForURL (28 samples, 0.02%)</title><rect x="19.4986%" y="357" width="0.0221%" height="15" fill="rgb(241,179,48)" fg:x="24670" fg:w="28"/><text x="19.7486%" y="367.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (28 samples, 0.02%)</title><rect x="19.4986%" y="341" width="0.0221%" height="15" fill="rgb(235,167,37)" fg:x="24670" fg:w="28"/><text x="19.7486%" y="351.50"></text></g><g><title>libsystem_c.dylib`readdir (25 samples, 0.02%)</title><rect x="19.5010%" y="325" width="0.0198%" height="15" fill="rgb(213,109,30)" fg:x="24673" fg:w="25"/><text x="19.7510%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__getdirentries64 (25 samples, 0.02%)</title><rect x="19.5010%" y="309" width="0.0198%" height="15" fill="rgb(222,172,16)" fg:x="24673" fg:w="25"/><text x="19.7510%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::Context::enter (24,696 samples, 19.52%)</title><rect x="0.0032%" y="997" width="19.5191%" height="15" fill="rgb(233,192,5)" fg:x="4" fg:w="24696"/><text x="0.2532%" y="1007.50">get_usage_tests-cf82cbf4ae04dd7..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}}::_{{closure}} (24,696 samples, 19.52%)</title><rect x="0.0032%" y="981" width="19.5191%" height="15" fill="rgb(247,189,41)" fg:x="4" fg:w="24696"/><text x="0.2532%" y="991.50">get_usage_tests-cf82cbf4ae04dd7..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}}::_{{closure}}::_{{closure}} (24,696 samples, 19.52%)</title><rect x="0.0032%" y="965" width="19.5191%" height="15" fill="rgb(218,134,47)" fg:x="4" fg:w="24696"/><text x="0.2532%" y="975.50">get_usage_tests-cf82cbf4ae04dd7..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (24,696 samples, 19.52%)</title><rect x="0.0032%" y="949" width="19.5191%" height="15" fill="rgb(216,29,3)" fg:x="4" fg:w="24696"/><text x="0.2532%" y="959.50">get_usage_tests-cf82cbf4ae04dd7..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (24,696 samples, 19.52%)</title><rect x="0.0032%" y="933" width="19.5191%" height="15" fill="rgb(246,140,12)" fg:x="4" fg:w="24696"/><text x="0.2532%" y="943.50">get_usage_tests-cf82cbf4ae04dd7..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`get_usage_tests::upsert_meta_empty_folder_over_data_cap::_{{closure}} (24,696 samples, 19.52%)</title><rect x="0.0032%" y="917" width="19.5191%" height="15" fill="rgb(230,136,11)" fg:x="4" fg:w="24696"/><text x="0.2532%" y="927.50">get_usage_tests-cf82cbf4ae04dd7..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::calculate_deleted (42 samples, 0.03%)</title><rect x="19.5515%" y="645" width="0.0332%" height="15" fill="rgb(247,22,47)" fg:x="24737" fg:w="42"/><text x="19.8015%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (16 samples, 0.01%)</title><rect x="19.5903%" y="629" width="0.0126%" height="15" fill="rgb(218,84,22)" fg:x="24786" fg:w="16"/><text x="19.8403%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (71 samples, 0.06%)</title><rect x="19.7231%" y="613" width="0.0561%" height="15" fill="rgb(216,87,39)" fg:x="24954" fg:w="71"/><text x="19.9731%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (40 samples, 0.03%)</title><rect x="19.9072%" y="549" width="0.0316%" height="15" fill="rgb(221,178,8)" fg:x="25187" fg:w="40"/><text x="20.1572%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.05%)</title><rect x="19.9507%" y="533" width="0.0466%" height="15" fill="rgb(230,42,11)" fg:x="25242" fg:w="59"/><text x="20.2007%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (17 samples, 0.01%)</title><rect x="20.0052%" y="533" width="0.0134%" height="15" fill="rgb(237,229,4)" fg:x="25311" fg:w="17"/><text x="20.2552%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (85 samples, 0.07%)</title><rect x="20.0289%" y="533" width="0.0672%" height="15" fill="rgb(222,31,33)" fg:x="25341" fg:w="85"/><text x="20.2789%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (334 samples, 0.26%)</title><rect x="19.8424%" y="581" width="0.2640%" height="15" fill="rgb(210,17,39)" fg:x="25105" fg:w="334"/><text x="20.0924%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (270 samples, 0.21%)</title><rect x="19.8930%" y="565" width="0.2134%" height="15" fill="rgb(244,93,20)" fg:x="25169" fg:w="270"/><text x="20.1430%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (212 samples, 0.17%)</title><rect x="19.9388%" y="549" width="0.1676%" height="15" fill="rgb(210,40,47)" fg:x="25227" fg:w="212"/><text x="20.1888%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (13 samples, 0.01%)</title><rect x="20.0961%" y="533" width="0.0103%" height="15" fill="rgb(239,211,47)" fg:x="25426" fg:w="13"/><text x="20.3461%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (409 samples, 0.32%)</title><rect x="19.7855%" y="613" width="0.3233%" height="15" fill="rgb(251,223,49)" fg:x="25033" fg:w="409"/><text x="20.0355%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (404 samples, 0.32%)</title><rect x="19.7894%" y="597" width="0.3193%" height="15" fill="rgb(221,149,5)" fg:x="25038" fg:w="404"/><text x="20.0394%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.01%)</title><rect x="20.2186%" y="469" width="0.0103%" height="15" fill="rgb(219,224,51)" fg:x="25581" fg:w="13"/><text x="20.4686%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (87 samples, 0.07%)</title><rect x="20.2289%" y="469" width="0.0688%" height="15" fill="rgb(223,7,8)" fg:x="25594" fg:w="87"/><text x="20.4789%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (601 samples, 0.48%)</title><rect x="20.2147%" y="485" width="0.4750%" height="15" fill="rgb(241,217,22)" fg:x="25576" fg:w="601"/><text x="20.4647%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (496 samples, 0.39%)</title><rect x="20.2977%" y="469" width="0.3920%" height="15" fill="rgb(248,209,0)" fg:x="25681" fg:w="496"/><text x="20.5477%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (61 samples, 0.05%)</title><rect x="20.6897%" y="485" width="0.0482%" height="15" fill="rgb(217,205,4)" fg:x="26177" fg:w="61"/><text x="20.9397%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`DYLD-STUB$$memcpy (15 samples, 0.01%)</title><rect x="20.7403%" y="485" width="0.0119%" height="15" fill="rgb(228,124,39)" fg:x="26241" fg:w="15"/><text x="20.9903%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (61 samples, 0.05%)</title><rect x="20.7822%" y="373" width="0.0482%" height="15" fill="rgb(250,116,42)" fg:x="26294" fg:w="61"/><text x="21.0322%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (295 samples, 0.23%)</title><rect x="20.8304%" y="373" width="0.2332%" height="15" fill="rgb(223,202,9)" fg:x="26355" fg:w="295"/><text x="21.0804%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (401 samples, 0.32%)</title><rect x="20.7719%" y="421" width="0.3169%" height="15" fill="rgb(242,222,40)" fg:x="26281" fg:w="401"/><text x="21.0219%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (399 samples, 0.32%)</title><rect x="20.7735%" y="405" width="0.3154%" height="15" fill="rgb(229,99,46)" fg:x="26283" fg:w="399"/><text x="21.0235%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (395 samples, 0.31%)</title><rect x="20.7766%" y="389" width="0.3122%" height="15" fill="rgb(225,56,46)" fg:x="26287" fg:w="395"/><text x="21.0266%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (32 samples, 0.03%)</title><rect x="21.0635%" y="373" width="0.0253%" height="15" fill="rgb(227,94,5)" fg:x="26650" fg:w="32"/><text x="21.3135%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 samples, 0.06%)</title><rect x="21.0999%" y="389" width="0.0616%" height="15" fill="rgb(205,112,38)" fg:x="26696" fg:w="78"/><text x="21.3499%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (267 samples, 0.21%)</title><rect x="21.1615%" y="389" width="0.2110%" height="15" fill="rgb(231,133,46)" fg:x="26774" fg:w="267"/><text x="21.4115%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (822 samples, 0.65%)</title><rect x="20.7640%" y="453" width="0.6497%" height="15" fill="rgb(217,16,9)" fg:x="26271" fg:w="822"/><text x="21.0140%" y="463.50"></text></g><g><title> N]&gt;::hash (822 samples, 0.65%)</title><rect x="20.7640%" y="437" width="0.6497%" height="15" fill="rgb(249,173,9)" fg:x="26271" fg:w="822"/><text x="21.0140%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (407 samples, 0.32%)</title><rect x="21.0920%" y="421" width="0.3217%" height="15" fill="rgb(205,163,53)" fg:x="26686" fg:w="407"/><text x="21.3420%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (401 samples, 0.32%)</title><rect x="21.0967%" y="405" width="0.3169%" height="15" fill="rgb(217,54,41)" fg:x="26692" fg:w="401"/><text x="21.3467%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (52 samples, 0.04%)</title><rect x="21.3726%" y="389" width="0.0411%" height="15" fill="rgb(228,216,12)" fg:x="27041" fg:w="52"/><text x="21.6226%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (834 samples, 0.66%)</title><rect x="20.7577%" y="469" width="0.6592%" height="15" fill="rgb(244,228,15)" fg:x="26263" fg:w="834"/><text x="21.0077%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (842 samples, 0.67%)</title><rect x="20.7521%" y="485" width="0.6655%" height="15" fill="rgb(221,176,53)" fg:x="26256" fg:w="842"/><text x="21.0021%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (1,794 samples, 1.42%)</title><rect x="20.2131%" y="501" width="1.4179%" height="15" fill="rgb(205,94,34)" fg:x="25574" fg:w="1794"/><text x="20.4631%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (270 samples, 0.21%)</title><rect x="21.4176%" y="485" width="0.2134%" height="15" fill="rgb(213,110,48)" fg:x="27098" fg:w="270"/><text x="21.6676%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.02%)</title><rect x="21.6310%" y="501" width="0.0166%" height="15" fill="rgb(236,142,28)" fg:x="27368" fg:w="21"/><text x="21.8810%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (114 samples, 0.09%)</title><rect x="21.6982%" y="485" width="0.0901%" height="15" fill="rgb(225,135,29)" fg:x="27453" fg:w="114"/><text x="21.9482%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (159 samples, 0.13%)</title><rect x="21.7883%" y="485" width="0.1257%" height="15" fill="rgb(252,45,31)" fg:x="27567" fg:w="159"/><text x="22.0383%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.04%)</title><rect x="21.9156%" y="469" width="0.0364%" height="15" fill="rgb(211,187,50)" fg:x="27728" fg:w="46"/><text x="22.1656%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (72 samples, 0.06%)</title><rect x="21.9614%" y="469" width="0.0569%" height="15" fill="rgb(229,109,7)" fg:x="27786" fg:w="72"/><text x="22.2114%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (22 samples, 0.02%)</title><rect x="22.0183%" y="469" width="0.0174%" height="15" fill="rgb(251,131,51)" fg:x="27858" fg:w="22"/><text x="22.2683%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (21 samples, 0.02%)</title><rect x="22.0357%" y="469" width="0.0166%" height="15" fill="rgb(251,180,35)" fg:x="27880" fg:w="21"/><text x="22.2857%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (37 samples, 0.03%)</title><rect x="22.0523%" y="469" width="0.0292%" height="15" fill="rgb(211,46,32)" fg:x="27901" fg:w="37"/><text x="22.3023%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (27 samples, 0.02%)</title><rect x="22.0815%" y="469" width="0.0213%" height="15" fill="rgb(248,123,17)" fg:x="27938" fg:w="27"/><text x="22.3315%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (40 samples, 0.03%)</title><rect x="22.1100%" y="469" width="0.0316%" height="15" fill="rgb(227,141,18)" fg:x="27974" fg:w="40"/><text x="22.3600%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (63 samples, 0.05%)</title><rect x="22.2119%" y="405" width="0.0498%" height="15" fill="rgb(216,102,9)" fg:x="28103" fg:w="63"/><text x="22.4619%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (77 samples, 0.06%)</title><rect x="22.2080%" y="421" width="0.0609%" height="15" fill="rgb(253,47,13)" fg:x="28098" fg:w="77"/><text x="22.4580%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (99 samples, 0.08%)</title><rect x="22.1953%" y="437" width="0.0782%" height="15" fill="rgb(226,93,23)" fg:x="28082" fg:w="99"/><text x="22.4453%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (201 samples, 0.16%)</title><rect x="22.1416%" y="469" width="0.1589%" height="15" fill="rgb(247,104,17)" fg:x="28014" fg:w="201"/><text x="22.3916%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::equivalent_key::_{{closure}} (142 samples, 0.11%)</title><rect x="22.1882%" y="453" width="0.1122%" height="15" fill="rgb(233,203,26)" fg:x="28073" fg:w="142"/><text x="22.4382%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (34 samples, 0.03%)</title><rect x="22.2736%" y="437" width="0.0269%" height="15" fill="rgb(244,98,49)" fg:x="28181" fg:w="34"/><text x="22.5236%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (67 samples, 0.05%)</title><rect x="22.3005%" y="469" width="0.0530%" height="15" fill="rgb(235,134,22)" fg:x="28215" fg:w="67"/><text x="22.5505%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (588 samples, 0.46%)</title><rect x="21.9156%" y="485" width="0.4647%" height="15" fill="rgb(221,70,32)" fg:x="27728" fg:w="588"/><text x="22.1656%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (34 samples, 0.03%)</title><rect x="22.3534%" y="469" width="0.0269%" height="15" fill="rgb(238,15,50)" fg:x="28282" fg:w="34"/><text x="22.6034%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::HashMap&lt;uuid::Uuid,F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (2,825 samples, 2.23%)</title><rect x="20.1499%" y="549" width="2.2328%" height="15" fill="rgb(215,221,48)" fg:x="25494" fg:w="2825"/><text x="20.3999%" y="559.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,803 samples, 2.22%)</title><rect x="20.1672%" y="533" width="2.2154%" height="15" fill="rgb(236,73,3)" fg:x="25516" fg:w="2803"/><text x="20.4172%" y="543.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,783 samples, 2.20%)</title><rect x="20.1831%" y="517" width="2.1996%" height="15" fill="rgb(250,107,11)" fg:x="25536" fg:w="2783"/><text x="20.4331%" y="527.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (930 samples, 0.74%)</title><rect x="21.6476%" y="501" width="0.7351%" height="15" fill="rgb(242,39,14)" fg:x="27389" fg:w="930"/><text x="21.8976%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (54 samples, 0.04%)</title><rect x="22.3827%" y="549" width="0.0427%" height="15" fill="rgb(248,164,37)" fg:x="28319" fg:w="54"/><text x="22.6327%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (2,939 samples, 2.32%)</title><rect x="20.1356%" y="565" width="2.3229%" height="15" fill="rgb(217,60,12)" fg:x="25476" fg:w="2939"/><text x="20.3856%" y="575.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (39 samples, 0.03%)</title><rect x="22.4277%" y="549" width="0.0308%" height="15" fill="rgb(240,125,29)" fg:x="28376" fg:w="39"/><text x="22.6777%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (34 samples, 0.03%)</title><rect x="22.4317%" y="533" width="0.0269%" height="15" fill="rgb(208,207,28)" fg:x="28381" fg:w="34"/><text x="22.6817%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (2,962 samples, 2.34%)</title><rect x="20.1254%" y="581" width="2.3411%" height="15" fill="rgb(209,159,27)" fg:x="25463" fg:w="2962"/><text x="20.3754%" y="591.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (2,977 samples, 2.35%)</title><rect x="20.1190%" y="597" width="2.3530%" height="15" fill="rgb(251,176,53)" fg:x="25455" fg:w="2977"/><text x="20.3690%" y="607.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (3,014 samples, 2.38%)</title><rect x="20.1174%" y="613" width="2.3822%" height="15" fill="rgb(211,85,7)" fg:x="25453" fg:w="3014"/><text x="20.3674%" y="623.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::ok_or_else (29 samples, 0.02%)</title><rect x="22.4767%" y="597" width="0.0229%" height="15" fill="rgb(216,64,54)" fg:x="28438" fg:w="29"/><text x="22.7267%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (60 samples, 0.05%)</title><rect x="22.5107%" y="405" width="0.0474%" height="15" fill="rgb(217,54,24)" fg:x="28481" fg:w="60"/><text x="22.7607%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (14 samples, 0.01%)</title><rect x="22.6174%" y="357" width="0.0111%" height="15" fill="rgb(208,206,53)" fg:x="28616" fg:w="14"/><text x="22.8674%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (27 samples, 0.02%)</title><rect x="22.6530%" y="309" width="0.0213%" height="15" fill="rgb(251,74,39)" fg:x="28661" fg:w="27"/><text x="22.9030%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (20 samples, 0.02%)</title><rect x="22.7549%" y="293" width="0.0158%" height="15" fill="rgb(226,47,5)" fg:x="28790" fg:w="20"/><text x="23.0049%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (23 samples, 0.02%)</title><rect x="22.7731%" y="261" width="0.0182%" height="15" fill="rgb(234,111,33)" fg:x="28813" fg:w="23"/><text x="23.0231%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (89 samples, 0.07%)</title><rect x="22.7913%" y="261" width="0.0703%" height="15" fill="rgb(251,14,10)" fg:x="28836" fg:w="89"/><text x="23.0413%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (605 samples, 0.48%)</title><rect x="22.7715%" y="277" width="0.4782%" height="15" fill="rgb(232,43,0)" fg:x="28811" fg:w="605"/><text x="23.0215%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (491 samples, 0.39%)</title><rect x="22.8616%" y="261" width="0.3881%" height="15" fill="rgb(222,68,43)" fg:x="28925" fg:w="491"/><text x="23.1116%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (116 samples, 0.09%)</title><rect x="23.2497%" y="277" width="0.0917%" height="15" fill="rgb(217,24,23)" fg:x="29416" fg:w="116"/><text x="23.4997%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (74 samples, 0.06%)</title><rect x="23.3825%" y="149" width="0.0585%" height="15" fill="rgb(229,209,14)" fg:x="29584" fg:w="74"/><text x="23.6325%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (146 samples, 0.12%)</title><rect x="23.4410%" y="149" width="0.1154%" height="15" fill="rgb(250,149,48)" fg:x="29658" fg:w="146"/><text x="23.6910%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (280 samples, 0.22%)</title><rect x="23.3706%" y="197" width="0.2213%" height="15" fill="rgb(210,120,37)" fg:x="29569" fg:w="280"/><text x="23.6206%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (275 samples, 0.22%)</title><rect x="23.3746%" y="181" width="0.2174%" height="15" fill="rgb(210,21,8)" fg:x="29574" fg:w="275"/><text x="23.6246%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (270 samples, 0.21%)</title><rect x="23.3785%" y="165" width="0.2134%" height="15" fill="rgb(243,145,7)" fg:x="29579" fg:w="270"/><text x="23.6285%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (45 samples, 0.04%)</title><rect x="23.5564%" y="149" width="0.0356%" height="15" fill="rgb(238,178,32)" fg:x="29804" fg:w="45"/><text x="23.8064%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (87 samples, 0.07%)</title><rect x="23.6109%" y="165" width="0.0688%" height="15" fill="rgb(222,4,10)" fg:x="29873" fg:w="87"/><text x="23.8609%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (331 samples, 0.26%)</title><rect x="23.6797%" y="165" width="0.2616%" height="15" fill="rgb(239,7,37)" fg:x="29960" fg:w="331"/><text x="23.9297%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (816 samples, 0.64%)</title><rect x="23.3588%" y="229" width="0.6449%" height="15" fill="rgb(215,31,37)" fg:x="29554" fg:w="816"/><text x="23.6088%" y="239.50"></text></g><g><title> N]&gt;::hash (816 samples, 0.64%)</title><rect x="23.3588%" y="213" width="0.6449%" height="15" fill="rgb(224,83,33)" fg:x="29554" fg:w="816"/><text x="23.6088%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (519 samples, 0.41%)</title><rect x="23.5935%" y="197" width="0.4102%" height="15" fill="rgb(239,55,3)" fg:x="29851" fg:w="519"/><text x="23.8435%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (502 samples, 0.40%)</title><rect x="23.6070%" y="181" width="0.3968%" height="15" fill="rgb(247,92,11)" fg:x="29868" fg:w="502"/><text x="23.8570%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (79 samples, 0.06%)</title><rect x="23.9413%" y="165" width="0.0624%" height="15" fill="rgb(239,200,7)" fg:x="30291" fg:w="79"/><text x="24.1913%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (821 samples, 0.65%)</title><rect x="23.3580%" y="245" width="0.6489%" height="15" fill="rgb(227,115,8)" fg:x="29553" fg:w="821"/><text x="23.6080%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (834 samples, 0.66%)</title><rect x="23.3493%" y="277" width="0.6592%" height="15" fill="rgb(215,189,27)" fg:x="29542" fg:w="834"/><text x="23.5993%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (826 samples, 0.65%)</title><rect x="23.3556%" y="261" width="0.6529%" height="15" fill="rgb(251,216,39)" fg:x="29550" fg:w="826"/><text x="23.6056%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (1,828 samples, 1.44%)</title><rect x="22.7707%" y="293" width="1.4448%" height="15" fill="rgb(207,29,47)" fg:x="28810" fg:w="1828"/><text x="23.0207%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (262 samples, 0.21%)</title><rect x="24.0085%" y="277" width="0.2071%" height="15" fill="rgb(210,71,34)" fg:x="30376" fg:w="262"/><text x="24.2585%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (41 samples, 0.03%)</title><rect x="24.2156%" y="293" width="0.0324%" height="15" fill="rgb(253,217,51)" fg:x="30638" fg:w="41"/><text x="24.4656%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (32 samples, 0.03%)</title><rect x="24.2930%" y="277" width="0.0253%" height="15" fill="rgb(222,117,46)" fg:x="30736" fg:w="32"/><text x="24.5430%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (70 samples, 0.06%)</title><rect x="24.3626%" y="261" width="0.0553%" height="15" fill="rgb(226,132,6)" fg:x="30824" fg:w="70"/><text x="24.6126%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (122 samples, 0.10%)</title><rect x="24.4226%" y="261" width="0.0964%" height="15" fill="rgb(254,145,51)" fg:x="30900" fg:w="122"/><text x="24.6726%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (49 samples, 0.04%)</title><rect x="24.5191%" y="261" width="0.0387%" height="15" fill="rgb(231,199,27)" fg:x="31022" fg:w="49"/><text x="24.7691%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (74 samples, 0.06%)</title><rect x="24.5578%" y="261" width="0.0585%" height="15" fill="rgb(245,158,14)" fg:x="31071" fg:w="74"/><text x="24.8078%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (37 samples, 0.03%)</title><rect x="24.6163%" y="261" width="0.0292%" height="15" fill="rgb(240,113,14)" fg:x="31145" fg:w="37"/><text x="24.8663%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (29 samples, 0.02%)</title><rect x="24.6455%" y="261" width="0.0229%" height="15" fill="rgb(210,20,13)" fg:x="31182" fg:w="29"/><text x="24.8955%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (18 samples, 0.01%)</title><rect x="24.7008%" y="245" width="0.0142%" height="15" fill="rgb(241,144,13)" fg:x="31252" fg:w="18"/><text x="24.9508%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (16 samples, 0.01%)</title><rect x="24.7151%" y="245" width="0.0126%" height="15" fill="rgb(235,43,34)" fg:x="31270" fg:w="16"/><text x="24.9651%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (25 samples, 0.02%)</title><rect x="24.7277%" y="245" width="0.0198%" height="15" fill="rgb(208,36,20)" fg:x="31286" fg:w="25"/><text x="24.9777%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (27 samples, 0.02%)</title><rect x="24.7475%" y="245" width="0.0213%" height="15" fill="rgb(239,204,10)" fg:x="31311" fg:w="27"/><text x="24.9975%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (149 samples, 0.12%)</title><rect x="24.6684%" y="261" width="0.1178%" height="15" fill="rgb(217,84,43)" fg:x="31211" fg:w="149"/><text x="24.9184%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (22 samples, 0.02%)</title><rect x="24.7688%" y="245" width="0.0174%" height="15" fill="rgb(241,170,50)" fg:x="31338" fg:w="22"/><text x="25.0188%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (42 samples, 0.03%)</title><rect x="24.7862%" y="261" width="0.0332%" height="15" fill="rgb(226,205,29)" fg:x="31360" fg:w="42"/><text x="25.0362%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (73 samples, 0.06%)</title><rect x="24.8194%" y="261" width="0.0577%" height="15" fill="rgb(233,113,1)" fg:x="31402" fg:w="73"/><text x="25.0694%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (63 samples, 0.05%)</title><rect x="24.8771%" y="261" width="0.0498%" height="15" fill="rgb(253,98,13)" fg:x="31475" fg:w="63"/><text x="25.1271%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (771 samples, 0.61%)</title><rect x="24.3183%" y="277" width="0.6094%" height="15" fill="rgb(211,115,12)" fg:x="30768" fg:w="771"/><text x="24.5683%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (871 samples, 0.69%)</title><rect x="24.2480%" y="293" width="0.6884%" height="15" fill="rgb(208,12,16)" fg:x="30679" fg:w="871"/><text x="24.4980%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (100 samples, 0.08%)</title><rect x="24.9364%" y="293" width="0.0790%" height="15" fill="rgb(237,193,54)" fg:x="31550" fg:w="100"/><text x="25.1864%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,978 samples, 2.35%)</title><rect x="22.6743%" y="309" width="2.3537%" height="15" fill="rgb(243,22,42)" fg:x="28688" fg:w="2978"/><text x="22.9243%" y="319.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (3,024 samples, 2.39%)</title><rect x="22.6474%" y="325" width="2.3901%" height="15" fill="rgb(233,151,36)" fg:x="28654" fg:w="3024"/><text x="22.8974%" y="335.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (3,060 samples, 2.42%)</title><rect x="22.6285%" y="357" width="2.4186%" height="15" fill="rgb(237,57,45)" fg:x="28630" fg:w="3060"/><text x="22.8785%" y="367.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3,042 samples, 2.40%)</title><rect x="22.6427%" y="341" width="2.4043%" height="15" fill="rgb(221,88,17)" fg:x="28648" fg:w="3042"/><text x="22.8927%" y="351.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (3,089 samples, 2.44%)</title><rect x="22.6079%" y="373" width="2.4415%" height="15" fill="rgb(230,79,15)" fg:x="28604" fg:w="3089"/><text x="22.8579%" y="383.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (3,152 samples, 2.49%)</title><rect x="22.5684%" y="389" width="2.4913%" height="15" fill="rgb(213,57,13)" fg:x="28554" fg:w="3152"/><text x="22.8184%" y="399.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (13 samples, 0.01%)</title><rect x="25.0494%" y="373" width="0.0103%" height="15" fill="rgb(222,116,39)" fg:x="31693" fg:w="13"/><text x="25.2994%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.05%)</title><rect x="25.0597%" y="389" width="0.0490%" height="15" fill="rgb(245,107,2)" fg:x="31706" fg:w="62"/><text x="25.3097%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (34 samples, 0.03%)</title><rect x="25.1126%" y="389" width="0.0269%" height="15" fill="rgb(238,1,10)" fg:x="31773" fg:w="34"/><text x="25.3626%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (95 samples, 0.08%)</title><rect x="25.1514%" y="389" width="0.0751%" height="15" fill="rgb(249,4,48)" fg:x="31822" fg:w="95"/><text x="25.4014%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (3,453 samples, 2.73%)</title><rect x="22.5060%" y="469" width="2.7292%" height="15" fill="rgb(223,151,18)" fg:x="28475" fg:w="3453"/><text x="22.7560%" y="479.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,453 samples, 2.73%)</title><rect x="22.5060%" y="453" width="2.7292%" height="15" fill="rgb(227,65,43)" fg:x="28475" fg:w="3453"/><text x="22.7560%" y="463.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,453 samples, 2.73%)</title><rect x="22.5060%" y="437" width="2.7292%" height="15" fill="rgb(218,40,45)" fg:x="28475" fg:w="3453"/><text x="22.7560%" y="447.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,453 samples, 2.73%)</title><rect x="22.5060%" y="421" width="2.7292%" height="15" fill="rgb(252,121,31)" fg:x="28475" fg:w="3453"/><text x="22.7560%" y="431.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (3,387 samples, 2.68%)</title><rect x="22.5581%" y="405" width="2.6770%" height="15" fill="rgb(219,158,43)" fg:x="28541" fg:w="3387"/><text x="22.8081%" y="415.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3,456 samples, 2.73%)</title><rect x="22.5052%" y="485" width="2.7315%" height="15" fill="rgb(231,162,42)" fg:x="28474" fg:w="3456"/><text x="22.7552%" y="495.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,458 samples, 2.73%)</title><rect x="22.5044%" y="517" width="2.7331%" height="15" fill="rgb(217,179,25)" fg:x="28473" fg:w="3458"/><text x="22.7544%" y="527.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,458 samples, 2.73%)</title><rect x="22.5044%" y="501" width="2.7331%" height="15" fill="rgb(206,212,31)" fg:x="28473" fg:w="3458"/><text x="22.7544%" y="511.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (3,459 samples, 2.73%)</title><rect x="22.5044%" y="533" width="2.7339%" height="15" fill="rgb(235,144,12)" fg:x="28473" fg:w="3459"/><text x="22.7544%" y="543.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::HashMap&lt;uuid::Uuid,F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (3,461 samples, 2.74%)</title><rect x="22.5036%" y="549" width="2.7355%" height="15" fill="rgb(213,51,10)" fg:x="28472" fg:w="3461"/><text x="22.7536%" y="559.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (41 samples, 0.03%)</title><rect x="25.3284%" y="341" width="0.0324%" height="15" fill="rgb(231,145,14)" fg:x="32046" fg:w="41"/><text x="25.5784%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.02%)</title><rect x="25.3829%" y="325" width="0.0245%" height="15" fill="rgb(235,15,28)" fg:x="32115" fg:w="31"/><text x="25.6329%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (24 samples, 0.02%)</title><rect x="25.4106%" y="325" width="0.0190%" height="15" fill="rgb(237,206,10)" fg:x="32150" fg:w="24"/><text x="25.6606%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (127 samples, 0.10%)</title><rect x="25.4343%" y="325" width="0.1004%" height="15" fill="rgb(236,227,27)" fg:x="32180" fg:w="127"/><text x="25.6843%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (373 samples, 0.29%)</title><rect x="25.2525%" y="373" width="0.2948%" height="15" fill="rgb(246,83,35)" fg:x="31950" fg:w="373"/><text x="25.5025%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (310 samples, 0.25%)</title><rect x="25.3023%" y="357" width="0.2450%" height="15" fill="rgb(220,136,24)" fg:x="32013" fg:w="310"/><text x="25.5523%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (236 samples, 0.19%)</title><rect x="25.3608%" y="341" width="0.1865%" height="15" fill="rgb(217,3,25)" fg:x="32087" fg:w="236"/><text x="25.6108%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (16 samples, 0.01%)</title><rect x="25.5347%" y="325" width="0.0126%" height="15" fill="rgb(239,24,14)" fg:x="32307" fg:w="16"/><text x="25.7847%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (36 samples, 0.03%)</title><rect x="25.5869%" y="341" width="0.0285%" height="15" fill="rgb(244,16,53)" fg:x="32373" fg:w="36"/><text x="25.8369%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids::_{{closure}} (70 samples, 0.06%)</title><rect x="25.6153%" y="341" width="0.0553%" height="15" fill="rgb(208,175,44)" fg:x="32409" fg:w="70"/><text x="25.8653%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (57 samples, 0.05%)</title><rect x="25.6256%" y="325" width="0.0451%" height="15" fill="rgb(252,18,48)" fg:x="32422" fg:w="57"/><text x="25.8756%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (50 samples, 0.04%)</title><rect x="25.6311%" y="309" width="0.0395%" height="15" fill="rgb(234,199,32)" fg:x="32429" fg:w="50"/><text x="25.8811%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (23 samples, 0.02%)</title><rect x="25.6959%" y="293" width="0.0182%" height="15" fill="rgb(225,77,54)" fg:x="32511" fg:w="23"/><text x="25.9459%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.01%)</title><rect x="25.7947%" y="245" width="0.0119%" height="15" fill="rgb(225,42,25)" fg:x="32636" fg:w="15"/><text x="26.0447%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (88 samples, 0.07%)</title><rect x="25.8066%" y="245" width="0.0696%" height="15" fill="rgb(242,227,46)" fg:x="32651" fg:w="88"/><text x="26.0566%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (610 samples, 0.48%)</title><rect x="25.7924%" y="261" width="0.4821%" height="15" fill="rgb(246,197,35)" fg:x="32633" fg:w="610"/><text x="26.0424%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (504 samples, 0.40%)</title><rect x="25.8761%" y="245" width="0.3983%" height="15" fill="rgb(215,159,26)" fg:x="32739" fg:w="504"/><text x="26.1261%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (160 samples, 0.13%)</title><rect x="26.2745%" y="261" width="0.1265%" height="15" fill="rgb(212,194,50)" fg:x="33243" fg:w="160"/><text x="26.5245%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`DYLD-STUB$$memcpy (18 samples, 0.01%)</title><rect x="26.4009%" y="261" width="0.0142%" height="15" fill="rgb(246,132,1)" fg:x="33403" fg:w="18"/><text x="26.6509%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (52 samples, 0.04%)</title><rect x="26.4484%" y="133" width="0.0411%" height="15" fill="rgb(217,71,7)" fg:x="33463" fg:w="52"/><text x="26.6984%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (129 samples, 0.10%)</title><rect x="26.4895%" y="133" width="0.1020%" height="15" fill="rgb(252,59,32)" fg:x="33515" fg:w="129"/><text x="26.7395%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (245 samples, 0.19%)</title><rect x="26.4365%" y="181" width="0.1936%" height="15" fill="rgb(253,204,25)" fg:x="33448" fg:w="245"/><text x="26.6865%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (242 samples, 0.19%)</title><rect x="26.4389%" y="165" width="0.1913%" height="15" fill="rgb(232,21,16)" fg:x="33451" fg:w="242"/><text x="26.6889%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (237 samples, 0.19%)</title><rect x="26.4428%" y="149" width="0.1873%" height="15" fill="rgb(248,90,29)" fg:x="33456" fg:w="237"/><text x="26.6928%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (49 samples, 0.04%)</title><rect x="26.5914%" y="133" width="0.0387%" height="15" fill="rgb(249,223,7)" fg:x="33644" fg:w="49"/><text x="26.8414%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (67 samples, 0.05%)</title><rect x="26.6547%" y="149" width="0.0530%" height="15" fill="rgb(231,119,42)" fg:x="33724" fg:w="67"/><text x="26.9047%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (326 samples, 0.26%)</title><rect x="26.7076%" y="149" width="0.2577%" height="15" fill="rgb(215,41,35)" fg:x="33791" fg:w="326"/><text x="26.9576%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (761 samples, 0.60%)</title><rect x="26.4270%" y="213" width="0.6015%" height="15" fill="rgb(220,44,45)" fg:x="33436" fg:w="761"/><text x="26.6770%" y="223.50"></text></g><g><title> N]&gt;::hash (761 samples, 0.60%)</title><rect x="26.4270%" y="197" width="0.6015%" height="15" fill="rgb(253,197,36)" fg:x="33436" fg:w="761"/><text x="26.6770%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (501 samples, 0.40%)</title><rect x="26.6325%" y="181" width="0.3960%" height="15" fill="rgb(245,225,54)" fg:x="33696" fg:w="501"/><text x="26.8825%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (478 samples, 0.38%)</title><rect x="26.6507%" y="165" width="0.3778%" height="15" fill="rgb(239,94,37)" fg:x="33719" fg:w="478"/><text x="26.9007%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (80 samples, 0.06%)</title><rect x="26.9653%" y="149" width="0.0632%" height="15" fill="rgb(242,217,10)" fg:x="34117" fg:w="80"/><text x="27.2153%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (769 samples, 0.61%)</title><rect x="26.4239%" y="229" width="0.6078%" height="15" fill="rgb(250,193,7)" fg:x="33432" fg:w="769"/><text x="26.6739%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (782 samples, 0.62%)</title><rect x="26.4152%" y="261" width="0.6181%" height="15" fill="rgb(230,104,19)" fg:x="33421" fg:w="782"/><text x="26.6652%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (775 samples, 0.61%)</title><rect x="26.4207%" y="245" width="0.6125%" height="15" fill="rgb(230,181,4)" fg:x="33428" fg:w="775"/><text x="26.6707%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (1,810 samples, 1.43%)</title><rect x="25.7916%" y="277" width="1.4306%" height="15" fill="rgb(216,219,49)" fg:x="32632" fg:w="1810"/><text x="26.0416%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (239 samples, 0.19%)</title><rect x="27.0332%" y="261" width="0.1889%" height="15" fill="rgb(254,144,0)" fg:x="34203" fg:w="239"/><text x="27.2832%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (50 samples, 0.04%)</title><rect x="27.2221%" y="277" width="0.0395%" height="15" fill="rgb(205,209,38)" fg:x="34442" fg:w="50"/><text x="27.4721%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (309 samples, 0.24%)</title><rect x="27.3462%" y="245" width="0.2442%" height="15" fill="rgb(240,21,42)" fg:x="34599" fg:w="309"/><text x="27.5962%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (178 samples, 0.14%)</title><rect x="27.5928%" y="229" width="0.1407%" height="15" fill="rgb(241,132,3)" fg:x="34911" fg:w="178"/><text x="27.8428%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (19 samples, 0.02%)</title><rect x="27.7430%" y="229" width="0.0150%" height="15" fill="rgb(225,14,2)" fg:x="35101" fg:w="19"/><text x="27.9930%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (54 samples, 0.04%)</title><rect x="27.7770%" y="229" width="0.0427%" height="15" fill="rgb(210,141,35)" fg:x="35144" fg:w="54"/><text x="28.0270%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (20 samples, 0.02%)</title><rect x="27.8837%" y="213" width="0.0158%" height="15" fill="rgb(251,14,44)" fg:x="35279" fg:w="20"/><text x="28.1337%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (19 samples, 0.02%)</title><rect x="27.9114%" y="197" width="0.0150%" height="15" fill="rgb(247,48,18)" fg:x="35314" fg:w="19"/><text x="28.1614%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (47 samples, 0.04%)</title><rect x="27.9351%" y="165" width="0.0371%" height="15" fill="rgb(225,0,40)" fg:x="35344" fg:w="47"/><text x="28.1851%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (140 samples, 0.11%)</title><rect x="27.9722%" y="165" width="0.1107%" height="15" fill="rgb(221,31,33)" fg:x="35391" fg:w="140"/><text x="28.2222%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,065 samples, 0.84%)</title><rect x="27.9311%" y="181" width="0.8418%" height="15" fill="rgb(237,42,40)" fg:x="35339" fg:w="1065"/><text x="28.1811%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (873 samples, 0.69%)</title><rect x="28.0829%" y="165" width="0.6900%" height="15" fill="rgb(233,51,29)" fg:x="35531" fg:w="873"/><text x="28.3329%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (169 samples, 0.13%)</title><rect x="28.7729%" y="181" width="0.1336%" height="15" fill="rgb(226,58,20)" fg:x="36404" fg:w="169"/><text x="29.0229%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`DYLD-STUB$$memcpy (30 samples, 0.02%)</title><rect x="28.9064%" y="181" width="0.0237%" height="15" fill="rgb(208,98,7)" fg:x="36573" fg:w="30"/><text x="29.1564%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (96 samples, 0.08%)</title><rect x="28.9973%" y="53" width="0.0759%" height="15" fill="rgb(228,143,44)" fg:x="36688" fg:w="96"/><text x="29.2473%" y="63.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (311 samples, 0.25%)</title><rect x="29.0732%" y="53" width="0.2458%" height="15" fill="rgb(246,55,38)" fg:x="36784" fg:w="311"/><text x="29.3232%" y="63.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (514 samples, 0.41%)</title><rect x="28.9728%" y="101" width="0.4063%" height="15" fill="rgb(247,87,16)" fg:x="36657" fg:w="514"/><text x="29.2228%" y="111.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (507 samples, 0.40%)</title><rect x="28.9784%" y="85" width="0.4007%" height="15" fill="rgb(234,129,42)" fg:x="36664" fg:w="507"/><text x="29.2284%" y="95.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (492 samples, 0.39%)</title><rect x="28.9902%" y="69" width="0.3889%" height="15" fill="rgb(220,82,16)" fg:x="36679" fg:w="492"/><text x="29.2402%" y="79.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (76 samples, 0.06%)</title><rect x="29.3190%" y="53" width="0.0601%" height="15" fill="rgb(211,88,4)" fg:x="37095" fg:w="76"/><text x="29.5690%" y="63.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (147 samples, 0.12%)</title><rect x="29.4044%" y="69" width="0.1162%" height="15" fill="rgb(248,151,21)" fg:x="37203" fg:w="147"/><text x="29.6544%" y="79.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (505 samples, 0.40%)</title><rect x="29.5206%" y="69" width="0.3991%" height="15" fill="rgb(238,163,6)" fg:x="37350" fg:w="505"/><text x="29.7706%" y="79.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (1,308 samples, 1.03%)</title><rect x="28.9562%" y="133" width="1.0338%" height="15" fill="rgb(209,183,11)" fg:x="36636" fg:w="1308"/><text x="29.2062%" y="143.50"></text></g><g><title> N]&gt;::hash (1,308 samples, 1.03%)</title><rect x="28.9562%" y="117" width="1.0338%" height="15" fill="rgb(219,37,20)" fg:x="36636" fg:w="1308"/><text x="29.2062%" y="127.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (766 samples, 0.61%)</title><rect x="29.3846%" y="101" width="0.6054%" height="15" fill="rgb(210,158,4)" fg:x="37178" fg:w="766"/><text x="29.6346%" y="111.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (750 samples, 0.59%)</title><rect x="29.3973%" y="85" width="0.5928%" height="15" fill="rgb(221,167,53)" fg:x="37194" fg:w="750"/><text x="29.6473%" y="95.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (89 samples, 0.07%)</title><rect x="29.9197%" y="69" width="0.0703%" height="15" fill="rgb(237,151,45)" fg:x="37855" fg:w="89"/><text x="30.1697%" y="79.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1,329 samples, 1.05%)</title><rect x="28.9507%" y="149" width="1.0504%" height="15" fill="rgb(231,39,3)" fg:x="36629" fg:w="1329"/><text x="29.2007%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,360 samples, 1.07%)</title><rect x="28.9301%" y="181" width="1.0749%" height="15" fill="rgb(212,167,28)" fg:x="36603" fg:w="1360"/><text x="29.1801%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,340 samples, 1.06%)</title><rect x="28.9460%" y="165" width="1.0591%" height="15" fill="rgb(232,178,8)" fg:x="36623" fg:w="1340"/><text x="29.1960%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (3,066 samples, 2.42%)</title><rect x="27.8197%" y="229" width="2.4233%" height="15" fill="rgb(225,151,20)" fg:x="35198" fg:w="3066"/><text x="28.0697%" y="239.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (2,965 samples, 2.34%)</title><rect x="27.8995%" y="213" width="2.3435%" height="15" fill="rgb(238,3,37)" fg:x="35299" fg:w="2965"/><text x="28.1495%" y="223.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (2,931 samples, 2.32%)</title><rect x="27.9264%" y="197" width="2.3166%" height="15" fill="rgb(251,147,42)" fg:x="35333" fg:w="2931"/><text x="28.1764%" y="207.50">g..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (301 samples, 0.24%)</title><rect x="30.0051%" y="181" width="0.2379%" height="15" fill="rgb(208,173,10)" fg:x="37963" fg:w="301"/><text x="30.2551%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::vld1_u8 (14 samples, 0.01%)</title><rect x="30.4058%" y="197" width="0.0111%" height="15" fill="rgb(246,225,4)" fg:x="38470" fg:w="14"/><text x="30.6558%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (75 samples, 0.06%)</title><rect x="30.4168%" y="197" width="0.0593%" height="15" fill="rgb(248,102,6)" fg:x="38484" fg:w="75"/><text x="30.6668%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (94 samples, 0.07%)</title><rect x="30.6208%" y="181" width="0.0743%" height="15" fill="rgb(232,6,21)" fg:x="38742" fg:w="94"/><text x="30.8708%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (41 samples, 0.03%)</title><rect x="30.6951%" y="181" width="0.0324%" height="15" fill="rgb(221,179,22)" fg:x="38836" fg:w="41"/><text x="30.9451%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (66 samples, 0.05%)</title><rect x="30.7275%" y="181" width="0.0522%" height="15" fill="rgb(252,50,20)" fg:x="38877" fg:w="66"/><text x="30.9775%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (60 samples, 0.05%)</title><rect x="30.7796%" y="181" width="0.0474%" height="15" fill="rgb(222,56,38)" fg:x="38943" fg:w="60"/><text x="31.0296%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (519 samples, 0.41%)</title><rect x="30.4761%" y="197" width="0.4102%" height="15" fill="rgb(206,193,29)" fg:x="38559" fg:w="519"/><text x="30.7261%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (75 samples, 0.06%)</title><rect x="30.8270%" y="181" width="0.0593%" height="15" fill="rgb(239,192,45)" fg:x="39003" fg:w="75"/><text x="31.0770%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (87 samples, 0.07%)</title><rect x="30.8863%" y="197" width="0.0688%" height="15" fill="rgb(254,18,36)" fg:x="39078" fg:w="87"/><text x="31.1363%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (58 samples, 0.05%)</title><rect x="30.9551%" y="197" width="0.0458%" height="15" fill="rgb(221,127,11)" fg:x="39165" fg:w="58"/><text x="31.2051%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (886 samples, 0.70%)</title><rect x="30.3054%" y="213" width="0.7003%" height="15" fill="rgb(234,146,35)" fg:x="38343" fg:w="886"/><text x="30.5554%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (982 samples, 0.78%)</title><rect x="30.2430%" y="229" width="0.7761%" height="15" fill="rgb(254,201,37)" fg:x="38264" fg:w="982"/><text x="30.4930%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (17 samples, 0.01%)</title><rect x="31.0057%" y="213" width="0.0134%" height="15" fill="rgb(211,202,23)" fg:x="39229" fg:w="17"/><text x="31.2557%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fallible_with_capacity (19 samples, 0.02%)</title><rect x="31.0199%" y="213" width="0.0150%" height="15" fill="rgb(237,91,2)" fg:x="39247" fg:w="19"/><text x="31.2699%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_resize (21 samples, 0.02%)</title><rect x="31.0191%" y="229" width="0.0166%" height="15" fill="rgb(226,228,36)" fg:x="39246" fg:w="21"/><text x="31.2691%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (164 samples, 0.13%)</title><rect x="31.0357%" y="229" width="0.1296%" height="15" fill="rgb(213,63,50)" fg:x="39267" fg:w="164"/><text x="31.2857%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (32 samples, 0.03%)</title><rect x="31.1653%" y="229" width="0.0253%" height="15" fill="rgb(235,194,19)" fg:x="39431" fg:w="32"/><text x="31.4153%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4,554 samples, 3.60%)</title><rect x="27.5928%" y="245" width="3.5994%" height="15" fill="rgb(207,204,18)" fg:x="34911" fg:w="4554"/><text x="27.8428%" y="255.50">get_..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4,921 samples, 3.89%)</title><rect x="27.3036%" y="261" width="3.8894%" height="15" fill="rgb(248,8,7)" fg:x="34545" fg:w="4921"/><text x="27.5536%" y="271.50">get_..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.04%)</title><rect x="31.2420%" y="245" width="0.0403%" height="15" fill="rgb(223,145,47)" fg:x="39528" fg:w="51"/><text x="31.4920%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (142 samples, 0.11%)</title><rect x="31.2910%" y="245" width="0.1122%" height="15" fill="rgb(228,84,11)" fg:x="39590" fg:w="142"/><text x="31.5410%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (44 samples, 0.03%)</title><rect x="31.4032%" y="245" width="0.0348%" height="15" fill="rgb(218,76,45)" fg:x="39732" fg:w="44"/><text x="31.6532%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (103 samples, 0.08%)</title><rect x="31.4380%" y="245" width="0.0814%" height="15" fill="rgb(223,80,15)" fg:x="39776" fg:w="103"/><text x="31.6880%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (40 samples, 0.03%)</title><rect x="31.5194%" y="245" width="0.0316%" height="15" fill="rgb(219,218,33)" fg:x="39879" fg:w="40"/><text x="31.7694%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (29 samples, 0.02%)</title><rect x="31.5510%" y="245" width="0.0229%" height="15" fill="rgb(208,51,11)" fg:x="39919" fg:w="29"/><text x="31.8010%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (43 samples, 0.03%)</title><rect x="31.6237%" y="229" width="0.0340%" height="15" fill="rgb(229,165,39)" fg:x="40011" fg:w="43"/><text x="31.8737%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (27 samples, 0.02%)</title><rect x="31.6577%" y="229" width="0.0213%" height="15" fill="rgb(241,100,24)" fg:x="40054" fg:w="27"/><text x="31.9077%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (36 samples, 0.03%)</title><rect x="31.6791%" y="229" width="0.0285%" height="15" fill="rgb(228,14,23)" fg:x="40081" fg:w="36"/><text x="31.9291%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (21 samples, 0.02%)</title><rect x="31.7075%" y="229" width="0.0166%" height="15" fill="rgb(247,116,52)" fg:x="40117" fg:w="21"/><text x="31.9575%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (208 samples, 0.16%)</title><rect x="31.5811%" y="245" width="0.1644%" height="15" fill="rgb(216,149,33)" fg:x="39957" fg:w="208"/><text x="31.8311%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (27 samples, 0.02%)</title><rect x="31.7241%" y="229" width="0.0213%" height="15" fill="rgb(238,142,29)" fg:x="40138" fg:w="27"/><text x="31.9741%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (32 samples, 0.03%)</title><rect x="31.7455%" y="245" width="0.0253%" height="15" fill="rgb(224,83,40)" fg:x="40165" fg:w="32"/><text x="31.9955%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (163 samples, 0.13%)</title><rect x="31.7708%" y="245" width="0.1288%" height="15" fill="rgb(234,165,11)" fg:x="40197" fg:w="163"/><text x="32.0208%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (85 samples, 0.07%)</title><rect x="31.8996%" y="245" width="0.0672%" height="15" fill="rgb(215,96,23)" fg:x="40360" fg:w="85"/><text x="32.1496%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (980 samples, 0.77%)</title><rect x="31.1938%" y="261" width="0.7746%" height="15" fill="rgb(233,179,26)" fg:x="39467" fg:w="980"/><text x="31.4438%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (5,968 samples, 4.72%)</title><rect x="27.2617%" y="277" width="4.7170%" height="15" fill="rgb(225,129,33)" fg:x="34492" fg:w="5968"/><text x="27.5117%" y="287.50">get_u..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (95 samples, 0.08%)</title><rect x="31.9786%" y="277" width="0.0751%" height="15" fill="rgb(237,49,13)" fg:x="40460" fg:w="95"/><text x="32.2286%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8,050 samples, 6.36%)</title><rect x="25.7141%" y="293" width="6.3625%" height="15" fill="rgb(211,3,31)" fg:x="32534" fg:w="8050"/><text x="25.9641%" y="303.50">get_usag..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (18 samples, 0.01%)</title><rect x="32.0624%" y="277" width="0.0142%" height="15" fill="rgb(216,152,19)" fg:x="40566" fg:w="18"/><text x="32.3124%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (8,096 samples, 6.40%)</title><rect x="25.6888%" y="309" width="6.3989%" height="15" fill="rgb(251,121,35)" fg:x="32502" fg:w="8096"/><text x="25.9388%" y="319.50">get_usag..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (13 samples, 0.01%)</title><rect x="32.0774%" y="293" width="0.0103%" height="15" fill="rgb(210,217,47)" fg:x="40585" fg:w="13"/><text x="32.3274%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (8,137 samples, 6.43%)</title><rect x="25.6706%" y="341" width="6.4313%" height="15" fill="rgb(244,116,22)" fg:x="32479" fg:w="8137"/><text x="25.9206%" y="351.50">get_usag..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (8,119 samples, 6.42%)</title><rect x="25.6849%" y="325" width="6.4171%" height="15" fill="rgb(228,17,21)" fg:x="32497" fg:w="8119"/><text x="25.9349%" y="335.50">get_usag..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.01%)</title><rect x="32.0877%" y="309" width="0.0142%" height="15" fill="rgb(240,149,34)" fg:x="40598" fg:w="18"/><text x="32.3377%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (8,280 samples, 6.54%)</title><rect x="25.5655%" y="357" width="6.5443%" height="15" fill="rgb(208,125,47)" fg:x="32346" fg:w="8280"/><text x="25.8155%" y="367.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (8,302 samples, 6.56%)</title><rect x="25.5497%" y="373" width="6.5617%" height="15" fill="rgb(249,186,39)" fg:x="32326" fg:w="8302"/><text x="25.7997%" y="383.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,698 samples, 6.87%)</title><rect x="25.2407%" y="405" width="6.8747%" height="15" fill="rgb(240,220,33)" fg:x="31935" fg:w="8698"/><text x="25.4907%" y="415.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (8,695 samples, 6.87%)</title><rect x="25.2430%" y="389" width="6.8723%" height="15" fill="rgb(243,110,23)" fg:x="31938" fg:w="8695"/><text x="25.4930%" y="399.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (8,700 samples, 6.88%)</title><rect x="25.2399%" y="501" width="6.8763%" height="15" fill="rgb(219,163,46)" fg:x="31934" fg:w="8700"/><text x="25.4899%" y="511.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (8,700 samples, 6.88%)</title><rect x="25.2399%" y="485" width="6.8763%" height="15" fill="rgb(216,126,30)" fg:x="31934" fg:w="8700"/><text x="25.4899%" y="495.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,700 samples, 6.88%)</title><rect x="25.2399%" y="469" width="6.8763%" height="15" fill="rgb(208,139,11)" fg:x="31934" fg:w="8700"/><text x="25.4899%" y="479.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,699 samples, 6.88%)</title><rect x="25.2407%" y="453" width="6.8755%" height="15" fill="rgb(213,118,36)" fg:x="31935" fg:w="8699"/><text x="25.4907%" y="463.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,699 samples, 6.88%)</title><rect x="25.2407%" y="437" width="6.8755%" height="15" fill="rgb(226,43,17)" fg:x="31935" fg:w="8699"/><text x="25.4907%" y="447.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,699 samples, 6.88%)</title><rect x="25.2407%" y="421" width="6.8755%" height="15" fill="rgb(254,217,4)" fg:x="31935" fg:w="8699"/><text x="25.4907%" y="431.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8,701 samples, 6.88%)</title><rect x="25.2399%" y="533" width="6.8771%" height="15" fill="rgb(210,134,47)" fg:x="31934" fg:w="8701"/><text x="25.4899%" y="543.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (8,701 samples, 6.88%)</title><rect x="25.2399%" y="517" width="6.8771%" height="15" fill="rgb(237,24,49)" fg:x="31934" fg:w="8701"/><text x="25.4899%" y="527.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (12,168 samples, 9.62%)</title><rect x="22.5004%" y="597" width="9.6173%" height="15" fill="rgb(251,39,46)" fg:x="28468" fg:w="12168"/><text x="22.7504%" y="607.50">get_usage_test..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (12,168 samples, 9.62%)</title><rect x="22.5004%" y="581" width="9.6173%" height="15" fill="rgb(251,220,3)" fg:x="28468" fg:w="12168"/><text x="22.7504%" y="591.50">get_usage_test..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (12,165 samples, 9.61%)</title><rect x="22.5028%" y="565" width="9.6149%" height="15" fill="rgb(228,105,12)" fg:x="28471" fg:w="12165"/><text x="22.7528%" y="575.50">get_usage_test..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (8,702 samples, 6.88%)</title><rect x="25.2399%" y="549" width="6.8779%" height="15" fill="rgb(215,196,1)" fg:x="31934" fg:w="8702"/><text x="25.4899%" y="559.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (58 samples, 0.05%)</title><rect x="32.1193%" y="437" width="0.0458%" height="15" fill="rgb(214,33,39)" fg:x="40638" fg:w="58"/><text x="32.3693%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (42 samples, 0.03%)</title><rect x="32.2537%" y="373" width="0.0332%" height="15" fill="rgb(220,19,52)" fg:x="40808" fg:w="42"/><text x="32.5037%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (19 samples, 0.02%)</title><rect x="32.4315%" y="277" width="0.0150%" height="15" fill="rgb(221,78,38)" fg:x="41033" fg:w="19"/><text x="32.6815%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (85 samples, 0.07%)</title><rect x="32.4465%" y="277" width="0.0672%" height="15" fill="rgb(253,30,16)" fg:x="41052" fg:w="85"/><text x="32.6965%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (640 samples, 0.51%)</title><rect x="32.4284%" y="293" width="0.5058%" height="15" fill="rgb(242,65,0)" fg:x="41029" fg:w="640"/><text x="32.6784%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (532 samples, 0.42%)</title><rect x="32.5137%" y="277" width="0.4205%" height="15" fill="rgb(235,201,12)" fg:x="41137" fg:w="532"/><text x="32.7637%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (80 samples, 0.06%)</title><rect x="32.9342%" y="293" width="0.0632%" height="15" fill="rgb(233,161,9)" fg:x="41669" fg:w="80"/><text x="33.1842%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`DYLD-STUB$$memcpy (13 samples, 0.01%)</title><rect x="32.9998%" y="293" width="0.0103%" height="15" fill="rgb(241,207,41)" fg:x="41752" fg:w="13"/><text x="33.2498%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (142 samples, 0.11%)</title><rect x="33.0298%" y="181" width="0.1122%" height="15" fill="rgb(212,69,46)" fg:x="41790" fg:w="142"/><text x="33.2798%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (153 samples, 0.12%)</title><rect x="33.1421%" y="181" width="0.1209%" height="15" fill="rgb(239,69,45)" fg:x="41932" fg:w="153"/><text x="33.3921%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (353 samples, 0.28%)</title><rect x="33.0196%" y="229" width="0.2790%" height="15" fill="rgb(242,117,48)" fg:x="41777" fg:w="353"/><text x="33.2696%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (350 samples, 0.28%)</title><rect x="33.0219%" y="213" width="0.2766%" height="15" fill="rgb(228,41,36)" fg:x="41780" fg:w="350"/><text x="33.2719%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (344 samples, 0.27%)</title><rect x="33.0267%" y="197" width="0.2719%" height="15" fill="rgb(212,3,32)" fg:x="41786" fg:w="344"/><text x="33.2767%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (45 samples, 0.04%)</title><rect x="33.2630%" y="181" width="0.0356%" height="15" fill="rgb(233,41,49)" fg:x="42085" fg:w="45"/><text x="33.5130%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (86 samples, 0.07%)</title><rect x="33.3175%" y="197" width="0.0680%" height="15" fill="rgb(252,170,49)" fg:x="42154" fg:w="86"/><text x="33.5675%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (275 samples, 0.22%)</title><rect x="33.3855%" y="197" width="0.2174%" height="15" fill="rgb(229,53,26)" fg:x="42240" fg:w="275"/><text x="33.6355%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (794 samples, 0.63%)</title><rect x="33.0148%" y="261" width="0.6276%" height="15" fill="rgb(217,157,12)" fg:x="41771" fg:w="794"/><text x="33.2648%" y="271.50"></text></g><g><title> N]&gt;::hash (794 samples, 0.63%)</title><rect x="33.0148%" y="245" width="0.6276%" height="15" fill="rgb(227,17,9)" fg:x="41771" fg:w="794"/><text x="33.2648%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (431 samples, 0.34%)</title><rect x="33.3017%" y="229" width="0.3407%" height="15" fill="rgb(218,84,12)" fg:x="42134" fg:w="431"/><text x="33.5517%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (421 samples, 0.33%)</title><rect x="33.3096%" y="213" width="0.3327%" height="15" fill="rgb(212,79,24)" fg:x="42144" fg:w="421"/><text x="33.5596%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (50 samples, 0.04%)</title><rect x="33.6029%" y="197" width="0.0395%" height="15" fill="rgb(217,222,37)" fg:x="42515" fg:w="50"/><text x="33.8529%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (800 samples, 0.63%)</title><rect x="33.0148%" y="277" width="0.6323%" height="15" fill="rgb(246,208,8)" fg:x="41771" fg:w="800"/><text x="33.2648%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (811 samples, 0.64%)</title><rect x="33.0101%" y="293" width="0.6410%" height="15" fill="rgb(244,133,10)" fg:x="41765" fg:w="811"/><text x="33.2601%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (1,777 samples, 1.40%)</title><rect x="32.4228%" y="309" width="1.4045%" height="15" fill="rgb(209,219,41)" fg:x="41022" fg:w="1777"/><text x="32.6728%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (223 samples, 0.18%)</title><rect x="33.6511%" y="293" width="0.1763%" height="15" fill="rgb(253,175,45)" fg:x="42576" fg:w="223"/><text x="33.9011%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (49 samples, 0.04%)</title><rect x="33.8273%" y="309" width="0.0387%" height="15" fill="rgb(235,100,37)" fg:x="42799" fg:w="49"/><text x="34.0773%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (50 samples, 0.04%)</title><rect x="33.9095%" y="293" width="0.0395%" height="15" fill="rgb(225,87,19)" fg:x="42903" fg:w="50"/><text x="34.1595%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.05%)</title><rect x="33.9957%" y="277" width="0.0474%" height="15" fill="rgb(217,152,17)" fg:x="43012" fg:w="60"/><text x="34.2457%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (92 samples, 0.07%)</title><rect x="34.0510%" y="277" width="0.0727%" height="15" fill="rgb(235,72,13)" fg:x="43082" fg:w="92"/><text x="34.3010%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (64 samples, 0.05%)</title><rect x="34.1237%" y="277" width="0.0506%" height="15" fill="rgb(233,140,18)" fg:x="43174" fg:w="64"/><text x="34.3737%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (81 samples, 0.06%)</title><rect x="34.1743%" y="277" width="0.0640%" height="15" fill="rgb(207,212,28)" fg:x="43238" fg:w="81"/><text x="34.4243%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (34 samples, 0.03%)</title><rect x="34.2383%" y="277" width="0.0269%" height="15" fill="rgb(220,130,25)" fg:x="43319" fg:w="34"/><text x="34.4883%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (25 samples, 0.02%)</title><rect x="34.2652%" y="277" width="0.0198%" height="15" fill="rgb(205,55,34)" fg:x="43353" fg:w="25"/><text x="34.5152%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (26 samples, 0.02%)</title><rect x="34.3189%" y="261" width="0.0205%" height="15" fill="rgb(237,54,35)" fg:x="43421" fg:w="26"/><text x="34.5689%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (23 samples, 0.02%)</title><rect x="34.3395%" y="261" width="0.0182%" height="15" fill="rgb(208,67,23)" fg:x="43447" fg:w="23"/><text x="34.5895%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (20 samples, 0.02%)</title><rect x="34.3577%" y="261" width="0.0158%" height="15" fill="rgb(206,207,50)" fg:x="43470" fg:w="20"/><text x="34.6077%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (29 samples, 0.02%)</title><rect x="34.3735%" y="261" width="0.0229%" height="15" fill="rgb(213,211,42)" fg:x="43490" fg:w="29"/><text x="34.6235%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (164 samples, 0.13%)</title><rect x="34.2865%" y="277" width="0.1296%" height="15" fill="rgb(252,197,50)" fg:x="43380" fg:w="164"/><text x="34.5365%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (25 samples, 0.02%)</title><rect x="34.3964%" y="261" width="0.0198%" height="15" fill="rgb(251,211,41)" fg:x="43519" fg:w="25"/><text x="34.6464%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (37 samples, 0.03%)</title><rect x="34.4161%" y="277" width="0.0292%" height="15" fill="rgb(229,211,5)" fg:x="43544" fg:w="37"/><text x="34.6661%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (72 samples, 0.06%)</title><rect x="34.4454%" y="277" width="0.0569%" height="15" fill="rgb(239,36,31)" fg:x="43581" fg:w="72"/><text x="34.6954%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (770 samples, 0.61%)</title><rect x="33.9498%" y="293" width="0.6086%" height="15" fill="rgb(248,67,31)" fg:x="42954" fg:w="770"/><text x="34.1998%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (71 samples, 0.06%)</title><rect x="34.5023%" y="277" width="0.0561%" height="15" fill="rgb(249,55,44)" fg:x="43653" fg:w="71"/><text x="34.7523%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (891 samples, 0.70%)</title><rect x="33.8660%" y="309" width="0.7042%" height="15" fill="rgb(216,82,12)" fg:x="42848" fg:w="891"/><text x="34.1160%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (99 samples, 0.08%)</title><rect x="34.5703%" y="309" width="0.0782%" height="15" fill="rgb(242,174,1)" fg:x="43739" fg:w="99"/><text x="34.8203%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,899 samples, 2.29%)</title><rect x="32.3714%" y="325" width="2.2913%" height="15" fill="rgb(208,120,29)" fg:x="40957" fg:w="2899"/><text x="32.6214%" y="335.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (16 samples, 0.01%)</title><rect x="34.6501%" y="309" width="0.0126%" height="15" fill="rgb(221,105,43)" fg:x="43840" fg:w="16"/><text x="34.9001%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (2,958 samples, 2.34%)</title><rect x="32.3398%" y="341" width="2.3379%" height="15" fill="rgb(234,124,22)" fg:x="40917" fg:w="2958"/><text x="32.5898%" y="351.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (15 samples, 0.01%)</title><rect x="34.6659%" y="325" width="0.0119%" height="15" fill="rgb(212,23,30)" fg:x="43860" fg:w="15"/><text x="34.9159%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (3,085 samples, 2.44%)</title><rect x="32.2442%" y="389" width="2.4383%" height="15" fill="rgb(219,122,53)" fg:x="40796" fg:w="3085"/><text x="32.4942%" y="399.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (3,031 samples, 2.40%)</title><rect x="32.2869%" y="373" width="2.3956%" height="15" fill="rgb(248,84,24)" fg:x="40850" fg:w="3031"/><text x="32.5369%" y="383.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2,991 samples, 2.36%)</title><rect x="32.3185%" y="357" width="2.3640%" height="15" fill="rgb(245,115,18)" fg:x="40890" fg:w="2991"/><text x="32.5685%" y="367.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (3,116 samples, 2.46%)</title><rect x="32.2300%" y="405" width="2.4628%" height="15" fill="rgb(227,176,51)" fg:x="40778" fg:w="3116"/><text x="32.4800%" y="415.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids::_{{closure}} (13 samples, 0.01%)</title><rect x="34.6825%" y="389" width="0.0103%" height="15" fill="rgb(229,63,42)" fg:x="43881" fg:w="13"/><text x="34.9325%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (3,194 samples, 2.52%)</title><rect x="32.1762%" y="421" width="2.5245%" height="15" fill="rgb(247,202,24)" fg:x="40710" fg:w="3194"/><text x="32.4262%" y="431.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.04%)</title><rect x="34.7015%" y="421" width="0.0395%" height="15" fill="rgb(244,173,20)" fg:x="43905" fg:w="50"/><text x="34.9515%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (35 samples, 0.03%)</title><rect x="34.7481%" y="421" width="0.0277%" height="15" fill="rgb(242,81,47)" fg:x="43964" fg:w="35"/><text x="34.9981%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (95 samples, 0.08%)</title><rect x="34.7845%" y="421" width="0.0751%" height="15" fill="rgb(231,185,54)" fg:x="44010" fg:w="95"/><text x="35.0345%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (3,483 samples, 2.75%)</title><rect x="32.1177%" y="533" width="2.7529%" height="15" fill="rgb(243,55,32)" fg:x="40636" fg:w="3483"/><text x="32.3677%" y="543.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,483 samples, 2.75%)</title><rect x="32.1177%" y="517" width="2.7529%" height="15" fill="rgb(208,167,19)" fg:x="40636" fg:w="3483"/><text x="32.3677%" y="527.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,483 samples, 2.75%)</title><rect x="32.1177%" y="501" width="2.7529%" height="15" fill="rgb(231,72,35)" fg:x="40636" fg:w="3483"/><text x="32.3677%" y="511.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,483 samples, 2.75%)</title><rect x="32.1177%" y="485" width="2.7529%" height="15" fill="rgb(250,173,51)" fg:x="40636" fg:w="3483"/><text x="32.3677%" y="495.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,483 samples, 2.75%)</title><rect x="32.1177%" y="469" width="2.7529%" height="15" fill="rgb(209,5,22)" fg:x="40636" fg:w="3483"/><text x="32.3677%" y="479.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,483 samples, 2.75%)</title><rect x="32.1177%" y="453" width="2.7529%" height="15" fill="rgb(250,174,19)" fg:x="40636" fg:w="3483"/><text x="32.3677%" y="463.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (3,423 samples, 2.71%)</title><rect x="32.1652%" y="437" width="2.7055%" height="15" fill="rgb(217,3,49)" fg:x="40696" fg:w="3423"/><text x="32.4152%" y="447.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (14 samples, 0.01%)</title><rect x="34.8596%" y="421" width="0.0111%" height="15" fill="rgb(218,225,5)" fg:x="44105" fg:w="14"/><text x="35.1096%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (3,485 samples, 2.75%)</title><rect x="32.1177%" y="597" width="2.7545%" height="15" fill="rgb(236,89,11)" fg:x="40636" fg:w="3485"/><text x="32.3677%" y="607.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,485 samples, 2.75%)</title><rect x="32.1177%" y="581" width="2.7545%" height="15" fill="rgb(206,33,28)" fg:x="40636" fg:w="3485"/><text x="32.3677%" y="591.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,485 samples, 2.75%)</title><rect x="32.1177%" y="565" width="2.7545%" height="15" fill="rgb(241,56,42)" fg:x="40636" fg:w="3485"/><text x="32.3677%" y="575.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3,485 samples, 2.75%)</title><rect x="32.1177%" y="549" width="2.7545%" height="15" fill="rgb(222,44,11)" fg:x="40636" fg:w="3485"/><text x="32.3677%" y="559.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::linked_by (19,321 samples, 15.27%)</title><rect x="19.6029%" y="629" width="15.2709%" height="15" fill="rgb(234,111,20)" fg:x="24802" fg:w="19321"/><text x="19.8529%" y="639.50">get_usage_tests-cf82cbf..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids (15,656 samples, 12.37%)</title><rect x="22.4996%" y="613" width="12.3741%" height="15" fill="rgb(237,77,6)" fg:x="28467" fg:w="15656"/><text x="22.7496%" y="623.50">get_usage_tests-cf..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::in_pending_share (19,363 samples, 15.30%)</title><rect x="19.5847%" y="645" width="15.3041%" height="15" fill="rgb(235,111,23)" fg:x="24779" fg:w="19363"/><text x="19.8347%" y="655.50">get_usage_tests-cf82cbf..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (19 samples, 0.02%)</title><rect x="34.8738%" y="629" width="0.0150%" height="15" fill="rgb(251,135,29)" fg:x="44123" fg:w="19"/><text x="35.1238%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (19 samples, 0.02%)</title><rect x="34.8738%" y="613" width="0.0150%" height="15" fill="rgb(217,57,1)" fg:x="44123" fg:w="19"/><text x="35.1238%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (19 samples, 0.02%)</title><rect x="34.8738%" y="597" width="0.0150%" height="15" fill="rgb(249,119,31)" fg:x="44123" fg:w="19"/><text x="35.1238%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (19 samples, 0.02%)</title><rect x="34.8738%" y="581" width="0.0150%" height="15" fill="rgb(233,164,33)" fg:x="44123" fg:w="19"/><text x="35.1238%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (77 samples, 0.06%)</title><rect x="35.0247%" y="613" width="0.0609%" height="15" fill="rgb(250,217,43)" fg:x="44314" fg:w="77"/><text x="35.2747%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (41 samples, 0.03%)</title><rect x="35.2081%" y="549" width="0.0324%" height="15" fill="rgb(232,154,50)" fg:x="44546" fg:w="41"/><text x="35.4581%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.05%)</title><rect x="35.2595%" y="533" width="0.0458%" height="15" fill="rgb(227,190,8)" fg:x="44611" fg:w="58"/><text x="35.5095%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (26 samples, 0.02%)</title><rect x="35.3148%" y="533" width="0.0205%" height="15" fill="rgb(209,217,32)" fg:x="44681" fg:w="26"/><text x="35.5648%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (90 samples, 0.07%)</title><rect x="35.3417%" y="533" width="0.0711%" height="15" fill="rgb(243,203,50)" fg:x="44715" fg:w="90"/><text x="35.5917%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (365 samples, 0.29%)</title><rect x="35.1354%" y="581" width="0.2885%" height="15" fill="rgb(232,152,27)" fg:x="44454" fg:w="365"/><text x="35.3854%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (300 samples, 0.24%)</title><rect x="35.1868%" y="565" width="0.2371%" height="15" fill="rgb(240,34,29)" fg:x="44519" fg:w="300"/><text x="35.4368%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (232 samples, 0.18%)</title><rect x="35.2405%" y="549" width="0.1834%" height="15" fill="rgb(215,185,52)" fg:x="44587" fg:w="232"/><text x="35.4905%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (14 samples, 0.01%)</title><rect x="35.4128%" y="533" width="0.0111%" height="15" fill="rgb(240,89,49)" fg:x="44805" fg:w="14"/><text x="35.6628%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (424 samples, 0.34%)</title><rect x="35.0895%" y="613" width="0.3351%" height="15" fill="rgb(225,12,52)" fg:x="44396" fg:w="424"/><text x="35.3395%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (413 samples, 0.33%)</title><rect x="35.0982%" y="597" width="0.3264%" height="15" fill="rgb(239,128,45)" fg:x="44407" fg:w="413"/><text x="35.3482%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.01%)</title><rect x="35.5401%" y="469" width="0.0134%" height="15" fill="rgb(211,78,47)" fg:x="44966" fg:w="17"/><text x="35.7901%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (70 samples, 0.06%)</title><rect x="35.5535%" y="469" width="0.0553%" height="15" fill="rgb(232,31,21)" fg:x="44983" fg:w="70"/><text x="35.8035%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (592 samples, 0.47%)</title><rect x="35.5393%" y="485" width="0.4679%" height="15" fill="rgb(222,168,14)" fg:x="44965" fg:w="592"/><text x="35.7893%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (504 samples, 0.40%)</title><rect x="35.6088%" y="469" width="0.3983%" height="15" fill="rgb(209,128,24)" fg:x="45053" fg:w="504"/><text x="35.8588%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (62 samples, 0.05%)</title><rect x="36.0072%" y="485" width="0.0490%" height="15" fill="rgb(249,35,13)" fg:x="45557" fg:w="62"/><text x="36.2572%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`DYLD-STUB$$memcpy (20 samples, 0.02%)</title><rect x="36.0601%" y="485" width="0.0158%" height="15" fill="rgb(218,7,2)" fg:x="45624" fg:w="20"/><text x="36.3101%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (34 samples, 0.03%)</title><rect x="36.1036%" y="373" width="0.0269%" height="15" fill="rgb(238,107,27)" fg:x="45679" fg:w="34"/><text x="36.3536%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (137 samples, 0.11%)</title><rect x="36.1305%" y="373" width="0.1083%" height="15" fill="rgb(217,88,38)" fg:x="45713" fg:w="137"/><text x="36.3805%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (231 samples, 0.18%)</title><rect x="36.0894%" y="421" width="0.1826%" height="15" fill="rgb(230,207,0)" fg:x="45661" fg:w="231"/><text x="36.3394%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (227 samples, 0.18%)</title><rect x="36.0925%" y="405" width="0.1794%" height="15" fill="rgb(249,64,54)" fg:x="45665" fg:w="227"/><text x="36.3425%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (219 samples, 0.17%)</title><rect x="36.0989%" y="389" width="0.1731%" height="15" fill="rgb(231,7,11)" fg:x="45673" fg:w="219"/><text x="36.3489%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (42 samples, 0.03%)</title><rect x="36.2388%" y="373" width="0.0332%" height="15" fill="rgb(205,149,21)" fg:x="45850" fg:w="42"/><text x="36.4888%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (70 samples, 0.06%)</title><rect x="36.2917%" y="389" width="0.0553%" height="15" fill="rgb(215,126,34)" fg:x="45917" fg:w="70"/><text x="36.5417%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (301 samples, 0.24%)</title><rect x="36.3470%" y="389" width="0.2379%" height="15" fill="rgb(241,132,45)" fg:x="45987" fg:w="301"/><text x="36.5970%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (683 samples, 0.54%)</title><rect x="36.0831%" y="453" width="0.5398%" height="15" fill="rgb(252,69,32)" fg:x="45653" fg:w="683"/><text x="36.3331%" y="463.50"></text></g><g><title> N]&gt;::hash (683 samples, 0.54%)</title><rect x="36.0831%" y="437" width="0.5398%" height="15" fill="rgb(232,204,19)" fg:x="45653" fg:w="683"/><text x="36.3331%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (439 samples, 0.35%)</title><rect x="36.2759%" y="421" width="0.3470%" height="15" fill="rgb(249,15,47)" fg:x="45897" fg:w="439"/><text x="36.5259%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (425 samples, 0.34%)</title><rect x="36.2870%" y="405" width="0.3359%" height="15" fill="rgb(209,227,23)" fg:x="45911" fg:w="425"/><text x="36.5370%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (48 samples, 0.04%)</title><rect x="36.5849%" y="389" width="0.0379%" height="15" fill="rgb(248,92,24)" fg:x="46288" fg:w="48"/><text x="36.8349%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (694 samples, 0.55%)</title><rect x="36.0775%" y="469" width="0.5485%" height="15" fill="rgb(247,59,2)" fg:x="45646" fg:w="694"/><text x="36.3275%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (699 samples, 0.55%)</title><rect x="36.0759%" y="485" width="0.5525%" height="15" fill="rgb(221,30,5)" fg:x="45644" fg:w="699"/><text x="36.3259%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (1,666 samples, 1.32%)</title><rect x="35.5314%" y="501" width="1.3168%" height="15" fill="rgb(208,108,53)" fg:x="44955" fg:w="1666"/><text x="35.7814%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (278 samples, 0.22%)</title><rect x="36.6284%" y="485" width="0.2197%" height="15" fill="rgb(211,183,26)" fg:x="46343" fg:w="278"/><text x="36.8784%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.01%)</title><rect x="36.8481%" y="501" width="0.0142%" height="15" fill="rgb(232,132,4)" fg:x="46621" fg:w="18"/><text x="37.0981%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (98 samples, 0.08%)</title><rect x="36.9011%" y="485" width="0.0775%" height="15" fill="rgb(253,128,37)" fg:x="46688" fg:w="98"/><text x="37.1511%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.04%)</title><rect x="37.0939%" y="469" width="0.0443%" height="15" fill="rgb(221,58,24)" fg:x="46932" fg:w="56"/><text x="37.3439%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::vld1_u8 (17 samples, 0.01%)</title><rect x="37.1382%" y="469" width="0.0134%" height="15" fill="rgb(230,54,45)" fg:x="46988" fg:w="17"/><text x="37.3882%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (73 samples, 0.06%)</title><rect x="37.1516%" y="469" width="0.0577%" height="15" fill="rgb(254,21,18)" fg:x="47005" fg:w="73"/><text x="37.4016%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (19 samples, 0.02%)</title><rect x="37.2093%" y="469" width="0.0150%" height="15" fill="rgb(221,108,0)" fg:x="47078" fg:w="19"/><text x="37.4593%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (25 samples, 0.02%)</title><rect x="37.2244%" y="469" width="0.0198%" height="15" fill="rgb(206,95,1)" fg:x="47097" fg:w="25"/><text x="37.4744%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (31 samples, 0.02%)</title><rect x="37.2441%" y="469" width="0.0245%" height="15" fill="rgb(237,52,5)" fg:x="47122" fg:w="31"/><text x="37.4941%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (37 samples, 0.03%)</title><rect x="37.2686%" y="469" width="0.0292%" height="15" fill="rgb(218,150,34)" fg:x="47153" fg:w="37"/><text x="37.5186%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::equivalent_key::_{{closure}} (15 samples, 0.01%)</title><rect x="37.2979%" y="469" width="0.0119%" height="15" fill="rgb(235,194,28)" fg:x="47190" fg:w="15"/><text x="37.5479%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (46 samples, 0.04%)</title><rect x="37.3097%" y="469" width="0.0364%" height="15" fill="rgb(245,92,18)" fg:x="47205" fg:w="46"/><text x="37.5597%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (66 samples, 0.05%)</title><rect x="37.4346%" y="405" width="0.0522%" height="15" fill="rgb(253,203,53)" fg:x="47363" fg:w="66"/><text x="37.6846%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (84 samples, 0.07%)</title><rect x="37.4291%" y="421" width="0.0664%" height="15" fill="rgb(249,185,47)" fg:x="47356" fg:w="84"/><text x="37.6791%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (109 samples, 0.09%)</title><rect x="37.4156%" y="437" width="0.0862%" height="15" fill="rgb(252,194,52)" fg:x="47339" fg:w="109"/><text x="37.6656%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (244 samples, 0.19%)</title><rect x="37.3461%" y="469" width="0.1929%" height="15" fill="rgb(210,53,36)" fg:x="47251" fg:w="244"/><text x="37.5961%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::equivalent_key::_{{closure}} (167 samples, 0.13%)</title><rect x="37.4069%" y="453" width="0.1320%" height="15" fill="rgb(237,37,25)" fg:x="47328" fg:w="167"/><text x="37.6569%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (47 samples, 0.04%)</title><rect x="37.5018%" y="437" width="0.0371%" height="15" fill="rgb(242,116,27)" fg:x="47448" fg:w="47"/><text x="37.7518%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (56 samples, 0.04%)</title><rect x="37.5389%" y="469" width="0.0443%" height="15" fill="rgb(213,185,26)" fg:x="47495" fg:w="56"/><text x="37.7889%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (786 samples, 0.62%)</title><rect x="36.9785%" y="485" width="0.6212%" height="15" fill="rgb(225,204,8)" fg:x="46786" fg:w="786"/><text x="37.2285%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (21 samples, 0.02%)</title><rect x="37.5832%" y="469" width="0.0166%" height="15" fill="rgb(254,111,37)" fg:x="47551" fg:w="21"/><text x="37.8332%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,670 samples, 2.11%)</title><rect x="35.4911%" y="517" width="2.1103%" height="15" fill="rgb(242,35,9)" fg:x="44904" fg:w="2670"/><text x="35.7411%" y="527.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (935 samples, 0.74%)</title><rect x="36.8624%" y="501" width="0.7390%" height="15" fill="rgb(232,138,49)" fg:x="46639" fg:w="935"/><text x="37.1124%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::HashMap&lt;uuid::Uuid,F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (2,706 samples, 2.14%)</title><rect x="35.4634%" y="549" width="2.1388%" height="15" fill="rgb(247,56,4)" fg:x="44869" fg:w="2706"/><text x="35.7134%" y="559.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,690 samples, 2.13%)</title><rect x="35.4760%" y="533" width="2.1261%" height="15" fill="rgb(226,179,17)" fg:x="44885" fg:w="2690"/><text x="35.7260%" y="543.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (37 samples, 0.03%)</title><rect x="37.6022%" y="549" width="0.0292%" height="15" fill="rgb(216,163,45)" fg:x="47575" fg:w="37"/><text x="37.8522%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (2,789 samples, 2.20%)</title><rect x="35.4508%" y="565" width="2.2044%" height="15" fill="rgb(211,157,3)" fg:x="44853" fg:w="2789"/><text x="35.7008%" y="575.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (28 samples, 0.02%)</title><rect x="37.6330%" y="549" width="0.0221%" height="15" fill="rgb(234,44,20)" fg:x="47614" fg:w="28"/><text x="37.8830%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (21 samples, 0.02%)</title><rect x="37.6385%" y="533" width="0.0166%" height="15" fill="rgb(254,138,23)" fg:x="47621" fg:w="21"/><text x="37.8885%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (2,807 samples, 2.22%)</title><rect x="35.4397%" y="581" width="2.2186%" height="15" fill="rgb(206,119,39)" fg:x="44839" fg:w="2807"/><text x="35.6897%" y="591.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (2,811 samples, 2.22%)</title><rect x="35.4389%" y="597" width="2.2217%" height="15" fill="rgb(231,105,52)" fg:x="44838" fg:w="2811"/><text x="35.6889%" y="607.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (2,836 samples, 2.24%)</title><rect x="35.4365%" y="613" width="2.2415%" height="15" fill="rgb(250,20,5)" fg:x="44835" fg:w="2836"/><text x="35.6865%" y="623.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::ok_or_else (20 samples, 0.02%)</title><rect x="37.6622%" y="597" width="0.0158%" height="15" fill="rgb(215,198,30)" fg:x="47651" fg:w="20"/><text x="37.9122%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (49 samples, 0.04%)</title><rect x="37.6828%" y="405" width="0.0387%" height="15" fill="rgb(246,142,8)" fg:x="47677" fg:w="49"/><text x="37.9328%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (13 samples, 0.01%)</title><rect x="37.7982%" y="357" width="0.0103%" height="15" fill="rgb(243,26,38)" fg:x="47823" fg:w="13"/><text x="38.0482%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (28 samples, 0.02%)</title><rect x="37.8424%" y="309" width="0.0221%" height="15" fill="rgb(205,133,28)" fg:x="47879" fg:w="28"/><text x="38.0924%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (14 samples, 0.01%)</title><rect x="37.9436%" y="293" width="0.0111%" height="15" fill="rgb(212,34,0)" fg:x="48007" fg:w="14"/><text x="38.1936%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (26 samples, 0.02%)</title><rect x="37.9586%" y="261" width="0.0205%" height="15" fill="rgb(251,226,22)" fg:x="48026" fg:w="26"/><text x="38.2086%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (100 samples, 0.08%)</title><rect x="37.9792%" y="261" width="0.0790%" height="15" fill="rgb(252,119,9)" fg:x="48052" fg:w="100"/><text x="38.2292%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (646 samples, 0.51%)</title><rect x="37.9547%" y="277" width="0.5106%" height="15" fill="rgb(213,150,50)" fg:x="48021" fg:w="646"/><text x="38.2047%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (515 samples, 0.41%)</title><rect x="38.0582%" y="261" width="0.4070%" height="15" fill="rgb(212,24,39)" fg:x="48152" fg:w="515"/><text x="38.3082%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (116 samples, 0.09%)</title><rect x="38.4652%" y="277" width="0.0917%" height="15" fill="rgb(213,46,39)" fg:x="48667" fg:w="116"/><text x="38.7152%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (83 samples, 0.07%)</title><rect x="38.6051%" y="149" width="0.0656%" height="15" fill="rgb(239,106,12)" fg:x="48844" fg:w="83"/><text x="38.8551%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (155 samples, 0.12%)</title><rect x="38.6707%" y="149" width="0.1225%" height="15" fill="rgb(249,229,21)" fg:x="48927" fg:w="155"/><text x="38.9207%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (316 samples, 0.25%)</title><rect x="38.5854%" y="197" width="0.2498%" height="15" fill="rgb(212,158,3)" fg:x="48819" fg:w="316"/><text x="38.8354%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (312 samples, 0.25%)</title><rect x="38.5885%" y="181" width="0.2466%" height="15" fill="rgb(253,26,48)" fg:x="48823" fg:w="312"/><text x="38.8385%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (301 samples, 0.24%)</title><rect x="38.5972%" y="165" width="0.2379%" height="15" fill="rgb(238,178,20)" fg:x="48834" fg:w="301"/><text x="38.8472%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (53 samples, 0.04%)</title><rect x="38.7933%" y="149" width="0.0419%" height="15" fill="rgb(208,86,15)" fg:x="49082" fg:w="53"/><text x="39.0433%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (87 samples, 0.07%)</title><rect x="38.8525%" y="165" width="0.0688%" height="15" fill="rgb(239,42,53)" fg:x="49157" fg:w="87"/><text x="39.1025%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (295 samples, 0.23%)</title><rect x="38.9213%" y="165" width="0.2332%" height="15" fill="rgb(245,226,8)" fg:x="49244" fg:w="295"/><text x="39.1713%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (798 samples, 0.63%)</title><rect x="38.5783%" y="229" width="0.6307%" height="15" fill="rgb(216,176,32)" fg:x="48810" fg:w="798"/><text x="38.8283%" y="239.50"></text></g><g><title> N]&gt;::hash (798 samples, 0.63%)</title><rect x="38.5783%" y="213" width="0.6307%" height="15" fill="rgb(231,186,21)" fg:x="48810" fg:w="798"/><text x="38.8283%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (469 samples, 0.37%)</title><rect x="38.8383%" y="197" width="0.3707%" height="15" fill="rgb(205,95,49)" fg:x="49139" fg:w="469"/><text x="39.0883%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (457 samples, 0.36%)</title><rect x="38.8478%" y="181" width="0.3612%" height="15" fill="rgb(217,145,8)" fg:x="49151" fg:w="457"/><text x="39.0978%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (69 samples, 0.05%)</title><rect x="39.1545%" y="165" width="0.0545%" height="15" fill="rgb(239,144,48)" fg:x="49539" fg:w="69"/><text x="39.4045%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (808 samples, 0.64%)</title><rect x="38.5751%" y="245" width="0.6386%" height="15" fill="rgb(214,189,23)" fg:x="48806" fg:w="808"/><text x="38.8251%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (827 samples, 0.65%)</title><rect x="38.5625%" y="277" width="0.6536%" height="15" fill="rgb(229,157,17)" fg:x="48790" fg:w="827"/><text x="38.8125%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (817 samples, 0.65%)</title><rect x="38.5704%" y="261" width="0.6457%" height="15" fill="rgb(230,5,48)" fg:x="48800" fg:w="817"/><text x="38.8204%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (1,843 samples, 1.46%)</title><rect x="37.9547%" y="293" width="1.4567%" height="15" fill="rgb(224,156,48)" fg:x="48021" fg:w="1843"/><text x="38.2047%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (247 samples, 0.20%)</title><rect x="39.2161%" y="277" width="0.1952%" height="15" fill="rgb(223,14,29)" fg:x="49617" fg:w="247"/><text x="39.4661%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (47 samples, 0.04%)</title><rect x="39.4113%" y="293" width="0.0371%" height="15" fill="rgb(229,96,36)" fg:x="49864" fg:w="47"/><text x="39.6613%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (40 samples, 0.03%)</title><rect x="39.4919%" y="277" width="0.0316%" height="15" fill="rgb(231,102,53)" fg:x="49966" fg:w="40"/><text x="39.7419%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.05%)</title><rect x="39.5757%" y="261" width="0.0537%" height="15" fill="rgb(210,77,38)" fg:x="50072" fg:w="68"/><text x="39.8257%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (112 samples, 0.09%)</title><rect x="39.6390%" y="261" width="0.0885%" height="15" fill="rgb(235,131,6)" fg:x="50152" fg:w="112"/><text x="39.8890%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (57 samples, 0.05%)</title><rect x="39.7275%" y="261" width="0.0451%" height="15" fill="rgb(252,55,38)" fg:x="50264" fg:w="57"/><text x="39.9775%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (82 samples, 0.06%)</title><rect x="39.7725%" y="261" width="0.0648%" height="15" fill="rgb(246,38,14)" fg:x="50321" fg:w="82"/><text x="40.0225%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (41 samples, 0.03%)</title><rect x="39.8373%" y="261" width="0.0324%" height="15" fill="rgb(242,27,5)" fg:x="50403" fg:w="41"/><text x="40.0873%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (22 samples, 0.02%)</title><rect x="39.8697%" y="261" width="0.0174%" height="15" fill="rgb(228,65,35)" fg:x="50444" fg:w="22"/><text x="40.1197%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (20 samples, 0.02%)</title><rect x="39.9203%" y="245" width="0.0158%" height="15" fill="rgb(245,93,11)" fg:x="50508" fg:w="20"/><text x="40.1703%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (19 samples, 0.02%)</title><rect x="39.9361%" y="245" width="0.0150%" height="15" fill="rgb(213,1,31)" fg:x="50528" fg:w="19"/><text x="40.1861%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (14 samples, 0.01%)</title><rect x="39.9512%" y="245" width="0.0111%" height="15" fill="rgb(237,205,14)" fg:x="50547" fg:w="14"/><text x="40.2012%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (26 samples, 0.02%)</title><rect x="39.9622%" y="245" width="0.0205%" height="15" fill="rgb(232,118,45)" fg:x="50561" fg:w="26"/><text x="40.2122%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (141 samples, 0.11%)</title><rect x="39.8879%" y="261" width="0.1114%" height="15" fill="rgb(218,5,6)" fg:x="50467" fg:w="141"/><text x="40.1379%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (21 samples, 0.02%)</title><rect x="39.9828%" y="245" width="0.0166%" height="15" fill="rgb(251,87,51)" fg:x="50587" fg:w="21"/><text x="40.2328%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (44 samples, 0.03%)</title><rect x="39.9994%" y="261" width="0.0348%" height="15" fill="rgb(207,225,20)" fg:x="50608" fg:w="44"/><text x="40.2494%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (89 samples, 0.07%)</title><rect x="40.0341%" y="261" width="0.0703%" height="15" fill="rgb(222,78,54)" fg:x="50652" fg:w="89"/><text x="40.2841%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (62 samples, 0.05%)</title><rect x="40.1045%" y="261" width="0.0490%" height="15" fill="rgb(232,85,16)" fg:x="50741" fg:w="62"/><text x="40.3545%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (799 samples, 0.63%)</title><rect x="39.5236%" y="277" width="0.6315%" height="15" fill="rgb(244,25,33)" fg:x="50006" fg:w="799"/><text x="39.7736%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (897 samples, 0.71%)</title><rect x="39.4485%" y="293" width="0.7090%" height="15" fill="rgb(233,24,36)" fg:x="49911" fg:w="897"/><text x="39.6985%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (91 samples, 0.07%)</title><rect x="40.1574%" y="293" width="0.0719%" height="15" fill="rgb(253,49,54)" fg:x="50808" fg:w="91"/><text x="40.4074%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,014 samples, 2.38%)</title><rect x="37.8646%" y="309" width="2.3822%" height="15" fill="rgb(245,12,22)" fg:x="47907" fg:w="3014"/><text x="38.1146%" y="319.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (14 samples, 0.01%)</title><rect x="40.2357%" y="293" width="0.0111%" height="15" fill="rgb(253,141,28)" fg:x="50907" fg:w="14"/><text x="40.4857%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (3,070 samples, 2.43%)</title><rect x="37.8298%" y="325" width="2.4265%" height="15" fill="rgb(225,207,27)" fg:x="47863" fg:w="3070"/><text x="38.0798%" y="335.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (3,108 samples, 2.46%)</title><rect x="37.8084%" y="357" width="2.4565%" height="15" fill="rgb(220,84,2)" fg:x="47836" fg:w="3108"/><text x="38.0584%" y="367.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3,086 samples, 2.44%)</title><rect x="37.8258%" y="341" width="2.4391%" height="15" fill="rgb(224,37,37)" fg:x="47858" fg:w="3086"/><text x="38.0758%" y="351.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (3,136 samples, 2.48%)</title><rect x="37.7871%" y="373" width="2.4786%" height="15" fill="rgb(220,143,18)" fg:x="47809" fg:w="3136"/><text x="38.0371%" y="383.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (3,206 samples, 2.53%)</title><rect x="37.7389%" y="389" width="2.5339%" height="15" fill="rgb(210,88,33)" fg:x="47748" fg:w="3206"/><text x="37.9889%" y="399.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.05%)</title><rect x="40.2728%" y="389" width="0.0530%" height="15" fill="rgb(219,87,51)" fg:x="50954" fg:w="67"/><text x="40.5228%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (24 samples, 0.02%)</title><rect x="40.3345%" y="389" width="0.0190%" height="15" fill="rgb(211,7,35)" fg:x="51032" fg:w="24"/><text x="40.5845%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (99 samples, 0.08%)</title><rect x="40.3645%" y="389" width="0.0782%" height="15" fill="rgb(232,77,2)" fg:x="51070" fg:w="99"/><text x="40.6145%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,504 samples, 2.77%)</title><rect x="37.6796%" y="437" width="2.7695%" height="15" fill="rgb(249,94,25)" fg:x="47673" fg:w="3504"/><text x="37.9296%" y="447.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,504 samples, 2.77%)</title><rect x="37.6796%" y="421" width="2.7695%" height="15" fill="rgb(215,112,2)" fg:x="47673" fg:w="3504"/><text x="37.9296%" y="431.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (3,451 samples, 2.73%)</title><rect x="37.7215%" y="405" width="2.7276%" height="15" fill="rgb(226,115,48)" fg:x="47726" fg:w="3451"/><text x="37.9715%" y="415.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (3,506 samples, 2.77%)</title><rect x="37.6788%" y="469" width="2.7711%" height="15" fill="rgb(249,196,10)" fg:x="47672" fg:w="3506"/><text x="37.9288%" y="479.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,506 samples, 2.77%)</title><rect x="37.6788%" y="453" width="2.7711%" height="15" fill="rgb(237,109,14)" fg:x="47672" fg:w="3506"/><text x="37.9288%" y="463.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,513 samples, 2.78%)</title><rect x="37.6788%" y="517" width="2.7766%" height="15" fill="rgb(217,103,53)" fg:x="47672" fg:w="3513"/><text x="37.9288%" y="527.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,513 samples, 2.78%)</title><rect x="37.6788%" y="501" width="2.7766%" height="15" fill="rgb(244,137,9)" fg:x="47672" fg:w="3513"/><text x="37.9288%" y="511.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3,513 samples, 2.78%)</title><rect x="37.6788%" y="485" width="2.7766%" height="15" fill="rgb(227,201,3)" fg:x="47672" fg:w="3513"/><text x="37.9288%" y="495.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (3,514 samples, 2.78%)</title><rect x="37.6788%" y="533" width="2.7774%" height="15" fill="rgb(243,94,6)" fg:x="47672" fg:w="3514"/><text x="37.9288%" y="543.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::HashMap&lt;uuid::Uuid,F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (3,515 samples, 2.78%)</title><rect x="37.6788%" y="549" width="2.7782%" height="15" fill="rgb(235,118,5)" fg:x="47672" fg:w="3515"/><text x="37.9288%" y="559.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (33 samples, 0.03%)</title><rect x="40.5321%" y="341" width="0.0261%" height="15" fill="rgb(247,10,30)" fg:x="51282" fg:w="33"/><text x="40.7821%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.04%)</title><rect x="40.5756%" y="325" width="0.0387%" height="15" fill="rgb(205,26,28)" fg:x="51337" fg:w="49"/><text x="40.8256%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (20 samples, 0.02%)</title><rect x="40.6190%" y="325" width="0.0158%" height="15" fill="rgb(206,99,35)" fg:x="51392" fg:w="20"/><text x="40.8690%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (136 samples, 0.11%)</title><rect x="40.6412%" y="325" width="0.1075%" height="15" fill="rgb(238,130,40)" fg:x="51420" fg:w="136"/><text x="40.8912%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (362 samples, 0.29%)</title><rect x="40.4728%" y="373" width="0.2861%" height="15" fill="rgb(224,126,31)" fg:x="51207" fg:w="362"/><text x="40.7228%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (316 samples, 0.25%)</title><rect x="40.5092%" y="357" width="0.2498%" height="15" fill="rgb(254,105,17)" fg:x="51253" fg:w="316"/><text x="40.7592%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (254 samples, 0.20%)</title><rect x="40.5582%" y="341" width="0.2008%" height="15" fill="rgb(216,87,36)" fg:x="51315" fg:w="254"/><text x="40.8082%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (13 samples, 0.01%)</title><rect x="40.7486%" y="325" width="0.0103%" height="15" fill="rgb(240,21,12)" fg:x="51556" fg:w="13"/><text x="40.9986%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (37 samples, 0.03%)</title><rect x="40.8071%" y="341" width="0.0292%" height="15" fill="rgb(245,192,34)" fg:x="51630" fg:w="37"/><text x="41.0571%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids::_{{closure}} (77 samples, 0.06%)</title><rect x="40.8364%" y="341" width="0.0609%" height="15" fill="rgb(226,100,49)" fg:x="51667" fg:w="77"/><text x="41.0864%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (62 samples, 0.05%)</title><rect x="40.8482%" y="325" width="0.0490%" height="15" fill="rgb(245,188,27)" fg:x="51682" fg:w="62"/><text x="41.0982%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (56 samples, 0.04%)</title><rect x="40.8530%" y="309" width="0.0443%" height="15" fill="rgb(212,170,8)" fg:x="51688" fg:w="56"/><text x="41.1030%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (15 samples, 0.01%)</title><rect x="40.9265%" y="293" width="0.0119%" height="15" fill="rgb(217,113,29)" fg:x="51781" fg:w="15"/><text x="41.1765%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (25 samples, 0.02%)</title><rect x="41.0079%" y="245" width="0.0198%" height="15" fill="rgb(237,30,3)" fg:x="51884" fg:w="25"/><text x="41.2579%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (93 samples, 0.07%)</title><rect x="41.0276%" y="245" width="0.0735%" height="15" fill="rgb(227,19,28)" fg:x="51909" fg:w="93"/><text x="41.2776%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (586 samples, 0.46%)</title><rect x="41.0079%" y="261" width="0.4632%" height="15" fill="rgb(239,172,45)" fg:x="51884" fg:w="586"/><text x="41.2579%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (468 samples, 0.37%)</title><rect x="41.1012%" y="245" width="0.3699%" height="15" fill="rgb(254,55,39)" fg:x="52002" fg:w="468"/><text x="41.3512%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (151 samples, 0.12%)</title><rect x="41.4710%" y="261" width="0.1193%" height="15" fill="rgb(249,208,12)" fg:x="52470" fg:w="151"/><text x="41.7210%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 samples, 0.04%)</title><rect x="41.6315%" y="133" width="0.0427%" height="15" fill="rgb(240,52,13)" fg:x="52673" fg:w="54"/><text x="41.8815%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (144 samples, 0.11%)</title><rect x="41.6742%" y="133" width="0.1138%" height="15" fill="rgb(252,149,13)" fg:x="52727" fg:w="144"/><text x="41.9242%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (264 samples, 0.21%)</title><rect x="41.6188%" y="181" width="0.2087%" height="15" fill="rgb(232,81,48)" fg:x="52657" fg:w="264"/><text x="41.8688%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (261 samples, 0.21%)</title><rect x="41.6212%" y="165" width="0.2063%" height="15" fill="rgb(222,144,2)" fg:x="52660" fg:w="261"/><text x="41.8712%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (256 samples, 0.20%)</title><rect x="41.6252%" y="149" width="0.2023%" height="15" fill="rgb(216,81,32)" fg:x="52665" fg:w="256"/><text x="41.8752%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (50 samples, 0.04%)</title><rect x="41.7880%" y="133" width="0.0395%" height="15" fill="rgb(244,78,51)" fg:x="52871" fg:w="50"/><text x="42.0380%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (69 samples, 0.05%)</title><rect x="41.8449%" y="149" width="0.0545%" height="15" fill="rgb(217,66,21)" fg:x="52943" fg:w="69"/><text x="42.0949%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (311 samples, 0.25%)</title><rect x="41.8994%" y="149" width="0.2458%" height="15" fill="rgb(247,101,42)" fg:x="53012" fg:w="311"/><text x="42.1494%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (734 samples, 0.58%)</title><rect x="41.6078%" y="213" width="0.5801%" height="15" fill="rgb(227,81,39)" fg:x="52643" fg:w="734"/><text x="41.8578%" y="223.50"></text></g><g><title> N]&gt;::hash (734 samples, 0.58%)</title><rect x="41.6078%" y="197" width="0.5801%" height="15" fill="rgb(220,223,44)" fg:x="52643" fg:w="734"/><text x="41.8578%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (454 samples, 0.36%)</title><rect x="41.8291%" y="181" width="0.3588%" height="15" fill="rgb(205,218,2)" fg:x="52923" fg:w="454"/><text x="42.0791%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (435 samples, 0.34%)</title><rect x="41.8441%" y="165" width="0.3438%" height="15" fill="rgb(212,207,28)" fg:x="52942" fg:w="435"/><text x="42.0941%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (54 samples, 0.04%)</title><rect x="42.1452%" y="149" width="0.0427%" height="15" fill="rgb(224,12,41)" fg:x="53323" fg:w="54"/><text x="42.3952%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (744 samples, 0.59%)</title><rect x="41.6062%" y="229" width="0.5880%" height="15" fill="rgb(216,118,12)" fg:x="52641" fg:w="744"/><text x="41.8562%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (757 samples, 0.60%)</title><rect x="41.5991%" y="261" width="0.5983%" height="15" fill="rgb(252,97,46)" fg:x="52632" fg:w="757"/><text x="41.8491%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (749 samples, 0.59%)</title><rect x="41.6054%" y="245" width="0.5920%" height="15" fill="rgb(244,206,19)" fg:x="52640" fg:w="749"/><text x="41.8554%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (1,761 samples, 1.39%)</title><rect x="41.0063%" y="277" width="1.3919%" height="15" fill="rgb(231,84,31)" fg:x="51882" fg:w="1761"/><text x="41.2563%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (254 samples, 0.20%)</title><rect x="42.1974%" y="261" width="0.2008%" height="15" fill="rgb(244,133,0)" fg:x="53389" fg:w="254"/><text x="42.4474%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (49 samples, 0.04%)</title><rect x="42.3982%" y="277" width="0.0387%" height="15" fill="rgb(223,15,50)" fg:x="53643" fg:w="49"/><text x="42.6482%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (300 samples, 0.24%)</title><rect x="42.5096%" y="245" width="0.2371%" height="15" fill="rgb(250,118,49)" fg:x="53784" fg:w="300"/><text x="42.7596%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (196 samples, 0.15%)</title><rect x="42.7522%" y="229" width="0.1549%" height="15" fill="rgb(248,25,38)" fg:x="54091" fg:w="196"/><text x="43.0022%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (25 samples, 0.02%)</title><rect x="42.9174%" y="229" width="0.0198%" height="15" fill="rgb(215,70,14)" fg:x="54300" fg:w="25"/><text x="43.1674%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (47 samples, 0.04%)</title><rect x="42.9617%" y="229" width="0.0371%" height="15" fill="rgb(215,28,15)" fg:x="54356" fg:w="47"/><text x="43.2117%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (34 samples, 0.03%)</title><rect x="43.0779%" y="213" width="0.0269%" height="15" fill="rgb(243,6,28)" fg:x="54503" fg:w="34"/><text x="43.3279%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (17 samples, 0.01%)</title><rect x="43.1127%" y="197" width="0.0134%" height="15" fill="rgb(222,130,1)" fg:x="54547" fg:w="17"/><text x="43.3627%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (40 samples, 0.03%)</title><rect x="43.1372%" y="165" width="0.0316%" height="15" fill="rgb(236,166,44)" fg:x="54578" fg:w="40"/><text x="43.3872%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (134 samples, 0.11%)</title><rect x="43.1688%" y="165" width="0.1059%" height="15" fill="rgb(221,108,14)" fg:x="54618" fg:w="134"/><text x="43.4188%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (995 samples, 0.79%)</title><rect x="43.1324%" y="181" width="0.7864%" height="15" fill="rgb(252,3,45)" fg:x="54572" fg:w="995"/><text x="43.3824%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (815 samples, 0.64%)</title><rect x="43.2747%" y="165" width="0.6442%" height="15" fill="rgb(237,68,30)" fg:x="54752" fg:w="815"/><text x="43.5247%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (138 samples, 0.11%)</title><rect x="43.9188%" y="181" width="0.1091%" height="15" fill="rgb(211,79,22)" fg:x="55567" fg:w="138"/><text x="44.1688%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`DYLD-STUB$$memcpy (33 samples, 0.03%)</title><rect x="44.0279%" y="181" width="0.0261%" height="15" fill="rgb(252,185,21)" fg:x="55705" fg:w="33"/><text x="44.2779%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (86 samples, 0.07%)</title><rect x="44.1196%" y="53" width="0.0680%" height="15" fill="rgb(225,189,26)" fg:x="55821" fg:w="86"/><text x="44.3696%" y="63.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (324 samples, 0.26%)</title><rect x="44.1876%" y="53" width="0.2561%" height="15" fill="rgb(241,30,40)" fg:x="55907" fg:w="324"/><text x="44.4376%" y="63.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (529 samples, 0.42%)</title><rect x="44.0919%" y="101" width="0.4181%" height="15" fill="rgb(235,215,44)" fg:x="55786" fg:w="529"/><text x="44.3419%" y="111.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (523 samples, 0.41%)</title><rect x="44.0967%" y="85" width="0.4134%" height="15" fill="rgb(205,8,29)" fg:x="55792" fg:w="523"/><text x="44.3467%" y="95.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (512 samples, 0.40%)</title><rect x="44.1054%" y="69" width="0.4047%" height="15" fill="rgb(241,137,42)" fg:x="55803" fg:w="512"/><text x="44.3554%" y="79.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (84 samples, 0.07%)</title><rect x="44.4437%" y="53" width="0.0664%" height="15" fill="rgb(237,155,2)" fg:x="56231" fg:w="84"/><text x="44.6937%" y="63.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (159 samples, 0.13%)</title><rect x="44.5480%" y="69" width="0.1257%" height="15" fill="rgb(245,29,42)" fg:x="56363" fg:w="159"/><text x="44.7980%" y="79.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (522 samples, 0.41%)</title><rect x="44.6737%" y="69" width="0.4126%" height="15" fill="rgb(234,101,35)" fg:x="56522" fg:w="522"/><text x="44.9237%" y="79.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (1,379 samples, 1.09%)</title><rect x="44.0761%" y="133" width="1.0899%" height="15" fill="rgb(228,64,37)" fg:x="55766" fg:w="1379"/><text x="44.3261%" y="143.50"></text></g><g><title> N]&gt;::hash (1,379 samples, 1.09%)</title><rect x="44.0761%" y="117" width="1.0899%" height="15" fill="rgb(217,214,36)" fg:x="55766" fg:w="1379"/><text x="44.3261%" y="127.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (825 samples, 0.65%)</title><rect x="44.5140%" y="101" width="0.6521%" height="15" fill="rgb(243,70,3)" fg:x="56320" fg:w="825"/><text x="44.7640%" y="111.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (796 samples, 0.63%)</title><rect x="44.5369%" y="85" width="0.6291%" height="15" fill="rgb(253,158,52)" fg:x="56349" fg:w="796"/><text x="44.7869%" y="95.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (101 samples, 0.08%)</title><rect x="45.0862%" y="69" width="0.0798%" height="15" fill="rgb(234,111,54)" fg:x="57044" fg:w="101"/><text x="45.3362%" y="79.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1,400 samples, 1.11%)</title><rect x="44.0690%" y="149" width="1.1065%" height="15" fill="rgb(217,70,32)" fg:x="55757" fg:w="1400"/><text x="44.3190%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,430 samples, 1.13%)</title><rect x="44.0540%" y="181" width="1.1302%" height="15" fill="rgb(234,18,33)" fg:x="55738" fg:w="1430"/><text x="44.3040%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,415 samples, 1.12%)</title><rect x="44.0659%" y="165" width="1.1184%" height="15" fill="rgb(234,12,49)" fg:x="55753" fg:w="1415"/><text x="44.3159%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (3,060 samples, 2.42%)</title><rect x="42.9988%" y="229" width="2.4186%" height="15" fill="rgb(236,10,21)" fg:x="54403" fg:w="3060"/><text x="43.2488%" y="239.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (2,926 samples, 2.31%)</title><rect x="43.1048%" y="213" width="2.3126%" height="15" fill="rgb(248,182,45)" fg:x="54537" fg:w="2926"/><text x="43.3548%" y="223.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (2,899 samples, 2.29%)</title><rect x="43.1261%" y="197" width="2.2913%" height="15" fill="rgb(217,95,36)" fg:x="54564" fg:w="2899"/><text x="43.3761%" y="207.50">g..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (295 samples, 0.23%)</title><rect x="45.1842%" y="181" width="0.2332%" height="15" fill="rgb(212,110,31)" fg:x="57168" fg:w="295"/><text x="45.4342%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::vld1_u8 (16 samples, 0.01%)</title><rect x="45.5802%" y="197" width="0.0126%" height="15" fill="rgb(206,32,53)" fg:x="57669" fg:w="16"/><text x="45.8302%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (70 samples, 0.06%)</title><rect x="45.5929%" y="197" width="0.0553%" height="15" fill="rgb(246,141,37)" fg:x="57685" fg:w="70"/><text x="45.8429%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (109 samples, 0.09%)</title><rect x="45.7873%" y="181" width="0.0862%" height="15" fill="rgb(219,16,7)" fg:x="57931" fg:w="109"/><text x="46.0373%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (52 samples, 0.04%)</title><rect x="45.8734%" y="181" width="0.0411%" height="15" fill="rgb(230,205,45)" fg:x="58040" fg:w="52"/><text x="46.1234%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (62 samples, 0.05%)</title><rect x="45.9145%" y="181" width="0.0490%" height="15" fill="rgb(231,43,49)" fg:x="58092" fg:w="62"/><text x="46.1645%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (59 samples, 0.05%)</title><rect x="45.9635%" y="181" width="0.0466%" height="15" fill="rgb(212,106,34)" fg:x="58154" fg:w="59"/><text x="46.2135%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (516 samples, 0.41%)</title><rect x="45.6482%" y="197" width="0.4078%" height="15" fill="rgb(206,83,17)" fg:x="57755" fg:w="516"/><text x="45.8982%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (58 samples, 0.05%)</title><rect x="46.0102%" y="181" width="0.0458%" height="15" fill="rgb(244,154,49)" fg:x="58213" fg:w="58"/><text x="46.2602%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (87 samples, 0.07%)</title><rect x="46.0560%" y="197" width="0.0688%" height="15" fill="rgb(244,149,49)" fg:x="58271" fg:w="87"/><text x="46.3060%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (53 samples, 0.04%)</title><rect x="46.1248%" y="197" width="0.0419%" height="15" fill="rgb(227,134,18)" fg:x="58358" fg:w="53"/><text x="46.3748%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (873 samples, 0.69%)</title><rect x="45.4846%" y="213" width="0.6900%" height="15" fill="rgb(237,116,36)" fg:x="57548" fg:w="873"/><text x="45.7346%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (974 samples, 0.77%)</title><rect x="45.4174%" y="229" width="0.7698%" height="15" fill="rgb(205,129,40)" fg:x="57463" fg:w="974"/><text x="45.6674%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (16 samples, 0.01%)</title><rect x="46.1746%" y="213" width="0.0126%" height="15" fill="rgb(236,178,4)" fg:x="58421" fg:w="16"/><text x="46.4246%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fallible_with_capacity (15 samples, 0.01%)</title><rect x="46.1880%" y="213" width="0.0119%" height="15" fill="rgb(251,76,53)" fg:x="58438" fg:w="15"/><text x="46.4380%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_resize (17 samples, 0.01%)</title><rect x="46.1872%" y="229" width="0.0134%" height="15" fill="rgb(242,92,40)" fg:x="58437" fg:w="17"/><text x="46.4372%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (158 samples, 0.12%)</title><rect x="46.2007%" y="229" width="0.1249%" height="15" fill="rgb(209,45,30)" fg:x="58454" fg:w="158"/><text x="46.4507%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (31 samples, 0.02%)</title><rect x="46.3255%" y="229" width="0.0245%" height="15" fill="rgb(218,157,36)" fg:x="58612" fg:w="31"/><text x="46.5755%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4,553 samples, 3.60%)</title><rect x="42.7522%" y="245" width="3.5986%" height="15" fill="rgb(222,186,16)" fg:x="54091" fg:w="4553"/><text x="43.0022%" y="255.50">get_..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4,908 samples, 3.88%)</title><rect x="42.4756%" y="261" width="3.8792%" height="15" fill="rgb(254,72,35)" fg:x="53741" fg:w="4908"/><text x="42.7256%" y="271.50">get_..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.05%)</title><rect x="46.3943%" y="245" width="0.0482%" height="15" fill="rgb(224,25,35)" fg:x="58699" fg:w="61"/><text x="46.6443%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (131 samples, 0.10%)</title><rect x="46.4504%" y="245" width="0.1035%" height="15" fill="rgb(206,135,52)" fg:x="58770" fg:w="131"/><text x="46.7004%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (53 samples, 0.04%)</title><rect x="46.5540%" y="245" width="0.0419%" height="15" fill="rgb(229,174,47)" fg:x="58901" fg:w="53"/><text x="46.8040%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (120 samples, 0.09%)</title><rect x="46.5958%" y="245" width="0.0948%" height="15" fill="rgb(242,184,21)" fg:x="58954" fg:w="120"/><text x="46.8458%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (33 samples, 0.03%)</title><rect x="46.6907%" y="245" width="0.0261%" height="15" fill="rgb(213,22,45)" fg:x="59074" fg:w="33"/><text x="46.9407%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (31 samples, 0.02%)</title><rect x="46.7168%" y="245" width="0.0245%" height="15" fill="rgb(237,81,54)" fg:x="59107" fg:w="31"/><text x="46.9668%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (36 samples, 0.03%)</title><rect x="46.7942%" y="229" width="0.0285%" height="15" fill="rgb(248,177,18)" fg:x="59205" fg:w="36"/><text x="47.0442%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (34 samples, 0.03%)</title><rect x="46.8227%" y="229" width="0.0269%" height="15" fill="rgb(254,31,16)" fg:x="59241" fg:w="34"/><text x="47.0727%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (25 samples, 0.02%)</title><rect x="46.8496%" y="229" width="0.0198%" height="15" fill="rgb(235,20,31)" fg:x="59275" fg:w="25"/><text x="47.0996%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (31 samples, 0.02%)</title><rect x="46.8693%" y="229" width="0.0245%" height="15" fill="rgb(240,56,43)" fg:x="59300" fg:w="31"/><text x="47.1193%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (211 samples, 0.17%)</title><rect x="46.7476%" y="245" width="0.1668%" height="15" fill="rgb(237,197,51)" fg:x="59146" fg:w="211"/><text x="46.9976%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (26 samples, 0.02%)</title><rect x="46.8938%" y="229" width="0.0205%" height="15" fill="rgb(241,162,44)" fg:x="59331" fg:w="26"/><text x="47.1438%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (27 samples, 0.02%)</title><rect x="46.9144%" y="245" width="0.0213%" height="15" fill="rgb(224,23,20)" fg:x="59357" fg:w="27"/><text x="47.1644%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (206 samples, 0.16%)</title><rect x="46.9357%" y="245" width="0.1628%" height="15" fill="rgb(250,109,34)" fg:x="59384" fg:w="206"/><text x="47.1857%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (71 samples, 0.06%)</title><rect x="47.0985%" y="245" width="0.0561%" height="15" fill="rgb(214,175,50)" fg:x="59590" fg:w="71"/><text x="47.3485%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1,012 samples, 0.80%)</title><rect x="46.3564%" y="261" width="0.7999%" height="15" fill="rgb(213,182,5)" fg:x="58651" fg:w="1012"/><text x="46.6064%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (5,983 samples, 4.73%)</title><rect x="42.4369%" y="277" width="4.7288%" height="15" fill="rgb(209,199,19)" fg:x="53692" fg:w="5983"/><text x="42.6869%" y="287.50">get_us..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (91 samples, 0.07%)</title><rect x="47.1657%" y="277" width="0.0719%" height="15" fill="rgb(236,224,42)" fg:x="59675" fg:w="91"/><text x="47.4157%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7,984 samples, 6.31%)</title><rect x="40.9383%" y="293" width="6.3104%" height="15" fill="rgb(246,226,29)" fg:x="51796" fg:w="7984"/><text x="41.1883%" y="303.50">get_usag..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (8,012 samples, 6.33%)</title><rect x="40.9241%" y="309" width="6.3325%" height="15" fill="rgb(227,223,11)" fg:x="51778" fg:w="8012"/><text x="41.1741%" y="319.50">get_usag..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (8,062 samples, 6.37%)</title><rect x="40.8972%" y="341" width="6.3720%" height="15" fill="rgb(219,7,51)" fg:x="51744" fg:w="8062"/><text x="41.1472%" y="351.50">get_usag..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (8,040 samples, 6.35%)</title><rect x="40.9146%" y="325" width="6.3546%" height="15" fill="rgb(245,167,10)" fg:x="51766" fg:w="8040"/><text x="41.1646%" y="335.50">get_usag..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.01%)</title><rect x="47.2566%" y="309" width="0.0126%" height="15" fill="rgb(237,224,16)" fg:x="59790" fg:w="16"/><text x="47.5066%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (8,220 samples, 6.50%)</title><rect x="40.7787%" y="357" width="6.4969%" height="15" fill="rgb(226,132,13)" fg:x="51594" fg:w="8220"/><text x="41.0287%" y="367.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (8,245 samples, 6.52%)</title><rect x="40.7613%" y="373" width="6.5167%" height="15" fill="rgb(214,140,3)" fg:x="51572" fg:w="8245"/><text x="41.0113%" y="383.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (8,637 samples, 6.83%)</title><rect x="40.4578%" y="517" width="6.8265%" height="15" fill="rgb(221,177,4)" fg:x="51188" fg:w="8637"/><text x="40.7078%" y="527.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (8,637 samples, 6.83%)</title><rect x="40.4578%" y="501" width="6.8265%" height="15" fill="rgb(238,139,3)" fg:x="51188" fg:w="8637"/><text x="40.7078%" y="511.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (8,634 samples, 6.82%)</title><rect x="40.4602%" y="485" width="6.8241%" height="15" fill="rgb(216,17,39)" fg:x="51191" fg:w="8634"/><text x="40.7102%" y="495.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,634 samples, 6.82%)</title><rect x="40.4602%" y="469" width="6.8241%" height="15" fill="rgb(238,120,9)" fg:x="51191" fg:w="8634"/><text x="40.7102%" y="479.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,634 samples, 6.82%)</title><rect x="40.4602%" y="453" width="6.8241%" height="15" fill="rgb(244,92,53)" fg:x="51191" fg:w="8634"/><text x="40.7102%" y="463.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,634 samples, 6.82%)</title><rect x="40.4602%" y="437" width="6.8241%" height="15" fill="rgb(224,148,33)" fg:x="51191" fg:w="8634"/><text x="40.7102%" y="447.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,634 samples, 6.82%)</title><rect x="40.4602%" y="421" width="6.8241%" height="15" fill="rgb(243,6,36)" fg:x="51191" fg:w="8634"/><text x="40.7102%" y="431.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,634 samples, 6.82%)</title><rect x="40.4602%" y="405" width="6.8241%" height="15" fill="rgb(230,102,11)" fg:x="51191" fg:w="8634"/><text x="40.7102%" y="415.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (8,630 samples, 6.82%)</title><rect x="40.4633%" y="389" width="6.8209%" height="15" fill="rgb(234,148,36)" fg:x="51195" fg:w="8630"/><text x="40.7133%" y="399.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (12,155 samples, 9.61%)</title><rect x="37.6780%" y="597" width="9.6070%" height="15" fill="rgb(251,153,25)" fg:x="47671" fg:w="12155"/><text x="37.9280%" y="607.50">get_usage_test..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (12,155 samples, 9.61%)</title><rect x="37.6780%" y="581" width="9.6070%" height="15" fill="rgb(215,129,8)" fg:x="47671" fg:w="12155"/><text x="37.9280%" y="591.50">get_usage_test..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (12,155 samples, 9.61%)</title><rect x="37.6780%" y="565" width="9.6070%" height="15" fill="rgb(224,128,35)" fg:x="47671" fg:w="12155"/><text x="37.9280%" y="575.50">get_usage_test..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (8,638 samples, 6.83%)</title><rect x="40.4578%" y="549" width="6.8273%" height="15" fill="rgb(237,56,52)" fg:x="51188" fg:w="8638"/><text x="40.7078%" y="559.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8,638 samples, 6.83%)</title><rect x="40.4578%" y="533" width="6.8273%" height="15" fill="rgb(234,213,19)" fg:x="51188" fg:w="8638"/><text x="40.7078%" y="543.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (37 samples, 0.03%)</title><rect x="47.2914%" y="437" width="0.0292%" height="15" fill="rgb(252,82,23)" fg:x="59834" fg:w="37"/><text x="47.5414%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (50 samples, 0.04%)</title><rect x="47.4020%" y="373" width="0.0395%" height="15" fill="rgb(254,201,21)" fg:x="59974" fg:w="50"/><text x="47.6520%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.01%)</title><rect x="47.6233%" y="277" width="0.0126%" height="15" fill="rgb(250,186,11)" fg:x="60254" fg:w="16"/><text x="47.8733%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (78 samples, 0.06%)</title><rect x="47.6360%" y="277" width="0.0616%" height="15" fill="rgb(211,174,5)" fg:x="60270" fg:w="78"/><text x="47.8860%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (595 samples, 0.47%)</title><rect x="47.6186%" y="293" width="0.4703%" height="15" fill="rgb(214,121,10)" fg:x="60248" fg:w="595"/><text x="47.8686%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (495 samples, 0.39%)</title><rect x="47.6976%" y="277" width="0.3912%" height="15" fill="rgb(241,66,2)" fg:x="60348" fg:w="495"/><text x="47.9476%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (87 samples, 0.07%)</title><rect x="48.0889%" y="293" width="0.0688%" height="15" fill="rgb(220,167,19)" fg:x="60843" fg:w="87"/><text x="48.3389%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`DYLD-STUB$$memcpy (16 samples, 0.01%)</title><rect x="48.1608%" y="293" width="0.0126%" height="15" fill="rgb(231,54,50)" fg:x="60934" fg:w="16"/><text x="48.4108%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (158 samples, 0.12%)</title><rect x="48.2027%" y="181" width="0.1249%" height="15" fill="rgb(239,217,53)" fg:x="60987" fg:w="158"/><text x="48.4527%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (172 samples, 0.14%)</title><rect x="48.3276%" y="181" width="0.1359%" height="15" fill="rgb(248,8,0)" fg:x="61145" fg:w="172"/><text x="48.5776%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (398 samples, 0.31%)</title><rect x="48.1853%" y="229" width="0.3146%" height="15" fill="rgb(229,118,37)" fg:x="60965" fg:w="398"/><text x="48.4353%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (395 samples, 0.31%)</title><rect x="48.1877%" y="213" width="0.3122%" height="15" fill="rgb(253,223,43)" fg:x="60968" fg:w="395"/><text x="48.4377%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (383 samples, 0.30%)</title><rect x="48.1972%" y="197" width="0.3027%" height="15" fill="rgb(211,77,36)" fg:x="60980" fg:w="383"/><text x="48.4472%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (46 samples, 0.04%)</title><rect x="48.4635%" y="181" width="0.0364%" height="15" fill="rgb(219,3,53)" fg:x="61317" fg:w="46"/><text x="48.7135%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (82 samples, 0.06%)</title><rect x="48.5204%" y="197" width="0.0648%" height="15" fill="rgb(244,45,42)" fg:x="61389" fg:w="82"/><text x="48.7704%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (307 samples, 0.24%)</title><rect x="48.5852%" y="197" width="0.2426%" height="15" fill="rgb(225,95,27)" fg:x="61471" fg:w="307"/><text x="48.8352%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (872 samples, 0.69%)</title><rect x="48.1774%" y="261" width="0.6892%" height="15" fill="rgb(207,74,8)" fg:x="60955" fg:w="872"/><text x="48.4274%" y="271.50"></text></g><g><title> N]&gt;::hash (872 samples, 0.69%)</title><rect x="48.1774%" y="245" width="0.6892%" height="15" fill="rgb(243,63,36)" fg:x="60955" fg:w="872"/><text x="48.4274%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (461 samples, 0.36%)</title><rect x="48.5022%" y="229" width="0.3644%" height="15" fill="rgb(211,180,12)" fg:x="61366" fg:w="461"/><text x="48.7522%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (443 samples, 0.35%)</title><rect x="48.5165%" y="213" width="0.3501%" height="15" fill="rgb(254,166,49)" fg:x="61384" fg:w="443"/><text x="48.7665%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (49 samples, 0.04%)</title><rect x="48.8279%" y="197" width="0.0387%" height="15" fill="rgb(205,19,0)" fg:x="61778" fg:w="49"/><text x="49.0779%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (879 samples, 0.69%)</title><rect x="48.1750%" y="277" width="0.6947%" height="15" fill="rgb(224,172,32)" fg:x="60952" fg:w="879"/><text x="48.4250%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (887 samples, 0.70%)</title><rect x="48.1734%" y="293" width="0.7011%" height="15" fill="rgb(254,136,30)" fg:x="60950" fg:w="887"/><text x="48.4234%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (1,800 samples, 1.42%)</title><rect x="47.6028%" y="309" width="1.4227%" height="15" fill="rgb(246,19,35)" fg:x="60228" fg:w="1800"/><text x="47.8528%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (191 samples, 0.15%)</title><rect x="48.8745%" y="293" width="0.1510%" height="15" fill="rgb(219,24,36)" fg:x="61837" fg:w="191"/><text x="49.1245%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (52 samples, 0.04%)</title><rect x="49.0255%" y="309" width="0.0411%" height="15" fill="rgb(251,55,1)" fg:x="62028" fg:w="52"/><text x="49.2755%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (46 samples, 0.04%)</title><rect x="49.1092%" y="293" width="0.0364%" height="15" fill="rgb(218,117,39)" fg:x="62134" fg:w="46"/><text x="49.3592%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.05%)</title><rect x="49.1970%" y="277" width="0.0490%" height="15" fill="rgb(248,169,11)" fg:x="62245" fg:w="62"/><text x="49.4470%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (108 samples, 0.09%)</title><rect x="49.2499%" y="277" width="0.0854%" height="15" fill="rgb(244,40,44)" fg:x="62312" fg:w="108"/><text x="49.4999%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (60 samples, 0.05%)</title><rect x="49.3353%" y="277" width="0.0474%" height="15" fill="rgb(234,62,37)" fg:x="62420" fg:w="60"/><text x="49.5853%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (103 samples, 0.08%)</title><rect x="49.3827%" y="277" width="0.0814%" height="15" fill="rgb(207,117,42)" fg:x="62480" fg:w="103"/><text x="49.6327%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (35 samples, 0.03%)</title><rect x="49.4641%" y="277" width="0.0277%" height="15" fill="rgb(213,43,2)" fg:x="62583" fg:w="35"/><text x="49.7141%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (29 samples, 0.02%)</title><rect x="49.4918%" y="277" width="0.0229%" height="15" fill="rgb(244,202,51)" fg:x="62618" fg:w="29"/><text x="49.7418%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (19 samples, 0.02%)</title><rect x="49.5566%" y="261" width="0.0150%" height="15" fill="rgb(253,174,46)" fg:x="62700" fg:w="19"/><text x="49.8066%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (20 samples, 0.02%)</title><rect x="49.5716%" y="261" width="0.0158%" height="15" fill="rgb(251,23,1)" fg:x="62719" fg:w="20"/><text x="49.8216%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (21 samples, 0.02%)</title><rect x="49.5874%" y="261" width="0.0166%" height="15" fill="rgb(253,26,1)" fg:x="62739" fg:w="21"/><text x="49.8374%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (22 samples, 0.02%)</title><rect x="49.6040%" y="261" width="0.0174%" height="15" fill="rgb(216,89,31)" fg:x="62760" fg:w="22"/><text x="49.8540%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (147 samples, 0.12%)</title><rect x="49.5155%" y="277" width="0.1162%" height="15" fill="rgb(209,109,5)" fg:x="62648" fg:w="147"/><text x="49.7655%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (13 samples, 0.01%)</title><rect x="49.6214%" y="261" width="0.0103%" height="15" fill="rgb(229,63,13)" fg:x="62782" fg:w="13"/><text x="49.8714%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (35 samples, 0.03%)</title><rect x="49.6317%" y="277" width="0.0277%" height="15" fill="rgb(238,137,54)" fg:x="62795" fg:w="35"/><text x="49.8817%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (81 samples, 0.06%)</title><rect x="49.6593%" y="277" width="0.0640%" height="15" fill="rgb(228,1,9)" fg:x="62830" fg:w="81"/><text x="49.9093%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (61 samples, 0.05%)</title><rect x="49.7234%" y="277" width="0.0482%" height="15" fill="rgb(249,120,48)" fg:x="62911" fg:w="61"/><text x="49.9734%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (794 samples, 0.63%)</title><rect x="49.1456%" y="293" width="0.6276%" height="15" fill="rgb(209,72,36)" fg:x="62180" fg:w="794"/><text x="49.3956%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (908 samples, 0.72%)</title><rect x="49.0666%" y="309" width="0.7177%" height="15" fill="rgb(247,98,49)" fg:x="62080" fg:w="908"/><text x="49.3166%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (97 samples, 0.08%)</title><rect x="49.7842%" y="309" width="0.0767%" height="15" fill="rgb(233,75,36)" fg:x="62988" fg:w="97"/><text x="50.0342%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,966 samples, 2.34%)</title><rect x="47.5372%" y="325" width="2.3443%" height="15" fill="rgb(225,14,24)" fg:x="60145" fg:w="2966"/><text x="47.7872%" y="335.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (22 samples, 0.02%)</title><rect x="49.8641%" y="309" width="0.0174%" height="15" fill="rgb(237,193,20)" fg:x="63089" fg:w="22"/><text x="50.1141%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (3,021 samples, 2.39%)</title><rect x="47.5056%" y="341" width="2.3877%" height="15" fill="rgb(239,122,19)" fg:x="60105" fg:w="3021"/><text x="47.7556%" y="351.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (3,176 samples, 2.51%)</title><rect x="47.3886%" y="389" width="2.5102%" height="15" fill="rgb(231,220,10)" fg:x="59957" fg:w="3176"/><text x="47.6386%" y="399.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (3,109 samples, 2.46%)</title><rect x="47.4416%" y="373" width="2.4573%" height="15" fill="rgb(220,66,15)" fg:x="60024" fg:w="3109"/><text x="47.6916%" y="383.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3,074 samples, 2.43%)</title><rect x="47.4692%" y="357" width="2.4296%" height="15" fill="rgb(215,171,52)" fg:x="60059" fg:w="3074"/><text x="47.7192%" y="367.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (3,204 samples, 2.53%)</title><rect x="47.3783%" y="405" width="2.5324%" height="15" fill="rgb(241,169,50)" fg:x="59944" fg:w="3204"/><text x="47.6283%" y="415.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids::_{{closure}} (15 samples, 0.01%)</title><rect x="49.8988%" y="389" width="0.0119%" height="15" fill="rgb(236,189,0)" fg:x="63133" fg:w="15"/><text x="50.1488%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (3,276 samples, 2.59%)</title><rect x="47.3317%" y="421" width="2.5893%" height="15" fill="rgb(217,147,20)" fg:x="59885" fg:w="3276"/><text x="47.5817%" y="431.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (13 samples, 0.01%)</title><rect x="49.9107%" y="405" width="0.0103%" height="15" fill="rgb(206,188,39)" fg:x="63148" fg:w="13"/><text x="50.1607%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.05%)</title><rect x="49.9225%" y="421" width="0.0482%" height="15" fill="rgb(227,118,25)" fg:x="63163" fg:w="61"/><text x="50.1725%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (22 samples, 0.02%)</title><rect x="49.9755%" y="421" width="0.0174%" height="15" fill="rgb(248,171,40)" fg:x="63230" fg:w="22"/><text x="50.2255%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (133 samples, 0.11%)</title><rect x="50.0047%" y="421" width="0.1051%" height="15" fill="rgb(251,90,54)" fg:x="63267" fg:w="133"/><text x="50.2547%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,588 samples, 2.84%)</title><rect x="47.2851%" y="581" width="2.8359%" height="15" fill="rgb(234,11,46)" fg:x="59826" fg:w="3588"/><text x="47.5351%" y="591.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,588 samples, 2.84%)</title><rect x="47.2851%" y="565" width="2.8359%" height="15" fill="rgb(229,134,13)" fg:x="59826" fg:w="3588"/><text x="47.5351%" y="575.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3,588 samples, 2.84%)</title><rect x="47.2851%" y="549" width="2.8359%" height="15" fill="rgb(223,129,3)" fg:x="59826" fg:w="3588"/><text x="47.5351%" y="559.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (3,588 samples, 2.84%)</title><rect x="47.2851%" y="533" width="2.8359%" height="15" fill="rgb(221,124,13)" fg:x="59826" fg:w="3588"/><text x="47.5351%" y="543.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,588 samples, 2.84%)</title><rect x="47.2851%" y="517" width="2.8359%" height="15" fill="rgb(234,3,18)" fg:x="59826" fg:w="3588"/><text x="47.5351%" y="527.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,588 samples, 2.84%)</title><rect x="47.2851%" y="501" width="2.8359%" height="15" fill="rgb(249,199,20)" fg:x="59826" fg:w="3588"/><text x="47.5351%" y="511.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,588 samples, 2.84%)</title><rect x="47.2851%" y="485" width="2.8359%" height="15" fill="rgb(224,134,6)" fg:x="59826" fg:w="3588"/><text x="47.5351%" y="495.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,588 samples, 2.84%)</title><rect x="47.2851%" y="469" width="2.8359%" height="15" fill="rgb(254,83,26)" fg:x="59826" fg:w="3588"/><text x="47.5351%" y="479.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,587 samples, 2.84%)</title><rect x="47.2858%" y="453" width="2.8351%" height="15" fill="rgb(217,88,9)" fg:x="59827" fg:w="3587"/><text x="47.5358%" y="463.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (3,543 samples, 2.80%)</title><rect x="47.3206%" y="437" width="2.8003%" height="15" fill="rgb(225,73,2)" fg:x="59871" fg:w="3543"/><text x="47.5706%" y="447.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (14 samples, 0.01%)</title><rect x="50.1099%" y="421" width="0.0111%" height="15" fill="rgb(226,44,39)" fg:x="63400" fg:w="14"/><text x="50.3599%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (3,590 samples, 2.84%)</title><rect x="47.2851%" y="597" width="2.8375%" height="15" fill="rgb(228,53,17)" fg:x="59826" fg:w="3590"/><text x="47.5351%" y="607.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::linked_by (19,264 samples, 15.23%)</title><rect x="34.8975%" y="629" width="15.2258%" height="15" fill="rgb(212,27,27)" fg:x="44153" fg:w="19264"/><text x="35.1475%" y="639.50">get_usage_tests-cf82cbf..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids (15,746 samples, 12.45%)</title><rect x="37.6780%" y="613" width="12.4453%" height="15" fill="rgb(241,50,6)" fg:x="47671" fg:w="15746"/><text x="37.9280%" y="623.50">get_usage_tests-cf8..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes_gcm::AesGcm&lt;Aes,NonceSize&gt;::compute_tag (24 samples, 0.02%)</title><rect x="50.1383%" y="533" width="0.0190%" height="15" fill="rgb(225,28,51)" fg:x="63436" fg:w="24"/><text x="50.3883%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (16 samples, 0.01%)</title><rect x="50.1786%" y="421" width="0.0126%" height="15" fill="rgb(215,33,16)" fg:x="63487" fg:w="16"/><text x="50.4286%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.02%)</title><rect x="50.1763%" y="437" width="0.0229%" height="15" fill="rgb(243,40,39)" fg:x="63484" fg:w="29"/><text x="50.4263%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::add_round_key (47 samples, 0.04%)</title><rect x="50.1739%" y="453" width="0.0371%" height="15" fill="rgb(225,11,42)" fg:x="63481" fg:w="47"/><text x="50.4239%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::mix_columns_1 (13 samples, 0.01%)</title><rect x="50.2213%" y="453" width="0.0103%" height="15" fill="rgb(241,220,38)" fg:x="63541" fg:w="13"/><text x="50.4713%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::sub_bytes (19 samples, 0.02%)</title><rect x="50.2355%" y="453" width="0.0150%" height="15" fill="rgb(244,52,35)" fg:x="63559" fg:w="19"/><text x="50.4855%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;Alg as cipher::block::BlockEncrypt&gt;::encrypt_block (119 samples, 0.09%)</title><rect x="50.1636%" y="501" width="0.0941%" height="15" fill="rgb(246,42,46)" fg:x="63468" fg:w="119"/><text x="50.4136%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes::soft::Aes256 as cipher::block::BlockEncrypt&gt;::encrypt_block (119 samples, 0.09%)</title><rect x="50.1636%" y="485" width="0.0941%" height="15" fill="rgb(205,184,13)" fg:x="63468" fg:w="119"/><text x="50.4136%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::aes256_encrypt (112 samples, 0.09%)</title><rect x="50.1691%" y="469" width="0.0885%" height="15" fill="rgb(209,48,36)" fg:x="63475" fg:w="112"/><text x="50.4191%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;ctr::flavors::ctr32::Ctr32BE as ctr::flavors::CtrFlavor&lt;B&gt;&gt;::generate_block (15 samples, 0.01%)</title><rect x="50.2616%" y="501" width="0.0119%" height="15" fill="rgb(244,34,51)" fg:x="63592" fg:w="15"/><text x="50.5116%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (20 samples, 0.02%)</title><rect x="50.2782%" y="309" width="0.0158%" height="15" fill="rgb(221,107,33)" fg:x="63613" fg:w="20"/><text x="50.5282%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (17 samples, 0.01%)</title><rect x="50.2806%" y="293" width="0.0134%" height="15" fill="rgb(224,203,12)" fg:x="63616" fg:w="17"/><text x="50.5306%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (25 samples, 0.02%)</title><rect x="50.2751%" y="357" width="0.0198%" height="15" fill="rgb(230,215,18)" fg:x="63609" fg:w="25"/><text x="50.5251%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.02%)</title><rect x="50.2751%" y="341" width="0.0198%" height="15" fill="rgb(206,185,35)" fg:x="63609" fg:w="25"/><text x="50.5251%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.02%)</title><rect x="50.2751%" y="325" width="0.0198%" height="15" fill="rgb(228,140,34)" fg:x="63609" fg:w="25"/><text x="50.5251%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (28 samples, 0.02%)</title><rect x="50.2735%" y="485" width="0.0221%" height="15" fill="rgb(208,93,13)" fg:x="63607" fg:w="28"/><text x="50.5235%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.02%)</title><rect x="50.2735%" y="469" width="0.0221%" height="15" fill="rgb(221,193,39)" fg:x="63607" fg:w="28"/><text x="50.5235%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.02%)</title><rect x="50.2735%" y="453" width="0.0221%" height="15" fill="rgb(241,132,34)" fg:x="63607" fg:w="28"/><text x="50.5235%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (27 samples, 0.02%)</title><rect x="50.2743%" y="437" width="0.0213%" height="15" fill="rgb(221,141,10)" fg:x="63608" fg:w="27"/><text x="50.5243%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (27 samples, 0.02%)</title><rect x="50.2743%" y="421" width="0.0213%" height="15" fill="rgb(226,90,31)" fg:x="63608" fg:w="27"/><text x="50.5243%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (27 samples, 0.02%)</title><rect x="50.2743%" y="405" width="0.0213%" height="15" fill="rgb(243,75,5)" fg:x="63608" fg:w="27"/><text x="50.5243%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`generic_array::impls::_&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::_{{closure}} (27 samples, 0.02%)</title><rect x="50.2743%" y="389" width="0.0213%" height="15" fill="rgb(227,156,21)" fg:x="63608" fg:w="27"/><text x="50.5243%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (27 samples, 0.02%)</title><rect x="50.2743%" y="373" width="0.0213%" height="15" fill="rgb(250,195,8)" fg:x="63608" fg:w="27"/><text x="50.5243%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (29 samples, 0.02%)</title><rect x="50.2735%" y="501" width="0.0229%" height="15" fill="rgb(220,134,5)" fg:x="63607" fg:w="29"/><text x="50.5235%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;ctr::Ctr&lt;B,F&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (173 samples, 0.14%)</title><rect x="50.1628%" y="517" width="0.1367%" height="15" fill="rgb(246,106,34)" fg:x="63467" fg:w="173"/><text x="50.4128%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (210 samples, 0.17%)</title><rect x="50.1344%" y="549" width="0.1660%" height="15" fill="rgb(205,1,4)" fg:x="63431" fg:w="210"/><text x="50.3844%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`cipher::stream::StreamCipher::apply_keystream (174 samples, 0.14%)</title><rect x="50.1628%" y="533" width="0.1375%" height="15" fill="rgb(224,151,29)" fg:x="63467" fg:w="174"/><text x="50.4128%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Alg as aead::Aead&gt;::decrypt (215 samples, 0.17%)</title><rect x="50.1328%" y="581" width="0.1699%" height="15" fill="rgb(251,196,0)" fg:x="63429" fg:w="215"/><text x="50.3828%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aead::AeadInPlace::decrypt_in_place (213 samples, 0.17%)</title><rect x="50.1344%" y="565" width="0.1684%" height="15" fill="rgb(212,127,0)" fg:x="63431" fg:w="213"/><text x="50.3844%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (15 samples, 0.01%)</title><rect x="50.3067%" y="421" width="0.0119%" height="15" fill="rgb(236,71,53)" fg:x="63649" fg:w="15"/><text x="50.5567%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14 samples, 0.01%)</title><rect x="50.3075%" y="405" width="0.0111%" height="15" fill="rgb(227,99,0)" fg:x="63650" fg:w="14"/><text x="50.5575%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde::de::impls::_&lt;impl serde::de::Deserialize for u8&gt;::deserialize (14 samples, 0.01%)</title><rect x="50.3075%" y="389" width="0.0111%" height="15" fill="rgb(239,89,21)" fg:x="63650" fg:w="14"/><text x="50.5575%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (20 samples, 0.02%)</title><rect x="50.3035%" y="533" width="0.0158%" height="15" fill="rgb(243,122,19)" fg:x="63645" fg:w="20"/><text x="50.5535%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde::de::impls::_&lt;impl serde::de::Deserialize for [T (20 samples, 0.02%)</title><rect x="50.3035%" y="517" width="0.0158%" height="15" fill="rgb(229,192,45)" fg:x="63645" fg:w="20"/><text x="50.5535%" y="527.50"></text></g><g><title> 32]&gt;::deserialize (20 samples, 0.02%)</title><rect x="50.3035%" y="501" width="0.0158%" height="15" fill="rgb(235,165,35)" fg:x="63645" fg:w="20"/><text x="50.5535%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (20 samples, 0.02%)</title><rect x="50.3035%" y="485" width="0.0158%" height="15" fill="rgb(253,202,0)" fg:x="63645" fg:w="20"/><text x="50.5535%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;serde::de::impls::ArrayVisitor&lt;[T (20 samples, 0.02%)</title><rect x="50.3035%" y="469" width="0.0158%" height="15" fill="rgb(235,51,20)" fg:x="63645" fg:w="20"/><text x="50.5535%" y="479.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (20 samples, 0.02%)</title><rect x="50.3035%" y="453" width="0.0158%" height="15" fill="rgb(218,95,46)" fg:x="63645" fg:w="20"/><text x="50.5535%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`serde::de::SeqAccess::next_element (16 samples, 0.01%)</title><rect x="50.3067%" y="437" width="0.0126%" height="15" fill="rgb(212,81,10)" fg:x="63649" fg:w="16"/><text x="50.5567%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`bincode::deserialize (21 samples, 0.02%)</title><rect x="50.3035%" y="581" width="0.0166%" height="15" fill="rgb(240,59,0)" fg:x="63645" fg:w="21"/><text x="50.5535%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`bincode::internal::deserialize (21 samples, 0.02%)</title><rect x="50.3035%" y="565" width="0.0166%" height="15" fill="rgb(212,191,42)" fg:x="63645" fg:w="21"/><text x="50.5535%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`bincode::internal::deserialize_seed (21 samples, 0.02%)</title><rect x="50.3035%" y="549" width="0.0166%" height="15" fill="rgb(233,140,3)" fg:x="63645" fg:w="21"/><text x="50.5535%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::add_round_key (17 samples, 0.01%)</title><rect x="50.3272%" y="485" width="0.0134%" height="15" fill="rgb(215,69,23)" fg:x="63675" fg:w="17"/><text x="50.5772%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes::soft::Aes256 as cipher::block::BlockEncrypt&gt;::encrypt_block (49 samples, 0.04%)</title><rect x="50.3225%" y="517" width="0.0387%" height="15" fill="rgb(240,202,20)" fg:x="63669" fg:w="49"/><text x="50.5725%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::aes256_encrypt (47 samples, 0.04%)</title><rect x="50.3241%" y="501" width="0.0371%" height="15" fill="rgb(209,146,50)" fg:x="63671" fg:w="47"/><text x="50.5741%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as core::convert::From&lt;Aes&gt;&gt;::from (51 samples, 0.04%)</title><rect x="50.3225%" y="533" width="0.0403%" height="15" fill="rgb(253,102,54)" fg:x="63669" fg:w="51"/><text x="50.5725%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (52 samples, 0.04%)</title><rect x="50.3225%" y="549" width="0.0411%" height="15" fill="rgb(250,173,47)" fg:x="63669" fg:w="52"/><text x="50.5725%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::memshift32 (16 samples, 0.01%)</title><rect x="50.3770%" y="517" width="0.0126%" height="15" fill="rgb(232,142,7)" fg:x="63738" fg:w="16"/><text x="50.6270%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::xor_columns (13 samples, 0.01%)</title><rect x="50.3968%" y="517" width="0.0103%" height="15" fill="rgb(230,157,47)" fg:x="63763" fg:w="13"/><text x="50.6468%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::aes256_key_schedule (58 samples, 0.05%)</title><rect x="50.3636%" y="533" width="0.0458%" height="15" fill="rgb(214,177,35)" fg:x="63721" fg:w="58"/><text x="50.6136%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as aead::NewAead&gt;::new (114 samples, 0.09%)</title><rect x="50.3225%" y="565" width="0.0901%" height="15" fill="rgb(234,119,46)" fg:x="63669" fg:w="114"/><text x="50.5725%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes::soft::Aes256 as cipher::block::NewBlockCipher&gt;::new (62 samples, 0.05%)</title><rect x="50.3636%" y="549" width="0.0490%" height="15" fill="rgb(241,180,50)" fg:x="63721" fg:w="62"/><text x="50.6136%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::symkey::decrypt (364 samples, 0.29%)</title><rect x="50.1328%" y="597" width="0.2877%" height="15" fill="rgb(221,54,25)" fg:x="63429" fg:w="364"/><text x="50.3828%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::symkey::convert_key (125 samples, 0.10%)</title><rect x="50.3217%" y="581" width="0.0988%" height="15" fill="rgb(209,157,44)" fg:x="63668" fg:w="125"/><text x="50.5717%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (18 samples, 0.01%)</title><rect x="50.4205%" y="597" width="0.0142%" height="15" fill="rgb(246,115,41)" fg:x="63793" fg:w="18"/><text x="50.6705%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (18 samples, 0.01%)</title><rect x="50.4205%" y="581" width="0.0142%" height="15" fill="rgb(229,86,1)" fg:x="63793" fg:w="18"/><text x="50.6705%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (18 samples, 0.01%)</title><rect x="50.4205%" y="565" width="0.0142%" height="15" fill="rgb(240,108,53)" fg:x="63793" fg:w="18"/><text x="50.6705%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (18 samples, 0.01%)</title><rect x="50.4205%" y="549" width="0.0142%" height="15" fill="rgb(227,134,2)" fg:x="63793" fg:w="18"/><text x="50.6705%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::HashMap&lt;uuid::Uuid,F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (17 samples, 0.01%)</title><rect x="50.4213%" y="533" width="0.0134%" height="15" fill="rgb(213,129,25)" fg:x="63794" fg:w="17"/><text x="50.6713%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (17 samples, 0.01%)</title><rect x="50.4213%" y="517" width="0.0134%" height="15" fill="rgb(226,35,21)" fg:x="63794" fg:w="17"/><text x="50.6713%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (17 samples, 0.01%)</title><rect x="50.4213%" y="501" width="0.0134%" height="15" fill="rgb(208,129,26)" fg:x="63794" fg:w="17"/><text x="50.6713%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find_parent (18 samples, 0.01%)</title><rect x="50.4347%" y="597" width="0.0142%" height="15" fill="rgb(224,83,6)" fg:x="63811" fg:w="18"/><text x="50.6847%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::maybe_find_parent (18 samples, 0.01%)</title><rect x="50.4347%" y="581" width="0.0142%" height="15" fill="rgb(227,52,39)" fg:x="63811" fg:w="18"/><text x="50.6847%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (18 samples, 0.01%)</title><rect x="50.4347%" y="565" width="0.0142%" height="15" fill="rgb(241,30,17)" fg:x="63811" fg:w="18"/><text x="50.6847%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (18 samples, 0.01%)</title><rect x="50.4347%" y="549" width="0.0142%" height="15" fill="rgb(246,186,42)" fg:x="63811" fg:w="18"/><text x="50.6847%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (18 samples, 0.01%)</title><rect x="50.4347%" y="533" width="0.0142%" height="15" fill="rgb(221,169,15)" fg:x="63811" fg:w="18"/><text x="50.6847%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecmult::ECMultContext::ecmult_const (13 samples, 0.01%)</title><rect x="50.4489%" y="517" width="0.0103%" height="15" fill="rgb(235,108,21)" fg:x="63829" fg:w="13"/><text x="50.6989%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::access_info::UserAccessInfo::decrypt (14 samples, 0.01%)</title><rect x="50.4489%" y="597" width="0.0111%" height="15" fill="rgb(219,148,30)" fg:x="63829" fg:w="14"/><text x="50.6989%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::pubkey::get_aes_key (14 samples, 0.01%)</title><rect x="50.4489%" y="581" width="0.0111%" height="15" fill="rgb(220,109,5)" fg:x="63829" fg:w="14"/><text x="50.6989%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::SharedSecret&lt;D&gt;::new (14 samples, 0.01%)</title><rect x="50.4489%" y="565" width="0.0111%" height="15" fill="rgb(213,203,48)" fg:x="63829" fg:w="14"/><text x="50.6989%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::SharedSecret&lt;D&gt;::new_with_context (14 samples, 0.01%)</title><rect x="50.4489%" y="549" width="0.0111%" height="15" fill="rgb(244,71,33)" fg:x="63829" fg:w="14"/><text x="50.6989%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecdh::_&lt;impl libsecp256k1_core::ecmult::ECMultContext&gt;::ecdh_raw (14 samples, 0.01%)</title><rect x="50.4489%" y="533" width="0.0111%" height="15" fill="rgb(209,23,2)" fg:x="63829" fg:w="14"/><text x="50.6989%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::convert::From&lt;libsecp256k1_core::field::FieldStorage&gt;&gt;::from (16 samples, 0.01%)</title><rect x="50.4734%" y="485" width="0.0126%" height="15" fill="rgb(219,97,7)" fg:x="63860" fg:w="16"/><text x="50.7234%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (24 samples, 0.02%)</title><rect x="50.4734%" y="501" width="0.0190%" height="15" fill="rgb(216,161,23)" fg:x="63860" fg:w="24"/><text x="50.7234%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (31 samples, 0.02%)</title><rect x="50.4726%" y="533" width="0.0245%" height="15" fill="rgb(207,45,42)" fg:x="63859" fg:w="31"/><text x="50.7226%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::group::Affine as core::convert::From&lt;libsecp256k1_core::group::AffineStorage&gt;&gt;::from (30 samples, 0.02%)</title><rect x="50.4734%" y="517" width="0.0237%" height="15" fill="rgb(241,61,4)" fg:x="63860" fg:w="30"/><text x="50.7234%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (23 samples, 0.02%)</title><rect x="50.5027%" y="517" width="0.0182%" height="15" fill="rgb(236,170,1)" fg:x="63897" fg:w="23"/><text x="50.7527%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (33 samples, 0.03%)</title><rect x="50.4995%" y="533" width="0.0261%" height="15" fill="rgb(239,72,5)" fg:x="63893" fg:w="33"/><text x="50.7495%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::FieldStorage::cmov (164 samples, 0.13%)</title><rect x="50.5256%" y="533" width="0.1296%" height="15" fill="rgb(214,13,50)" fg:x="63926" fg:w="164"/><text x="50.7756%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::group::Jacobian as core::default::Default&gt;::default (18 samples, 0.01%)</title><rect x="50.6639%" y="517" width="0.0142%" height="15" fill="rgb(224,88,9)" fg:x="64101" fg:w="18"/><text x="50.9139%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`DYLD-STUB$$memcpy (13 samples, 0.01%)</title><rect x="50.6781%" y="517" width="0.0103%" height="15" fill="rgb(238,192,34)" fg:x="64119" fg:w="13"/><text x="50.9281%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::cmov (56 samples, 0.04%)</title><rect x="50.6884%" y="517" width="0.0443%" height="15" fill="rgb(217,203,50)" fg:x="64132" fg:w="56"/><text x="50.9384%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::AddAssign&gt;::add_assign (119 samples, 0.09%)</title><rect x="50.7366%" y="501" width="0.0941%" height="15" fill="rgb(241,123,32)" fg:x="64193" fg:w="119"/><text x="50.9866%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::AddAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::add_assign (117 samples, 0.09%)</title><rect x="50.7382%" y="485" width="0.0925%" height="15" fill="rgb(248,151,39)" fg:x="64195" fg:w="117"/><text x="50.9882%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (83 samples, 0.07%)</title><rect x="50.7651%" y="469" width="0.0656%" height="15" fill="rgb(208,89,6)" fg:x="64229" fg:w="83"/><text x="51.0151%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (927 samples, 0.73%)</title><rect x="50.8441%" y="469" width="0.7327%" height="15" fill="rgb(254,43,26)" fg:x="64329" fg:w="927"/><text x="51.0941%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (1,118 samples, 0.88%)</title><rect x="50.8370%" y="485" width="0.8836%" height="15" fill="rgb(216,158,13)" fg:x="64320" fg:w="1118"/><text x="51.0870%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (182 samples, 0.14%)</title><rect x="51.5768%" y="469" width="0.1438%" height="15" fill="rgb(212,47,37)" fg:x="65256" fg:w="182"/><text x="51.8268%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (28 samples, 0.02%)</title><rect x="51.7214%" y="485" width="0.0221%" height="15" fill="rgb(254,16,10)" fg:x="65439" fg:w="28"/><text x="51.9714%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::Mul&gt;::mul (1,171 samples, 0.93%)</title><rect x="50.8307%" y="501" width="0.9255%" height="15" fill="rgb(223,228,16)" fg:x="64312" fg:w="1171"/><text x="51.0807%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (16 samples, 0.01%)</title><rect x="51.7436%" y="485" width="0.0126%" height="15" fill="rgb(249,108,50)" fg:x="65467" fg:w="16"/><text x="51.9936%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (400 samples, 0.32%)</title><rect x="51.7641%" y="453" width="0.3162%" height="15" fill="rgb(208,220,5)" fg:x="65493" fg:w="400"/><text x="52.0141%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (472 samples, 0.37%)</title><rect x="51.7586%" y="469" width="0.3731%" height="15" fill="rgb(217,89,48)" fg:x="65486" fg:w="472"/><text x="52.0086%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (65 samples, 0.05%)</title><rect x="52.0803%" y="453" width="0.0514%" height="15" fill="rgb(212,113,41)" fg:x="65893" fg:w="65"/><text x="52.3303%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::mul_assign (485 samples, 0.38%)</title><rect x="51.7570%" y="485" width="0.3833%" height="15" fill="rgb(231,127,5)" fg:x="65484" fg:w="485"/><text x="52.0070%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&gt;::mul_assign (495 samples, 0.39%)</title><rect x="51.7570%" y="501" width="0.3912%" height="15" fill="rgb(217,141,17)" fg:x="65484" fg:w="495"/><text x="52.0070%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_int (129 samples, 0.10%)</title><rect x="52.1498%" y="501" width="0.1020%" height="15" fill="rgb(245,125,54)" fg:x="65981" fg:w="129"/><text x="52.3998%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (87 samples, 0.07%)</title><rect x="52.1830%" y="485" width="0.0688%" height="15" fill="rgb(248,125,3)" fg:x="66023" fg:w="87"/><text x="52.4330%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::neg_in_place (121 samples, 0.10%)</title><rect x="52.2542%" y="485" width="0.0956%" height="15" fill="rgb(236,119,51)" fg:x="66113" fg:w="121"/><text x="52.5042%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (69 samples, 0.05%)</title><rect x="52.2953%" y="469" width="0.0545%" height="15" fill="rgb(239,99,8)" fg:x="66165" fg:w="69"/><text x="52.5453%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::neg (134 samples, 0.11%)</title><rect x="52.2518%" y="501" width="0.1059%" height="15" fill="rgb(224,228,4)" fg:x="66110" fg:w="134"/><text x="52.5018%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::normalize_weak (134 samples, 0.11%)</title><rect x="52.3577%" y="501" width="0.1059%" height="15" fill="rgb(220,131,45)" fg:x="66244" fg:w="134"/><text x="52.6077%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (85 samples, 0.07%)</title><rect x="52.3964%" y="485" width="0.0672%" height="15" fill="rgb(215,62,5)" fg:x="66293" fg:w="85"/><text x="52.6464%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::normalizes_to_zero (35 samples, 0.03%)</title><rect x="52.4636%" y="501" width="0.0277%" height="15" fill="rgb(253,12,24)" fg:x="66378" fg:w="35"/><text x="52.7136%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (770 samples, 0.61%)</title><rect x="52.5134%" y="469" width="0.6086%" height="15" fill="rgb(248,120,50)" fg:x="66441" fg:w="770"/><text x="52.7634%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (916 samples, 0.72%)</title><rect x="52.5008%" y="485" width="0.7240%" height="15" fill="rgb(245,194,10)" fg:x="66425" fg:w="916"/><text x="52.7508%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (130 samples, 0.10%)</title><rect x="53.1220%" y="469" width="0.1027%" height="15" fill="rgb(241,149,38)" fg:x="67211" fg:w="130"/><text x="53.3720%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (16 samples, 0.01%)</title><rect x="53.2255%" y="485" width="0.0126%" height="15" fill="rgb(219,215,7)" fg:x="67342" fg:w="16"/><text x="53.4755%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (952 samples, 0.75%)</title><rect x="52.4913%" y="501" width="0.7524%" height="15" fill="rgb(208,120,31)" fg:x="66413" fg:w="952"/><text x="52.7413%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge_in_place (3,201 samples, 2.53%)</title><rect x="50.7327%" y="517" width="2.5300%" height="15" fill="rgb(244,30,8)" fg:x="64188" fg:w="3201"/><text x="50.9827%" y="527.50">ge..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (24 samples, 0.02%)</title><rect x="53.2437%" y="501" width="0.0190%" height="15" fill="rgb(238,35,44)" fg:x="67365" fg:w="24"/><text x="53.4937%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Jacobian::add_ge (3,379 samples, 2.67%)</title><rect x="50.6623%" y="533" width="2.6707%" height="15" fill="rgb(243,218,37)" fg:x="64099" fg:w="3379"/><text x="50.9123%" y="543.50">ge..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (89 samples, 0.07%)</title><rect x="53.2627%" y="517" width="0.0703%" height="15" fill="rgb(218,169,10)" fg:x="67389" fg:w="89"/><text x="53.5127%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (3,636 samples, 2.87%)</title><rect x="50.4624%" y="549" width="2.8738%" height="15" fill="rgb(221,144,10)" fg:x="63846" fg:w="3636"/><text x="50.7124%" y="559.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_inner (57 samples, 0.05%)</title><rect x="53.3520%" y="485" width="0.0451%" height="15" fill="rgb(226,41,38)" fg:x="67502" fg:w="57"/><text x="53.6020%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::mul_in_place (66 samples, 0.05%)</title><rect x="53.3520%" y="501" width="0.0522%" height="15" fill="rgb(228,3,1)" fg:x="67502" fg:w="66"/><text x="53.6020%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;libsecp256k1_core::field::Field as core::ops::arith::MulAssign&lt;&amp;libsecp256k1_core::field::Field&gt;&gt;::mul_assign (67 samples, 0.05%)</title><rect x="53.3520%" y="517" width="0.0530%" height="15" fill="rgb(209,129,12)" fg:x="67502" fg:w="67"/><text x="53.6020%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_inner (618 samples, 0.49%)</title><rect x="53.4231%" y="485" width="0.4885%" height="15" fill="rgb(213,136,33)" fg:x="67592" fg:w="618"/><text x="53.6731%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr_in_place (712 samples, 0.56%)</title><rect x="53.4176%" y="501" width="0.5627%" height="15" fill="rgb(209,181,29)" fg:x="67585" fg:w="712"/><text x="53.6676%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::verify (87 samples, 0.07%)</title><rect x="53.9116%" y="485" width="0.0688%" height="15" fill="rgb(234,173,18)" fg:x="68210" fg:w="87"/><text x="54.1616%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::sqr (735 samples, 0.58%)</title><rect x="53.4113%" y="517" width="0.5809%" height="15" fill="rgb(227,73,47)" fg:x="67577" fg:w="735"/><text x="53.6613%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::field::Field::inv (828 samples, 0.65%)</title><rect x="53.3465%" y="533" width="0.6544%" height="15" fill="rgb(234,9,34)" fg:x="67495" fg:w="828"/><text x="53.5965%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1_core::group::Affine::set_gej (851 samples, 0.67%)</title><rect x="53.3362%" y="549" width="0.6726%" height="15" fill="rgb(235,172,15)" fg:x="67482" fg:w="851"/><text x="53.5862%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::model::account::Account::public_key (4,502 samples, 3.56%)</title><rect x="50.4600%" y="597" width="3.5583%" height="15" fill="rgb(245,61,2)" fg:x="63843" fg:w="4502"/><text x="50.7100%" y="607.50">get_..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key (4,502 samples, 3.56%)</title><rect x="50.4600%" y="581" width="3.5583%" height="15" fill="rgb(238,39,47)" fg:x="63843" fg:w="4502"/><text x="50.7100%" y="591.50">get_..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`libsecp256k1::PublicKey::from_secret_key_with_context (4,502 samples, 3.56%)</title><rect x="50.4600%" y="565" width="3.5583%" height="15" fill="rgb(234,37,24)" fg:x="63843" fg:w="4502"/><text x="50.7100%" y="575.50">get_..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (17 samples, 0.01%)</title><rect x="54.0183%" y="597" width="0.0134%" height="15" fill="rgb(248,223,24)" fg:x="68345" fg:w="17"/><text x="54.2683%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (16 samples, 0.01%)</title><rect x="54.0191%" y="581" width="0.0126%" height="15" fill="rgb(223,12,15)" fg:x="68346" fg:w="16"/><text x="54.2691%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::decrypt_key (4,952 samples, 3.91%)</title><rect x="50.1265%" y="613" width="3.9139%" height="15" fill="rgb(249,6,3)" fg:x="63421" fg:w="4952"/><text x="50.3765%" y="623.50">get_..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;ghash::GHash as universal_hash::UniversalHash&gt;::update (13 samples, 0.01%)</title><rect x="54.0515%" y="517" width="0.0103%" height="15" fill="rgb(237,105,33)" fg:x="68387" fg:w="13"/><text x="54.3015%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes_gcm::AesGcm&lt;Aes,NonceSize&gt;::compute_tag (24 samples, 0.02%)</title><rect x="54.0436%" y="549" width="0.0190%" height="15" fill="rgb(252,208,35)" fg:x="68377" fg:w="24"/><text x="54.2936%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`universal_hash::UniversalHash::update_padded (18 samples, 0.01%)</title><rect x="54.0483%" y="533" width="0.0142%" height="15" fill="rgb(215,181,35)" fg:x="68383" fg:w="18"/><text x="54.2983%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (17 samples, 0.01%)</title><rect x="54.0965%" y="437" width="0.0134%" height="15" fill="rgb(246,212,3)" fg:x="68444" fg:w="17"/><text x="54.3465%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.02%)</title><rect x="54.0941%" y="453" width="0.0221%" height="15" fill="rgb(247,156,24)" fg:x="68441" fg:w="28"/><text x="54.3441%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::add_round_key (53 samples, 0.04%)</title><rect x="54.0862%" y="469" width="0.0419%" height="15" fill="rgb(248,9,31)" fg:x="68431" fg:w="53"/><text x="54.3362%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::bitslice (14 samples, 0.01%)</title><rect x="54.1281%" y="469" width="0.0111%" height="15" fill="rgb(234,26,45)" fg:x="68484" fg:w="14"/><text x="54.3781%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::sub_bytes (24 samples, 0.02%)</title><rect x="54.1724%" y="469" width="0.0190%" height="15" fill="rgb(249,11,32)" fg:x="68540" fg:w="24"/><text x="54.4224%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::aes256_encrypt (157 samples, 0.12%)</title><rect x="54.0791%" y="485" width="0.1241%" height="15" fill="rgb(249,162,33)" fg:x="68422" fg:w="157"/><text x="54.3291%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;Alg as cipher::block::BlockEncrypt&gt;::encrypt_block (166 samples, 0.13%)</title><rect x="54.0736%" y="517" width="0.1312%" height="15" fill="rgb(232,4,32)" fg:x="68415" fg:w="166"/><text x="54.3236%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes::soft::Aes256 as cipher::block::BlockEncrypt&gt;::encrypt_block (166 samples, 0.13%)</title><rect x="54.0736%" y="501" width="0.1312%" height="15" fill="rgb(212,5,45)" fg:x="68415" fg:w="166"/><text x="54.3236%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (17 samples, 0.01%)</title><rect x="54.2222%" y="325" width="0.0134%" height="15" fill="rgb(227,95,13)" fg:x="68603" fg:w="17"/><text x="54.4722%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (15 samples, 0.01%)</title><rect x="54.2238%" y="309" width="0.0119%" height="15" fill="rgb(223,205,10)" fg:x="68605" fg:w="15"/><text x="54.4738%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.02%)</title><rect x="54.2167%" y="357" width="0.0198%" height="15" fill="rgb(222,178,8)" fg:x="68596" fg:w="25"/><text x="54.4667%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.02%)</title><rect x="54.2174%" y="341" width="0.0190%" height="15" fill="rgb(216,13,22)" fg:x="68597" fg:w="24"/><text x="54.4674%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (26 samples, 0.02%)</title><rect x="54.2167%" y="373" width="0.0205%" height="15" fill="rgb(240,167,12)" fg:x="68596" fg:w="26"/><text x="54.4667%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (28 samples, 0.02%)</title><rect x="54.2167%" y="389" width="0.0221%" height="15" fill="rgb(235,68,35)" fg:x="68596" fg:w="28"/><text x="54.4667%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (31 samples, 0.02%)</title><rect x="54.2167%" y="517" width="0.0245%" height="15" fill="rgb(253,40,27)" fg:x="68596" fg:w="31"/><text x="54.4667%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (31 samples, 0.02%)</title><rect x="54.2167%" y="501" width="0.0245%" height="15" fill="rgb(214,19,28)" fg:x="68596" fg:w="31"/><text x="54.4667%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 0.02%)</title><rect x="54.2167%" y="485" width="0.0245%" height="15" fill="rgb(210,167,45)" fg:x="68596" fg:w="31"/><text x="54.4667%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 0.02%)</title><rect x="54.2167%" y="469" width="0.0245%" height="15" fill="rgb(232,97,40)" fg:x="68596" fg:w="31"/><text x="54.4667%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (31 samples, 0.02%)</title><rect x="54.2167%" y="453" width="0.0245%" height="15" fill="rgb(250,35,23)" fg:x="68596" fg:w="31"/><text x="54.4667%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (31 samples, 0.02%)</title><rect x="54.2167%" y="437" width="0.0245%" height="15" fill="rgb(248,47,53)" fg:x="68596" fg:w="31"/><text x="54.4667%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (31 samples, 0.02%)</title><rect x="54.2167%" y="421" width="0.0245%" height="15" fill="rgb(226,58,50)" fg:x="68596" fg:w="31"/><text x="54.4667%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`generic_array::impls::_&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::_{{closure}} (31 samples, 0.02%)</title><rect x="54.2167%" y="405" width="0.0245%" height="15" fill="rgb(217,105,26)" fg:x="68596" fg:w="31"/><text x="54.4667%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;ctr::Ctr&lt;B,F&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (217 samples, 0.17%)</title><rect x="54.0720%" y="533" width="0.1715%" height="15" fill="rgb(208,64,1)" fg:x="68413" fg:w="217"/><text x="54.3220%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (259 samples, 0.20%)</title><rect x="54.0404%" y="565" width="0.2047%" height="15" fill="rgb(214,80,1)" fg:x="68373" fg:w="259"/><text x="54.2904%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`cipher::stream::StreamCipher::apply_keystream (219 samples, 0.17%)</title><rect x="54.0720%" y="549" width="0.1731%" height="15" fill="rgb(206,175,26)" fg:x="68413" fg:w="219"/><text x="54.3220%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Alg as aead::Aead&gt;::decrypt (260 samples, 0.21%)</title><rect x="54.0404%" y="597" width="0.2055%" height="15" fill="rgb(235,156,37)" fg:x="68373" fg:w="260"/><text x="54.2904%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aead::AeadInPlace::decrypt_in_place (260 samples, 0.21%)</title><rect x="54.0404%" y="581" width="0.2055%" height="15" fill="rgb(213,100,9)" fg:x="68373" fg:w="260"/><text x="54.2904%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::add_round_key (18 samples, 0.01%)</title><rect x="54.2514%" y="501" width="0.0142%" height="15" fill="rgb(241,15,13)" fg:x="68640" fg:w="18"/><text x="54.5014%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::aes256_encrypt (41 samples, 0.03%)</title><rect x="54.2506%" y="517" width="0.0324%" height="15" fill="rgb(205,97,43)" fg:x="68639" fg:w="41"/><text x="54.5006%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes::soft::Aes256 as cipher::block::BlockEncrypt&gt;::encrypt_block (45 samples, 0.04%)</title><rect x="54.2491%" y="533" width="0.0356%" height="15" fill="rgb(216,106,32)" fg:x="68637" fg:w="45"/><text x="54.4991%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (47 samples, 0.04%)</title><rect x="54.2491%" y="565" width="0.0371%" height="15" fill="rgb(226,200,8)" fg:x="68637" fg:w="47"/><text x="54.4991%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as core::convert::From&lt;Aes&gt;&gt;::from (47 samples, 0.04%)</title><rect x="54.2491%" y="549" width="0.0371%" height="15" fill="rgb(244,54,29)" fg:x="68637" fg:w="47"/><text x="54.4991%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::xor_columns (14 samples, 0.01%)</title><rect x="54.3091%" y="533" width="0.0111%" height="15" fill="rgb(252,169,12)" fg:x="68713" fg:w="14"/><text x="54.5591%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`aes::soft::fixslice::aes256_key_schedule (46 samples, 0.04%)</title><rect x="54.2862%" y="549" width="0.0364%" height="15" fill="rgb(231,199,11)" fg:x="68684" fg:w="46"/><text x="54.5362%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes::soft::Aes256 as cipher::block::NewBlockCipher&gt;::new (48 samples, 0.04%)</title><rect x="54.2862%" y="565" width="0.0379%" height="15" fill="rgb(233,191,18)" fg:x="68684" fg:w="48"/><text x="54.5362%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as aead::NewAead&gt;::new (96 samples, 0.08%)</title><rect x="54.2491%" y="581" width="0.0759%" height="15" fill="rgb(215,83,47)" fg:x="68637" fg:w="96"/><text x="54.4991%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::secret_filename::SecretFileName::to_string (367 samples, 0.29%)</title><rect x="54.0404%" y="613" width="0.2901%" height="15" fill="rgb(251,67,19)" fg:x="68373" fg:w="367"/><text x="54.2904%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::symkey::convert_key (103 samples, 0.08%)</title><rect x="54.2491%" y="597" width="0.0814%" height="15" fill="rgb(240,7,20)" fg:x="68637" fg:w="103"/><text x="54.4991%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::name (5,342 samples, 4.22%)</title><rect x="50.1233%" y="629" width="4.2222%" height="15" fill="rgb(210,150,26)" fg:x="63417" fg:w="5342"/><text x="50.3733%" y="639.50">get_u..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::name_using_links (24,619 samples, 19.46%)</title><rect x="34.8888%" y="645" width="19.4583%" height="15" fill="rgb(228,75,42)" fg:x="44142" fg:w="24619"/><text x="35.1388%" y="655.50">get_usage_tests-cf82cbf4ae04dd..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (22 samples, 0.02%)</title><rect x="54.3542%" y="629" width="0.0174%" height="15" fill="rgb(237,134,48)" fg:x="68770" fg:w="22"/><text x="54.6042%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (15 samples, 0.01%)</title><rect x="54.5921%" y="613" width="0.0119%" height="15" fill="rgb(205,80,50)" fg:x="69071" fg:w="15"/><text x="54.8421%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (125 samples, 0.10%)</title><rect x="54.6126%" y="613" width="0.0988%" height="15" fill="rgb(217,74,48)" fg:x="69097" fg:w="125"/><text x="54.8626%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (58 samples, 0.05%)</title><rect x="54.9335%" y="549" width="0.0458%" height="15" fill="rgb(205,82,50)" fg:x="69503" fg:w="58"/><text x="55.1835%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (129 samples, 0.10%)</title><rect x="55.0118%" y="533" width="0.1020%" height="15" fill="rgb(228,1,33)" fg:x="69602" fg:w="129"/><text x="55.2618%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (46 samples, 0.04%)</title><rect x="55.1311%" y="533" width="0.0364%" height="15" fill="rgb(214,50,23)" fg:x="69753" fg:w="46"/><text x="55.3811%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (18 samples, 0.01%)</title><rect x="55.1675%" y="533" width="0.0142%" height="15" fill="rgb(210,62,9)" fg:x="69799" fg:w="18"/><text x="55.4175%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (179 samples, 0.14%)</title><rect x="55.1872%" y="533" width="0.1415%" height="15" fill="rgb(210,104,37)" fg:x="69824" fg:w="179"/><text x="55.4372%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (686 samples, 0.54%)</title><rect x="54.8158%" y="581" width="0.5422%" height="15" fill="rgb(232,104,43)" fg:x="69354" fg:w="686"/><text x="55.0658%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (580 samples, 0.46%)</title><rect x="54.8995%" y="565" width="0.4584%" height="15" fill="rgb(244,52,6)" fg:x="69460" fg:w="580"/><text x="55.1495%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (479 samples, 0.38%)</title><rect x="54.9794%" y="549" width="0.3786%" height="15" fill="rgb(211,174,52)" fg:x="69561" fg:w="479"/><text x="55.2294%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (37 samples, 0.03%)</title><rect x="55.3287%" y="533" width="0.0292%" height="15" fill="rgb(229,48,4)" fg:x="70003" fg:w="37"/><text x="55.5787%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (816 samples, 0.64%)</title><rect x="54.7185%" y="613" width="0.6449%" height="15" fill="rgb(205,155,16)" fg:x="69231" fg:w="816"/><text x="54.9685%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (802 samples, 0.63%)</title><rect x="54.7296%" y="597" width="0.6339%" height="15" fill="rgb(211,141,53)" fg:x="69245" fg:w="802"/><text x="54.9796%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::file_like::_&lt;impl core::convert::AsRef&lt;lb_rs::model::file_metadata::FileMetadata&gt; for lb_rs::logic::crypto::ECSigned&lt;lb_rs::model::file_metadata::FileMetadata&gt;&gt;::as_ref (17 samples, 0.01%)</title><rect x="55.3635%" y="613" width="0.0134%" height="15" fill="rgb(240,148,11)" fg:x="70047" fg:w="17"/><text x="55.6135%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (15 samples, 0.01%)</title><rect x="55.5532%" y="501" width="0.0119%" height="15" fill="rgb(214,45,23)" fg:x="70287" fg:w="15"/><text x="55.8032%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (48 samples, 0.04%)</title><rect x="55.5840%" y="469" width="0.0379%" height="15" fill="rgb(248,74,26)" fg:x="70326" fg:w="48"/><text x="55.8340%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (171 samples, 0.14%)</title><rect x="55.6219%" y="469" width="0.1352%" height="15" fill="rgb(218,121,16)" fg:x="70374" fg:w="171"/><text x="55.8719%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,254 samples, 0.99%)</title><rect x="55.5761%" y="485" width="0.9911%" height="15" fill="rgb(218,10,47)" fg:x="70316" fg:w="1254"/><text x="55.8261%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,025 samples, 0.81%)</title><rect x="55.7571%" y="469" width="0.8101%" height="15" fill="rgb(227,99,14)" fg:x="70545" fg:w="1025"/><text x="56.0071%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (127 samples, 0.10%)</title><rect x="56.5672%" y="485" width="0.1004%" height="15" fill="rgb(229,83,46)" fg:x="71570" fg:w="127"/><text x="56.8172%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`DYLD-STUB$$memcpy (20 samples, 0.02%)</title><rect x="56.6739%" y="485" width="0.0158%" height="15" fill="rgb(228,25,1)" fg:x="71705" fg:w="20"/><text x="56.9239%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="56.7087%" y="421" width="0.0103%" height="15" fill="rgb(252,190,15)" fg:x="71749" fg:w="13"/><text x="56.9587%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (74 samples, 0.06%)</title><rect x="56.7435%" y="373" width="0.0585%" height="15" fill="rgb(213,103,51)" fg:x="71793" fg:w="74"/><text x="56.9935%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (293 samples, 0.23%)</title><rect x="56.8020%" y="373" width="0.2316%" height="15" fill="rgb(220,38,44)" fg:x="71867" fg:w="293"/><text x="57.0520%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (485 samples, 0.38%)</title><rect x="56.7190%" y="421" width="0.3833%" height="15" fill="rgb(210,45,26)" fg:x="71762" fg:w="485"/><text x="56.9690%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (482 samples, 0.38%)</title><rect x="56.7214%" y="405" width="0.3810%" height="15" fill="rgb(205,95,48)" fg:x="71765" fg:w="482"/><text x="56.9714%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (469 samples, 0.37%)</title><rect x="56.7316%" y="389" width="0.3707%" height="15" fill="rgb(225,179,37)" fg:x="71778" fg:w="469"/><text x="56.9816%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (87 samples, 0.07%)</title><rect x="57.0336%" y="373" width="0.0688%" height="15" fill="rgb(230,209,3)" fg:x="72160" fg:w="87"/><text x="57.2836%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 samples, 0.12%)</title><rect x="57.1387%" y="389" width="0.1209%" height="15" fill="rgb(248,12,46)" fg:x="72293" fg:w="153"/><text x="57.3887%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (578 samples, 0.46%)</title><rect x="57.2596%" y="389" width="0.4568%" height="15" fill="rgb(234,18,0)" fg:x="72446" fg:w="578"/><text x="57.5096%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (1,401 samples, 1.11%)</title><rect x="56.6969%" y="453" width="1.1073%" height="15" fill="rgb(238,197,14)" fg:x="71734" fg:w="1401"/><text x="56.9469%" y="463.50"></text></g><g><title> N]&gt;::hash (1,401 samples, 1.11%)</title><rect x="56.6969%" y="437" width="1.1073%" height="15" fill="rgb(251,162,48)" fg:x="71734" fg:w="1401"/><text x="56.9469%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (885 samples, 0.70%)</title><rect x="57.1047%" y="421" width="0.6995%" height="15" fill="rgb(237,73,42)" fg:x="72250" fg:w="885"/><text x="57.3547%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (852 samples, 0.67%)</title><rect x="57.1308%" y="405" width="0.6734%" height="15" fill="rgb(211,108,8)" fg:x="72283" fg:w="852"/><text x="57.3808%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (111 samples, 0.09%)</title><rect x="57.7164%" y="389" width="0.0877%" height="15" fill="rgb(213,45,22)" fg:x="73024" fg:w="111"/><text x="57.9664%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1,412 samples, 1.12%)</title><rect x="56.6953%" y="469" width="1.1160%" height="15" fill="rgb(252,154,5)" fg:x="71732" fg:w="1412"/><text x="56.9453%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,427 samples, 1.13%)</title><rect x="56.6897%" y="485" width="1.1279%" height="15" fill="rgb(221,79,52)" fg:x="71725" fg:w="1427"/><text x="56.9397%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (3,436 samples, 2.72%)</title><rect x="55.5650%" y="501" width="2.7157%" height="15" fill="rgb(229,220,36)" fg:x="70302" fg:w="3436"/><text x="55.8150%" y="511.50">ge..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (586 samples, 0.46%)</title><rect x="57.8176%" y="485" width="0.4632%" height="15" fill="rgb(211,17,16)" fg:x="73152" fg:w="586"/><text x="58.0676%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (42 samples, 0.03%)</title><rect x="58.2808%" y="501" width="0.0332%" height="15" fill="rgb(222,55,31)" fg:x="73738" fg:w="42"/><text x="58.5308%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (213 samples, 0.17%)</title><rect x="58.3930%" y="485" width="0.1684%" height="15" fill="rgb(221,221,31)" fg:x="73880" fg:w="213"/><text x="58.6430%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (124 samples, 0.10%)</title><rect x="58.7866%" y="469" width="0.0980%" height="15" fill="rgb(227,168,26)" fg:x="74378" fg:w="124"/><text x="59.0366%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::vld1_u8 (17 samples, 0.01%)</title><rect x="58.8846%" y="469" width="0.0134%" height="15" fill="rgb(224,139,9)" fg:x="74502" fg:w="17"/><text x="59.1346%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (144 samples, 0.11%)</title><rect x="58.8981%" y="469" width="0.1138%" height="15" fill="rgb(254,172,0)" fg:x="74519" fg:w="144"/><text x="59.1481%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (36 samples, 0.03%)</title><rect x="59.0119%" y="469" width="0.0285%" height="15" fill="rgb(235,203,1)" fg:x="74663" fg:w="36"/><text x="59.2619%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (55 samples, 0.04%)</title><rect x="59.0403%" y="469" width="0.0435%" height="15" fill="rgb(216,205,24)" fg:x="74699" fg:w="55"/><text x="59.2903%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (56 samples, 0.04%)</title><rect x="59.0838%" y="469" width="0.0443%" height="15" fill="rgb(233,24,6)" fg:x="74754" fg:w="56"/><text x="59.3338%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (64 samples, 0.05%)</title><rect x="59.1281%" y="469" width="0.0506%" height="15" fill="rgb(244,110,9)" fg:x="74810" fg:w="64"/><text x="59.3781%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::equivalent_key::_{{closure}} (24 samples, 0.02%)</title><rect x="59.1786%" y="469" width="0.0190%" height="15" fill="rgb(239,222,42)" fg:x="74874" fg:w="24"/><text x="59.4286%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (99 samples, 0.08%)</title><rect x="59.1976%" y="469" width="0.0782%" height="15" fill="rgb(218,145,13)" fg:x="74898" fg:w="99"/><text x="59.4476%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (18 samples, 0.01%)</title><rect x="59.3865%" y="453" width="0.0142%" height="15" fill="rgb(207,69,11)" fg:x="75137" fg:w="18"/><text x="59.6365%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (138 samples, 0.11%)</title><rect x="59.4347%" y="405" width="0.1091%" height="15" fill="rgb(220,223,22)" fg:x="75198" fg:w="138"/><text x="59.6847%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (164 samples, 0.13%)</title><rect x="59.4244%" y="421" width="0.1296%" height="15" fill="rgb(245,102,5)" fg:x="75185" fg:w="164"/><text x="59.6744%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (13 samples, 0.01%)</title><rect x="59.5438%" y="405" width="0.0103%" height="15" fill="rgb(211,148,2)" fg:x="75336" fg:w="13"/><text x="59.7938%" y="415.50"></text></g><g><title> N]&gt; for [A (13 samples, 0.01%)</title><rect x="59.5438%" y="389" width="0.0103%" height="15" fill="rgb(241,13,44)" fg:x="75336" fg:w="13"/><text x="59.7938%" y="399.50"></text></g><g><title> N]&gt;::eq (13 samples, 0.01%)</title><rect x="59.5438%" y="373" width="0.0103%" height="15" fill="rgb(219,137,21)" fg:x="75336" fg:w="13"/><text x="59.7938%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (201 samples, 0.16%)</title><rect x="59.4079%" y="437" width="0.1589%" height="15" fill="rgb(242,206,5)" fg:x="75164" fg:w="201"/><text x="59.6579%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (16 samples, 0.01%)</title><rect x="59.5541%" y="421" width="0.0126%" height="15" fill="rgb(217,114,22)" fg:x="75349" fg:w="16"/><text x="59.8041%" y="431.50"></text></g><g><title> N]&gt; for [A (16 samples, 0.01%)</title><rect x="59.5541%" y="405" width="0.0126%" height="15" fill="rgb(253,206,42)" fg:x="75349" fg:w="16"/><text x="59.8041%" y="415.50"></text></g><g><title> N]&gt;::eq (16 samples, 0.01%)</title><rect x="59.5541%" y="389" width="0.0126%" height="15" fill="rgb(236,102,18)" fg:x="75349" fg:w="16"/><text x="59.8041%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (450 samples, 0.36%)</title><rect x="59.2759%" y="469" width="0.3557%" height="15" fill="rgb(208,59,49)" fg:x="74997" fg:w="450"/><text x="59.5259%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::equivalent_key::_{{closure}} (292 samples, 0.23%)</title><rect x="59.4007%" y="453" width="0.2308%" height="15" fill="rgb(215,194,28)" fg:x="75155" fg:w="292"/><text x="59.6507%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (82 samples, 0.06%)</title><rect x="59.5667%" y="437" width="0.0648%" height="15" fill="rgb(243,207,11)" fg:x="75365" fg:w="82"/><text x="59.8167%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (110 samples, 0.09%)</title><rect x="59.6315%" y="469" width="0.0869%" height="15" fill="rgb(254,179,35)" fg:x="75447" fg:w="110"/><text x="59.8815%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (1,526 samples, 1.21%)</title><rect x="58.5614%" y="485" width="1.2061%" height="15" fill="rgb(235,97,3)" fg:x="74093" fg:w="1526"/><text x="58.8114%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (62 samples, 0.05%)</title><rect x="59.7185%" y="469" width="0.0490%" height="15" fill="rgb(215,155,33)" fg:x="75557" fg:w="62"/><text x="59.9685%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::HashMap&lt;uuid::Uuid,F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (5,495 samples, 4.34%)</title><rect x="55.4267%" y="549" width="4.3431%" height="15" fill="rgb(223,128,12)" fg:x="70127" fg:w="5495"/><text x="55.6767%" y="559.50">get_u..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5,465 samples, 4.32%)</title><rect x="55.4504%" y="533" width="4.3194%" height="15" fill="rgb(208,157,18)" fg:x="70157" fg:w="5465"/><text x="55.7004%" y="543.50">get_u..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5,429 samples, 4.29%)</title><rect x="55.4789%" y="517" width="4.2910%" height="15" fill="rgb(249,70,54)" fg:x="70193" fg:w="5429"/><text x="55.7289%" y="527.50">get_u..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (1,842 samples, 1.46%)</title><rect x="58.3140%" y="501" width="1.4559%" height="15" fill="rgb(244,118,24)" fg:x="73780" fg:w="1842"/><text x="58.5640%" y="511.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (94 samples, 0.07%)</title><rect x="59.7698%" y="549" width="0.0743%" height="15" fill="rgb(211,54,0)" fg:x="75622" fg:w="94"/><text x="60.0198%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (5,682 samples, 4.49%)</title><rect x="55.4101%" y="565" width="4.4909%" height="15" fill="rgb(245,137,45)" fg:x="70106" fg:w="5682"/><text x="55.6601%" y="575.50">get_u..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (68 samples, 0.05%)</title><rect x="59.8473%" y="549" width="0.0537%" height="15" fill="rgb(232,154,31)" fg:x="75720" fg:w="68"/><text x="60.0973%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (46 samples, 0.04%)</title><rect x="59.8647%" y="533" width="0.0364%" height="15" fill="rgb(253,6,39)" fg:x="75742" fg:w="46"/><text x="60.1147%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (5,727 samples, 4.53%)</title><rect x="55.3896%" y="581" width="4.5265%" height="15" fill="rgb(234,183,24)" fg:x="70080" fg:w="5727"/><text x="55.6396%" y="591.50">get_u..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (17 samples, 0.01%)</title><rect x="59.9026%" y="565" width="0.0134%" height="15" fill="rgb(252,84,40)" fg:x="75790" fg:w="17"/><text x="60.1526%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (5,747 samples, 4.54%)</title><rect x="55.3848%" y="597" width="4.5423%" height="15" fill="rgb(224,65,2)" fg:x="70074" fg:w="5747"/><text x="55.6348%" y="607.50">get_u..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (14 samples, 0.01%)</title><rect x="59.9161%" y="581" width="0.0111%" height="15" fill="rgb(229,38,24)" fg:x="75807" fg:w="14"/><text x="60.1661%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (5,813 samples, 4.59%)</title><rect x="55.3769%" y="613" width="4.5945%" height="15" fill="rgb(218,131,50)" fg:x="70064" fg:w="5813"/><text x="55.6269%" y="623.50">get_u..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::ok_or_else (48 samples, 0.04%)</title><rect x="59.9335%" y="597" width="0.0379%" height="15" fill="rgb(233,106,18)" fg:x="75829" fg:w="48"/><text x="60.1835%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (96 samples, 0.08%)</title><rect x="59.9825%" y="405" width="0.0759%" height="15" fill="rgb(220,216,11)" fg:x="75891" fg:w="96"/><text x="60.2325%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (37 samples, 0.03%)</title><rect x="60.1808%" y="357" width="0.0292%" height="15" fill="rgb(251,100,45)" fg:x="76142" fg:w="37"/><text x="60.4308%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (53 samples, 0.04%)</title><rect x="60.2686%" y="309" width="0.0419%" height="15" fill="rgb(235,143,32)" fg:x="76253" fg:w="53"/><text x="60.5186%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (37 samples, 0.03%)</title><rect x="60.4606%" y="293" width="0.0292%" height="15" fill="rgb(248,124,34)" fg:x="76496" fg:w="37"/><text x="60.7106%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (50 samples, 0.04%)</title><rect x="60.4970%" y="261" width="0.0395%" height="15" fill="rgb(225,221,4)" fg:x="76542" fg:w="50"/><text x="60.7470%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (161 samples, 0.13%)</title><rect x="60.5365%" y="261" width="0.1273%" height="15" fill="rgb(242,27,43)" fg:x="76592" fg:w="161"/><text x="60.7865%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,216 samples, 0.96%)</title><rect x="60.4922%" y="277" width="0.9611%" height="15" fill="rgb(227,54,8)" fg:x="76536" fg:w="1216"/><text x="60.7422%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (999 samples, 0.79%)</title><rect x="60.6638%" y="261" width="0.7896%" height="15" fill="rgb(253,139,49)" fg:x="76753" fg:w="999"/><text x="60.9138%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (254 samples, 0.20%)</title><rect x="61.4533%" y="277" width="0.2008%" height="15" fill="rgb(231,26,43)" fg:x="77752" fg:w="254"/><text x="61.7033%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`DYLD-STUB$$memcpy (25 samples, 0.02%)</title><rect x="61.6541%" y="277" width="0.0198%" height="15" fill="rgb(207,121,39)" fg:x="78006" fg:w="25"/><text x="61.9041%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (150 samples, 0.12%)</title><rect x="61.7584%" y="149" width="0.1186%" height="15" fill="rgb(223,101,35)" fg:x="78138" fg:w="150"/><text x="62.0084%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (312 samples, 0.25%)</title><rect x="61.8770%" y="149" width="0.2466%" height="15" fill="rgb(232,87,23)" fg:x="78288" fg:w="312"/><text x="62.1270%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (594 samples, 0.47%)</title><rect x="61.7244%" y="197" width="0.4695%" height="15" fill="rgb(225,180,29)" fg:x="78095" fg:w="594"/><text x="61.9744%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (591 samples, 0.47%)</title><rect x="61.7268%" y="181" width="0.4671%" height="15" fill="rgb(225,25,17)" fg:x="78098" fg:w="591"/><text x="61.9768%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (568 samples, 0.45%)</title><rect x="61.7450%" y="165" width="0.4489%" height="15" fill="rgb(223,8,52)" fg:x="78121" fg:w="568"/><text x="61.9950%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (89 samples, 0.07%)</title><rect x="62.1236%" y="149" width="0.0703%" height="15" fill="rgb(246,42,21)" fg:x="78600" fg:w="89"/><text x="62.3736%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 samples, 0.13%)</title><rect x="62.2350%" y="165" width="0.1296%" height="15" fill="rgb(205,64,43)" fg:x="78741" fg:w="164"/><text x="62.4850%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (623 samples, 0.49%)</title><rect x="62.3646%" y="165" width="0.4924%" height="15" fill="rgb(221,160,13)" fg:x="78905" fg:w="623"/><text x="62.6146%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (1,603 samples, 1.27%)</title><rect x="61.7094%" y="229" width="1.2670%" height="15" fill="rgb(239,58,35)" fg:x="78076" fg:w="1603"/><text x="61.9594%" y="239.50"></text></g><g><title> N]&gt;::hash (1,603 samples, 1.27%)</title><rect x="61.7094%" y="213" width="1.2670%" height="15" fill="rgb(251,26,40)" fg:x="78076" fg:w="1603"/><text x="61.9594%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (983 samples, 0.78%)</title><rect x="62.1995%" y="197" width="0.7769%" height="15" fill="rgb(247,0,4)" fg:x="78696" fg:w="983"/><text x="62.4495%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (950 samples, 0.75%)</title><rect x="62.2255%" y="181" width="0.7509%" height="15" fill="rgb(218,130,10)" fg:x="78729" fg:w="950"/><text x="62.4755%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (151 samples, 0.12%)</title><rect x="62.8571%" y="165" width="0.1193%" height="15" fill="rgb(239,32,7)" fg:x="79528" fg:w="151"/><text x="63.1071%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1,624 samples, 1.28%)</title><rect x="61.7055%" y="245" width="1.2836%" height="15" fill="rgb(210,192,24)" fg:x="78071" fg:w="1624"/><text x="61.9555%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,670 samples, 1.32%)</title><rect x="61.6739%" y="277" width="1.3199%" height="15" fill="rgb(226,212,17)" fg:x="78031" fg:w="1670"/><text x="61.9239%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,638 samples, 1.29%)</title><rect x="61.6992%" y="261" width="1.2946%" height="15" fill="rgb(219,201,28)" fg:x="78063" fg:w="1638"/><text x="61.9492%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (3,675 samples, 2.90%)</title><rect x="60.4899%" y="293" width="2.9046%" height="15" fill="rgb(235,207,41)" fg:x="76533" fg:w="3675"/><text x="60.7399%" y="303.50">ge..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (507 samples, 0.40%)</title><rect x="62.9938%" y="277" width="0.4007%" height="15" fill="rgb(241,95,54)" fg:x="79701" fg:w="507"/><text x="63.2438%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (126 samples, 0.10%)</title><rect x="63.3945%" y="293" width="0.0996%" height="15" fill="rgb(248,12,23)" fg:x="80208" fg:w="126"/><text x="63.6445%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::vld1_u8 (17 samples, 0.01%)</title><rect x="63.5621%" y="277" width="0.0134%" height="15" fill="rgb(228,173,4)" fg:x="80420" fg:w="17"/><text x="63.8121%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (94 samples, 0.07%)</title><rect x="63.5755%" y="277" width="0.0743%" height="15" fill="rgb(254,99,5)" fg:x="80437" fg:w="94"/><text x="63.8255%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (126 samples, 0.10%)</title><rect x="63.7462%" y="261" width="0.0996%" height="15" fill="rgb(212,184,17)" fg:x="80653" fg:w="126"/><text x="63.9962%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::vld1_u8 (18 samples, 0.01%)</title><rect x="63.8458%" y="261" width="0.0142%" height="15" fill="rgb(252,174,1)" fg:x="80779" fg:w="18"/><text x="64.0958%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (246 samples, 0.19%)</title><rect x="63.8600%" y="261" width="0.1944%" height="15" fill="rgb(241,118,51)" fg:x="80797" fg:w="246"/><text x="64.1100%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (113 samples, 0.09%)</title><rect x="64.0545%" y="261" width="0.0893%" height="15" fill="rgb(227,94,47)" fg:x="81043" fg:w="113"/><text x="64.3045%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (187 samples, 0.15%)</title><rect x="64.1438%" y="261" width="0.1478%" height="15" fill="rgb(229,104,2)" fg:x="81156" fg:w="187"/><text x="64.3938%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (66 samples, 0.05%)</title><rect x="64.2916%" y="261" width="0.0522%" height="15" fill="rgb(219,28,31)" fg:x="81343" fg:w="66"/><text x="64.5416%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (34 samples, 0.03%)</title><rect x="64.3438%" y="261" width="0.0269%" height="15" fill="rgb(233,109,36)" fg:x="81409" fg:w="34"/><text x="64.5938%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (49 samples, 0.04%)</title><rect x="64.4497%" y="245" width="0.0387%" height="15" fill="rgb(246,88,11)" fg:x="81543" fg:w="49"/><text x="64.6997%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (38 samples, 0.03%)</title><rect x="64.4884%" y="245" width="0.0300%" height="15" fill="rgb(209,212,17)" fg:x="81592" fg:w="38"/><text x="64.7384%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (47 samples, 0.04%)</title><rect x="64.5184%" y="245" width="0.0371%" height="15" fill="rgb(243,59,29)" fg:x="81630" fg:w="47"/><text x="64.7684%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (40 samples, 0.03%)</title><rect x="64.5556%" y="245" width="0.0316%" height="15" fill="rgb(244,205,48)" fg:x="81677" fg:w="40"/><text x="64.8056%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (306 samples, 0.24%)</title><rect x="64.3730%" y="261" width="0.2419%" height="15" fill="rgb(227,30,6)" fg:x="81446" fg:w="306"/><text x="64.6230%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (35 samples, 0.03%)</title><rect x="64.5872%" y="245" width="0.0277%" height="15" fill="rgb(220,205,48)" fg:x="81717" fg:w="35"/><text x="64.8372%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (65 samples, 0.05%)</title><rect x="64.6148%" y="261" width="0.0514%" height="15" fill="rgb(250,94,14)" fg:x="81752" fg:w="65"/><text x="64.8648%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (174 samples, 0.14%)</title><rect x="64.6662%" y="261" width="0.1375%" height="15" fill="rgb(216,119,42)" fg:x="81817" fg:w="174"/><text x="64.9162%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (130 samples, 0.10%)</title><rect x="64.8037%" y="261" width="0.1027%" height="15" fill="rgb(232,155,0)" fg:x="81991" fg:w="130"/><text x="65.0537%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1,593 samples, 1.26%)</title><rect x="63.6498%" y="277" width="1.2591%" height="15" fill="rgb(212,24,32)" fg:x="80531" fg:w="1593"/><text x="63.8998%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (15 samples, 0.01%)</title><rect x="64.9089%" y="277" width="0.0119%" height="15" fill="rgb(216,69,20)" fg:x="82124" fg:w="15"/><text x="65.1589%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,813 samples, 1.43%)</title><rect x="63.4941%" y="293" width="1.4330%" height="15" fill="rgb(229,73,31)" fg:x="80334" fg:w="1813"/><text x="63.7441%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (192 samples, 0.15%)</title><rect x="64.9270%" y="293" width="0.1518%" height="15" fill="rgb(224,219,20)" fg:x="82147" fg:w="192"/><text x="65.1770%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="65.0788%" y="293" width="0.0150%" height="15" fill="rgb(215,146,41)" fg:x="82339" fg:w="19"/><text x="65.3288%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6,082 samples, 4.81%)</title><rect x="60.3105%" y="309" width="4.8071%" height="15" fill="rgb(244,71,31)" fg:x="76306" fg:w="6082"/><text x="60.5605%" y="319.50">get_us..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (30 samples, 0.02%)</title><rect x="65.0938%" y="293" width="0.0237%" height="15" fill="rgb(224,24,11)" fg:x="82358" fg:w="30"/><text x="65.3438%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (6,186 samples, 4.89%)</title><rect x="60.2488%" y="325" width="4.8893%" height="15" fill="rgb(229,76,15)" fg:x="76228" fg:w="6186"/><text x="60.4988%" y="335.50">get_us..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (26 samples, 0.02%)</title><rect x="65.1175%" y="309" width="0.0205%" height="15" fill="rgb(209,93,2)" fg:x="82388" fg:w="26"/><text x="65.3675%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (6,263 samples, 4.95%)</title><rect x="60.2101%" y="357" width="4.9501%" height="15" fill="rgb(216,200,50)" fg:x="76179" fg:w="6263"/><text x="60.4601%" y="367.50">get_us..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (6,224 samples, 4.92%)</title><rect x="60.2409%" y="341" width="4.9193%" height="15" fill="rgb(211,67,34)" fg:x="76218" fg:w="6224"/><text x="60.4909%" y="351.50">get_us..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 0.02%)</title><rect x="65.1381%" y="325" width="0.0221%" height="15" fill="rgb(225,87,47)" fg:x="82414" fg:w="28"/><text x="65.3881%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (6,327 samples, 5.00%)</title><rect x="60.1627%" y="373" width="5.0007%" height="15" fill="rgb(217,185,16)" fg:x="76119" fg:w="6327"/><text x="60.4127%" y="383.50">get_us..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (6,447 samples, 5.10%)</title><rect x="60.0773%" y="389" width="5.0956%" height="15" fill="rgb(205,0,0)" fg:x="76011" fg:w="6447"/><text x="60.3273%" y="399.50">get_us..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (130 samples, 0.10%)</title><rect x="65.1729%" y="389" width="0.1027%" height="15" fill="rgb(207,116,45)" fg:x="82458" fg:w="130"/><text x="65.4229%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (47 samples, 0.04%)</title><rect x="65.2875%" y="389" width="0.0371%" height="15" fill="rgb(221,156,26)" fg:x="82603" fg:w="47"/><text x="65.5375%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (225 samples, 0.18%)</title><rect x="65.3428%" y="389" width="0.1778%" height="15" fill="rgb(213,140,4)" fg:x="82673" fg:w="225"/><text x="65.5928%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,034 samples, 5.56%)</title><rect x="59.9745%" y="453" width="5.5595%" height="15" fill="rgb(231,224,15)" fg:x="75881" fg:w="7034"/><text x="60.2245%" y="463.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,034 samples, 5.56%)</title><rect x="59.9745%" y="437" width="5.5595%" height="15" fill="rgb(244,76,20)" fg:x="75881" fg:w="7034"/><text x="60.2245%" y="447.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,034 samples, 5.56%)</title><rect x="59.9745%" y="421" width="5.5595%" height="15" fill="rgb(238,117,7)" fg:x="75881" fg:w="7034"/><text x="60.2245%" y="431.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (6,928 samples, 5.48%)</title><rect x="60.0583%" y="405" width="5.4757%" height="15" fill="rgb(235,1,10)" fg:x="75987" fg:w="6928"/><text x="60.3083%" y="415.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (17 samples, 0.01%)</title><rect x="65.5206%" y="389" width="0.0134%" height="15" fill="rgb(216,165,6)" fg:x="82898" fg:w="17"/><text x="65.7706%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (7,036 samples, 5.56%)</title><rect x="59.9738%" y="469" width="5.5611%" height="15" fill="rgb(246,91,35)" fg:x="75880" fg:w="7036"/><text x="60.2238%" y="479.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7,050 samples, 5.57%)</title><rect x="59.9714%" y="517" width="5.5722%" height="15" fill="rgb(228,96,24)" fg:x="75877" fg:w="7050"/><text x="60.2214%" y="527.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (7,050 samples, 5.57%)</title><rect x="59.9714%" y="501" width="5.5722%" height="15" fill="rgb(254,217,53)" fg:x="75877" fg:w="7050"/><text x="60.2214%" y="511.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (7,050 samples, 5.57%)</title><rect x="59.9714%" y="485" width="5.5722%" height="15" fill="rgb(209,60,0)" fg:x="75877" fg:w="7050"/><text x="60.2214%" y="495.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (7,052 samples, 5.57%)</title><rect x="59.9714%" y="533" width="5.5737%" height="15" fill="rgb(250,93,26)" fg:x="75877" fg:w="7052"/><text x="60.2214%" y="543.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::HashMap&lt;uuid::Uuid,F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (7,053 samples, 5.57%)</title><rect x="59.9714%" y="549" width="5.5745%" height="15" fill="rgb(211,9,40)" fg:x="75877" fg:w="7053"/><text x="60.2214%" y="559.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="65.6882%" y="341" width="0.0119%" height="15" fill="rgb(242,57,20)" fg:x="83110" fg:w="15"/><text x="65.9382%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (72 samples, 0.06%)</title><rect x="65.7000%" y="341" width="0.0569%" height="15" fill="rgb(248,85,48)" fg:x="83125" fg:w="72"/><text x="65.9500%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.06%)</title><rect x="65.7886%" y="325" width="0.0640%" height="15" fill="rgb(212,117,2)" fg:x="83237" fg:w="81"/><text x="66.0386%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (55 samples, 0.04%)</title><rect x="65.8644%" y="325" width="0.0435%" height="15" fill="rgb(243,19,3)" fg:x="83333" fg:w="55"/><text x="66.1144%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (266 samples, 0.21%)</title><rect x="65.9213%" y="325" width="0.2102%" height="15" fill="rgb(232,217,24)" fg:x="83405" fg:w="266"/><text x="66.1713%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (626 samples, 0.49%)</title><rect x="65.6550%" y="357" width="0.4948%" height="15" fill="rgb(224,175,40)" fg:x="83068" fg:w="626"/><text x="65.9050%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (497 samples, 0.39%)</title><rect x="65.7569%" y="341" width="0.3928%" height="15" fill="rgb(212,162,32)" fg:x="83197" fg:w="497"/><text x="66.0069%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (23 samples, 0.02%)</title><rect x="66.1316%" y="325" width="0.0182%" height="15" fill="rgb(215,9,4)" fg:x="83671" fg:w="23"/><text x="66.3816%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (731 samples, 0.58%)</title><rect x="65.5728%" y="373" width="0.5778%" height="15" fill="rgb(242,42,7)" fg:x="82964" fg:w="731"/><text x="65.8228%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids::_{{closure}} (15 samples, 0.01%)</title><rect x="66.1782%" y="357" width="0.0119%" height="15" fill="rgb(242,184,45)" fg:x="83730" fg:w="15"/><text x="66.4282%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (73 samples, 0.06%)</title><rect x="66.2375%" y="341" width="0.0577%" height="15" fill="rgb(228,111,51)" fg:x="83805" fg:w="73"/><text x="66.4875%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids::_{{closure}} (135 samples, 0.11%)</title><rect x="66.2952%" y="341" width="0.1067%" height="15" fill="rgb(236,147,17)" fg:x="83878" fg:w="135"/><text x="66.5452%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (106 samples, 0.08%)</title><rect x="66.3181%" y="325" width="0.0838%" height="15" fill="rgb(210,75,22)" fg:x="83907" fg:w="106"/><text x="66.5681%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (94 samples, 0.07%)</title><rect x="66.3276%" y="309" width="0.0743%" height="15" fill="rgb(217,159,45)" fg:x="83919" fg:w="94"/><text x="66.5776%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (38 samples, 0.03%)</title><rect x="66.4477%" y="293" width="0.0300%" height="15" fill="rgb(245,165,53)" fg:x="84071" fg:w="38"/><text x="66.6977%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (39 samples, 0.03%)</title><rect x="66.6192%" y="245" width="0.0308%" height="15" fill="rgb(251,190,50)" fg:x="84288" fg:w="39"/><text x="66.8692%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (164 samples, 0.13%)</title><rect x="66.6501%" y="245" width="0.1296%" height="15" fill="rgb(208,203,29)" fg:x="84327" fg:w="164"/><text x="66.9001%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,195 samples, 0.94%)</title><rect x="66.6145%" y="261" width="0.9445%" height="15" fill="rgb(207,209,35)" fg:x="84282" fg:w="1195"/><text x="66.8645%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (986 samples, 0.78%)</title><rect x="66.7797%" y="245" width="0.7793%" height="15" fill="rgb(230,144,49)" fg:x="84491" fg:w="986"/><text x="67.0297%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (294 samples, 0.23%)</title><rect x="67.5590%" y="261" width="0.2324%" height="15" fill="rgb(229,31,6)" fg:x="85477" fg:w="294"/><text x="67.8090%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`DYLD-STUB$$memcpy (26 samples, 0.02%)</title><rect x="67.7914%" y="261" width="0.0205%" height="15" fill="rgb(251,129,24)" fg:x="85771" fg:w="26"/><text x="68.0414%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.01%)</title><rect x="67.8491%" y="181" width="0.0134%" height="15" fill="rgb(235,105,15)" fg:x="85844" fg:w="17"/><text x="68.0991%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (108 samples, 0.09%)</title><rect x="67.8941%" y="133" width="0.0854%" height="15" fill="rgb(216,52,43)" fg:x="85901" fg:w="108"/><text x="68.1441%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (258 samples, 0.20%)</title><rect x="67.9795%" y="133" width="0.2039%" height="15" fill="rgb(238,144,41)" fg:x="86009" fg:w="258"/><text x="68.2295%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (501 samples, 0.40%)</title><rect x="67.8625%" y="181" width="0.3960%" height="15" fill="rgb(243,63,9)" fg:x="85861" fg:w="501"/><text x="68.1125%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (496 samples, 0.39%)</title><rect x="67.8665%" y="165" width="0.3920%" height="15" fill="rgb(246,208,1)" fg:x="85866" fg:w="496"/><text x="68.1165%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (479 samples, 0.38%)</title><rect x="67.8799%" y="149" width="0.3786%" height="15" fill="rgb(233,182,18)" fg:x="85883" fg:w="479"/><text x="68.1299%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (95 samples, 0.08%)</title><rect x="68.1834%" y="133" width="0.0751%" height="15" fill="rgb(242,224,8)" fg:x="86267" fg:w="95"/><text x="68.4334%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (170 samples, 0.13%)</title><rect x="68.2909%" y="149" width="0.1344%" height="15" fill="rgb(243,54,37)" fg:x="86403" fg:w="170"/><text x="68.5409%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (618 samples, 0.49%)</title><rect x="68.4253%" y="149" width="0.4885%" height="15" fill="rgb(233,192,12)" fg:x="86573" fg:w="618"/><text x="68.6753%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (1,482 samples, 1.17%)</title><rect x="67.8364%" y="213" width="1.1713%" height="15" fill="rgb(251,192,53)" fg:x="85828" fg:w="1482"/><text x="68.0864%" y="223.50"></text></g><g><title> N]&gt;::hash (1,482 samples, 1.17%)</title><rect x="67.8364%" y="197" width="1.1713%" height="15" fill="rgb(246,141,26)" fg:x="85828" fg:w="1482"/><text x="68.0864%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (941 samples, 0.74%)</title><rect x="68.2640%" y="181" width="0.7437%" height="15" fill="rgb(239,195,19)" fg:x="86369" fg:w="941"/><text x="68.5140%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (914 samples, 0.72%)</title><rect x="68.2854%" y="165" width="0.7224%" height="15" fill="rgb(241,16,39)" fg:x="86396" fg:w="914"/><text x="68.5354%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (119 samples, 0.09%)</title><rect x="68.9137%" y="149" width="0.0941%" height="15" fill="rgb(223,13,53)" fg:x="87191" fg:w="119"/><text x="69.1637%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1,504 samples, 1.19%)</title><rect x="67.8317%" y="229" width="1.1887%" height="15" fill="rgb(214,227,0)" fg:x="85822" fg:w="1504"/><text x="68.0817%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,541 samples, 1.22%)</title><rect x="67.8119%" y="261" width="1.2180%" height="15" fill="rgb(228,103,26)" fg:x="85797" fg:w="1541"/><text x="68.0619%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,522 samples, 1.20%)</title><rect x="67.8269%" y="245" width="1.2030%" height="15" fill="rgb(254,177,53)" fg:x="85816" fg:w="1522"/><text x="68.0769%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (3,577 samples, 2.83%)</title><rect x="66.6145%" y="277" width="2.8272%" height="15" fill="rgb(208,201,34)" fg:x="84282" fg:w="3577"/><text x="66.8645%" y="287.50">ge..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (521 samples, 0.41%)</title><rect x="69.0299%" y="261" width="0.4118%" height="15" fill="rgb(212,39,5)" fg:x="87338" fg:w="521"/><text x="69.2799%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (98 samples, 0.08%)</title><rect x="69.4417%" y="277" width="0.0775%" height="15" fill="rgb(246,117,3)" fg:x="87859" fg:w="98"/><text x="69.6917%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="69.5855%" y="261" width="0.0111%" height="15" fill="rgb(244,118,39)" fg:x="88041" fg:w="14"/><text x="69.8355%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="69.6756%" y="245" width="0.0119%" height="15" fill="rgb(241,64,10)" fg:x="88155" fg:w="15"/><text x="69.9256%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (654 samples, 0.52%)</title><rect x="69.6946%" y="245" width="0.5169%" height="15" fill="rgb(229,39,44)" fg:x="88179" fg:w="654"/><text x="69.9446%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (376 samples, 0.30%)</title><rect x="70.2202%" y="229" width="0.2972%" height="15" fill="rgb(230,226,3)" fg:x="88844" fg:w="376"/><text x="70.4702%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (14 samples, 0.01%)</title><rect x="70.5229%" y="229" width="0.0111%" height="15" fill="rgb(222,13,42)" fg:x="89227" fg:w="14"/><text x="70.7729%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (40 samples, 0.03%)</title><rect x="70.5340%" y="229" width="0.0316%" height="15" fill="rgb(247,180,54)" fg:x="89241" fg:w="40"/><text x="70.7840%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (16 samples, 0.01%)</title><rect x="70.5656%" y="229" width="0.0126%" height="15" fill="rgb(205,96,16)" fg:x="89281" fg:w="16"/><text x="70.8156%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::free_buckets (16 samples, 0.01%)</title><rect x="70.5790%" y="181" width="0.0126%" height="15" fill="rgb(205,100,21)" fg:x="89298" fg:w="16"/><text x="70.8290%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner,hashbrown::raw::RawTableInner::prepare_resize&lt;alloc::alloc::Global&gt;::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="70.5782%" y="229" width="0.0158%" height="15" fill="rgb(248,51,4)" fg:x="89297" fg:w="20"/><text x="70.8282%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="70.5782%" y="213" width="0.0158%" height="15" fill="rgb(217,197,30)" fg:x="89297" fg:w="20"/><text x="70.8282%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_resize::_{{closure}} (20 samples, 0.02%)</title><rect x="70.5782%" y="197" width="0.0158%" height="15" fill="rgb(240,179,40)" fg:x="89297" fg:w="20"/><text x="70.8282%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (35 samples, 0.03%)</title><rect x="70.5940%" y="229" width="0.0277%" height="15" fill="rgb(212,185,35)" fg:x="89317" fg:w="35"/><text x="70.8440%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (131 samples, 0.10%)</title><rect x="70.6265%" y="229" width="0.1035%" height="15" fill="rgb(251,222,31)" fg:x="89358" fg:w="131"/><text x="70.8765%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (34 samples, 0.03%)</title><rect x="70.8833%" y="213" width="0.0269%" height="15" fill="rgb(208,140,36)" fg:x="89683" fg:w="34"/><text x="71.1333%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (24 samples, 0.02%)</title><rect x="70.9307%" y="197" width="0.0190%" height="15" fill="rgb(220,148,1)" fg:x="89743" fg:w="24"/><text x="71.1807%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (54 samples, 0.04%)</title><rect x="70.9703%" y="165" width="0.0427%" height="15" fill="rgb(254,4,28)" fg:x="89793" fg:w="54"/><text x="71.2203%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (321 samples, 0.25%)</title><rect x="71.0129%" y="165" width="0.2537%" height="15" fill="rgb(222,185,44)" fg:x="89847" fg:w="321"/><text x="71.2629%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,120 samples, 1.68%)</title><rect x="70.9608%" y="181" width="1.6756%" height="15" fill="rgb(215,74,39)" fg:x="89781" fg:w="2120"/><text x="71.2108%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,733 samples, 1.37%)</title><rect x="71.2667%" y="165" width="1.3697%" height="15" fill="rgb(247,86,4)" fg:x="90168" fg:w="1733"/><text x="71.5167%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (307 samples, 0.24%)</title><rect x="72.6364%" y="181" width="0.2426%" height="15" fill="rgb(231,105,32)" fg:x="91901" fg:w="307"/><text x="72.8864%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`DYLD-STUB$$memcpy (53 samples, 0.04%)</title><rect x="72.8790%" y="181" width="0.0419%" height="15" fill="rgb(222,65,35)" fg:x="92208" fg:w="53"/><text x="73.1290%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (191 samples, 0.15%)</title><rect x="73.0411%" y="53" width="0.1510%" height="15" fill="rgb(218,145,35)" fg:x="92413" fg:w="191"/><text x="73.2911%" y="63.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (646 samples, 0.51%)</title><rect x="73.1920%" y="53" width="0.5106%" height="15" fill="rgb(208,7,15)" fg:x="92604" fg:w="646"/><text x="73.4420%" y="63.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (1,052 samples, 0.83%)</title><rect x="72.9936%" y="101" width="0.8315%" height="15" fill="rgb(209,83,13)" fg:x="92353" fg:w="1052"/><text x="73.2436%" y="111.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (1,035 samples, 0.82%)</title><rect x="73.0071%" y="85" width="0.8180%" height="15" fill="rgb(218,3,10)" fg:x="92370" fg:w="1035"/><text x="73.2571%" y="95.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,017 samples, 0.80%)</title><rect x="73.0213%" y="69" width="0.8038%" height="15" fill="rgb(211,219,4)" fg:x="92388" fg:w="1017"/><text x="73.2713%" y="79.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (155 samples, 0.12%)</title><rect x="73.7026%" y="53" width="0.1225%" height="15" fill="rgb(228,194,12)" fg:x="93250" fg:w="155"/><text x="73.9526%" y="63.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="73.8543%" y="85" width="0.0103%" height="15" fill="rgb(210,175,7)" fg:x="93442" fg:w="13"/><text x="74.1043%" y="95.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (273 samples, 0.22%)</title><rect x="73.8796%" y="69" width="0.2158%" height="15" fill="rgb(243,132,6)" fg:x="93474" fg:w="273"/><text x="74.1296%" y="79.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (986 samples, 0.78%)</title><rect x="74.0954%" y="69" width="0.7793%" height="15" fill="rgb(207,72,18)" fg:x="93747" fg:w="986"/><text x="74.3454%" y="79.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (2,600 samples, 2.05%)</title><rect x="72.9731%" y="133" width="2.0550%" height="15" fill="rgb(236,1,18)" fg:x="92327" fg:w="2600"/><text x="73.2231%" y="143.50">g..</text></g><g><title> N]&gt;::hash (2,600 samples, 2.05%)</title><rect x="72.9731%" y="117" width="2.0550%" height="15" fill="rgb(227,0,18)" fg:x="92327" fg:w="2600"/><text x="73.2231%" y="127.50"> ..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (1,511 samples, 1.19%)</title><rect x="73.8338%" y="101" width="1.1943%" height="15" fill="rgb(247,37,5)" fg:x="93416" fg:w="1511"/><text x="74.0838%" y="111.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,472 samples, 1.16%)</title><rect x="73.8646%" y="85" width="1.1634%" height="15" fill="rgb(237,179,24)" fg:x="93455" fg:w="1472"/><text x="74.1146%" y="95.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (194 samples, 0.15%)</title><rect x="74.8747%" y="69" width="0.1533%" height="15" fill="rgb(226,53,20)" fg:x="94733" fg:w="194"/><text x="75.1247%" y="79.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (2,642 samples, 2.09%)</title><rect x="72.9589%" y="149" width="2.0882%" height="15" fill="rgb(247,75,7)" fg:x="92309" fg:w="2642"/><text x="73.2089%" y="159.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,701 samples, 2.13%)</title><rect x="72.9209%" y="181" width="2.1348%" height="15" fill="rgb(233,96,12)" fg:x="92261" fg:w="2701"/><text x="73.1709%" y="191.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,666 samples, 2.11%)</title><rect x="72.9486%" y="165" width="2.1071%" height="15" fill="rgb(224,125,0)" fg:x="92296" fg:w="2666"/><text x="73.1986%" y="175.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (6,035 samples, 4.77%)</title><rect x="70.7300%" y="229" width="4.7699%" height="15" fill="rgb(224,92,25)" fg:x="89489" fg:w="6035"/><text x="70.9800%" y="239.50">get_us..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (5,807 samples, 4.59%)</title><rect x="70.9102%" y="213" width="4.5897%" height="15" fill="rgb(224,42,24)" fg:x="89717" fg:w="5807"/><text x="71.1602%" y="223.50">get_u..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (5,757 samples, 4.55%)</title><rect x="70.9497%" y="197" width="4.5502%" height="15" fill="rgb(234,132,49)" fg:x="89767" fg:w="5757"/><text x="71.1997%" y="207.50">get_u..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (562 samples, 0.44%)</title><rect x="75.0557%" y="181" width="0.4442%" height="15" fill="rgb(248,100,35)" fg:x="94962" fg:w="562"/><text x="75.3057%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::vld1_u8 (33 samples, 0.03%)</title><rect x="75.8034%" y="197" width="0.0261%" height="15" fill="rgb(239,94,40)" fg:x="95908" fg:w="33"/><text x="76.0534%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (112 samples, 0.09%)</title><rect x="75.8295%" y="197" width="0.0885%" height="15" fill="rgb(235,139,28)" fg:x="95941" fg:w="112"/><text x="76.0795%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (212 samples, 0.17%)</title><rect x="76.2041%" y="181" width="0.1676%" height="15" fill="rgb(217,144,7)" fg:x="96415" fg:w="212"/><text x="76.4541%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (90 samples, 0.07%)</title><rect x="76.3717%" y="181" width="0.0711%" height="15" fill="rgb(227,55,4)" fg:x="96627" fg:w="90"/><text x="76.6217%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (125 samples, 0.10%)</title><rect x="76.4428%" y="181" width="0.0988%" height="15" fill="rgb(252,82,54)" fg:x="96717" fg:w="125"/><text x="76.6928%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (117 samples, 0.09%)</title><rect x="76.5416%" y="181" width="0.0925%" height="15" fill="rgb(245,172,4)" fg:x="96842" fg:w="117"/><text x="76.7916%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (1,004 samples, 0.79%)</title><rect x="75.9180%" y="197" width="0.7935%" height="15" fill="rgb(207,26,27)" fg:x="96053" fg:w="1004"/><text x="76.1680%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (98 samples, 0.08%)</title><rect x="76.6341%" y="181" width="0.0775%" height="15" fill="rgb(252,98,18)" fg:x="96959" fg:w="98"/><text x="76.8841%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (139 samples, 0.11%)</title><rect x="76.7116%" y="197" width="0.1099%" height="15" fill="rgb(244,8,26)" fg:x="97057" fg:w="139"/><text x="76.9616%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (121 samples, 0.10%)</title><rect x="76.8214%" y="197" width="0.0956%" height="15" fill="rgb(237,173,45)" fg:x="97196" fg:w="121"/><text x="77.0714%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (1,652 samples, 1.31%)</title><rect x="75.6232%" y="213" width="1.3057%" height="15" fill="rgb(208,213,49)" fg:x="95680" fg:w="1652"/><text x="75.8732%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (15 samples, 0.01%)</title><rect x="76.9171%" y="197" width="0.0119%" height="15" fill="rgb(212,122,37)" fg:x="97317" fg:w="15"/><text x="77.1671%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (1,851 samples, 1.46%)</title><rect x="75.4999%" y="229" width="1.4630%" height="15" fill="rgb(213,80,17)" fg:x="95524" fg:w="1851"/><text x="75.7499%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (43 samples, 0.03%)</title><rect x="76.9289%" y="213" width="0.0340%" height="15" fill="rgb(206,210,43)" fg:x="97332" fg:w="43"/><text x="77.1789%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_resize (21 samples, 0.02%)</title><rect x="76.9629%" y="229" width="0.0166%" height="15" fill="rgb(229,214,3)" fg:x="97375" fg:w="21"/><text x="77.2129%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fallible_with_capacity (19 samples, 0.02%)</title><rect x="76.9645%" y="213" width="0.0150%" height="15" fill="rgb(235,213,29)" fg:x="97377" fg:w="19"/><text x="77.2145%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (309 samples, 0.24%)</title><rect x="76.9795%" y="229" width="0.2442%" height="15" fill="rgb(248,135,26)" fg:x="97396" fg:w="309"/><text x="77.2295%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8,924 samples, 7.05%)</title><rect x="70.2202%" y="245" width="7.0533%" height="15" fill="rgb(242,188,12)" fg:x="88844" fg:w="8924"/><text x="70.4702%" y="255.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (63 samples, 0.05%)</title><rect x="77.2237%" y="229" width="0.0498%" height="15" fill="rgb(245,38,12)" fg:x="97705" fg:w="63"/><text x="77.4737%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (9,707 samples, 7.67%)</title><rect x="69.6053%" y="261" width="7.6722%" height="15" fill="rgb(218,42,13)" fg:x="88066" fg:w="9707"/><text x="69.8553%" y="271.50">get_usage_t..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (144 samples, 0.11%)</title><rect x="77.3778%" y="245" width="0.1138%" height="15" fill="rgb(238,132,49)" fg:x="97900" fg:w="144"/><text x="77.6278%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::vld1_u8 (17 samples, 0.01%)</title><rect x="77.4917%" y="245" width="0.0134%" height="15" fill="rgb(209,196,19)" fg:x="98044" fg:w="17"/><text x="77.7417%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (282 samples, 0.22%)</title><rect x="77.5051%" y="245" width="0.2229%" height="15" fill="rgb(244,131,22)" fg:x="98061" fg:w="282"/><text x="77.7551%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (126 samples, 0.10%)</title><rect x="77.7280%" y="245" width="0.0996%" height="15" fill="rgb(223,18,34)" fg:x="98343" fg:w="126"/><text x="77.9780%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (189 samples, 0.15%)</title><rect x="77.8276%" y="245" width="0.1494%" height="15" fill="rgb(252,124,54)" fg:x="98469" fg:w="189"/><text x="78.0776%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (88 samples, 0.07%)</title><rect x="77.9770%" y="245" width="0.0696%" height="15" fill="rgb(229,106,42)" fg:x="98658" fg:w="88"/><text x="78.2270%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (49 samples, 0.04%)</title><rect x="78.0465%" y="245" width="0.0387%" height="15" fill="rgb(221,129,1)" fg:x="98746" fg:w="49"/><text x="78.2965%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (65 samples, 0.05%)</title><rect x="78.1698%" y="229" width="0.0514%" height="15" fill="rgb(229,74,15)" fg:x="98902" fg:w="65"/><text x="78.4198%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (56 samples, 0.04%)</title><rect x="78.2212%" y="229" width="0.0443%" height="15" fill="rgb(210,206,50)" fg:x="98967" fg:w="56"/><text x="78.4712%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (51 samples, 0.04%)</title><rect x="78.2654%" y="229" width="0.0403%" height="15" fill="rgb(251,114,31)" fg:x="99023" fg:w="51"/><text x="78.5154%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (52 samples, 0.04%)</title><rect x="78.3057%" y="229" width="0.0411%" height="15" fill="rgb(215,225,28)" fg:x="99074" fg:w="52"/><text x="78.5557%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (392 samples, 0.31%)</title><rect x="78.0931%" y="245" width="0.3098%" height="15" fill="rgb(237,109,14)" fg:x="98805" fg:w="392"/><text x="78.3431%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (71 samples, 0.06%)</title><rect x="78.3468%" y="229" width="0.0561%" height="15" fill="rgb(230,13,37)" fg:x="99126" fg:w="71"/><text x="78.5968%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (59 samples, 0.05%)</title><rect x="78.4030%" y="245" width="0.0466%" height="15" fill="rgb(231,40,28)" fg:x="99197" fg:w="59"/><text x="78.6530%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (373 samples, 0.29%)</title><rect x="78.4496%" y="245" width="0.2948%" height="15" fill="rgb(231,202,18)" fg:x="99256" fg:w="373"/><text x="78.6996%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (164 samples, 0.13%)</title><rect x="78.7444%" y="245" width="0.1296%" height="15" fill="rgb(225,33,18)" fg:x="99629" fg:w="164"/><text x="78.9944%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (2,021 samples, 1.60%)</title><rect x="77.2798%" y="261" width="1.5974%" height="15" fill="rgb(223,64,47)" fg:x="97776" fg:w="2021"/><text x="77.5298%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (11,855 samples, 9.37%)</title><rect x="69.5191%" y="277" width="9.3699%" height="15" fill="rgb(234,114,13)" fg:x="87957" fg:w="11855"/><text x="69.7691%" y="287.50">get_usage_tes..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (193 samples, 0.15%)</title><rect x="78.8890%" y="277" width="0.1525%" height="15" fill="rgb(248,56,40)" fg:x="99812" fg:w="193"/><text x="79.1390%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (14 samples, 0.01%)</title><rect x="79.0416%" y="277" width="0.0111%" height="15" fill="rgb(221,194,21)" fg:x="100005" fg:w="14"/><text x="79.2916%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15,926 samples, 12.59%)</title><rect x="66.4778%" y="293" width="12.5875%" height="15" fill="rgb(242,108,46)" fg:x="84109" fg:w="15926"/><text x="66.7278%" y="303.50">get_usage_tests-cf8..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (16 samples, 0.01%)</title><rect x="79.0527%" y="277" width="0.0126%" height="15" fill="rgb(220,106,10)" fg:x="100019" fg:w="16"/><text x="79.3027%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (16,003 samples, 12.65%)</title><rect x="66.4319%" y="309" width="12.6484%" height="15" fill="rgb(211,88,4)" fg:x="84051" fg:w="16003"/><text x="66.6819%" y="319.50">get_usage_tests-cf8..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (19 samples, 0.02%)</title><rect x="79.0653%" y="293" width="0.0150%" height="15" fill="rgb(214,95,34)" fg:x="100035" fg:w="19"/><text x="79.3153%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (16,070 samples, 12.70%)</title><rect x="66.4019%" y="341" width="12.7013%" height="15" fill="rgb(250,160,33)" fg:x="84013" fg:w="16070"/><text x="66.6519%" y="351.50">get_usage_tests-cf8..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (16,048 samples, 12.68%)</title><rect x="66.4193%" y="325" width="12.6840%" height="15" fill="rgb(225,29,10)" fg:x="84035" fg:w="16048"/><text x="66.6693%" y="335.50">get_usage_tests-cf8..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (29 samples, 0.02%)</title><rect x="79.0803%" y="309" width="0.0229%" height="15" fill="rgb(224,28,30)" fg:x="100054" fg:w="29"/><text x="79.3303%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (16,354 samples, 12.93%)</title><rect x="66.1901%" y="357" width="12.9258%" height="15" fill="rgb(231,77,4)" fg:x="83745" fg:w="16354"/><text x="66.4401%" y="367.50">get_usage_tests-cf8..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (16 samples, 0.01%)</title><rect x="79.1032%" y="341" width="0.0126%" height="15" fill="rgb(209,63,21)" fg:x="100083" fg:w="16"/><text x="79.3532%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (13 samples, 0.01%)</title><rect x="79.1238%" y="261" width="0.0103%" height="15" fill="rgb(226,22,11)" fg:x="100109" fg:w="13"/><text x="79.3738%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (21 samples, 0.02%)</title><rect x="79.1183%" y="277" width="0.0166%" height="15" fill="rgb(216,82,30)" fg:x="100102" fg:w="21"/><text x="79.3683%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (16,422 samples, 12.98%)</title><rect x="66.1561%" y="373" width="12.9796%" height="15" fill="rgb(246,227,38)" fg:x="83702" fg:w="16422"/><text x="66.4061%" y="383.50">get_usage_tests-cf8..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (23 samples, 0.02%)</title><rect x="79.1175%" y="357" width="0.0182%" height="15" fill="rgb(251,203,53)" fg:x="100101" fg:w="23"/><text x="79.3675%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (23 samples, 0.02%)</title><rect x="79.1175%" y="341" width="0.0182%" height="15" fill="rgb(254,101,1)" fg:x="100101" fg:w="23"/><text x="79.3675%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (22 samples, 0.02%)</title><rect x="79.1183%" y="325" width="0.0174%" height="15" fill="rgb(241,180,5)" fg:x="100102" fg:w="22"/><text x="79.3683%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (22 samples, 0.02%)</title><rect x="79.1183%" y="309" width="0.0174%" height="15" fill="rgb(218,168,4)" fg:x="100102" fg:w="22"/><text x="79.3683%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (22 samples, 0.02%)</title><rect x="79.1183%" y="293" width="0.0174%" height="15" fill="rgb(224,223,32)" fg:x="100102" fg:w="22"/><text x="79.3683%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (15 samples, 0.01%)</title><rect x="79.1356%" y="373" width="0.0119%" height="15" fill="rgb(236,106,22)" fg:x="100124" fg:w="15"/><text x="79.3856%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (17,206 samples, 13.60%)</title><rect x="65.5491%" y="549" width="13.5992%" height="15" fill="rgb(206,121,5)" fg:x="82934" fg:w="17206"/><text x="65.7991%" y="559.50">get_usage_tests-cf82c..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17,206 samples, 13.60%)</title><rect x="65.5491%" y="533" width="13.5992%" height="15" fill="rgb(233,87,28)" fg:x="82934" fg:w="17206"/><text x="65.7991%" y="543.50">get_usage_tests-cf82c..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (17,206 samples, 13.60%)</title><rect x="65.5491%" y="517" width="13.5992%" height="15" fill="rgb(236,137,17)" fg:x="82934" fg:w="17206"/><text x="65.7991%" y="527.50">get_usage_tests-cf82c..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (17,206 samples, 13.60%)</title><rect x="65.5491%" y="501" width="13.5992%" height="15" fill="rgb(209,183,38)" fg:x="82934" fg:w="17206"/><text x="65.7991%" y="511.50">get_usage_tests-cf82c..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (17,205 samples, 13.60%)</title><rect x="65.5499%" y="485" width="13.5984%" height="15" fill="rgb(206,162,44)" fg:x="82935" fg:w="17205"/><text x="65.7999%" y="495.50">get_usage_tests-cf82c..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,205 samples, 13.60%)</title><rect x="65.5499%" y="469" width="13.5984%" height="15" fill="rgb(237,70,39)" fg:x="82935" fg:w="17205"/><text x="65.7999%" y="479.50">get_usage_tests-cf82c..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,205 samples, 13.60%)</title><rect x="65.5499%" y="453" width="13.5984%" height="15" fill="rgb(212,176,5)" fg:x="82935" fg:w="17205"/><text x="65.7999%" y="463.50">get_usage_tests-cf82c..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,205 samples, 13.60%)</title><rect x="65.5499%" y="437" width="13.5984%" height="15" fill="rgb(232,95,16)" fg:x="82935" fg:w="17205"/><text x="65.7999%" y="447.50">get_usage_tests-cf82c..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,205 samples, 13.60%)</title><rect x="65.5499%" y="421" width="13.5984%" height="15" fill="rgb(219,115,35)" fg:x="82935" fg:w="17205"/><text x="65.7999%" y="431.50">get_usage_tests-cf82c..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,205 samples, 13.60%)</title><rect x="65.5499%" y="405" width="13.5984%" height="15" fill="rgb(251,67,27)" fg:x="82935" fg:w="17205"/><text x="65.7999%" y="415.50">get_usage_tests-cf82c..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (17,197 samples, 13.59%)</title><rect x="65.5562%" y="389" width="13.5921%" height="15" fill="rgb(222,95,40)" fg:x="82943" fg:w="17197"/><text x="65.8062%" y="399.50">get_usage_tests-cf82c..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (24,264 samples, 19.18%)</title><rect x="59.9714%" y="597" width="19.1777%" height="15" fill="rgb(250,35,16)" fg:x="75877" fg:w="24264"/><text x="60.2214%" y="607.50">get_usage_tests-cf82cbf4ae04dd..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (24,264 samples, 19.18%)</title><rect x="59.9714%" y="581" width="19.1777%" height="15" fill="rgb(224,86,44)" fg:x="75877" fg:w="24264"/><text x="60.2214%" y="591.50">get_usage_tests-cf82cbf4ae04dd..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (24,264 samples, 19.18%)</title><rect x="59.9714%" y="565" width="19.1777%" height="15" fill="rgb(237,53,53)" fg:x="75877" fg:w="24264"/><text x="60.2214%" y="575.50">get_usage_tests-cf82cbf4ae04dd..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (92 samples, 0.07%)</title><rect x="79.1586%" y="437" width="0.0727%" height="15" fill="rgb(208,171,33)" fg:x="100153" fg:w="92"/><text x="79.4086%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (97 samples, 0.08%)</title><rect x="79.3830%" y="373" width="0.0767%" height="15" fill="rgb(222,64,27)" fg:x="100437" fg:w="97"/><text x="79.6330%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (19 samples, 0.02%)</title><rect x="79.6336%" y="325" width="0.0150%" height="15" fill="rgb(221,121,35)" fg:x="100754" fg:w="19"/><text x="79.8836%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (31 samples, 0.02%)</title><rect x="79.8249%" y="277" width="0.0245%" height="15" fill="rgb(228,137,42)" fg:x="100996" fg:w="31"/><text x="80.0749%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (150 samples, 0.12%)</title><rect x="79.8494%" y="277" width="0.1186%" height="15" fill="rgb(227,54,21)" fg:x="101027" fg:w="150"/><text x="80.0994%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,276 samples, 1.01%)</title><rect x="79.8177%" y="293" width="1.0085%" height="15" fill="rgb(240,168,33)" fg:x="100987" fg:w="1276"/><text x="80.0677%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,086 samples, 0.86%)</title><rect x="79.9679%" y="277" width="0.8583%" height="15" fill="rgb(243,159,6)" fg:x="101177" fg:w="1086"/><text x="80.2179%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (149 samples, 0.12%)</title><rect x="80.8263%" y="293" width="0.1178%" height="15" fill="rgb(205,211,41)" fg:x="102263" fg:w="149"/><text x="81.0763%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`DYLD-STUB$$memcpy (32 samples, 0.03%)</title><rect x="80.9527%" y="293" width="0.0253%" height="15" fill="rgb(253,30,1)" fg:x="102423" fg:w="32"/><text x="81.2027%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (332 samples, 0.26%)</title><rect x="81.0333%" y="181" width="0.2624%" height="15" fill="rgb(226,80,18)" fg:x="102525" fg:w="332"/><text x="81.2833%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (310 samples, 0.25%)</title><rect x="81.2957%" y="181" width="0.2450%" height="15" fill="rgb(253,156,46)" fg:x="102857" fg:w="310"/><text x="81.5457%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (775 samples, 0.61%)</title><rect x="81.0073%" y="229" width="0.6125%" height="15" fill="rgb(248,87,27)" fg:x="102492" fg:w="775"/><text x="81.2573%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (769 samples, 0.61%)</title><rect x="81.0120%" y="213" width="0.6078%" height="15" fill="rgb(227,122,2)" fg:x="102498" fg:w="769"/><text x="81.2620%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (751 samples, 0.59%)</title><rect x="81.0262%" y="197" width="0.5936%" height="15" fill="rgb(229,94,39)" fg:x="102516" fg:w="751"/><text x="81.2762%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (100 samples, 0.08%)</title><rect x="81.5408%" y="181" width="0.0790%" height="15" fill="rgb(225,173,31)" fg:x="103167" fg:w="100"/><text x="81.7908%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 samples, 0.13%)</title><rect x="81.6562%" y="197" width="0.1280%" height="15" fill="rgb(239,176,30)" fg:x="103313" fg:w="162"/><text x="81.9062%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (554 samples, 0.44%)</title><rect x="81.7842%" y="197" width="0.4379%" height="15" fill="rgb(212,104,21)" fg:x="103475" fg:w="554"/><text x="82.0342%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (1,672 samples, 1.32%)</title><rect x="80.9907%" y="261" width="1.3215%" height="15" fill="rgb(240,209,40)" fg:x="102471" fg:w="1672"/><text x="81.2407%" y="271.50"></text></g><g><title> N]&gt;::hash (1,672 samples, 1.32%)</title><rect x="80.9907%" y="245" width="1.3215%" height="15" fill="rgb(234,195,5)" fg:x="102471" fg:w="1672"/><text x="81.2407%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (867 samples, 0.69%)</title><rect x="81.6269%" y="229" width="0.6853%" height="15" fill="rgb(238,213,1)" fg:x="103276" fg:w="867"/><text x="81.8769%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (838 samples, 0.66%)</title><rect x="81.6498%" y="213" width="0.6623%" height="15" fill="rgb(235,182,54)" fg:x="103305" fg:w="838"/><text x="81.8998%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (114 samples, 0.09%)</title><rect x="82.2221%" y="197" width="0.0901%" height="15" fill="rgb(229,50,46)" fg:x="104029" fg:w="114"/><text x="82.4721%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1,692 samples, 1.34%)</title><rect x="80.9851%" y="277" width="1.3373%" height="15" fill="rgb(219,145,13)" fg:x="102464" fg:w="1692"/><text x="81.2351%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,708 samples, 1.35%)</title><rect x="80.9780%" y="293" width="1.3500%" height="15" fill="rgb(220,226,10)" fg:x="102455" fg:w="1708"/><text x="81.2280%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (3,560 samples, 2.81%)</title><rect x="79.8035%" y="309" width="2.8137%" height="15" fill="rgb(248,47,30)" fg:x="100969" fg:w="3560"/><text x="80.0535%" y="319.50">ge..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (366 samples, 0.29%)</title><rect x="82.3280%" y="293" width="0.2893%" height="15" fill="rgb(231,209,44)" fg:x="104163" fg:w="366"/><text x="82.5780%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (101 samples, 0.08%)</title><rect x="82.6173%" y="309" width="0.0798%" height="15" fill="rgb(209,80,30)" fg:x="104529" fg:w="101"/><text x="82.8673%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::vld1_u8 (17 samples, 0.01%)</title><rect x="82.7666%" y="293" width="0.0134%" height="15" fill="rgb(232,9,14)" fg:x="104718" fg:w="17"/><text x="83.0166%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (87 samples, 0.07%)</title><rect x="82.7809%" y="293" width="0.0688%" height="15" fill="rgb(243,91,43)" fg:x="104736" fg:w="87"/><text x="83.0309%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (105 samples, 0.08%)</title><rect x="82.9421%" y="277" width="0.0830%" height="15" fill="rgb(231,90,52)" fg:x="104940" fg:w="105"/><text x="83.1921%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::vld1_u8 (19 samples, 0.02%)</title><rect x="83.0251%" y="277" width="0.0150%" height="15" fill="rgb(253,192,44)" fg:x="105045" fg:w="19"/><text x="83.2751%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (218 samples, 0.17%)</title><rect x="83.0401%" y="277" width="0.1723%" height="15" fill="rgb(241,66,31)" fg:x="105064" fg:w="218"/><text x="83.2901%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (110 samples, 0.09%)</title><rect x="83.2124%" y="277" width="0.0869%" height="15" fill="rgb(235,81,37)" fg:x="105282" fg:w="110"/><text x="83.4624%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (164 samples, 0.13%)</title><rect x="83.2993%" y="277" width="0.1296%" height="15" fill="rgb(223,221,9)" fg:x="105392" fg:w="164"/><text x="83.5493%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (79 samples, 0.06%)</title><rect x="83.4290%" y="277" width="0.0624%" height="15" fill="rgb(242,180,7)" fg:x="105556" fg:w="79"/><text x="83.6790%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (40 samples, 0.03%)</title><rect x="83.4914%" y="277" width="0.0316%" height="15" fill="rgb(243,78,19)" fg:x="105635" fg:w="40"/><text x="83.7414%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (49 samples, 0.04%)</title><rect x="83.5957%" y="261" width="0.0387%" height="15" fill="rgb(233,23,17)" fg:x="105767" fg:w="49"/><text x="83.8457%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (58 samples, 0.05%)</title><rect x="83.6345%" y="261" width="0.0458%" height="15" fill="rgb(252,122,45)" fg:x="105816" fg:w="58"/><text x="83.8845%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (38 samples, 0.03%)</title><rect x="83.6803%" y="261" width="0.0300%" height="15" fill="rgb(247,108,20)" fg:x="105874" fg:w="38"/><text x="83.9303%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (60 samples, 0.05%)</title><rect x="83.7103%" y="261" width="0.0474%" height="15" fill="rgb(235,84,21)" fg:x="105912" fg:w="60"/><text x="83.9603%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (343 samples, 0.27%)</title><rect x="83.5286%" y="277" width="0.2711%" height="15" fill="rgb(247,129,10)" fg:x="105682" fg:w="343"/><text x="83.7786%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (53 samples, 0.04%)</title><rect x="83.7578%" y="261" width="0.0419%" height="15" fill="rgb(208,173,14)" fg:x="105972" fg:w="53"/><text x="84.0078%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (72 samples, 0.06%)</title><rect x="83.7997%" y="277" width="0.0569%" height="15" fill="rgb(236,31,38)" fg:x="106025" fg:w="72"/><text x="84.0497%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (142 samples, 0.11%)</title><rect x="83.8566%" y="277" width="0.1122%" height="15" fill="rgb(232,65,17)" fg:x="106097" fg:w="142"/><text x="84.1066%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (129 samples, 0.10%)</title><rect x="83.9688%" y="277" width="0.1020%" height="15" fill="rgb(224,45,49)" fg:x="106239" fg:w="129"/><text x="84.2188%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1,547 samples, 1.22%)</title><rect x="82.8496%" y="293" width="1.2227%" height="15" fill="rgb(225,2,53)" fg:x="104823" fg:w="1547"/><text x="83.0996%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (17 samples, 0.01%)</title><rect x="84.0723%" y="293" width="0.0134%" height="15" fill="rgb(248,210,53)" fg:x="106370" fg:w="17"/><text x="84.3223%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,767 samples, 1.40%)</title><rect x="82.6971%" y="309" width="1.3966%" height="15" fill="rgb(211,1,30)" fg:x="104630" fg:w="1767"/><text x="82.9471%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (221 samples, 0.17%)</title><rect x="84.0937%" y="309" width="0.1747%" height="15" fill="rgb(224,96,15)" fg:x="106397" fg:w="221"/><text x="84.3437%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5,871 samples, 4.64%)</title><rect x="79.6486%" y="325" width="4.6403%" height="15" fill="rgb(252,45,11)" fg:x="100773" fg:w="5871"/><text x="79.8986%" y="335.50">get_u..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (22 samples, 0.02%)</title><rect x="84.2715%" y="309" width="0.0174%" height="15" fill="rgb(220,125,38)" fg:x="106622" fg:w="22"/><text x="84.5215%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (14 samples, 0.01%)</title><rect x="84.2889%" y="325" width="0.0111%" height="15" fill="rgb(243,161,33)" fg:x="106644" fg:w="14"/><text x="84.5389%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (5,996 samples, 4.74%)</title><rect x="79.5838%" y="341" width="4.7391%" height="15" fill="rgb(248,197,34)" fg:x="100691" fg:w="5996"/><text x="79.8338%" y="351.50">get_us..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (29 samples, 0.02%)</title><rect x="84.3000%" y="325" width="0.0229%" height="15" fill="rgb(228,165,23)" fg:x="106658" fg:w="29"/><text x="84.5500%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (6,172 samples, 4.88%)</title><rect x="79.4597%" y="373" width="4.8782%" height="15" fill="rgb(236,94,38)" fg:x="100534" fg:w="6172"/><text x="79.7097%" y="383.50">get_us..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (6,083 samples, 4.81%)</title><rect x="79.5300%" y="357" width="4.8079%" height="15" fill="rgb(220,13,23)" fg:x="100623" fg:w="6083"/><text x="79.7800%" y="367.50">get_us..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (19 samples, 0.02%)</title><rect x="84.3229%" y="341" width="0.0150%" height="15" fill="rgb(234,26,39)" fg:x="106687" fg:w="19"/><text x="84.5729%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (6,297 samples, 4.98%)</title><rect x="79.3633%" y="389" width="4.9770%" height="15" fill="rgb(205,117,44)" fg:x="100412" fg:w="6297"/><text x="79.6133%" y="399.50">get_us..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (6,363 samples, 5.03%)</title><rect x="79.3419%" y="405" width="5.0292%" height="15" fill="rgb(250,42,2)" fg:x="100385" fg:w="6363"/><text x="79.5919%" y="415.50">get_us..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids::_{{closure}} (39 samples, 0.03%)</title><rect x="84.3403%" y="389" width="0.0308%" height="15" fill="rgb(223,83,14)" fg:x="106709" fg:w="39"/><text x="84.5903%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (6,494 samples, 5.13%)</title><rect x="79.2589%" y="421" width="5.1327%" height="15" fill="rgb(241,147,50)" fg:x="100280" fg:w="6494"/><text x="79.5089%" y="431.50">get_us..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (26 samples, 0.02%)</title><rect x="84.3711%" y="405" width="0.0205%" height="15" fill="rgb(218,90,6)" fg:x="106748" fg:w="26"/><text x="84.6211%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (105 samples, 0.08%)</title><rect x="84.3956%" y="421" width="0.0830%" height="15" fill="rgb(210,191,5)" fg:x="106779" fg:w="105"/><text x="84.6456%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (51 samples, 0.04%)</title><rect x="84.4928%" y="421" width="0.0403%" height="15" fill="rgb(225,139,19)" fg:x="106902" fg:w="51"/><text x="84.7428%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (263 samples, 0.21%)</title><rect x="84.5481%" y="421" width="0.2079%" height="15" fill="rgb(210,1,33)" fg:x="106972" fg:w="263"/><text x="84.7981%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (7,105 samples, 5.62%)</title><rect x="79.1515%" y="533" width="5.6156%" height="15" fill="rgb(213,50,3)" fg:x="100144" fg:w="7105"/><text x="79.4015%" y="543.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,105 samples, 5.62%)</title><rect x="79.1515%" y="517" width="5.6156%" height="15" fill="rgb(234,227,4)" fg:x="100144" fg:w="7105"/><text x="79.4015%" y="527.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,105 samples, 5.62%)</title><rect x="79.1515%" y="501" width="5.6156%" height="15" fill="rgb(246,63,5)" fg:x="100144" fg:w="7105"/><text x="79.4015%" y="511.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,105 samples, 5.62%)</title><rect x="79.1515%" y="485" width="5.6156%" height="15" fill="rgb(245,136,27)" fg:x="100144" fg:w="7105"/><text x="79.4015%" y="495.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,105 samples, 5.62%)</title><rect x="79.1515%" y="469" width="5.6156%" height="15" fill="rgb(247,199,27)" fg:x="100144" fg:w="7105"/><text x="79.4015%" y="479.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,105 samples, 5.62%)</title><rect x="79.1515%" y="453" width="5.6156%" height="15" fill="rgb(252,158,49)" fg:x="100144" fg:w="7105"/><text x="79.4015%" y="463.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (7,004 samples, 5.54%)</title><rect x="79.2313%" y="437" width="5.5358%" height="15" fill="rgb(254,73,1)" fg:x="100245" fg:w="7004"/><text x="79.4813%" y="447.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (14 samples, 0.01%)</title><rect x="84.7560%" y="421" width="0.0111%" height="15" fill="rgb(248,93,19)" fg:x="107235" fg:w="14"/><text x="85.0060%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (7,114 samples, 5.62%)</title><rect x="79.1499%" y="565" width="5.6227%" height="15" fill="rgb(206,67,5)" fg:x="100142" fg:w="7114"/><text x="79.3999%" y="575.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (7,113 samples, 5.62%)</title><rect x="79.1507%" y="549" width="5.6219%" height="15" fill="rgb(209,210,4)" fg:x="100143" fg:w="7113"/><text x="79.4007%" y="559.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (7,115 samples, 5.62%)</title><rect x="79.1499%" y="597" width="5.6235%" height="15" fill="rgb(214,185,36)" fg:x="100142" fg:w="7115"/><text x="79.3999%" y="607.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7,115 samples, 5.62%)</title><rect x="79.1499%" y="581" width="5.6235%" height="15" fill="rgb(233,191,26)" fg:x="100142" fg:w="7115"/><text x="79.3999%" y="591.50">get_usa..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::linked_by (38,465 samples, 30.40%)</title><rect x="54.3747%" y="629" width="30.4018%" height="15" fill="rgb(248,94,17)" fg:x="68796" fg:w="38465"/><text x="54.6247%" y="639.50">get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::la..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids (31,384 samples, 24.81%)</title><rect x="59.9714%" y="613" width="24.8052%" height="15" fill="rgb(250,64,4)" fg:x="75877" fg:w="31384"/><text x="60.2214%" y="623.50">get_usage_tests-cf82cbf4ae04dd7d`lb_rs::..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (16 samples, 0.01%)</title><rect x="84.7766%" y="613" width="0.0126%" height="15" fill="rgb(218,41,53)" fg:x="107261" fg:w="16"/><text x="85.0266%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (54 samples, 0.04%)</title><rect x="84.9275%" y="597" width="0.0427%" height="15" fill="rgb(251,176,28)" fg:x="107452" fg:w="54"/><text x="85.1775%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (35 samples, 0.03%)</title><rect x="85.0579%" y="533" width="0.0277%" height="15" fill="rgb(247,22,9)" fg:x="107617" fg:w="35"/><text x="85.3079%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.05%)</title><rect x="85.1006%" y="517" width="0.0514%" height="15" fill="rgb(218,201,14)" fg:x="107671" fg:w="65"/><text x="85.3506%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (22 samples, 0.02%)</title><rect x="85.1583%" y="517" width="0.0174%" height="15" fill="rgb(218,94,10)" fg:x="107744" fg:w="22"/><text x="85.4083%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (105 samples, 0.08%)</title><rect x="85.1868%" y="517" width="0.0830%" height="15" fill="rgb(222,183,52)" fg:x="107780" fg:w="105"/><text x="85.4368%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (339 samples, 0.27%)</title><rect x="85.0129%" y="565" width="0.2679%" height="15" fill="rgb(242,140,25)" fg:x="107560" fg:w="339"/><text x="85.2629%" y="575.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (294 samples, 0.23%)</title><rect x="85.0485%" y="549" width="0.2324%" height="15" fill="rgb(235,197,38)" fg:x="107605" fg:w="294"/><text x="85.2985%" y="559.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (247 samples, 0.20%)</title><rect x="85.0856%" y="533" width="0.1952%" height="15" fill="rgb(237,136,15)" fg:x="107652" fg:w="247"/><text x="85.3356%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (14 samples, 0.01%)</title><rect x="85.2698%" y="517" width="0.0111%" height="15" fill="rgb(223,44,49)" fg:x="107885" fg:w="14"/><text x="85.5198%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (388 samples, 0.31%)</title><rect x="84.9749%" y="597" width="0.3067%" height="15" fill="rgb(227,71,15)" fg:x="107512" fg:w="388"/><text x="85.2249%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (385 samples, 0.30%)</title><rect x="84.9773%" y="581" width="0.3043%" height="15" fill="rgb(225,153,20)" fg:x="107515" fg:w="385"/><text x="85.2273%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::file_like::_&lt;impl core::convert::AsRef&lt;lb_rs::model::file_metadata::FileMetadata&gt; for lb_rs::logic::crypto::ECSigned&lt;lb_rs::model::file_metadata::FileMetadata&gt;&gt;::as_ref (13 samples, 0.01%)</title><rect x="85.2816%" y="597" width="0.0103%" height="15" fill="rgb(210,190,26)" fg:x="107900" fg:w="13"/><text x="85.5316%" y="607.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 0.01%)</title><rect x="85.3820%" y="453" width="0.0142%" height="15" fill="rgb(223,147,5)" fg:x="108027" fg:w="18"/><text x="85.6320%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (81 samples, 0.06%)</title><rect x="85.3962%" y="453" width="0.0640%" height="15" fill="rgb(207,14,23)" fg:x="108045" fg:w="81"/><text x="85.6462%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (614 samples, 0.49%)</title><rect x="85.3772%" y="469" width="0.4853%" height="15" fill="rgb(211,195,53)" fg:x="108021" fg:w="614"/><text x="85.6272%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (509 samples, 0.40%)</title><rect x="85.4602%" y="453" width="0.4023%" height="15" fill="rgb(237,75,46)" fg:x="108126" fg:w="509"/><text x="85.7102%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (60 samples, 0.05%)</title><rect x="85.8625%" y="469" width="0.0474%" height="15" fill="rgb(254,55,14)" fg:x="108635" fg:w="60"/><text x="86.1125%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`DYLD-STUB$$memcpy (16 samples, 0.01%)</title><rect x="85.9108%" y="469" width="0.0126%" height="15" fill="rgb(230,185,30)" fg:x="108696" fg:w="16"/><text x="86.1608%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 samples, 0.04%)</title><rect x="85.9534%" y="357" width="0.0427%" height="15" fill="rgb(220,14,11)" fg:x="108750" fg:w="54"/><text x="86.2034%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (147 samples, 0.12%)</title><rect x="85.9961%" y="357" width="0.1162%" height="15" fill="rgb(215,169,44)" fg:x="108804" fg:w="147"/><text x="86.2461%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (265 samples, 0.21%)</title><rect x="85.9432%" y="405" width="0.2094%" height="15" fill="rgb(253,203,20)" fg:x="108737" fg:w="265"/><text x="86.1932%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (261 samples, 0.21%)</title><rect x="85.9463%" y="389" width="0.2063%" height="15" fill="rgb(229,225,17)" fg:x="108741" fg:w="261"/><text x="86.1963%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (255 samples, 0.20%)</title><rect x="85.9511%" y="373" width="0.2015%" height="15" fill="rgb(236,76,26)" fg:x="108747" fg:w="255"/><text x="86.2011%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (51 samples, 0.04%)</title><rect x="86.1123%" y="357" width="0.0403%" height="15" fill="rgb(234,15,30)" fg:x="108951" fg:w="51"/><text x="86.3623%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 samples, 0.06%)</title><rect x="86.1700%" y="373" width="0.0616%" height="15" fill="rgb(211,113,48)" fg:x="109024" fg:w="78"/><text x="86.4200%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (303 samples, 0.24%)</title><rect x="86.2316%" y="373" width="0.2395%" height="15" fill="rgb(221,31,36)" fg:x="109102" fg:w="303"/><text x="86.4816%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (738 samples, 0.58%)</title><rect x="85.9273%" y="437" width="0.5833%" height="15" fill="rgb(215,118,52)" fg:x="108717" fg:w="738"/><text x="86.1773%" y="447.50"></text></g><g><title> N]&gt;::hash (738 samples, 0.58%)</title><rect x="85.9273%" y="421" width="0.5833%" height="15" fill="rgb(241,151,27)" fg:x="108717" fg:w="738"/><text x="86.1773%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (450 samples, 0.36%)</title><rect x="86.1550%" y="405" width="0.3557%" height="15" fill="rgb(253,51,3)" fg:x="109005" fg:w="450"/><text x="86.4050%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (433 samples, 0.34%)</title><rect x="86.1684%" y="389" width="0.3422%" height="15" fill="rgb(216,201,24)" fg:x="109022" fg:w="433"/><text x="86.4184%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (50 samples, 0.04%)</title><rect x="86.4711%" y="373" width="0.0395%" height="15" fill="rgb(231,107,4)" fg:x="109405" fg:w="50"/><text x="86.7211%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (741 samples, 0.59%)</title><rect x="85.9266%" y="453" width="0.5857%" height="15" fill="rgb(243,97,54)" fg:x="108716" fg:w="741"/><text x="86.1766%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (752 samples, 0.59%)</title><rect x="85.9234%" y="469" width="0.5944%" height="15" fill="rgb(221,32,51)" fg:x="108712" fg:w="752"/><text x="86.1734%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (1,776 samples, 1.40%)</title><rect x="85.3749%" y="485" width="1.4037%" height="15" fill="rgb(218,171,35)" fg:x="108018" fg:w="1776"/><text x="85.6249%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (330 samples, 0.26%)</title><rect x="86.5178%" y="469" width="0.2608%" height="15" fill="rgb(214,20,53)" fg:x="109464" fg:w="330"/><text x="86.7678%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.01%)</title><rect x="86.7786%" y="485" width="0.0119%" height="15" fill="rgb(239,9,52)" fg:x="109794" fg:w="15"/><text x="87.0286%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (120 samples, 0.09%)</title><rect x="86.8363%" y="469" width="0.0948%" height="15" fill="rgb(215,114,45)" fg:x="109867" fg:w="120"/><text x="87.0863%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.05%)</title><rect x="87.0481%" y="453" width="0.0482%" height="15" fill="rgb(208,118,9)" fg:x="110135" fg:w="61"/><text x="87.2981%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (65 samples, 0.05%)</title><rect x="87.1018%" y="453" width="0.0514%" height="15" fill="rgb(235,7,39)" fg:x="110203" fg:w="65"/><text x="87.3518%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (35 samples, 0.03%)</title><rect x="87.1627%" y="453" width="0.0277%" height="15" fill="rgb(243,225,15)" fg:x="110280" fg:w="35"/><text x="87.4127%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (33 samples, 0.03%)</title><rect x="87.1904%" y="453" width="0.0261%" height="15" fill="rgb(225,216,18)" fg:x="110315" fg:w="33"/><text x="87.4404%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (27 samples, 0.02%)</title><rect x="87.2165%" y="453" width="0.0213%" height="15" fill="rgb(233,36,38)" fg:x="110348" fg:w="27"/><text x="87.4665%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::equivalent_key::_{{closure}} (14 samples, 0.01%)</title><rect x="87.2378%" y="453" width="0.0111%" height="15" fill="rgb(239,88,23)" fg:x="110375" fg:w="14"/><text x="87.4878%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (44 samples, 0.03%)</title><rect x="87.2489%" y="453" width="0.0348%" height="15" fill="rgb(219,181,35)" fg:x="110389" fg:w="44"/><text x="87.4989%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (74 samples, 0.06%)</title><rect x="87.3587%" y="389" width="0.0585%" height="15" fill="rgb(215,18,46)" fg:x="110528" fg:w="74"/><text x="87.6087%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (90 samples, 0.07%)</title><rect x="87.3508%" y="405" width="0.0711%" height="15" fill="rgb(241,38,11)" fg:x="110518" fg:w="90"/><text x="87.6008%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (112 samples, 0.09%)</title><rect x="87.3398%" y="421" width="0.0885%" height="15" fill="rgb(248,169,45)" fg:x="110504" fg:w="112"/><text x="87.5898%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (34 samples, 0.03%)</title><rect x="87.4283%" y="421" width="0.0269%" height="15" fill="rgb(239,50,49)" fg:x="110616" fg:w="34"/><text x="87.6783%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (218 samples, 0.17%)</title><rect x="87.2836%" y="453" width="0.1723%" height="15" fill="rgb(231,96,31)" fg:x="110433" fg:w="218"/><text x="87.5336%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::equivalent_key::_{{closure}} (148 samples, 0.12%)</title><rect x="87.3390%" y="437" width="0.1170%" height="15" fill="rgb(224,193,37)" fg:x="110503" fg:w="148"/><text x="87.5890%" y="447.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (60 samples, 0.05%)</title><rect x="87.4559%" y="453" width="0.0474%" height="15" fill="rgb(227,153,50)" fg:x="110651" fg:w="60"/><text x="87.7059%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find (757 samples, 0.60%)</title><rect x="86.9311%" y="469" width="0.5983%" height="15" fill="rgb(249,228,3)" fg:x="109987" fg:w="757"/><text x="87.1811%" y="479.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (33 samples, 0.03%)</title><rect x="87.5034%" y="453" width="0.0261%" height="15" fill="rgb(219,164,43)" fg:x="110711" fg:w="33"/><text x="87.7534%" y="463.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::HashMap&lt;uuid::Uuid,F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (2,811 samples, 2.22%)</title><rect x="85.3093%" y="533" width="2.2217%" height="15" fill="rgb(216,45,41)" fg:x="107935" fg:w="2811"/><text x="85.5593%" y="543.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,800 samples, 2.21%)</title><rect x="85.3180%" y="517" width="2.2131%" height="15" fill="rgb(210,226,51)" fg:x="107946" fg:w="2800"/><text x="85.5680%" y="527.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,784 samples, 2.20%)</title><rect x="85.3306%" y="501" width="2.2004%" height="15" fill="rgb(209,117,49)" fg:x="107962" fg:w="2784"/><text x="85.5806%" y="511.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::get (937 samples, 0.74%)</title><rect x="86.7904%" y="485" width="0.7406%" height="15" fill="rgb(206,196,24)" fg:x="109809" fg:w="937"/><text x="87.0404%" y="495.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::or_else (42 samples, 0.03%)</title><rect x="87.5310%" y="533" width="0.0332%" height="15" fill="rgb(253,218,3)" fg:x="110746" fg:w="42"/><text x="87.7810%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (2,898 samples, 2.29%)</title><rect x="85.3030%" y="549" width="2.2905%" height="15" fill="rgb(252,166,2)" fg:x="107927" fg:w="2898"/><text x="85.5530%" y="559.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (37 samples, 0.03%)</title><rect x="87.5642%" y="533" width="0.0292%" height="15" fill="rgb(236,218,26)" fg:x="110788" fg:w="37"/><text x="87.8142%" y="543.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (24 samples, 0.02%)</title><rect x="87.5745%" y="517" width="0.0190%" height="15" fill="rgb(254,84,19)" fg:x="110801" fg:w="24"/><text x="87.8245%" y="527.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (2,918 samples, 2.31%)</title><rect x="85.2974%" y="565" width="2.3063%" height="15" fill="rgb(219,137,29)" fg:x="107920" fg:w="2918"/><text x="85.5474%" y="575.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (2,932 samples, 2.32%)</title><rect x="85.2935%" y="581" width="2.3174%" height="15" fill="rgb(227,47,52)" fg:x="107915" fg:w="2932"/><text x="85.5435%" y="591.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::find (2,961 samples, 2.34%)</title><rect x="85.2919%" y="597" width="2.3403%" height="15" fill="rgb(229,167,24)" fg:x="107913" fg:w="2961"/><text x="85.5419%" y="607.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::option::Option&lt;T&gt;::ok_or_else (18 samples, 0.01%)</title><rect x="87.6180%" y="581" width="0.0142%" height="15" fill="rgb(233,164,1)" fg:x="110856" fg:w="18"/><text x="87.8680%" y="591.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (48 samples, 0.04%)</title><rect x="87.6354%" y="389" width="0.0379%" height="15" fill="rgb(218,88,48)" fg:x="110878" fg:w="48"/><text x="87.8854%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (20 samples, 0.02%)</title><rect x="87.7397%" y="341" width="0.0158%" height="15" fill="rgb(226,214,24)" fg:x="111010" fg:w="20"/><text x="87.9897%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (27 samples, 0.02%)</title><rect x="87.7998%" y="293" width="0.0213%" height="15" fill="rgb(233,29,12)" fg:x="111086" fg:w="27"/><text x="88.0498%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (19 samples, 0.02%)</title><rect x="87.8938%" y="277" width="0.0150%" height="15" fill="rgb(219,120,34)" fg:x="111205" fg:w="19"/><text x="88.1438%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (24 samples, 0.02%)</title><rect x="87.9112%" y="245" width="0.0190%" height="15" fill="rgb(226,78,44)" fg:x="111227" fg:w="24"/><text x="88.1612%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (66 samples, 0.05%)</title><rect x="87.9302%" y="245" width="0.0522%" height="15" fill="rgb(240,15,48)" fg:x="111251" fg:w="66"/><text x="88.1802%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (588 samples, 0.46%)</title><rect x="87.9088%" y="261" width="0.4647%" height="15" fill="rgb(253,176,7)" fg:x="111224" fg:w="588"/><text x="88.1588%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (495 samples, 0.39%)</title><rect x="87.9823%" y="245" width="0.3912%" height="15" fill="rgb(206,166,28)" fg:x="111317" fg:w="495"/><text x="88.2323%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (116 samples, 0.09%)</title><rect x="88.3736%" y="261" width="0.0917%" height="15" fill="rgb(241,53,51)" fg:x="111812" fg:w="116"/><text x="88.6236%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (79 samples, 0.06%)</title><rect x="88.5190%" y="133" width="0.0624%" height="15" fill="rgb(249,112,30)" fg:x="111996" fg:w="79"/><text x="88.7690%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (145 samples, 0.11%)</title><rect x="88.5814%" y="133" width="0.1146%" height="15" fill="rgb(217,85,30)" fg:x="112075" fg:w="145"/><text x="88.8314%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (301 samples, 0.24%)</title><rect x="88.5008%" y="181" width="0.2379%" height="15" fill="rgb(233,49,7)" fg:x="111973" fg:w="301"/><text x="88.7508%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (297 samples, 0.23%)</title><rect x="88.5040%" y="165" width="0.2347%" height="15" fill="rgb(234,109,9)" fg:x="111977" fg:w="297"/><text x="88.7540%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (288 samples, 0.23%)</title><rect x="88.5111%" y="149" width="0.2276%" height="15" fill="rgb(253,95,22)" fg:x="111986" fg:w="288"/><text x="88.7611%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (54 samples, 0.04%)</title><rect x="88.6960%" y="133" width="0.0427%" height="15" fill="rgb(233,176,25)" fg:x="112220" fg:w="54"/><text x="88.9460%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (68 samples, 0.05%)</title><rect x="88.7608%" y="149" width="0.0537%" height="15" fill="rgb(236,33,39)" fg:x="112302" fg:w="68"/><text x="89.0108%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (332 samples, 0.26%)</title><rect x="88.8146%" y="149" width="0.2624%" height="15" fill="rgb(223,226,42)" fg:x="112370" fg:w="332"/><text x="89.0646%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (798 samples, 0.63%)</title><rect x="88.4921%" y="213" width="0.6307%" height="15" fill="rgb(216,99,33)" fg:x="111962" fg:w="798"/><text x="88.7421%" y="223.50"></text></g><g><title> N]&gt;::hash (798 samples, 0.63%)</title><rect x="88.4921%" y="197" width="0.6307%" height="15" fill="rgb(235,84,23)" fg:x="111962" fg:w="798"/><text x="88.7421%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (484 samples, 0.38%)</title><rect x="88.7403%" y="181" width="0.3825%" height="15" fill="rgb(232,2,27)" fg:x="112276" fg:w="484"/><text x="88.9903%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (465 samples, 0.37%)</title><rect x="88.7553%" y="165" width="0.3675%" height="15" fill="rgb(241,23,22)" fg:x="112295" fg:w="465"/><text x="89.0053%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (58 samples, 0.05%)</title><rect x="89.0770%" y="149" width="0.0458%" height="15" fill="rgb(211,73,27)" fg:x="112702" fg:w="58"/><text x="89.3270%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (808 samples, 0.64%)</title><rect x="88.4897%" y="229" width="0.6386%" height="15" fill="rgb(235,109,49)" fg:x="111959" fg:w="808"/><text x="88.7397%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (829 samples, 0.66%)</title><rect x="88.4747%" y="261" width="0.6552%" height="15" fill="rgb(230,99,29)" fg:x="111940" fg:w="829"/><text x="88.7247%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (815 samples, 0.64%)</title><rect x="88.4858%" y="245" width="0.6442%" height="15" fill="rgb(245,199,7)" fg:x="111954" fg:w="815"/><text x="88.7358%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (1,799 samples, 1.42%)</title><rect x="87.9088%" y="277" width="1.4219%" height="15" fill="rgb(217,179,10)" fg:x="111224" fg:w="1799"/><text x="88.1588%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (254 samples, 0.20%)</title><rect x="89.1300%" y="261" width="0.2008%" height="15" fill="rgb(254,99,47)" fg:x="112769" fg:w="254"/><text x="89.3800%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (44 samples, 0.03%)</title><rect x="89.3307%" y="277" width="0.0348%" height="15" fill="rgb(251,121,7)" fg:x="113023" fg:w="44"/><text x="89.5807%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (34 samples, 0.03%)</title><rect x="89.4129%" y="261" width="0.0269%" height="15" fill="rgb(250,177,26)" fg:x="113127" fg:w="34"/><text x="89.6629%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.05%)</title><rect x="89.4833%" y="245" width="0.0498%" height="15" fill="rgb(232,88,15)" fg:x="113216" fg:w="63"/><text x="89.7333%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (113 samples, 0.09%)</title><rect x="89.5425%" y="245" width="0.0893%" height="15" fill="rgb(251,54,54)" fg:x="113291" fg:w="113"/><text x="89.7925%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (50 samples, 0.04%)</title><rect x="89.6318%" y="245" width="0.0395%" height="15" fill="rgb(208,177,15)" fg:x="113404" fg:w="50"/><text x="89.8818%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (86 samples, 0.07%)</title><rect x="89.6714%" y="245" width="0.0680%" height="15" fill="rgb(205,97,32)" fg:x="113454" fg:w="86"/><text x="89.9214%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (33 samples, 0.03%)</title><rect x="89.7393%" y="245" width="0.0261%" height="15" fill="rgb(217,192,13)" fg:x="113540" fg:w="33"/><text x="89.9893%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (20 samples, 0.02%)</title><rect x="89.7654%" y="245" width="0.0158%" height="15" fill="rgb(215,163,41)" fg:x="113573" fg:w="20"/><text x="90.0154%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (22 samples, 0.02%)</title><rect x="89.8302%" y="229" width="0.0174%" height="15" fill="rgb(246,83,29)" fg:x="113655" fg:w="22"/><text x="90.0802%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (32 samples, 0.03%)</title><rect x="89.8476%" y="229" width="0.0253%" height="15" fill="rgb(219,2,45)" fg:x="113677" fg:w="32"/><text x="90.0976%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (25 samples, 0.02%)</title><rect x="89.8729%" y="229" width="0.0198%" height="15" fill="rgb(242,215,33)" fg:x="113709" fg:w="25"/><text x="90.1229%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (28 samples, 0.02%)</title><rect x="89.8927%" y="229" width="0.0221%" height="15" fill="rgb(217,1,6)" fg:x="113734" fg:w="28"/><text x="90.1427%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (191 samples, 0.15%)</title><rect x="89.7828%" y="245" width="0.1510%" height="15" fill="rgb(207,85,52)" fg:x="113595" fg:w="191"/><text x="90.0328%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (24 samples, 0.02%)</title><rect x="89.9148%" y="229" width="0.0190%" height="15" fill="rgb(231,171,19)" fg:x="113762" fg:w="24"/><text x="90.1648%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (35 samples, 0.03%)</title><rect x="89.9338%" y="245" width="0.0277%" height="15" fill="rgb(207,128,4)" fg:x="113786" fg:w="35"/><text x="90.1838%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (68 samples, 0.05%)</title><rect x="89.9614%" y="245" width="0.0537%" height="15" fill="rgb(219,208,4)" fg:x="113821" fg:w="68"/><text x="90.2114%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (75 samples, 0.06%)</title><rect x="90.0152%" y="245" width="0.0593%" height="15" fill="rgb(235,161,42)" fg:x="113889" fg:w="75"/><text x="90.2652%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (804 samples, 0.64%)</title><rect x="89.4406%" y="261" width="0.6355%" height="15" fill="rgb(247,218,18)" fg:x="113162" fg:w="804"/><text x="89.6906%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (906 samples, 0.72%)</title><rect x="89.3655%" y="277" width="0.7161%" height="15" fill="rgb(232,114,51)" fg:x="113067" fg:w="906"/><text x="89.6155%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (85 samples, 0.07%)</title><rect x="90.0816%" y="277" width="0.0672%" height="15" fill="rgb(222,95,3)" fg:x="113973" fg:w="85"/><text x="90.3316%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,966 samples, 2.34%)</title><rect x="87.8211%" y="293" width="2.3443%" height="15" fill="rgb(240,65,29)" fg:x="111113" fg:w="2966"/><text x="88.0711%" y="303.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (15 samples, 0.01%)</title><rect x="90.1535%" y="277" width="0.0119%" height="15" fill="rgb(249,209,20)" fg:x="114064" fg:w="15"/><text x="90.4035%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (3,025 samples, 2.39%)</title><rect x="87.7879%" y="309" width="2.3909%" height="15" fill="rgb(241,48,37)" fg:x="111071" fg:w="3025"/><text x="88.0379%" y="319.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (17 samples, 0.01%)</title><rect x="90.1653%" y="293" width="0.0134%" height="15" fill="rgb(230,140,42)" fg:x="114079" fg:w="17"/><text x="90.4153%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (3,083 samples, 2.44%)</title><rect x="87.7555%" y="341" width="2.4367%" height="15" fill="rgb(230,176,45)" fg:x="111030" fg:w="3083"/><text x="88.0055%" y="351.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3,052 samples, 2.41%)</title><rect x="87.7800%" y="325" width="2.4122%" height="15" fill="rgb(245,112,21)" fg:x="111061" fg:w="3052"/><text x="88.0300%" y="335.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.01%)</title><rect x="90.1788%" y="309" width="0.0134%" height="15" fill="rgb(207,183,35)" fg:x="114096" fg:w="17"/><text x="90.4288%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (3,119 samples, 2.47%)</title><rect x="87.7278%" y="357" width="2.4652%" height="15" fill="rgb(227,44,33)" fg:x="110995" fg:w="3119"/><text x="87.9778%" y="367.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (3,183 samples, 2.52%)</title><rect x="87.6851%" y="373" width="2.5158%" height="15" fill="rgb(246,120,21)" fg:x="110941" fg:w="3183"/><text x="87.9351%" y="383.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.04%)</title><rect x="90.2009%" y="373" width="0.0435%" height="15" fill="rgb(235,57,52)" fg:x="114124" fg:w="55"/><text x="90.4509%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (22 samples, 0.02%)</title><rect x="90.2547%" y="373" width="0.0174%" height="15" fill="rgb(238,84,10)" fg:x="114192" fg:w="22"/><text x="90.5047%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (84 samples, 0.07%)</title><rect x="90.2823%" y="373" width="0.0664%" height="15" fill="rgb(251,200,32)" fg:x="114227" fg:w="84"/><text x="90.5323%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (3,448 samples, 2.73%)</title><rect x="87.6322%" y="453" width="2.7252%" height="15" fill="rgb(247,159,13)" fg:x="110874" fg:w="3448"/><text x="87.8822%" y="463.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,448 samples, 2.73%)</title><rect x="87.6322%" y="437" width="2.7252%" height="15" fill="rgb(238,64,4)" fg:x="110874" fg:w="3448"/><text x="87.8822%" y="447.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,448 samples, 2.73%)</title><rect x="87.6322%" y="421" width="2.7252%" height="15" fill="rgb(221,131,51)" fg:x="110874" fg:w="3448"/><text x="87.8822%" y="431.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,448 samples, 2.73%)</title><rect x="87.6322%" y="405" width="2.7252%" height="15" fill="rgb(242,5,29)" fg:x="110874" fg:w="3448"/><text x="87.8822%" y="415.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (3,396 samples, 2.68%)</title><rect x="87.6733%" y="389" width="2.6841%" height="15" fill="rgb(214,130,32)" fg:x="110926" fg:w="3396"/><text x="87.9233%" y="399.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,455 samples, 2.73%)</title><rect x="87.6322%" y="485" width="2.7308%" height="15" fill="rgb(244,210,16)" fg:x="110874" fg:w="3455"/><text x="87.8822%" y="495.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3,455 samples, 2.73%)</title><rect x="87.6322%" y="469" width="2.7308%" height="15" fill="rgb(234,48,26)" fg:x="110874" fg:w="3455"/><text x="87.8822%" y="479.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (3,456 samples, 2.73%)</title><rect x="87.6322%" y="517" width="2.7315%" height="15" fill="rgb(231,82,38)" fg:x="110874" fg:w="3456"/><text x="87.8822%" y="527.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,456 samples, 2.73%)</title><rect x="87.6322%" y="501" width="2.7315%" height="15" fill="rgb(254,128,41)" fg:x="110874" fg:w="3456"/><text x="87.8822%" y="511.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::map::HashMap&lt;uuid::Uuid,F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (3,457 samples, 2.73%)</title><rect x="87.6322%" y="533" width="2.7323%" height="15" fill="rgb(212,73,49)" fg:x="110874" fg:w="3457"/><text x="87.8822%" y="543.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (36 samples, 0.03%)</title><rect x="90.4499%" y="325" width="0.0285%" height="15" fill="rgb(205,62,54)" fg:x="114439" fg:w="36"/><text x="90.6999%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.03%)</title><rect x="90.4989%" y="309" width="0.0285%" height="15" fill="rgb(228,0,8)" fg:x="114501" fg:w="36"/><text x="90.7489%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (21 samples, 0.02%)</title><rect x="90.5376%" y="309" width="0.0166%" height="15" fill="rgb(251,28,17)" fg:x="114550" fg:w="21"/><text x="90.7876%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (126 samples, 0.10%)</title><rect x="90.5597%" y="309" width="0.0996%" height="15" fill="rgb(238,105,27)" fg:x="114578" fg:w="126"/><text x="90.8097%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (370 samples, 0.29%)</title><rect x="90.3787%" y="357" width="0.2924%" height="15" fill="rgb(237,216,33)" fg:x="114349" fg:w="370"/><text x="90.6287%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (313 samples, 0.25%)</title><rect x="90.4238%" y="341" width="0.2474%" height="15" fill="rgb(229,228,25)" fg:x="114406" fg:w="313"/><text x="90.6738%" y="351.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (244 samples, 0.19%)</title><rect x="90.4783%" y="325" width="0.1929%" height="15" fill="rgb(233,75,23)" fg:x="114475" fg:w="244"/><text x="90.7283%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (15 samples, 0.01%)</title><rect x="90.6593%" y="309" width="0.0119%" height="15" fill="rgb(231,207,16)" fg:x="114704" fg:w="15"/><text x="90.9093%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (37 samples, 0.03%)</title><rect x="90.7162%" y="325" width="0.0292%" height="15" fill="rgb(231,191,45)" fg:x="114776" fg:w="37"/><text x="90.9662%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids::_{{closure}} (67 samples, 0.05%)</title><rect x="90.7455%" y="325" width="0.0530%" height="15" fill="rgb(224,133,17)" fg:x="114813" fg:w="67"/><text x="90.9955%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (49 samples, 0.04%)</title><rect x="90.7597%" y="309" width="0.0387%" height="15" fill="rgb(209,178,27)" fg:x="114831" fg:w="49"/><text x="91.0097%" y="319.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (39 samples, 0.03%)</title><rect x="90.7676%" y="293" width="0.0308%" height="15" fill="rgb(218,37,11)" fg:x="114841" fg:w="39"/><text x="91.0176%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (21 samples, 0.02%)</title><rect x="90.8269%" y="277" width="0.0166%" height="15" fill="rgb(251,226,25)" fg:x="114916" fg:w="21"/><text x="91.0769%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (23 samples, 0.02%)</title><rect x="90.9051%" y="229" width="0.0182%" height="15" fill="rgb(209,222,27)" fg:x="115015" fg:w="23"/><text x="91.1551%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (83 samples, 0.07%)</title><rect x="90.9233%" y="229" width="0.0656%" height="15" fill="rgb(238,22,21)" fg:x="115038" fg:w="83"/><text x="91.1733%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (615 samples, 0.49%)</title><rect x="90.9051%" y="245" width="0.4861%" height="15" fill="rgb(233,161,25)" fg:x="115015" fg:w="615"/><text x="91.1551%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (509 samples, 0.40%)</title><rect x="90.9889%" y="229" width="0.4023%" height="15" fill="rgb(226,122,53)" fg:x="115121" fg:w="509"/><text x="91.2389%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (151 samples, 0.12%)</title><rect x="91.3912%" y="245" width="0.1193%" height="15" fill="rgb(220,123,17)" fg:x="115630" fg:w="151"/><text x="91.6412%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (42 samples, 0.03%)</title><rect x="91.5532%" y="117" width="0.0332%" height="15" fill="rgb(230,224,35)" fg:x="115835" fg:w="42"/><text x="91.8032%" y="127.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (119 samples, 0.09%)</title><rect x="91.5864%" y="117" width="0.0941%" height="15" fill="rgb(246,83,8)" fg:x="115877" fg:w="119"/><text x="91.8364%" y="127.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (242 samples, 0.19%)</title><rect x="91.5430%" y="165" width="0.1913%" height="15" fill="rgb(230,214,17)" fg:x="115822" fg:w="242"/><text x="91.7930%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (240 samples, 0.19%)</title><rect x="91.5446%" y="149" width="0.1897%" height="15" fill="rgb(222,97,18)" fg:x="115824" fg:w="240"/><text x="91.7946%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (235 samples, 0.19%)</title><rect x="91.5485%" y="133" width="0.1857%" height="15" fill="rgb(206,79,1)" fg:x="115829" fg:w="235"/><text x="91.7985%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (68 samples, 0.05%)</title><rect x="91.6805%" y="117" width="0.0537%" height="15" fill="rgb(214,121,34)" fg:x="115996" fg:w="68"/><text x="91.9305%" y="127.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="91.7437%" y="149" width="0.0111%" height="15" fill="rgb(249,199,46)" fg:x="116076" fg:w="14"/><text x="91.9937%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 samples, 0.07%)</title><rect x="91.7603%" y="133" width="0.0696%" height="15" fill="rgb(214,222,46)" fg:x="116097" fg:w="88"/><text x="92.0103%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (367 samples, 0.29%)</title><rect x="91.8299%" y="133" width="0.2901%" height="15" fill="rgb(248,168,30)" fg:x="116185" fg:w="367"/><text x="92.0799%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (802 samples, 0.63%)</title><rect x="91.5335%" y="197" width="0.6339%" height="15" fill="rgb(226,14,28)" fg:x="115810" fg:w="802"/><text x="91.7835%" y="207.50"></text></g><g><title> N]&gt;::hash (802 samples, 0.63%)</title><rect x="91.5335%" y="181" width="0.6339%" height="15" fill="rgb(253,123,1)" fg:x="115810" fg:w="802"/><text x="91.7835%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (546 samples, 0.43%)</title><rect x="91.7358%" y="165" width="0.4315%" height="15" fill="rgb(225,24,42)" fg:x="116066" fg:w="546"/><text x="91.9858%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (522 samples, 0.41%)</title><rect x="91.7548%" y="149" width="0.4126%" height="15" fill="rgb(216,161,37)" fg:x="116090" fg:w="522"/><text x="92.0048%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (60 samples, 0.05%)</title><rect x="92.1199%" y="133" width="0.0474%" height="15" fill="rgb(251,164,26)" fg:x="116552" fg:w="60"/><text x="92.3699%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (813 samples, 0.64%)</title><rect x="91.5287%" y="213" width="0.6426%" height="15" fill="rgb(219,177,3)" fg:x="115804" fg:w="813"/><text x="91.7787%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (827 samples, 0.65%)</title><rect x="91.5193%" y="245" width="0.6536%" height="15" fill="rgb(222,65,0)" fg:x="115792" fg:w="827"/><text x="91.7693%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (817 samples, 0.65%)</title><rect x="91.5272%" y="229" width="0.6457%" height="15" fill="rgb(223,69,54)" fg:x="115802" fg:w="817"/><text x="91.7772%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (1,856 samples, 1.47%)</title><rect x="90.9051%" y="261" width="1.4669%" height="15" fill="rgb(235,30,27)" fg:x="115015" fg:w="1856"/><text x="91.1551%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (252 samples, 0.20%)</title><rect x="92.1729%" y="245" width="0.1992%" height="15" fill="rgb(220,183,50)" fg:x="116619" fg:w="252"/><text x="92.4229%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (45 samples, 0.04%)</title><rect x="92.3721%" y="261" width="0.0356%" height="15" fill="rgb(248,198,15)" fg:x="116871" fg:w="45"/><text x="92.6221%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (305 samples, 0.24%)</title><rect x="92.4638%" y="229" width="0.2411%" height="15" fill="rgb(222,211,4)" fg:x="116987" fg:w="305"/><text x="92.7138%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (203 samples, 0.16%)</title><rect x="92.7064%" y="213" width="0.1604%" height="15" fill="rgb(214,102,34)" fg:x="117294" fg:w="203"/><text x="92.9564%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (24 samples, 0.02%)</title><rect x="92.8787%" y="213" width="0.0190%" height="15" fill="rgb(245,92,5)" fg:x="117512" fg:w="24"/><text x="93.1287%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (13 samples, 0.01%)</title><rect x="92.9095%" y="213" width="0.0103%" height="15" fill="rgb(252,72,51)" fg:x="117551" fg:w="13"/><text x="93.1595%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (68 samples, 0.05%)</title><rect x="92.9230%" y="213" width="0.0537%" height="15" fill="rgb(252,208,19)" fg:x="117568" fg:w="68"/><text x="93.1730%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (29 samples, 0.02%)</title><rect x="93.0518%" y="197" width="0.0229%" height="15" fill="rgb(211,69,7)" fg:x="117731" fg:w="29"/><text x="93.3018%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (38 samples, 0.03%)</title><rect x="93.1032%" y="149" width="0.0300%" height="15" fill="rgb(211,27,16)" fg:x="117796" fg:w="38"/><text x="93.3532%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (142 samples, 0.11%)</title><rect x="93.1332%" y="149" width="0.1122%" height="15" fill="rgb(219,216,14)" fg:x="117834" fg:w="142"/><text x="93.3832%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,102 samples, 0.87%)</title><rect x="93.0976%" y="165" width="0.8710%" height="15" fill="rgb(219,71,8)" fg:x="117789" fg:w="1102"/><text x="93.3476%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (915 samples, 0.72%)</title><rect x="93.2454%" y="149" width="0.7232%" height="15" fill="rgb(223,170,53)" fg:x="117976" fg:w="915"/><text x="93.4954%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (152 samples, 0.12%)</title><rect x="93.9686%" y="165" width="0.1201%" height="15" fill="rgb(246,21,26)" fg:x="118891" fg:w="152"/><text x="94.2186%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`DYLD-STUB$$memcpy (25 samples, 0.02%)</title><rect x="94.0888%" y="165" width="0.0198%" height="15" fill="rgb(248,20,46)" fg:x="119043" fg:w="25"/><text x="94.3388%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 samples, 0.07%)</title><rect x="94.1654%" y="37" width="0.0703%" height="15" fill="rgb(252,94,11)" fg:x="119140" fg:w="89"/><text x="94.4154%" y="47.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (290 samples, 0.23%)</title><rect x="94.2358%" y="37" width="0.2292%" height="15" fill="rgb(236,163,8)" fg:x="119229" fg:w="290"/><text x="94.4858%" y="47.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (485 samples, 0.38%)</title><rect x="94.1433%" y="85" width="0.3833%" height="15" fill="rgb(217,221,45)" fg:x="119112" fg:w="485"/><text x="94.3933%" y="95.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (481 samples, 0.38%)</title><rect x="94.1465%" y="69" width="0.3802%" height="15" fill="rgb(238,38,17)" fg:x="119116" fg:w="481"/><text x="94.3965%" y="79.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (471 samples, 0.37%)</title><rect x="94.1544%" y="53" width="0.3723%" height="15" fill="rgb(242,210,23)" fg:x="119126" fg:w="471"/><text x="94.4044%" y="63.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (78 samples, 0.06%)</title><rect x="94.4650%" y="37" width="0.0616%" height="15" fill="rgb(250,86,53)" fg:x="119519" fg:w="78"/><text x="94.7150%" y="47.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (145 samples, 0.11%)</title><rect x="94.5496%" y="53" width="0.1146%" height="15" fill="rgb(223,168,25)" fg:x="119626" fg:w="145"/><text x="94.7996%" y="63.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (453 samples, 0.36%)</title><rect x="94.6642%" y="53" width="0.3580%" height="15" fill="rgb(251,189,4)" fg:x="119771" fg:w="453"/><text x="94.9142%" y="63.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (1,227 samples, 0.97%)</title><rect x="94.1275%" y="117" width="0.9698%" height="15" fill="rgb(245,19,28)" fg:x="119092" fg:w="1227"/><text x="94.3775%" y="127.50"></text></g><g><title> N]&gt;::hash (1,227 samples, 0.97%)</title><rect x="94.1275%" y="101" width="0.9698%" height="15" fill="rgb(207,10,34)" fg:x="119092" fg:w="1227"/><text x="94.3775%" y="111.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (715 samples, 0.57%)</title><rect x="94.5322%" y="85" width="0.5651%" height="15" fill="rgb(235,153,31)" fg:x="119604" fg:w="715"/><text x="94.7822%" y="95.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (700 samples, 0.55%)</title><rect x="94.5440%" y="69" width="0.5533%" height="15" fill="rgb(228,72,37)" fg:x="119619" fg:w="700"/><text x="94.7940%" y="79.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (95 samples, 0.08%)</title><rect x="95.0222%" y="53" width="0.0751%" height="15" fill="rgb(215,15,16)" fg:x="120224" fg:w="95"/><text x="95.2722%" y="63.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1,243 samples, 0.98%)</title><rect x="94.1236%" y="133" width="0.9824%" height="15" fill="rgb(250,119,29)" fg:x="119087" fg:w="1243"/><text x="94.3736%" y="143.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,266 samples, 1.00%)</title><rect x="94.1085%" y="165" width="1.0006%" height="15" fill="rgb(214,59,1)" fg:x="119068" fg:w="1266"/><text x="94.3585%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,251 samples, 0.99%)</title><rect x="94.1204%" y="149" width="0.9888%" height="15" fill="rgb(223,109,25)" fg:x="119083" fg:w="1251"/><text x="94.3704%" y="159.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (2,997 samples, 2.37%)</title><rect x="92.9767%" y="213" width="2.3688%" height="15" fill="rgb(230,198,22)" fg:x="117636" fg:w="2997"/><text x="93.2267%" y="223.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::make_hasher::_{{closure}} (2,873 samples, 2.27%)</title><rect x="93.0747%" y="197" width="2.2708%" height="15" fill="rgb(245,184,46)" fg:x="117760" fg:w="2873"/><text x="93.3247%" y="207.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (2,855 samples, 2.26%)</title><rect x="93.0889%" y="181" width="2.2565%" height="15" fill="rgb(253,73,16)" fg:x="117778" fg:w="2855"/><text x="93.3389%" y="191.50">g..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (299 samples, 0.24%)</title><rect x="95.1092%" y="165" width="0.2363%" height="15" fill="rgb(206,94,45)" fg:x="120334" fg:w="299"/><text x="95.3592%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::vld1_u8 (20 samples, 0.02%)</title><rect x="95.5028%" y="181" width="0.0158%" height="15" fill="rgb(236,83,27)" fg:x="120832" fg:w="20"/><text x="95.7528%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (75 samples, 0.06%)</title><rect x="95.5186%" y="181" width="0.0593%" height="15" fill="rgb(220,196,8)" fg:x="120852" fg:w="75"/><text x="95.7686%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (101 samples, 0.08%)</title><rect x="95.7027%" y="165" width="0.0798%" height="15" fill="rgb(254,185,14)" fg:x="121085" fg:w="101"/><text x="95.9527%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (36 samples, 0.03%)</title><rect x="95.7826%" y="165" width="0.0285%" height="15" fill="rgb(226,50,22)" fg:x="121186" fg:w="36"/><text x="96.0326%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (64 samples, 0.05%)</title><rect x="95.8110%" y="165" width="0.0506%" height="15" fill="rgb(253,147,0)" fg:x="121222" fg:w="64"/><text x="96.0610%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (52 samples, 0.04%)</title><rect x="95.8616%" y="165" width="0.0411%" height="15" fill="rgb(252,46,33)" fg:x="121286" fg:w="52"/><text x="96.1116%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (476 samples, 0.38%)</title><rect x="95.5778%" y="181" width="0.3762%" height="15" fill="rgb(242,22,54)" fg:x="120927" fg:w="476"/><text x="95.8278%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (65 samples, 0.05%)</title><rect x="95.9027%" y="165" width="0.0514%" height="15" fill="rgb(223,178,32)" fg:x="121338" fg:w="65"/><text x="96.1527%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (79 samples, 0.06%)</title><rect x="95.9541%" y="181" width="0.0624%" height="15" fill="rgb(214,106,53)" fg:x="121403" fg:w="79"/><text x="96.2041%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (65 samples, 0.05%)</title><rect x="96.0165%" y="181" width="0.0514%" height="15" fill="rgb(232,65,50)" fg:x="121482" fg:w="65"/><text x="96.2665%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot (843 samples, 0.67%)</title><rect x="95.4063%" y="197" width="0.6663%" height="15" fill="rgb(231,110,28)" fg:x="120710" fg:w="843"/><text x="95.6563%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_insert_slot (941 samples, 0.74%)</title><rect x="95.3455%" y="213" width="0.7437%" height="15" fill="rgb(216,71,40)" fg:x="120633" fg:w="941"/><text x="95.5955%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (21 samples, 0.02%)</title><rect x="96.0726%" y="197" width="0.0166%" height="15" fill="rgb(229,89,53)" fg:x="121553" fg:w="21"/><text x="96.3226%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::prepare_resize (16 samples, 0.01%)</title><rect x="96.0892%" y="213" width="0.0126%" height="15" fill="rgb(210,124,14)" fg:x="121574" fg:w="16"/><text x="96.3392%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (158 samples, 0.12%)</title><rect x="96.1019%" y="213" width="0.1249%" height="15" fill="rgb(236,213,6)" fg:x="121590" fg:w="158"/><text x="96.3519%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4,502 samples, 3.56%)</title><rect x="92.7064%" y="229" width="3.5583%" height="15" fill="rgb(228,41,5)" fg:x="117294" fg:w="4502"/><text x="92.9564%" y="239.50">get_..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_full (48 samples, 0.04%)</title><rect x="96.2267%" y="213" width="0.0379%" height="15" fill="rgb(221,167,25)" fg:x="121748" fg:w="48"/><text x="96.4767%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4,840 samples, 3.83%)</title><rect x="92.4416%" y="245" width="3.8254%" height="15" fill="rgb(228,144,37)" fg:x="116959" fg:w="4840"/><text x="92.6916%" y="255.50">get_..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 0.06%)</title><rect x="96.3145%" y="229" width="0.0601%" height="15" fill="rgb(227,189,38)" fg:x="121859" fg:w="76"/><text x="96.5645%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (134 samples, 0.11%)</title><rect x="96.3809%" y="229" width="0.1059%" height="15" fill="rgb(218,8,2)" fg:x="121943" fg:w="134"/><text x="96.6309%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (54 samples, 0.04%)</title><rect x="96.4868%" y="229" width="0.0427%" height="15" fill="rgb(209,61,28)" fg:x="122077" fg:w="54"/><text x="96.7368%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (102 samples, 0.08%)</title><rect x="96.5295%" y="229" width="0.0806%" height="15" fill="rgb(233,140,39)" fg:x="122131" fg:w="102"/><text x="96.7795%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (51 samples, 0.04%)</title><rect x="96.6101%" y="229" width="0.0403%" height="15" fill="rgb(251,66,48)" fg:x="122233" fg:w="51"/><text x="96.8601%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (32 samples, 0.03%)</title><rect x="96.6504%" y="229" width="0.0253%" height="15" fill="rgb(210,44,45)" fg:x="122284" fg:w="32"/><text x="96.9004%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (34 samples, 0.03%)</title><rect x="96.7247%" y="213" width="0.0269%" height="15" fill="rgb(214,136,46)" fg:x="122378" fg:w="34"/><text x="96.9747%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (26 samples, 0.02%)</title><rect x="96.7516%" y="213" width="0.0205%" height="15" fill="rgb(207,130,50)" fg:x="122412" fg:w="26"/><text x="97.0016%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (19 samples, 0.02%)</title><rect x="96.7721%" y="213" width="0.0150%" height="15" fill="rgb(228,102,49)" fg:x="122438" fg:w="19"/><text x="97.0221%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (30 samples, 0.02%)</title><rect x="96.7871%" y="213" width="0.0237%" height="15" fill="rgb(253,55,1)" fg:x="122457" fg:w="30"/><text x="97.0371%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (201 samples, 0.16%)</title><rect x="96.6796%" y="229" width="0.1589%" height="15" fill="rgb(238,222,9)" fg:x="122321" fg:w="201"/><text x="96.9296%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (35 samples, 0.03%)</title><rect x="96.8108%" y="213" width="0.0277%" height="15" fill="rgb(246,99,6)" fg:x="122487" fg:w="35"/><text x="97.0608%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (47 samples, 0.04%)</title><rect x="96.8385%" y="229" width="0.0371%" height="15" fill="rgb(219,110,26)" fg:x="122522" fg:w="47"/><text x="97.0885%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (194 samples, 0.15%)</title><rect x="96.8756%" y="229" width="0.1533%" height="15" fill="rgb(239,160,33)" fg:x="122569" fg:w="194"/><text x="97.1256%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (68 samples, 0.05%)</title><rect x="97.0290%" y="229" width="0.0537%" height="15" fill="rgb(220,202,23)" fg:x="122763" fg:w="68"/><text x="97.2790%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1,033 samples, 0.82%)</title><rect x="96.2671%" y="245" width="0.8165%" height="15" fill="rgb(208,80,26)" fg:x="121799" fg:w="1033"/><text x="96.5171%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (5,926 samples, 4.68%)</title><rect x="92.4076%" y="261" width="4.6838%" height="15" fill="rgb(243,85,7)" fg:x="116916" fg:w="5926"/><text x="92.6576%" y="271.50">get_u..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (89 samples, 0.07%)</title><rect x="97.0914%" y="261" width="0.0703%" height="15" fill="rgb(228,77,47)" fg:x="122842" fg:w="89"/><text x="97.3414%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8,015 samples, 6.33%)</title><rect x="90.8435%" y="277" width="6.3349%" height="15" fill="rgb(212,226,8)" fg:x="114937" fg:w="8015"/><text x="91.0935%" y="287.50">get_usag..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (15 samples, 0.01%)</title><rect x="97.1665%" y="261" width="0.0119%" height="15" fill="rgb(241,120,54)" fg:x="122937" fg:w="15"/><text x="97.4165%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (8,057 samples, 6.37%)</title><rect x="90.8174%" y="293" width="6.3681%" height="15" fill="rgb(226,80,16)" fg:x="114904" fg:w="8057"/><text x="91.0674%" y="303.50">get_usag..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (8,093 samples, 6.40%)</title><rect x="90.7984%" y="325" width="6.3965%" height="15" fill="rgb(240,76,13)" fg:x="114880" fg:w="8093"/><text x="91.0484%" y="335.50">get_usag..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (8,076 samples, 6.38%)</title><rect x="90.8119%" y="309" width="6.3831%" height="15" fill="rgb(252,74,8)" fg:x="114897" fg:w="8076"/><text x="91.0619%" y="319.50">get_usag..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (8,249 samples, 6.52%)</title><rect x="90.6894%" y="341" width="6.5198%" height="15" fill="rgb(244,155,2)" fg:x="114742" fg:w="8249"/><text x="90.9394%" y="351.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (18 samples, 0.01%)</title><rect x="97.1950%" y="325" width="0.0142%" height="15" fill="rgb(215,81,35)" fg:x="122973" fg:w="18"/><text x="97.4450%" y="335.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (8,275 samples, 6.54%)</title><rect x="90.6720%" y="357" width="6.5404%" height="15" fill="rgb(206,55,2)" fg:x="114720" fg:w="8275"/><text x="90.9220%" y="367.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::filter::filter_fold::_{{closure}} (13 samples, 0.01%)</title><rect x="97.2123%" y="357" width="0.0103%" height="15" fill="rgb(231,2,34)" fg:x="122995" fg:w="13"/><text x="97.4623%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (8,677 samples, 6.86%)</title><rect x="90.3653%" y="533" width="6.8581%" height="15" fill="rgb(242,176,48)" fg:x="114332" fg:w="8677"/><text x="90.6153%" y="543.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8,677 samples, 6.86%)</title><rect x="90.3653%" y="517" width="6.8581%" height="15" fill="rgb(249,31,36)" fg:x="114332" fg:w="8677"/><text x="90.6153%" y="527.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (8,677 samples, 6.86%)</title><rect x="90.3653%" y="501" width="6.8581%" height="15" fill="rgb(205,18,17)" fg:x="114332" fg:w="8677"/><text x="90.6153%" y="511.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (8,677 samples, 6.86%)</title><rect x="90.3653%" y="485" width="6.8581%" height="15" fill="rgb(254,130,5)" fg:x="114332" fg:w="8677"/><text x="90.6153%" y="495.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (8,675 samples, 6.86%)</title><rect x="90.3669%" y="469" width="6.8565%" height="15" fill="rgb(229,42,45)" fg:x="114334" fg:w="8675"/><text x="90.6169%" y="479.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,675 samples, 6.86%)</title><rect x="90.3669%" y="453" width="6.8565%" height="15" fill="rgb(245,95,25)" fg:x="114334" fg:w="8675"/><text x="90.6169%" y="463.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,675 samples, 6.86%)</title><rect x="90.3669%" y="437" width="6.8565%" height="15" fill="rgb(249,193,38)" fg:x="114334" fg:w="8675"/><text x="90.6169%" y="447.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,675 samples, 6.86%)</title><rect x="90.3669%" y="421" width="6.8565%" height="15" fill="rgb(241,140,43)" fg:x="114334" fg:w="8675"/><text x="90.6169%" y="431.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,675 samples, 6.86%)</title><rect x="90.3669%" y="405" width="6.8565%" height="15" fill="rgb(245,78,48)" fg:x="114334" fg:w="8675"/><text x="90.6169%" y="415.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,675 samples, 6.86%)</title><rect x="90.3669%" y="389" width="6.8565%" height="15" fill="rgb(214,92,39)" fg:x="114334" fg:w="8675"/><text x="90.6169%" y="399.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::fold (8,672 samples, 6.85%)</title><rect x="90.3693%" y="373" width="6.8541%" height="15" fill="rgb(211,189,14)" fg:x="114337" fg:w="8672"/><text x="90.6193%" y="383.50">get_usage..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;&amp;mut T as lb_rs::logic::tree_like::TreeLike&gt;::ids (12,138 samples, 9.59%)</title><rect x="87.6322%" y="581" width="9.5936%" height="15" fill="rgb(218,7,24)" fg:x="110874" fg:w="12138"/><text x="87.8822%" y="591.50">get_usage_test..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (12,138 samples, 9.59%)</title><rect x="87.6322%" y="565" width="9.5936%" height="15" fill="rgb(224,200,49)" fg:x="110874" fg:w="12138"/><text x="87.8822%" y="575.50">get_usage_test..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (12,138 samples, 9.59%)</title><rect x="87.6322%" y="549" width="9.5936%" height="15" fill="rgb(218,210,14)" fg:x="110874" fg:w="12138"/><text x="87.8822%" y="559.50">get_usage_test..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::next_n (46 samples, 0.04%)</title><rect x="97.2289%" y="421" width="0.0364%" height="15" fill="rgb(234,142,31)" fg:x="123016" fg:w="46"/><text x="97.4789%" y="431.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (42 samples, 0.03%)</title><rect x="97.3420%" y="357" width="0.0332%" height="15" fill="rgb(227,165,2)" fg:x="123159" fg:w="42"/><text x="97.5920%" y="367.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="97.5490%" y="261" width="0.0174%" height="15" fill="rgb(232,44,46)" fg:x="123421" fg:w="22"/><text x="97.7990%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (80 samples, 0.06%)</title><rect x="97.5664%" y="261" width="0.0632%" height="15" fill="rgb(236,149,47)" fg:x="123443" fg:w="80"/><text x="97.8164%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (614 samples, 0.49%)</title><rect x="97.5451%" y="277" width="0.4853%" height="15" fill="rgb(227,45,31)" fg:x="123416" fg:w="614"/><text x="97.7951%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (507 samples, 0.40%)</title><rect x="97.6297%" y="261" width="0.4007%" height="15" fill="rgb(240,176,51)" fg:x="123523" fg:w="507"/><text x="97.8797%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (66 samples, 0.05%)</title><rect x="98.0304%" y="277" width="0.0522%" height="15" fill="rgb(249,146,41)" fg:x="124030" fg:w="66"/><text x="98.2804%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (160 samples, 0.13%)</title><rect x="98.1244%" y="165" width="0.1265%" height="15" fill="rgb(213,208,4)" fg:x="124149" fg:w="160"/><text x="98.3744%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (155 samples, 0.12%)</title><rect x="98.2509%" y="165" width="0.1225%" height="15" fill="rgb(245,84,36)" fg:x="124309" fg:w="155"/><text x="98.5009%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_length_prefix (382 samples, 0.30%)</title><rect x="98.1086%" y="213" width="0.3019%" height="15" fill="rgb(254,84,18)" fg:x="124129" fg:w="382"/><text x="98.3586%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::Hasher::write_usize (379 samples, 0.30%)</title><rect x="98.1110%" y="197" width="0.2996%" height="15" fill="rgb(225,38,54)" fg:x="124132" fg:w="379"/><text x="98.3610%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (370 samples, 0.29%)</title><rect x="98.1181%" y="181" width="0.2924%" height="15" fill="rgb(246,50,30)" fg:x="124141" fg:w="370"/><text x="98.3681%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (47 samples, 0.04%)</title><rect x="98.3734%" y="165" width="0.0371%" height="15" fill="rgb(246,148,9)" fg:x="124464" fg:w="47"/><text x="98.6234%" y="175.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 samples, 0.06%)</title><rect x="98.4327%" y="181" width="0.0577%" height="15" fill="rgb(223,75,4)" fg:x="124539" fg:w="73"/><text x="98.6827%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (247 samples, 0.20%)</title><rect x="98.4904%" y="181" width="0.1952%" height="15" fill="rgb(239,148,41)" fg:x="124612" fg:w="247"/><text x="98.7404%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::array::_&lt;impl core::hash::Hash for [T (788 samples, 0.62%)</title><rect x="98.0999%" y="245" width="0.6228%" height="15" fill="rgb(205,195,3)" fg:x="124118" fg:w="788"/><text x="98.3499%" y="255.50"></text></g><g><title> N]&gt;::hash (788 samples, 0.62%)</title><rect x="98.0999%" y="229" width="0.6228%" height="15" fill="rgb(254,161,1)" fg:x="124118" fg:w="788"/><text x="98.3499%" y="239.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (384 samples, 0.30%)</title><rect x="98.4192%" y="213" width="0.3035%" height="15" fill="rgb(211,229,8)" fg:x="124522" fg:w="384"/><text x="98.6692%" y="223.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (371 samples, 0.29%)</title><rect x="98.4295%" y="197" width="0.2932%" height="15" fill="rgb(220,97,9)" fg:x="124535" fg:w="371"/><text x="98.6795%" y="207.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::sip::u8to64_le (47 samples, 0.04%)</title><rect x="98.6856%" y="181" width="0.0371%" height="15" fill="rgb(240,218,8)" fg:x="124859" fg:w="47"/><text x="98.9356%" y="191.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;uuid::Uuid as core::hash::Hash&gt;::hash (797 samples, 0.63%)</title><rect x="98.0984%" y="261" width="0.6299%" height="15" fill="rgb(250,44,0)" fg:x="124116" fg:w="797"/><text x="98.3484%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (806 samples, 0.64%)</title><rect x="98.0952%" y="277" width="0.6370%" height="15" fill="rgb(236,41,53)" fg:x="124112" fg:w="806"/><text x="98.3452%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::hash::BuildHasher::hash_one (1,687 samples, 1.33%)</title><rect x="97.5364%" y="293" width="1.3334%" height="15" fill="rgb(218,227,13)" fg:x="123405" fg:w="1687"/><text x="97.7864%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (174 samples, 0.14%)</title><rect x="98.7322%" y="277" width="0.1375%" height="15" fill="rgb(217,94,32)" fg:x="124918" fg:w="174"/><text x="98.9822%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (65 samples, 0.05%)</title><rect x="98.8698%" y="293" width="0.0514%" height="15" fill="rgb(213,217,12)" fg:x="125092" fg:w="65"/><text x="99.1198%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (45 samples, 0.04%)</title><rect x="98.9654%" y="277" width="0.0356%" height="15" fill="rgb(229,13,46)" fg:x="125213" fg:w="45"/><text x="99.2154%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.05%)</title><rect x="99.0452%" y="261" width="0.0506%" height="15" fill="rgb(243,139,5)" fg:x="125314" fg:w="64"/><text x="99.2952%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vceq_u8 (123 samples, 0.10%)</title><rect x="99.1013%" y="261" width="0.0972%" height="15" fill="rgb(249,38,45)" fg:x="125385" fg:w="123"/><text x="99.3513%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (58 samples, 0.05%)</title><rect x="99.1986%" y="261" width="0.0458%" height="15" fill="rgb(216,70,11)" fg:x="125508" fg:w="58"/><text x="99.4486%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vdup_n_u8 (73 samples, 0.06%)</title><rect x="99.2444%" y="261" width="0.0577%" height="15" fill="rgb(253,101,25)" fg:x="125566" fg:w="73"/><text x="99.4944%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (47 samples, 0.04%)</title><rect x="99.3021%" y="261" width="0.0371%" height="15" fill="rgb(207,197,30)" fg:x="125639" fg:w="47"/><text x="99.5521%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ptr::read_unaligned (27 samples, 0.02%)</title><rect x="99.3392%" y="261" width="0.0213%" height="15" fill="rgb(238,87,13)" fg:x="125686" fg:w="27"/><text x="99.5892%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::aarch64::neon::generated::vcltz_s8 (18 samples, 0.01%)</title><rect x="99.3977%" y="245" width="0.0142%" height="15" fill="rgb(215,155,8)" fg:x="125760" fg:w="18"/><text x="99.6477%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_s8_u8 (30 samples, 0.02%)</title><rect x="99.4120%" y="245" width="0.0237%" height="15" fill="rgb(239,166,38)" fg:x="125778" fg:w="30"/><text x="99.6620%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (19 samples, 0.02%)</title><rect x="99.4357%" y="245" width="0.0150%" height="15" fill="rgb(240,194,35)" fg:x="125808" fg:w="19"/><text x="99.6857%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::vget_lane_u64 (27 samples, 0.02%)</title><rect x="99.4507%" y="245" width="0.0213%" height="15" fill="rgb(219,10,44)" fg:x="125827" fg:w="27"/><text x="99.7007%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_insert_slot_in_group (166 samples, 0.13%)</title><rect x="99.3622%" y="261" width="0.1312%" height="15" fill="rgb(251,220,35)" fg:x="125715" fg:w="166"/><text x="99.6122%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_empty_or_deleted (27 samples, 0.02%)</title><rect x="99.4720%" y="245" width="0.0213%" height="15" fill="rgb(218,117,13)" fg:x="125854" fg:w="27"/><text x="99.7220%" y="255.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::fix_insert_slot (31 samples, 0.02%)</title><rect x="99.4934%" y="261" width="0.0245%" height="15" fill="rgb(221,213,40)" fg:x="125881" fg:w="31"/><text x="99.7434%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (80 samples, 0.06%)</title><rect x="99.5179%" y="261" width="0.0632%" height="15" fill="rgb(251,224,35)" fg:x="125912" fg:w="80"/><text x="99.7679%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (801 samples, 0.63%)</title><rect x="99.0018%" y="277" width="0.6331%" height="15" fill="rgb(241,33,39)" fg:x="125259" fg:w="801"/><text x="99.2518%" y="287.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::neon::Group::match_byte (68 samples, 0.05%)</title><rect x="99.5811%" y="261" width="0.0537%" height="15" fill="rgb(222,74,17)" fg:x="125992" fg:w="68"/><text x="99.8311%" y="271.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (913 samples, 0.72%)</title><rect x="98.9211%" y="293" width="0.7216%" height="15" fill="rgb(225,103,0)" fg:x="125157" fg:w="913"/><text x="99.1711%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (100 samples, 0.08%)</title><rect x="99.6427%" y="293" width="0.0790%" height="15" fill="rgb(240,0,12)" fg:x="126070" fg:w="100"/><text x="99.8927%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,856 samples, 2.26%)</title><rect x="97.4779%" y="309" width="2.2573%" height="15" fill="rgb(233,213,37)" fg:x="123331" fg:w="2856"/><text x="97.7279%" y="319.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (17 samples, 0.01%)</title><rect x="99.7218%" y="293" width="0.0134%" height="15" fill="rgb(225,84,52)" fg:x="126170" fg:w="17"/><text x="99.9718%" y="303.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (2,911 samples, 2.30%)</title><rect x="97.4463%" y="325" width="2.3008%" height="15" fill="rgb(247,160,51)" fg:x="123291" fg:w="2911"/><text x="97.6963%" y="335.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (3,011 samples, 2.38%)</title><rect x="97.3752%" y="357" width="2.3798%" height="15" fill="rgb(244,60,51)" fg:x="123201" fg:w="3011"/><text x="97.6252%" y="367.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2,965 samples, 2.34%)</title><rect x="97.4115%" y="341" width="2.3435%" height="15" fill="rgb(233,114,7)" fg:x="123247" fg:w="2965"/><text x="97.6615%" y="351.50">g..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (3,065 samples, 2.42%)</title><rect x="97.3333%" y="373" width="2.4225%" height="15" fill="rgb(246,136,16)" fg:x="123148" fg:w="3065"/><text x="97.5833%" y="383.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (3,103 samples, 2.45%)</title><rect x="97.3230%" y="389" width="2.4525%" height="15" fill="rgb(243,114,45)" fg:x="123135" fg:w="3103"/><text x="97.5730%" y="399.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids::_{{closure}} (25 samples, 0.02%)</title><rect x="99.7558%" y="373" width="0.0198%" height="15" fill="rgb(247,183,43)" fg:x="126213" fg:w="25"/><text x="100.0058%" y="383.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (3,173 samples, 2.51%)</title><rect x="97.2787%" y="405" width="2.5079%" height="15" fill="rgb(251,210,42)" fg:x="123079" fg:w="3173"/><text x="97.5287%" y="415.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::adapters::map::map_fold::_{{closure}} (14 samples, 0.01%)</title><rect x="99.7755%" y="389" width="0.0111%" height="15" fill="rgb(221,88,35)" fg:x="126238" fg:w="14"/><text x="100.0255%" y="399.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.03%)</title><rect x="99.7898%" y="405" width="0.0348%" height="15" fill="rgb(242,21,20)" fg:x="126256" fg:w="44"/><text x="100.0398%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (20 samples, 0.02%)</title><rect x="99.8332%" y="405" width="0.0158%" height="15" fill="rgb(233,226,36)" fg:x="126311" fg:w="20"/><text x="100.0832%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::bitmask::BitMask::lowest_set_bit (126 samples, 0.10%)</title><rect x="99.8577%" y="405" width="0.0996%" height="15" fill="rgb(243,189,34)" fg:x="126342" fg:w="126"/><text x="100.1077%" y="415.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::for_each (3,465 samples, 2.74%)</title><rect x="97.2258%" y="517" width="2.7387%" height="15" fill="rgb(207,145,50)" fg:x="123012" fg:w="3465"/><text x="97.4758%" y="527.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,465 samples, 2.74%)</title><rect x="97.2258%" y="501" width="2.7387%" height="15" fill="rgb(242,1,50)" fg:x="123012" fg:w="3465"/><text x="97.4758%" y="511.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,465 samples, 2.74%)</title><rect x="97.2258%" y="485" width="2.7387%" height="15" fill="rgb(231,65,32)" fg:x="123012" fg:w="3465"/><text x="97.4758%" y="495.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,465 samples, 2.74%)</title><rect x="97.2258%" y="469" width="2.7387%" height="15" fill="rgb(208,68,49)" fg:x="123012" fg:w="3465"/><text x="97.4758%" y="479.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,464 samples, 2.74%)</title><rect x="97.2266%" y="453" width="2.7379%" height="15" fill="rgb(253,54,49)" fg:x="123013" fg:w="3464"/><text x="97.4766%" y="463.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,464 samples, 2.74%)</title><rect x="97.2266%" y="437" width="2.7379%" height="15" fill="rgb(245,186,24)" fg:x="123013" fg:w="3464"/><text x="97.4766%" y="447.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (3,415 samples, 2.70%)</title><rect x="97.2653%" y="421" width="2.6991%" height="15" fill="rgb(209,2,41)" fg:x="123062" fg:w="3415"/><text x="97.5153%" y="431.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,467 samples, 2.74%)</title><rect x="97.2258%" y="549" width="2.7402%" height="15" fill="rgb(242,208,54)" fg:x="123012" fg:w="3467"/><text x="97.4758%" y="559.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3,467 samples, 2.74%)</title><rect x="97.2258%" y="533" width="2.7402%" height="15" fill="rgb(225,9,51)" fg:x="123012" fg:w="3467"/><text x="97.4758%" y="543.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::iter::traits::iterator::Iterator::collect (3,468 samples, 2.74%)</title><rect x="97.2258%" y="581" width="2.7410%" height="15" fill="rgb(207,207,25)" fg:x="123012" fg:w="3468"/><text x="97.4758%" y="591.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,468 samples, 2.74%)</title><rect x="97.2258%" y="565" width="2.7410%" height="15" fill="rgb(253,96,18)" fg:x="123012" fg:w="3468"/><text x="97.4758%" y="575.50">ge..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::linked_by (19,204 samples, 15.18%)</title><rect x="84.7892%" y="613" width="15.1784%" height="15" fill="rgb(252,215,20)" fg:x="107277" fg:w="19204"/><text x="85.0392%" y="623.50">get_usage_tests-cf82cbf..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids (15,607 samples, 12.34%)</title><rect x="87.6322%" y="597" width="12.3354%" height="15" fill="rgb(245,227,26)" fg:x="110874" fg:w="15607"/><text x="87.8822%" y="607.50">get_usage_tests-cf..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::lazy::LazyTree&lt;T&gt;::name_using_links (19,228 samples, 15.20%)</title><rect x="84.7766%" y="629" width="15.1974%" height="15" fill="rgb(241,208,0)" fg:x="107261" fg:w="19228"/><text x="85.0266%" y="639.50">get_usage_tests-cf82cbf..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::path_ops::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;Staged&gt;&gt;::id_to_path (57,738 samples, 45.63%)</title><rect x="54.3471%" y="645" width="45.6348%" height="15" fill="rgb(224,130,10)" fg:x="68761" fg:w="57738"/><text x="54.5971%" y="655.50">get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::path_ops::_&lt;impl lb_rs::logi..</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::lazy::LazyTree&lt;T&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (14 samples, 0.01%)</title><rect x="99.9818%" y="629" width="0.0111%" height="15" fill="rgb(237,29,0)" fg:x="126499" fg:w="14"/><text x="100.2318%" y="639.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (14 samples, 0.01%)</title><rect x="99.9818%" y="613" width="0.0111%" height="15" fill="rgb(219,27,41)" fg:x="126499" fg:w="14"/><text x="100.2318%" y="623.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::logic::tree_like::TreeLike::owned_ids (16 samples, 0.01%)</title><rect x="99.9818%" y="645" width="0.0126%" height="15" fill="rgb(245,101,19)" fg:x="126499" fg:w="16"/><text x="100.2318%" y="655.50"></text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::search::_&lt;impl lb_rs::Lb&gt;::spawn_build_index::_{{closure}} (101,817 samples, 80.47%)</title><rect x="19.5255%" y="709" width="80.4738%" height="15" fill="rgb(243,44,37)" fg:x="24704" fg:w="101817"/><text x="19.7755%" y="719.50">get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::search::_&lt;impl lb_rs::Lb&gt;::spawn_build_index::_{{closure}}</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::search::_&lt;impl lb_rs::Lb&gt;::build_index::_{{closure}} (101,815 samples, 80.47%)</title><rect x="19.5270%" y="693" width="80.4722%" height="15" fill="rgb(228,213,43)" fg:x="24706" fg:w="101815"/><text x="19.7770%" y="703.50">get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::search::_&lt;impl lb_rs::Lb&gt;::build_index::_{{closure}}</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::search::_&lt;impl lb_rs::Lb&gt;::build_index::_{{closure}}::_{{closure}} (101,815 samples, 80.47%)</title><rect x="19.5270%" y="677" width="80.4722%" height="15" fill="rgb(219,163,21)" fg:x="24706" fg:w="101815"/><text x="19.7770%" y="687.50">get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::search::_&lt;impl lb_rs::Lb&gt;::build_index::_{{closure}}::_{{closure}}</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::search::_&lt;impl lb_rs::Lb&gt;::build_index::_{{closure}}::_{{closure}}::_{{closure}} (101,814 samples, 80.47%)</title><rect x="19.5278%" y="661" width="80.4714%" height="15" fill="rgb(234,86,24)" fg:x="24707" fg:w="101814"/><text x="19.7778%" y="671.50">get_usage_tests-cf82cbf4ae04dd7d`lb_rs::service::search::_&lt;impl lb_rs::Lb&gt;::build_index::_{{closure}}::_{{closure}}::_{{closure}}</text></g><g><title>all (126,522 samples, 100%)</title><rect x="0.0000%" y="1381" width="100.0000%" height="15" fill="rgb(225,10,24)" fg:x="0" fg:w="126522"/><text x="0.2500%" y="1391.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (126,519 samples, 100.00%)</title><rect x="0.0024%" y="1365" width="99.9976%" height="15" fill="rgb(218,109,7)" fg:x="3" fg:w="126519"/><text x="0.2524%" y="1375.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (126,519 samples, 100.00%)</title><rect x="0.0024%" y="1349" width="99.9976%" height="15" fill="rgb(210,20,26)" fg:x="3" fg:w="126519"/><text x="0.2524%" y="1359.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::sys::pal::unix::thread::Thread::new::thread_start (126,519 samples, 100.00%)</title><rect x="0.0024%" y="1333" width="99.9976%" height="15" fill="rgb(216,18,1)" fg:x="3" fg:w="126519"/><text x="0.2524%" y="1343.50">get_usage_tests-cf82cbf4ae04dd7d`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::FnOnce::call_once{{vtable.shim}} (126,519 samples, 100.00%)</title><rect x="0.0024%" y="1317" width="99.9976%" height="15" fill="rgb(206,163,23)" fg:x="3" fg:w="126519"/><text x="0.2524%" y="1327.50">get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::sys_common::backtrace::__rust_begin_short_backtrace (126,519 samples, 100.00%)</title><rect x="0.0024%" y="1301" width="99.9976%" height="15" fill="rgb(229,150,31)" fg:x="3" fg:w="126519"/><text x="0.2524%" y="1311.50">get_usage_tests-cf82cbf4ae04dd7d`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`test::run_test::_{{closure}} (126,519 samples, 100.00%)</title><rect x="0.0024%" y="1285" width="99.9976%" height="15" fill="rgb(231,10,5)" fg:x="3" fg:w="126519"/><text x="0.2524%" y="1295.50">get_usage_tests-cf82cbf4ae04dd7d`test::run_test::_{{closure}}</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`test::__rust_begin_short_backtrace (126,519 samples, 100.00%)</title><rect x="0.0024%" y="1269" width="99.9976%" height="15" fill="rgb(250,40,50)" fg:x="3" fg:w="126519"/><text x="0.2524%" y="1279.50">get_usage_tests-cf82cbf4ae04dd7d`test::__rust_begin_short_backtrace</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::FnOnce::call_once (126,519 samples, 100.00%)</title><rect x="0.0024%" y="1253" width="99.9976%" height="15" fill="rgb(217,119,7)" fg:x="3" fg:w="126519"/><text x="0.2524%" y="1263.50">get_usage_tests-cf82cbf4ae04dd7d`core::ops::function::FnOnce::call_once</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`get_usage_tests::upsert_meta_empty_folder_over_data_cap::_{{closure}} (126,519 samples, 100.00%)</title><rect x="0.0024%" y="1237" width="99.9976%" height="15" fill="rgb(245,214,40)" fg:x="3" fg:w="126519"/><text x="0.2524%" y="1247.50">get_usage_tests-cf82cbf4ae04dd7d`get_usage_tests::upsert_meta_empty_folder_over_data_cap::_{{closure}}</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`get_usage_tests::upsert_meta_empty_folder_over_data_cap (126,519 samples, 100.00%)</title><rect x="0.0024%" y="1221" width="99.9976%" height="15" fill="rgb(216,187,1)" fg:x="3" fg:w="126519"/><text x="0.2524%" y="1231.50">get_usage_tests-cf82cbf4ae04dd7d`get_usage_tests::upsert_meta_empty_folder_over_data_cap</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::runtime::Runtime::block_on (126,518 samples, 100.00%)</title><rect x="0.0032%" y="1205" width="99.9968%" height="15" fill="rgb(237,146,21)" fg:x="4" fg:w="126518"/><text x="0.2532%" y="1215.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::runtime::Runtime::block_on</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CurrentThread::block_on (126,518 samples, 100.00%)</title><rect x="0.0032%" y="1189" width="99.9968%" height="15" fill="rgb(210,174,47)" fg:x="4" fg:w="126518"/><text x="0.2532%" y="1199.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CurrentThread::block_on</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::context::runtime::enter_runtime (126,518 samples, 100.00%)</title><rect x="0.0032%" y="1173" width="99.9968%" height="15" fill="rgb(218,111,39)" fg:x="4" fg:w="126518"/><text x="0.2532%" y="1183.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CurrentThread::block_on::_{{closure}} (126,518 samples, 100.00%)</title><rect x="0.0032%" y="1157" width="99.9968%" height="15" fill="rgb(224,95,19)" fg:x="4" fg:w="126518"/><text x="0.2532%" y="1167.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CurrentThread::block_on::_{{closure}}</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CoreGuard::block_on (126,518 samples, 100.00%)</title><rect x="0.0032%" y="1141" width="99.9968%" height="15" fill="rgb(234,15,38)" fg:x="4" fg:w="126518"/><text x="0.2532%" y="1151.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CoreGuard::block_on</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CoreGuard::enter (126,518 samples, 100.00%)</title><rect x="0.0032%" y="1125" width="99.9968%" height="15" fill="rgb(246,56,12)" fg:x="4" fg:w="126518"/><text x="0.2532%" y="1135.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CoreGuard::enter</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::context::set_scheduler (126,518 samples, 100.00%)</title><rect x="0.0032%" y="1109" width="99.9968%" height="15" fill="rgb(247,16,17)" fg:x="4" fg:w="126518"/><text x="0.2532%" y="1119.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::context::set_scheduler</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::thread::local::LocalKey&lt;T&gt;::with (126,518 samples, 100.00%)</title><rect x="0.0032%" y="1093" width="99.9968%" height="15" fill="rgb(215,151,11)" fg:x="4" fg:w="126518"/><text x="0.2532%" y="1103.50">get_usage_tests-cf82cbf4ae04dd7d`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::thread::local::LocalKey&lt;T&gt;::try_with (126,518 samples, 100.00%)</title><rect x="0.0032%" y="1077" width="99.9968%" height="15" fill="rgb(225,16,24)" fg:x="4" fg:w="126518"/><text x="0.2532%" y="1087.50">get_usage_tests-cf82cbf4ae04dd7d`std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::context::set_scheduler::_{{closure}} (126,518 samples, 100.00%)</title><rect x="0.0032%" y="1061" width="99.9968%" height="15" fill="rgb(217,117,5)" fg:x="4" fg:w="126518"/><text x="0.2532%" y="1071.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::context::set_scheduler::_{{closure}}</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (126,518 samples, 100.00%)</title><rect x="0.0032%" y="1045" width="99.9968%" height="15" fill="rgb(246,187,53)" fg:x="4" fg:w="126518"/><text x="0.2532%" y="1055.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CoreGuard::enter::_{{closure}} (126,518 samples, 100.00%)</title><rect x="0.0032%" y="1029" width="99.9968%" height="15" fill="rgb(241,71,40)" fg:x="4" fg:w="126518"/><text x="0.2532%" y="1039.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CoreGuard::enter::_{{closure}}</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}} (126,518 samples, 100.00%)</title><rect x="0.0032%" y="1013" width="99.9968%" height="15" fill="rgb(231,67,39)" fg:x="4" fg:w="126518"/><text x="0.2532%" y="1023.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}}</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::Context::run_task (101,822 samples, 80.48%)</title><rect x="19.5223%" y="997" width="80.4777%" height="15" fill="rgb(222,120,24)" fg:x="24700" fg:w="101822"/><text x="19.7723%" y="1007.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::Context::run_task</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::Context::enter (101,822 samples, 80.48%)</title><rect x="19.5223%" y="981" width="80.4777%" height="15" fill="rgb(248,3,3)" fg:x="24700" fg:w="101822"/><text x="19.7723%" y="991.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::Context::enter</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::Context::run_task::_{{closure}} (101,822 samples, 80.48%)</title><rect x="19.5223%" y="965" width="80.4777%" height="15" fill="rgb(228,218,5)" fg:x="24700" fg:w="101822"/><text x="19.7723%" y="975.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::Context::run_task::_{{closure}}</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}}::_{{closure}} (101,821 samples, 80.48%)</title><rect x="19.5231%" y="949" width="80.4769%" height="15" fill="rgb(212,202,43)" fg:x="24701" fg:w="101821"/><text x="19.7731%" y="959.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}}::_{{closure}}</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::LocalNotified&lt;S&gt;::run (101,821 samples, 80.48%)</title><rect x="19.5231%" y="933" width="80.4769%" height="15" fill="rgb(235,183,2)" fg:x="24701" fg:w="101821"/><text x="19.7731%" y="943.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::raw::RawTask::poll (101,821 samples, 80.48%)</title><rect x="19.5231%" y="917" width="80.4769%" height="15" fill="rgb(230,165,10)" fg:x="24701" fg:w="101821"/><text x="19.7731%" y="927.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::raw::RawTask::poll</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::raw::poll (101,821 samples, 80.48%)</title><rect x="19.5231%" y="901" width="80.4769%" height="15" fill="rgb(219,54,40)" fg:x="24701" fg:w="101821"/><text x="19.7731%" y="911.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::raw::poll</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (101,821 samples, 80.48%)</title><rect x="19.5231%" y="885" width="80.4769%" height="15" fill="rgb(244,73,9)" fg:x="24701" fg:w="101821"/><text x="19.7731%" y="895.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (101,820 samples, 80.48%)</title><rect x="19.5239%" y="869" width="80.4761%" height="15" fill="rgb(212,32,45)" fg:x="24702" fg:w="101820"/><text x="19.7739%" y="879.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::harness::poll_future (101,820 samples, 80.48%)</title><rect x="19.5239%" y="853" width="80.4761%" height="15" fill="rgb(205,58,31)" fg:x="24702" fg:w="101820"/><text x="19.7739%" y="863.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::harness::poll_future</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::panic::catch_unwind (101,820 samples, 80.48%)</title><rect x="19.5239%" y="837" width="80.4761%" height="15" fill="rgb(250,120,43)" fg:x="24702" fg:w="101820"/><text x="19.7739%" y="847.50">get_usage_tests-cf82cbf4ae04dd7d`std::panic::catch_unwind</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::panicking::try (101,820 samples, 80.48%)</title><rect x="19.5239%" y="821" width="80.4761%" height="15" fill="rgb(235,13,10)" fg:x="24702" fg:w="101820"/><text x="19.7739%" y="831.50">get_usage_tests-cf82cbf4ae04dd7d`std::panicking::try</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`__rust_try (101,820 samples, 80.48%)</title><rect x="19.5239%" y="805" width="80.4761%" height="15" fill="rgb(232,219,31)" fg:x="24702" fg:w="101820"/><text x="19.7739%" y="815.50">get_usage_tests-cf82cbf4ae04dd7d`__rust_try</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`std::panicking::try::do_call (101,820 samples, 80.48%)</title><rect x="19.5239%" y="789" width="80.4761%" height="15" fill="rgb(218,157,51)" fg:x="24702" fg:w="101820"/><text x="19.7739%" y="799.50">get_usage_tests-cf82cbf4ae04dd7d`std::panicking::try::do_call</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (101,820 samples, 80.48%)</title><rect x="19.5239%" y="773" width="80.4761%" height="15" fill="rgb(211,91,52)" fg:x="24702" fg:w="101820"/><text x="19.7739%" y="783.50">get_usage_tests-cf82cbf4ae04dd7d`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::harness::poll_future::_{{closure}} (101,820 samples, 80.48%)</title><rect x="19.5239%" y="757" width="80.4761%" height="15" fill="rgb(240,173,1)" fg:x="24702" fg:w="101820"/><text x="19.7739%" y="767.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (101,820 samples, 80.48%)</title><rect x="19.5239%" y="741" width="80.4761%" height="15" fill="rgb(248,20,47)" fg:x="24702" fg:w="101820"/><text x="19.7739%" y="751.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (101,820 samples, 80.48%)</title><rect x="19.5239%" y="725" width="80.4761%" height="15" fill="rgb(217,221,40)" fg:x="24702" fg:w="101820"/><text x="19.7739%" y="735.50">get_usage_tests-cf82cbf4ae04dd7d`tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g></svg></svg>