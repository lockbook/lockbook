apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "org.jmailen.kotlinter"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "app.lockbook"
        minSdkVersion 22
        targetSdkVersion 29
        versionCode 1
        versionName "0.1.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        warningsAsErrors true
        htmlReport false
        xmlReport false
        abortOnError true
        lintConfig file('../lint.xml')
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    kotlinter {
        disabledRules = ["no-wildcard-imports"]
    }

    testOptions {
        unitTests.all {
            jvmArgs '-Djava.library.path=../core/src/main/jniLibs/desktop'
        }
    }

    android.buildFeatures.dataBinding = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Ui Libraries
    implementation "com.google.android.material:material:$material_ui_version"
    implementation "com.afollestad.material-dialogs:core:$dialog_version"
    implementation "androidx.preference:preference-ktx:$preference_version"

    // Support Libraries
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"

    // Android KTX
    implementation "androidx.core:core-ktx:$core_ktx_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$refresh_version"

    // Testing Libraries
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_test_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_test_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test:rules:$test_runner_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // Miscellaneous
    implementation "com.beust:klaxon:$json_parser_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation("com.journeyapps:zxing-android-embedded:$qr_embedded_version") { transitive = false }
    implementation "com.google.zxing:core:$qr_core_version"
    implementation "com.michael-bull.kotlin-result:kotlin-result:$result_version"
    implementation "androidx.biometric:biometric:$fingerprint_version"
    implementation "io.noties.markwon:editor:$markdown_version"
    implementation "com.jakewharton.timber:timber:$logger_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "com.github.tingyik90:snackprogressbar:$snackprogressbar_version"

    implementation project(':core')
}
