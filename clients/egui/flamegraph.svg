<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="24094"><g><title>AppKit`_NSInitializeAppContext (3 samples, 0.01%)</title><rect x="0.0166%" y="741" width="0.0125%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="3"/><text x="0.2666%" y="751.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (8 samples, 0.03%)</title><rect x="0.0000%" y="773" width="0.0332%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="8"/><text x="0.2500%" y="783.50"></text></g><g><title>AppKit`-[NSApplication init] (8 samples, 0.03%)</title><rect x="0.0000%" y="757" width="0.0332%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="8"/><text x="0.2500%" y="767.50"></text></g><g><title>lockbook-egui`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (9 samples, 0.04%)</title><rect x="0.0000%" y="789" width="0.0374%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="9"/><text x="0.2500%" y="799.50"></text></g><g><title>AppKit`+[_NSTrackingAreaManager routeEnterExitEvent:] (3 samples, 0.01%)</title><rect x="0.0374%" y="693" width="0.0125%" height="15" fill="rgb(208,68,35)" fg:x="9" fg:w="3"/><text x="0.2874%" y="703.50"></text></g><g><title>AppKit`+[_NSTrackingAreaAKManager routeEnterExitEvent:] (3 samples, 0.01%)</title><rect x="0.0374%" y="677" width="0.0125%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="3"/><text x="0.2874%" y="687.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (3 samples, 0.01%)</title><rect x="0.0374%" y="661" width="0.0125%" height="15" fill="rgb(207,160,47)" fg:x="9" fg:w="3"/><text x="0.2874%" y="671.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (3 samples, 0.01%)</title><rect x="0.0374%" y="645" width="0.0125%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="3"/><text x="0.2874%" y="655.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager routeEnterExitEvent:] (3 samples, 0.01%)</title><rect x="0.0374%" y="629" width="0.0125%" height="15" fill="rgb(218,30,26)" fg:x="9" fg:w="3"/><text x="0.2874%" y="639.50"></text></g><g><title>AppKit`-[NSApplication _handleActivatedEvent:] (3 samples, 0.01%)</title><rect x="0.0498%" y="693" width="0.0125%" height="15" fill="rgb(220,122,19)" fg:x="12" fg:w="3"/><text x="0.2998%" y="703.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _setMenuBarObscured:] (3 samples, 0.01%)</title><rect x="0.0498%" y="677" width="0.0125%" height="15" fill="rgb(250,228,42)" fg:x="12" fg:w="3"/><text x="0.2998%" y="687.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _updateMenuBarObscured:] (3 samples, 0.01%)</title><rect x="0.0498%" y="661" width="0.0125%" height="15" fill="rgb(240,193,28)" fg:x="12" fg:w="3"/><text x="0.2998%" y="671.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _showMenuBarWithAnimation:postingEvent:orderWindow:forAutoShow:noteVisibility:] (3 samples, 0.01%)</title><rect x="0.0498%" y="645" width="0.0125%" height="15" fill="rgb(216,20,37)" fg:x="12" fg:w="3"/><text x="0.2998%" y="655.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _setBoundsAndUpdateResolution] (3 samples, 0.01%)</title><rect x="0.0498%" y="629" width="0.0125%" height="15" fill="rgb(206,188,39)" fg:x="12" fg:w="3"/><text x="0.2998%" y="639.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _forEachWindowDo:withBlock:] (3 samples, 0.01%)</title><rect x="0.0498%" y="613" width="0.0125%" height="15" fill="rgb(217,207,13)" fg:x="12" fg:w="3"/><text x="0.2998%" y="623.50"></text></g><g><title>AppKit`-[NSApplication _handleDeactivateEvent:] (3 samples, 0.01%)</title><rect x="0.0623%" y="693" width="0.0125%" height="15" fill="rgb(231,73,38)" fg:x="15" fg:w="3"/><text x="0.3123%" y="703.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (4 samples, 0.02%)</title><rect x="0.0830%" y="693" width="0.0166%" height="15" fill="rgb(225,20,46)" fg:x="20" fg:w="4"/><text x="0.3330%" y="703.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (3 samples, 0.01%)</title><rect x="0.0872%" y="677" width="0.0125%" height="15" fill="rgb(210,31,41)" fg:x="21" fg:w="3"/><text x="0.3372%" y="687.50"></text></g><g><title>lockbook-egui`winit::platform_impl::platform::view::WinitView::key_down (3 samples, 0.01%)</title><rect x="0.0872%" y="661" width="0.0125%" height="15" fill="rgb(221,200,47)" fg:x="21" fg:w="3"/><text x="0.3372%" y="671.50"></text></g><g><title>AppKit`-[NSView interpretKeyEvents:] (3 samples, 0.01%)</title><rect x="0.0872%" y="645" width="0.0125%" height="15" fill="rgb(226,26,5)" fg:x="21" fg:w="3"/><text x="0.3372%" y="655.50"></text></g><g><title>AppKit`-[NSTextInputContext _handleEvent:allowingSyntheticEvent:] (3 samples, 0.01%)</title><rect x="0.0872%" y="629" width="0.0125%" height="15" fill="rgb(249,33,26)" fg:x="21" fg:w="3"/><text x="0.3372%" y="639.50"></text></g><g><title>AppKit`-[NSTextInputContext _handleEvent:options:allowingSyntheticEvent:completionHandler:] (3 samples, 0.01%)</title><rect x="0.0872%" y="613" width="0.0125%" height="15" fill="rgb(235,183,28)" fg:x="21" fg:w="3"/><text x="0.3372%" y="623.50"></text></g><g><title>AppKit`-[NSTextInputContext tryTSMProcessRawKeyEvent_orSubstitution:dispatchCondition:setupForDispatch:furtherCondition:doubleSpaceSubstitutionCondition:doubleSpaceSubstitutionWork:dispatchTSMWork:continuation:] (3 samples, 0.01%)</title><rect x="0.0872%" y="597" width="0.0125%" height="15" fill="rgb(221,5,38)" fg:x="21" fg:w="3"/><text x="0.3372%" y="607.50"></text></g><g><title>AppKit`__204-[NSTextInputContext tryTSMProcessRawKeyEvent_orSubstitution:dispatchCondition:setupForDispatch:furtherCondition:doubleSpaceSubstitutionCondition:doubleSpaceSubstitutionWork:dispatchTSMWork:continuation:]_block_invoke.707 (3 samples, 0.01%)</title><rect x="0.0872%" y="581" width="0.0125%" height="15" fill="rgb(247,18,42)" fg:x="21" fg:w="3"/><text x="0.3372%" y="591.50"></text></g><g><title>AppKit`__84-[NSTextInputContext _handleEvent:options:allowingSyntheticEvent:completionHandler:]_block_invoke_3.724 (3 samples, 0.01%)</title><rect x="0.0872%" y="565" width="0.0125%" height="15" fill="rgb(241,131,45)" fg:x="21" fg:w="3"/><text x="0.3372%" y="575.50"></text></g><g><title>HIToolbox`TSMProcessRawKeyEventWithOptionsAndCompletionHandler (3 samples, 0.01%)</title><rect x="0.0872%" y="549" width="0.0125%" height="15" fill="rgb(249,31,29)" fg:x="21" fg:w="3"/><text x="0.3372%" y="559.50"></text></g><g><title>AppKit`_routeMouseMovedEvent (4 samples, 0.02%)</title><rect x="0.1038%" y="645" width="0.0166%" height="15" fill="rgb(225,111,53)" fg:x="25" fg:w="4"/><text x="0.3538%" y="655.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (21 samples, 0.09%)</title><rect x="0.0374%" y="741" width="0.0872%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="21"/><text x="0.2874%" y="751.50"></text></g><g><title>lockbook-egui`winit::platform_impl::platform::app::WinitApplication::send_event (21 samples, 0.09%)</title><rect x="0.0374%" y="725" width="0.0872%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="21"/><text x="0.2874%" y="735.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) sendEvent:] (21 samples, 0.09%)</title><rect x="0.0374%" y="709" width="0.0872%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="21"/><text x="0.2874%" y="719.50"></text></g><g><title>AppKit`routeMouseMovedEvent (6 samples, 0.02%)</title><rect x="0.0996%" y="693" width="0.0249%" height="15" fill="rgb(209,103,24)" fg:x="24" fg:w="6"/><text x="0.3496%" y="703.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (5 samples, 0.02%)</title><rect x="0.1038%" y="677" width="0.0208%" height="15" fill="rgb(229,88,8)" fg:x="25" fg:w="5"/><text x="0.3538%" y="687.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (5 samples, 0.02%)</title><rect x="0.1038%" y="661" width="0.0208%" height="15" fill="rgb(213,181,19)" fg:x="25" fg:w="5"/><text x="0.3538%" y="671.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (3 samples, 0.01%)</title><rect x="0.1287%" y="725" width="0.0125%" height="15" fill="rgb(254,191,54)" fg:x="31" fg:w="3"/><text x="0.3787%" y="735.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (4 samples, 0.02%)</title><rect x="0.1577%" y="245" width="0.0166%" height="15" fill="rgb(241,83,37)" fg:x="38" fg:w="4"/><text x="0.4077%" y="255.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (4 samples, 0.02%)</title><rect x="0.1577%" y="229" width="0.0166%" height="15" fill="rgb(233,36,39)" fg:x="38" fg:w="4"/><text x="0.4077%" y="239.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (4 samples, 0.02%)</title><rect x="0.1577%" y="213" width="0.0166%" height="15" fill="rgb(226,3,54)" fg:x="38" fg:w="4"/><text x="0.4077%" y="223.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (4 samples, 0.02%)</title><rect x="0.1577%" y="197" width="0.0166%" height="15" fill="rgb(245,192,40)" fg:x="38" fg:w="4"/><text x="0.4077%" y="207.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (4 samples, 0.02%)</title><rect x="0.1577%" y="181" width="0.0166%" height="15" fill="rgb(238,167,29)" fg:x="38" fg:w="4"/><text x="0.4077%" y="191.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (4 samples, 0.02%)</title><rect x="0.1577%" y="165" width="0.0166%" height="15" fill="rgb(232,182,51)" fg:x="38" fg:w="4"/><text x="0.4077%" y="175.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (4 samples, 0.02%)</title><rect x="0.1577%" y="149" width="0.0166%" height="15" fill="rgb(231,60,39)" fg:x="38" fg:w="4"/><text x="0.4077%" y="159.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (4 samples, 0.02%)</title><rect x="0.1577%" y="133" width="0.0166%" height="15" fill="rgb(208,69,12)" fg:x="38" fg:w="4"/><text x="0.4077%" y="143.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (5 samples, 0.02%)</title><rect x="0.1577%" y="261" width="0.0208%" height="15" fill="rgb(235,93,37)" fg:x="38" fg:w="5"/><text x="0.4077%" y="271.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (7 samples, 0.03%)</title><rect x="0.1577%" y="277" width="0.0291%" height="15" fill="rgb(213,116,39)" fg:x="38" fg:w="7"/><text x="0.4077%" y="287.50"></text></g><g><title>lockbook-egui`egui_winit::create_window (14 samples, 0.06%)</title><rect x="0.1494%" y="373" width="0.0581%" height="15" fill="rgb(222,207,29)" fg:x="36" fg:w="14"/><text x="0.3994%" y="383.50"></text></g><g><title>lockbook-egui`winit::platform_impl::platform::window::WinitWindow::new (14 samples, 0.06%)</title><rect x="0.1494%" y="357" width="0.0581%" height="15" fill="rgb(206,96,30)" fg:x="36" fg:w="14"/><text x="0.3994%" y="367.50"></text></g><g><title>lockbook-egui`winit::platform_impl::platform::window::WinitWindow::init (13 samples, 0.05%)</title><rect x="0.1536%" y="341" width="0.0540%" height="15" fill="rgb(218,138,4)" fg:x="37" fg:w="13"/><text x="0.4036%" y="351.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (13 samples, 0.05%)</title><rect x="0.1536%" y="325" width="0.0540%" height="15" fill="rgb(250,191,14)" fg:x="37" fg:w="13"/><text x="0.4036%" y="335.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (13 samples, 0.05%)</title><rect x="0.1536%" y="309" width="0.0540%" height="15" fill="rgb(239,60,40)" fg:x="37" fg:w="13"/><text x="0.4036%" y="319.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (12 samples, 0.05%)</title><rect x="0.1577%" y="293" width="0.0498%" height="15" fill="rgb(206,27,48)" fg:x="38" fg:w="12"/><text x="0.4077%" y="303.50"></text></g><g><title>AppKit`-[NSWindow _commonAwake] (5 samples, 0.02%)</title><rect x="0.1868%" y="277" width="0.0208%" height="15" fill="rgb(225,35,8)" fg:x="45" fg:w="5"/><text x="0.4368%" y="287.50"></text></g><g><title>AppKit`_NXCreateWindow (4 samples, 0.02%)</title><rect x="0.1909%" y="261" width="0.0166%" height="15" fill="rgb(250,213,24)" fg:x="46" fg:w="4"/><text x="0.4409%" y="271.50"></text></g><g><title>AppKit`+[NSCGSWindow(NSCGSWindowCreation) windowWithConnectionID:flags:] (4 samples, 0.02%)</title><rect x="0.1909%" y="245" width="0.0166%" height="15" fill="rgb(247,123,22)" fg:x="46" fg:w="4"/><text x="0.4409%" y="255.50"></text></g><g><title>AppKit`-[NSCGSWindow initWithConnectionID:flags:] (4 samples, 0.02%)</title><rect x="0.1909%" y="229" width="0.0166%" height="15" fill="rgb(231,138,38)" fg:x="46" fg:w="4"/><text x="0.4409%" y="239.50"></text></g><g><title>AppKit`-[NSCGSWindow _createRootLayerAndContextIfNeededUsingAsyncBehavior:] (4 samples, 0.02%)</title><rect x="0.1909%" y="213" width="0.0166%" height="15" fill="rgb(231,145,46)" fg:x="46" fg:w="4"/><text x="0.4409%" y="223.50"></text></g><g><title>AppKit`-[NSCGSWindow _createContext] (4 samples, 0.02%)</title><rect x="0.1909%" y="197" width="0.0166%" height="15" fill="rgb(251,118,11)" fg:x="46" fg:w="4"/><text x="0.4409%" y="207.50"></text></g><g><title>Metal`MTLCopyAllDevices (4 samples, 0.02%)</title><rect x="0.1909%" y="181" width="0.0166%" height="15" fill="rgb(217,147,25)" fg:x="46" fg:w="4"/><text x="0.4409%" y="191.50"></text></g><g><title>Metal`MTLRegisterDevices (3 samples, 0.01%)</title><rect x="0.1951%" y="165" width="0.0125%" height="15" fill="rgb(247,81,37)" fg:x="47" fg:w="3"/><text x="0.4451%" y="175.50"></text></g><g><title>Metal`-[MTLIOAccelServiceGlobalContext init] (3 samples, 0.01%)</title><rect x="0.1951%" y="149" width="0.0125%" height="15" fill="rgb(209,12,38)" fg:x="47" fg:w="3"/><text x="0.4451%" y="159.50"></text></g><g><title>Metal`getMetalPluginClassForService (3 samples, 0.01%)</title><rect x="0.1951%" y="133" width="0.0125%" height="15" fill="rgb(227,1,9)" fg:x="47" fg:w="3"/><text x="0.4451%" y="143.50"></text></g><g><title>lockbook-egui`pollster::block_on (4 samples, 0.02%)</title><rect x="0.2075%" y="373" width="0.0166%" height="15" fill="rgb(248,47,43)" fg:x="50" fg:w="4"/><text x="0.4575%" y="383.50"></text></g><g><title>lockbook-egui`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (19 samples, 0.08%)</title><rect x="0.1494%" y="437" width="0.0789%" height="15" fill="rgb(221,10,30)" fg:x="36" fg:w="19"/><text x="0.3994%" y="447.50"></text></g><g><title>lockbook-egui`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (19 samples, 0.08%)</title><rect x="0.1494%" y="421" width="0.0789%" height="15" fill="rgb(210,229,1)" fg:x="36" fg:w="19"/><text x="0.3994%" y="431.50"></text></g><g><title>lockbook-egui`eframe::native::run::run_and_return::_{{closure}} (19 samples, 0.08%)</title><rect x="0.1494%" y="405" width="0.0789%" height="15" fill="rgb(222,148,37)" fg:x="36" fg:w="19"/><text x="0.3994%" y="415.50"></text></g><g><title>lockbook-egui`&lt;eframe::native::wgpu_integration::WgpuWinitApp as eframe::native::winit_integration::WinitApp&gt;::on_event (19 samples, 0.08%)</title><rect x="0.1494%" y="389" width="0.0789%" height="15" fill="rgb(234,67,33)" fg:x="36" fg:w="19"/><text x="0.3994%" y="399.50"></text></g><g><title>AppKit`+[NSMenuItem separatorItem] (3 samples, 0.01%)</title><rect x="0.2283%" y="421" width="0.0125%" height="15" fill="rgb(247,98,35)" fg:x="55" fg:w="3"/><text x="0.4783%" y="431.50"></text></g><g><title>AppKit`-[NSMenuItem _configureAsSeparatorItem] (3 samples, 0.01%)</title><rect x="0.2283%" y="405" width="0.0125%" height="15" fill="rgb(247,138,52)" fg:x="55" fg:w="3"/><text x="0.4783%" y="415.50"></text></g><g><title>AppKit`-[NSMenuItem setTitle:] (3 samples, 0.01%)</title><rect x="0.2283%" y="389" width="0.0125%" height="15" fill="rgb(213,79,30)" fg:x="55" fg:w="3"/><text x="0.4783%" y="399.50"></text></g><g><title>Foundation`_NSFaultInObject (3 samples, 0.01%)</title><rect x="0.2283%" y="373" width="0.0125%" height="15" fill="rgb(246,177,23)" fg:x="55" fg:w="3"/><text x="0.4783%" y="383.50"></text></g><g><title>AppKit`-[NSExtraMIData init] (3 samples, 0.01%)</title><rect x="0.2283%" y="357" width="0.0125%" height="15" fill="rgb(230,62,27)" fg:x="55" fg:w="3"/><text x="0.4783%" y="367.50"></text></g><g><title>AppKit`+[NSImage imageNamed:] (3 samples, 0.01%)</title><rect x="0.2283%" y="341" width="0.0125%" height="15" fill="rgb(216,154,8)" fg:x="55" fg:w="3"/><text x="0.4783%" y="351.50"></text></g><g><title>AppKit`+[NSImage _systemImageNamed:] (3 samples, 0.01%)</title><rect x="0.2283%" y="325" width="0.0125%" height="15" fill="rgb(244,35,45)" fg:x="55" fg:w="3"/><text x="0.4783%" y="335.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (26 samples, 0.11%)</title><rect x="0.1411%" y="709" width="0.1079%" height="15" fill="rgb(251,115,12)" fg:x="34" fg:w="26"/><text x="0.3911%" y="719.50"></text></g><g><title>AE`aeProcessAppleEvent (26 samples, 0.11%)</title><rect x="0.1411%" y="693" width="0.1079%" height="15" fill="rgb(240,54,50)" fg:x="34" fg:w="26"/><text x="0.3911%" y="703.50"></text></g><g><title>AE`0x00000001888e2bdc (26 samples, 0.11%)</title><rect x="0.1411%" y="677" width="0.1079%" height="15" fill="rgb(233,84,52)" fg:x="34" fg:w="26"/><text x="0.3911%" y="687.50"></text></g><g><title>AE`0x00000001888e2c88 (26 samples, 0.11%)</title><rect x="0.1411%" y="661" width="0.1079%" height="15" fill="rgb(207,117,47)" fg:x="34" fg:w="26"/><text x="0.3911%" y="671.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (26 samples, 0.11%)</title><rect x="0.1411%" y="645" width="0.1079%" height="15" fill="rgb(249,43,39)" fg:x="34" fg:w="26"/><text x="0.3911%" y="655.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (26 samples, 0.11%)</title><rect x="0.1411%" y="629" width="0.1079%" height="15" fill="rgb(209,38,44)" fg:x="34" fg:w="26"/><text x="0.3911%" y="639.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (26 samples, 0.11%)</title><rect x="0.1411%" y="613" width="0.1079%" height="15" fill="rgb(236,212,23)" fg:x="34" fg:w="26"/><text x="0.3911%" y="623.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (26 samples, 0.11%)</title><rect x="0.1411%" y="597" width="0.1079%" height="15" fill="rgb(242,79,21)" fg:x="34" fg:w="26"/><text x="0.3911%" y="607.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (25 samples, 0.10%)</title><rect x="0.1453%" y="581" width="0.1038%" height="15" fill="rgb(211,96,35)" fg:x="35" fg:w="25"/><text x="0.3953%" y="591.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (25 samples, 0.10%)</title><rect x="0.1453%" y="565" width="0.1038%" height="15" fill="rgb(253,215,40)" fg:x="35" fg:w="25"/><text x="0.3953%" y="575.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (25 samples, 0.10%)</title><rect x="0.1453%" y="549" width="0.1038%" height="15" fill="rgb(211,81,21)" fg:x="35" fg:w="25"/><text x="0.3953%" y="559.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (25 samples, 0.10%)</title><rect x="0.1453%" y="533" width="0.1038%" height="15" fill="rgb(208,190,38)" fg:x="35" fg:w="25"/><text x="0.3953%" y="543.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (25 samples, 0.10%)</title><rect x="0.1453%" y="517" width="0.1038%" height="15" fill="rgb(235,213,38)" fg:x="35" fg:w="25"/><text x="0.3953%" y="527.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (25 samples, 0.10%)</title><rect x="0.1453%" y="501" width="0.1038%" height="15" fill="rgb(237,122,38)" fg:x="35" fg:w="25"/><text x="0.3953%" y="511.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (25 samples, 0.10%)</title><rect x="0.1453%" y="485" width="0.1038%" height="15" fill="rgb(244,218,35)" fg:x="35" fg:w="25"/><text x="0.3953%" y="495.50"></text></g><g><title>lockbook-egui`winit::platform_impl::platform::app_delegate::ApplicationDelegate::did_finish_launching (25 samples, 0.10%)</title><rect x="0.1453%" y="469" width="0.1038%" height="15" fill="rgb(240,68,47)" fg:x="35" fg:w="25"/><text x="0.3953%" y="479.50"></text></g><g><title>lockbook-egui`winit::platform_impl::platform::app_state::AppState::launched (25 samples, 0.10%)</title><rect x="0.1453%" y="453" width="0.1038%" height="15" fill="rgb(210,16,53)" fg:x="35" fg:w="25"/><text x="0.3953%" y="463.50"></text></g><g><title>lockbook-egui`winit::platform_impl::platform::menu::initialize (5 samples, 0.02%)</title><rect x="0.2283%" y="437" width="0.0208%" height="15" fill="rgb(235,124,12)" fg:x="55" fg:w="5"/><text x="0.4783%" y="447.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (3 samples, 0.01%)</title><rect x="0.2573%" y="645" width="0.0125%" height="15" fill="rgb(224,169,11)" fg:x="62" fg:w="3"/><text x="0.5073%" y="655.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (3 samples, 0.01%)</title><rect x="0.2573%" y="629" width="0.0125%" height="15" fill="rgb(250,166,2)" fg:x="62" fg:w="3"/><text x="0.5073%" y="639.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (3 samples, 0.01%)</title><rect x="0.2573%" y="613" width="0.0125%" height="15" fill="rgb(242,216,29)" fg:x="62" fg:w="3"/><text x="0.5073%" y="623.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (3 samples, 0.01%)</title><rect x="0.2573%" y="597" width="0.0125%" height="15" fill="rgb(230,116,27)" fg:x="62" fg:w="3"/><text x="0.5073%" y="607.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (3 samples, 0.01%)</title><rect x="0.2573%" y="581" width="0.0125%" height="15" fill="rgb(228,99,48)" fg:x="62" fg:w="3"/><text x="0.5073%" y="591.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::closeOver (6 samples, 0.02%)</title><rect x="0.2988%" y="437" width="0.0249%" height="15" fill="rgb(253,11,6)" fg:x="72" fg:w="6"/><text x="0.5488%" y="447.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::closeOverAddCaseMappings (6 samples, 0.02%)</title><rect x="0.2988%" y="421" width="0.0249%" height="15" fill="rgb(247,143,39)" fg:x="72" fg:w="6"/><text x="0.5488%" y="431.50"></text></g><g><title>libicucore.A.dylib`ulocdata_getExemplarSet (10 samples, 0.04%)</title><rect x="0.2864%" y="517" width="0.0415%" height="15" fill="rgb(236,97,10)" fg:x="69" fg:w="10"/><text x="0.5364%" y="527.50"></text></g><g><title>libicucore.A.dylib`uset_openPatternOptions (10 samples, 0.04%)</title><rect x="0.2864%" y="501" width="0.0415%" height="15" fill="rgb(233,208,19)" fg:x="69" fg:w="10"/><text x="0.5364%" y="511.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern (10 samples, 0.04%)</title><rect x="0.2864%" y="485" width="0.0415%" height="15" fill="rgb(216,164,2)" fg:x="69" fg:w="10"/><text x="0.5364%" y="495.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern (10 samples, 0.04%)</title><rect x="0.2864%" y="469" width="0.0415%" height="15" fill="rgb(220,129,5)" fg:x="69" fg:w="10"/><text x="0.5364%" y="479.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern(icu::RuleCharacterIterator&amp;, icu::SymbolTable const*, icu::UnicodeString&amp;, unsigned int, icu::UnicodeSet&amp; (icu::UnicodeSet::*) (10 samples, 0.04%)</title><rect x="0.2864%" y="453" width="0.0415%" height="15" fill="rgb(242,17,10)" fg:x="69" fg:w="10"/><text x="0.5364%" y="463.50"></text></g><g><title>AppKit`__46-[NSIATextInputActionsContext updateInputMode]_block_invoke (13 samples, 0.05%)</title><rect x="0.2781%" y="581" width="0.0540%" height="15" fill="rgb(242,107,0)" fg:x="67" fg:w="13"/><text x="0.5281%" y="591.50"></text></g><g><title>HIToolbox`TSMGetInputSourcePropertyWithSetter (13 samples, 0.05%)</title><rect x="0.2781%" y="565" width="0.0540%" height="15" fill="rgb(251,28,31)" fg:x="67" fg:w="13"/><text x="0.5281%" y="575.50"></text></g><g><title>HIToolbox`islGetInputSourcePropertyWithSetter (13 samples, 0.05%)</title><rect x="0.2781%" y="549" width="0.0540%" height="15" fill="rgb(233,223,10)" fg:x="67" fg:w="13"/><text x="0.5281%" y="559.50"></text></g><g><title>HIToolbox`TISCreatePropertyInputSourceLanguages (13 samples, 0.05%)</title><rect x="0.2781%" y="533" width="0.0540%" height="15" fill="rgb(215,21,27)" fg:x="67" fg:w="13"/><text x="0.5281%" y="543.50"></text></g><g><title>AppKit`___NSMainRunLoopPerformBlockInModes_block_invoke (14 samples, 0.06%)</title><rect x="0.2781%" y="597" width="0.0581%" height="15" fill="rgb(232,23,21)" fg:x="67" fg:w="14"/><text x="0.5281%" y="607.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (16 samples, 0.07%)</title><rect x="0.2781%" y="629" width="0.0664%" height="15" fill="rgb(244,5,23)" fg:x="67" fg:w="16"/><text x="0.5281%" y="639.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (16 samples, 0.07%)</title><rect x="0.2781%" y="613" width="0.0664%" height="15" fill="rgb(226,81,46)" fg:x="67" fg:w="16"/><text x="0.5281%" y="623.50"></text></g><g><title>HIToolbox`MyActivateTSMDocument (3 samples, 0.01%)</title><rect x="0.3528%" y="517" width="0.0125%" height="15" fill="rgb(247,70,30)" fg:x="85" fg:w="3"/><text x="0.6028%" y="527.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (7 samples, 0.03%)</title><rect x="0.3486%" y="581" width="0.0291%" height="15" fill="rgb(212,68,19)" fg:x="84" fg:w="7"/><text x="0.5986%" y="591.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (7 samples, 0.03%)</title><rect x="0.3486%" y="565" width="0.0291%" height="15" fill="rgb(240,187,13)" fg:x="84" fg:w="7"/><text x="0.5986%" y="575.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (7 samples, 0.03%)</title><rect x="0.3486%" y="549" width="0.0291%" height="15" fill="rgb(223,113,26)" fg:x="84" fg:w="7"/><text x="0.5986%" y="559.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (7 samples, 0.03%)</title><rect x="0.3486%" y="533" width="0.0291%" height="15" fill="rgb(206,192,2)" fg:x="84" fg:w="7"/><text x="0.5986%" y="543.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (5 samples, 0.02%)</title><rect x="0.3818%" y="533" width="0.0208%" height="15" fill="rgb(241,108,4)" fg:x="92" fg:w="5"/><text x="0.6318%" y="543.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (8 samples, 0.03%)</title><rect x="0.3777%" y="549" width="0.0332%" height="15" fill="rgb(247,173,49)" fg:x="91" fg:w="8"/><text x="0.6277%" y="559.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (14 samples, 0.06%)</title><rect x="0.3777%" y="581" width="0.0581%" height="15" fill="rgb(224,114,35)" fg:x="91" fg:w="14"/><text x="0.6277%" y="591.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (14 samples, 0.06%)</title><rect x="0.3777%" y="565" width="0.0581%" height="15" fill="rgb(245,159,27)" fg:x="91" fg:w="14"/><text x="0.6277%" y="575.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (6 samples, 0.02%)</title><rect x="0.4109%" y="549" width="0.0249%" height="15" fill="rgb(245,172,44)" fg:x="99" fg:w="6"/><text x="0.6609%" y="559.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (6 samples, 0.02%)</title><rect x="0.4109%" y="533" width="0.0249%" height="15" fill="rgb(236,23,11)" fg:x="99" fg:w="6"/><text x="0.6609%" y="543.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (5 samples, 0.02%)</title><rect x="0.4150%" y="517" width="0.0208%" height="15" fill="rgb(205,117,38)" fg:x="100" fg:w="5"/><text x="0.6650%" y="527.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (22 samples, 0.09%)</title><rect x="0.3486%" y="597" width="0.0913%" height="15" fill="rgb(237,72,25)" fg:x="84" fg:w="22"/><text x="0.5986%" y="607.50"></text></g><g><title>lockbook-egui`egui::containers::panel::CentralPanel::show_dyn (5 samples, 0.02%)</title><rect x="0.4690%" y="437" width="0.0208%" height="15" fill="rgb(244,70,9)" fg:x="113" fg:w="5"/><text x="0.7190%" y="447.50"></text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.02%)</title><rect x="0.4690%" y="421" width="0.0208%" height="15" fill="rgb(217,125,39)" fg:x="113" fg:w="5"/><text x="0.7190%" y="431.50"></text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.02%)</title><rect x="0.4690%" y="405" width="0.0208%" height="15" fill="rgb(235,36,10)" fg:x="113" fg:w="5"/><text x="0.7190%" y="415.50"></text></g><g><title>lockbook-egui`workspace_rs::workspace::Workspace::show (3 samples, 0.01%)</title><rect x="0.4773%" y="389" width="0.0125%" height="15" fill="rgb(251,123,47)" fg:x="115" fg:w="3"/><text x="0.7273%" y="399.50"></text></g><g><title>lockbook-egui`egui::ui::Ui::with_layout_dyn (3 samples, 0.01%)</title><rect x="0.4773%" y="373" width="0.0125%" height="15" fill="rgb(221,13,13)" fg:x="115" fg:w="3"/><text x="0.7273%" y="383.50"></text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.01%)</title><rect x="0.4773%" y="357" width="0.0125%" height="15" fill="rgb(238,131,9)" fg:x="115" fg:w="3"/><text x="0.7273%" y="367.50"></text></g><g><title>lockbook-egui`egui::ui::Ui::allocate_ui_with_layout_dyn (3 samples, 0.01%)</title><rect x="0.4939%" y="325" width="0.0125%" height="15" fill="rgb(211,50,8)" fg:x="119" fg:w="3"/><text x="0.7439%" y="335.50"></text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.01%)</title><rect x="0.4939%" y="309" width="0.0125%" height="15" fill="rgb(245,182,24)" fg:x="119" fg:w="3"/><text x="0.7439%" y="319.50"></text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.02%)</title><rect x="0.4939%" y="341" width="0.0166%" height="15" fill="rgb(242,14,37)" fg:x="119" fg:w="4"/><text x="0.7439%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.01%)</title><rect x="0.5271%" y="181" width="0.0125%" height="15" fill="rgb(246,228,12)" fg:x="127" fg:w="3"/><text x="0.7771%" y="191.50"></text></g><g><title>lockbook-egui`epaint::text::fonts::FontsAndCache::layout_job (4 samples, 0.02%)</title><rect x="0.5603%" y="117" width="0.0166%" height="15" fill="rgb(213,55,15)" fg:x="135" fg:w="4"/><text x="0.8103%" y="127.50"></text></g><g><title>lockbook-egui`egui::context::Context::write (8 samples, 0.03%)</title><rect x="0.5520%" y="133" width="0.0332%" height="15" fill="rgb(209,9,3)" fg:x="133" fg:w="8"/><text x="0.8020%" y="143.50"></text></g><g><title>lockbook-egui`egui::context::Context::create_widget (7 samples, 0.03%)</title><rect x="0.5894%" y="117" width="0.0291%" height="15" fill="rgb(230,59,30)" fg:x="142" fg:w="7"/><text x="0.8394%" y="127.50"></text></g><g><title>lockbook-egui`egui::ui::Ui::allocate_rect (11 samples, 0.05%)</title><rect x="0.5852%" y="133" width="0.0457%" height="15" fill="rgb(209,121,21)" fg:x="141" fg:w="11"/><text x="0.8352%" y="143.50"></text></g><g><title>lockbook-egui`egui::context::Context::get_response (3 samples, 0.01%)</title><rect x="0.6184%" y="117" width="0.0125%" height="15" fill="rgb(220,109,13)" fg:x="149" fg:w="3"/><text x="0.8684%" y="127.50"></text></g><g><title>lockbook-egui`egui::widget_text::WidgetText::into_layout_job (4 samples, 0.02%)</title><rect x="0.6309%" y="133" width="0.0166%" height="15" fill="rgb(232,18,1)" fg:x="152" fg:w="4"/><text x="0.8809%" y="143.50"></text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (27 samples, 0.11%)</title><rect x="0.5396%" y="181" width="0.1121%" height="15" fill="rgb(215,41,42)" fg:x="130" fg:w="27"/><text x="0.7896%" y="191.50"></text></g><g><title>lockbook-egui`&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (27 samples, 0.11%)</title><rect x="0.5396%" y="165" width="0.1121%" height="15" fill="rgb(224,123,36)" fg:x="130" fg:w="27"/><text x="0.7896%" y="175.50"></text></g><g><title>lockbook-egui`egui::widgets::label::Label::layout_in_ui (25 samples, 0.10%)</title><rect x="0.5479%" y="149" width="0.1038%" height="15" fill="rgb(240,125,3)" fg:x="132" fg:w="25"/><text x="0.7979%" y="159.50"></text></g><g><title>lockbook-egui`egui::ui::Ui::allocate_ui_with_layout_dyn (34 samples, 0.14%)</title><rect x="0.5271%" y="229" width="0.1411%" height="15" fill="rgb(205,98,50)" fg:x="127" fg:w="34"/><text x="0.7771%" y="239.50"></text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (34 samples, 0.14%)</title><rect x="0.5271%" y="213" width="0.1411%" height="15" fill="rgb(205,185,37)" fg:x="127" fg:w="34"/><text x="0.7771%" y="223.50"></text></g><g><title>lockbook-egui`egui::ui::Ui::allocate_ui_with_layout_dyn (34 samples, 0.14%)</title><rect x="0.5271%" y="197" width="0.1411%" height="15" fill="rgb(238,207,15)" fg:x="127" fg:w="34"/><text x="0.7771%" y="207.50"></text></g><g><title>lockbook-egui`egui::ui::Ui::child_ui_with_id_source (4 samples, 0.02%)</title><rect x="0.6516%" y="181" width="0.0166%" height="15" fill="rgb(213,199,42)" fg:x="157" fg:w="4"/><text x="0.9016%" y="191.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (83 samples, 0.34%)</title><rect x="0.6890%" y="133" width="0.3445%" height="15" fill="rgb(235,201,11)" fg:x="166" fg:w="83"/><text x="0.9390%" y="143.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (142 samples, 0.59%)</title><rect x="2.0213%" y="101" width="0.5894%" height="15" fill="rgb(207,46,11)" fg:x="487" fg:w="142"/><text x="2.2713%" y="111.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (317 samples, 1.32%)</title><rect x="1.4402%" y="117" width="1.3157%" height="15" fill="rgb(241,35,35)" fg:x="347" fg:w="317"/><text x="1.6902%" y="127.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (35 samples, 0.15%)</title><rect x="2.6106%" y="101" width="0.1453%" height="15" fill="rgb(243,32,47)" fg:x="629" fg:w="35"/><text x="2.8606%" y="111.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (34 samples, 0.14%)</title><rect x="2.7559%" y="117" width="0.1411%" height="15" fill="rgb(247,202,23)" fg:x="664" fg:w="34"/><text x="3.0059%" y="127.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (36 samples, 0.15%)</title><rect x="3.2041%" y="69" width="0.1494%" height="15" fill="rgb(219,102,11)" fg:x="772" fg:w="36"/><text x="3.4541%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.01%)</title><rect x="4.8767%" y="53" width="0.0125%" height="15" fill="rgb(243,110,44)" fg:x="1175" fg:w="3"/><text x="5.1267%" y="63.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (138 samples, 0.57%)</title><rect x="4.8892%" y="53" width="0.5728%" height="15" fill="rgb(222,74,54)" fg:x="1178" fg:w="138"/><text x="5.1392%" y="63.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (80 samples, 0.33%)</title><rect x="5.4661%" y="53" width="0.3320%" height="15" fill="rgb(216,99,12)" fg:x="1317" fg:w="80"/><text x="5.7161%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`free_small (3 samples, 0.01%)</title><rect x="6.2132%" y="37" width="0.0125%" height="15" fill="rgb(226,22,26)" fg:x="1497" fg:w="3"/><text x="6.4632%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.02%)</title><rect x="6.2298%" y="37" width="0.0166%" height="15" fill="rgb(217,163,10)" fg:x="1501" fg:w="4"/><text x="6.4798%" y="47.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (362 samples, 1.50%)</title><rect x="6.2464%" y="37" width="1.5024%" height="15" fill="rgb(213,25,53)" fg:x="1505" fg:w="362"/><text x="6.4964%" y="47.50"></text></g><g><title>lockbook-egui`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,243 samples, 5.16%)</title><rect x="2.9177%" y="85" width="5.1590%" height="15" fill="rgb(252,105,26)" fg:x="703" fg:w="1243"/><text x="3.1677%" y="95.50">lockbo..</text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,138 samples, 4.72%)</title><rect x="3.3535%" y="69" width="4.7232%" height="15" fill="rgb(220,39,43)" fg:x="808" fg:w="1138"/><text x="3.6035%" y="79.50">lockbo..</text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (549 samples, 2.28%)</title><rect x="5.7981%" y="53" width="2.2786%" height="15" fill="rgb(229,68,48)" fg:x="1397" fg:w="549"/><text x="6.0481%" y="63.50">l..</text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (79 samples, 0.33%)</title><rect x="7.7488%" y="37" width="0.3279%" height="15" fill="rgb(252,8,32)" fg:x="1867" fg:w="79"/><text x="7.9988%" y="47.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (74 samples, 0.31%)</title><rect x="8.0767%" y="85" width="0.3071%" height="15" fill="rgb(223,20,43)" fg:x="1946" fg:w="74"/><text x="8.3267%" y="95.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (37 samples, 0.15%)</title><rect x="8.6910%" y="69" width="0.1536%" height="15" fill="rgb(229,81,49)" fg:x="2094" fg:w="37"/><text x="8.9410%" y="79.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (141 samples, 0.59%)</title><rect x="9.4712%" y="53" width="0.5852%" height="15" fill="rgb(236,28,36)" fg:x="2282" fg:w="141"/><text x="9.7212%" y="63.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (331 samples, 1.37%)</title><rect x="8.8445%" y="69" width="1.3738%" height="15" fill="rgb(249,185,26)" fg:x="2131" fg:w="331"/><text x="9.0945%" y="79.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (39 samples, 0.16%)</title><rect x="10.0564%" y="53" width="0.1619%" height="15" fill="rgb(249,174,33)" fg:x="2423" fg:w="39"/><text x="10.3064%" y="63.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (1,761 samples, 7.31%)</title><rect x="2.9136%" y="101" width="7.3089%" height="15" fill="rgb(233,201,37)" fg:x="702" fg:w="1761"/><text x="3.1636%" y="111.50">lockbook-e..</text></g><g><title>lockbook-egui`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (443 samples, 1.84%)</title><rect x="8.3838%" y="85" width="1.8386%" height="15" fill="rgb(221,78,26)" fg:x="2020" fg:w="443"/><text x="8.6338%" y="95.50">l..</text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (27 samples, 0.11%)</title><rect x="10.2225%" y="101" width="0.1121%" height="15" fill="rgb(250,127,30)" fg:x="2463" fg:w="27"/><text x="10.4725%" y="111.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (49 samples, 0.20%)</title><rect x="10.6001%" y="85" width="0.2034%" height="15" fill="rgb(230,49,44)" fg:x="2554" fg:w="49"/><text x="10.8501%" y="95.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (144 samples, 0.60%)</title><rect x="11.5879%" y="69" width="0.5977%" height="15" fill="rgb(229,67,23)" fg:x="2792" fg:w="144"/><text x="11.8379%" y="79.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (485 samples, 2.01%)</title><rect x="10.3345%" y="101" width="2.0129%" height="15" fill="rgb(249,83,47)" fg:x="2490" fg:w="485"/><text x="10.5845%" y="111.50">l..</text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (372 samples, 1.54%)</title><rect x="10.8035%" y="85" width="1.5440%" height="15" fill="rgb(215,43,3)" fg:x="2603" fg:w="372"/><text x="11.0535%" y="95.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (39 samples, 0.16%)</title><rect x="12.1856%" y="69" width="0.1619%" height="15" fill="rgb(238,154,13)" fg:x="2936" fg:w="39"/><text x="12.4356%" y="79.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::linked_by (2,726 samples, 11.31%)</title><rect x="1.0376%" y="133" width="11.3140%" height="15" fill="rgb(219,56,2)" fg:x="250" fg:w="2726"/><text x="1.2876%" y="143.50">lockbook-egui`lb_..</text></g><g><title>lockbook-egui`lb_rs::logic::tree_like::TreeLike::owned_ids (2,278 samples, 9.45%)</title><rect x="2.8970%" y="117" width="9.4546%" height="15" fill="rgb(233,0,4)" fg:x="698" fg:w="2278"/><text x="3.1470%" y="127.50">lockbook-egui`..</text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (4 samples, 0.02%)</title><rect x="12.3641%" y="101" width="0.0166%" height="15" fill="rgb(235,30,7)" fg:x="2979" fg:w="4"/><text x="12.6141%" y="111.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="12.3682%" y="85" width="0.0125%" height="15" fill="rgb(250,79,13)" fg:x="2980" fg:w="3"/><text x="12.6182%" y="95.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.01%)</title><rect x="12.3931%" y="101" width="0.0125%" height="15" fill="rgb(211,146,34)" fg:x="2986" fg:w="3"/><text x="12.6431%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.02%)</title><rect x="12.4097%" y="85" width="0.0166%" height="15" fill="rgb(228,22,38)" fg:x="2990" fg:w="4"/><text x="12.6597%" y="95.50"></text></g><g><title>lockbook-egui`aes::soft::fixslice::aes256_encrypt (4 samples, 0.02%)</title><rect x="12.4388%" y="53" width="0.0166%" height="15" fill="rgb(235,168,5)" fg:x="2997" fg:w="4"/><text x="12.6888%" y="63.50"></text></g><g><title>lockbook-egui`aes::soft::fixslice::bitslice (3 samples, 0.01%)</title><rect x="12.4554%" y="53" width="0.0125%" height="15" fill="rgb(221,155,16)" fg:x="3001" fg:w="3"/><text x="12.7054%" y="63.50"></text></g><g><title>lockbook-egui`aes::soft::fixslice::inv_bitslice (3 samples, 0.01%)</title><rect x="12.4678%" y="53" width="0.0125%" height="15" fill="rgb(215,215,53)" fg:x="3004" fg:w="3"/><text x="12.7178%" y="63.50"></text></g><g><title>lockbook-egui`aes::soft::fixslice::mix_columns_1 (9 samples, 0.04%)</title><rect x="12.4803%" y="53" width="0.0374%" height="15" fill="rgb(223,4,10)" fg:x="3007" fg:w="9"/><text x="12.7303%" y="63.50"></text></g><g><title>lockbook-egui`aes::soft::fixslice::mix_columns_3 (11 samples, 0.05%)</title><rect x="12.5176%" y="53" width="0.0457%" height="15" fill="rgb(234,103,6)" fg:x="3016" fg:w="11"/><text x="12.7676%" y="63.50"></text></g><g><title>lockbook-egui`&lt;ctr::Ctr&lt;B,F&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (62 samples, 0.26%)</title><rect x="12.4305%" y="69" width="0.2573%" height="15" fill="rgb(227,97,0)" fg:x="2995" fg:w="62"/><text x="12.6805%" y="79.50"></text></g><g><title>lockbook-egui`aes::soft::fixslice::sub_bytes (30 samples, 0.12%)</title><rect x="12.5633%" y="53" width="0.1245%" height="15" fill="rgb(234,150,53)" fg:x="3027" fg:w="30"/><text x="12.8133%" y="63.50"></text></g><g><title>lockbook-egui`&lt;polyval::backend::soft::U64x2 as core::ops::arith::Mul&gt;::mul (3 samples, 0.01%)</title><rect x="12.6920%" y="53" width="0.0125%" height="15" fill="rgb(228,201,54)" fg:x="3058" fg:w="3"/><text x="12.9420%" y="63.50"></text></g><g><title>lockbook-egui`&lt;Alg as aead::Aead&gt;::decrypt (71 samples, 0.29%)</title><rect x="12.4263%" y="85" width="0.2947%" height="15" fill="rgb(222,22,37)" fg:x="2994" fg:w="71"/><text x="12.6763%" y="95.50"></text></g><g><title>lockbook-egui`aes_gcm::AesGcm&lt;Aes,NonceSize&gt;::compute_tag (8 samples, 0.03%)</title><rect x="12.6878%" y="69" width="0.0332%" height="15" fill="rgb(237,53,32)" fg:x="3057" fg:w="8"/><text x="12.9378%" y="79.50"></text></g><g><title>lockbook-egui`universal_hash::UniversalHash::update_padded (4 samples, 0.02%)</title><rect x="12.7044%" y="53" width="0.0166%" height="15" fill="rgb(233,25,53)" fg:x="3061" fg:w="4"/><text x="12.9544%" y="63.50"></text></g><g><title>lockbook-egui`&lt;polyval::backend::soft::U64x2 as core::ops::arith::Mul&gt;::mul (3 samples, 0.01%)</title><rect x="12.7086%" y="37" width="0.0125%" height="15" fill="rgb(210,40,34)" fg:x="3062" fg:w="3"/><text x="12.9586%" y="47.50"></text></g><g><title>lockbook-egui`aes::soft::fixslice::mix_columns_1 (5 samples, 0.02%)</title><rect x="12.7376%" y="69" width="0.0208%" height="15" fill="rgb(241,220,44)" fg:x="3069" fg:w="5"/><text x="12.9876%" y="79.50"></text></g><g><title>lockbook-egui`&lt;aes_gcm::AesGcm&lt;Aes,NonceSize&gt; as core::convert::From&lt;Aes&gt;&gt;::from (23 samples, 0.10%)</title><rect x="12.7210%" y="85" width="0.0955%" height="15" fill="rgb(235,28,35)" fg:x="3065" fg:w="23"/><text x="12.9710%" y="95.50"></text></g><g><title>lockbook-egui`aes::soft::fixslice::sub_bytes (12 samples, 0.05%)</title><rect x="12.7667%" y="69" width="0.0498%" height="15" fill="rgb(210,56,17)" fg:x="3076" fg:w="12"/><text x="13.0167%" y="79.50"></text></g><g><title>lockbook-egui`aes::soft::fixslice::aes256_key_schedule (17 samples, 0.07%)</title><rect x="12.8165%" y="85" width="0.0706%" height="15" fill="rgb(224,130,29)" fg:x="3088" fg:w="17"/><text x="13.0665%" y="95.50"></text></g><g><title>lockbook-egui`aes::soft::fixslice::xor_columns (7 samples, 0.03%)</title><rect x="12.8580%" y="69" width="0.0291%" height="15" fill="rgb(235,212,8)" fg:x="3098" fg:w="7"/><text x="13.1080%" y="79.50"></text></g><g><title>lockbook-egui`lb_rs::logic::symkey::decrypt (127 samples, 0.53%)</title><rect x="12.4056%" y="101" width="0.5271%" height="15" fill="rgb(223,33,50)" fg:x="2989" fg:w="127"/><text x="12.6556%" y="111.50"></text></g><g><title>lockbook-egui`aes::soft::fixslice::sub_bytes (9 samples, 0.04%)</title><rect x="12.8953%" y="85" width="0.0374%" height="15" fill="rgb(219,149,13)" fg:x="3107" fg:w="9"/><text x="13.1453%" y="95.50"></text></g><g><title>lockbook-egui`&lt;libsecp256k1_core::group::Affine as core::convert::From&lt;libsecp256k1_core::group::AffineStorage&gt;&gt;::from (18 samples, 0.07%)</title><rect x="12.9327%" y="85" width="0.0747%" height="15" fill="rgb(250,156,29)" fg:x="3116" fg:w="18"/><text x="13.1827%" y="95.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::mul_in_place (932 samples, 3.87%)</title><rect x="13.1817%" y="69" width="3.8682%" height="15" fill="rgb(216,193,19)" fg:x="3176" fg:w="932"/><text x="13.4317%" y="79.50">lock..</text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::normalizes_to_zero (11 samples, 0.05%)</title><rect x="17.0499%" y="69" width="0.0457%" height="15" fill="rgb(216,135,14)" fg:x="4108" fg:w="11"/><text x="17.2999%" y="79.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::sqr_in_place (316 samples, 1.31%)</title><rect x="17.0955%" y="69" width="1.3115%" height="15" fill="rgb(241,47,5)" fg:x="4119" fg:w="316"/><text x="17.3455%" y="79.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (1,418 samples, 5.89%)</title><rect x="13.0074%" y="85" width="5.8853%" height="15" fill="rgb(233,42,35)" fg:x="3134" fg:w="1418"/><text x="13.2574%" y="95.50">lockboo..</text></g><g><title>lockbook-egui`libsecp256k1_core::group::Jacobian::add_ge_in_place (117 samples, 0.49%)</title><rect x="18.4071%" y="69" width="0.4856%" height="15" fill="rgb(231,13,6)" fg:x="4435" fg:w="117"/><text x="18.6571%" y="79.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::mul_in_place (7 samples, 0.03%)</title><rect x="18.8927%" y="85" width="0.0291%" height="15" fill="rgb(207,181,40)" fg:x="4552" fg:w="7"/><text x="19.1427%" y="95.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::inv (7 samples, 0.03%)</title><rect x="18.9217%" y="69" width="0.0291%" height="15" fill="rgb(254,173,49)" fg:x="4559" fg:w="7"/><text x="19.1717%" y="79.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::mul_in_place (36 samples, 0.15%)</title><rect x="18.9508%" y="69" width="0.1494%" height="15" fill="rgb(221,1,38)" fg:x="4566" fg:w="36"/><text x="19.2008%" y="79.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::group::Affine::set_gej (430 samples, 1.78%)</title><rect x="18.9217%" y="85" width="1.7847%" height="15" fill="rgb(206,124,46)" fg:x="4559" fg:w="430"/><text x="19.1717%" y="95.50">l..</text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::sqr_in_place (387 samples, 1.61%)</title><rect x="19.1002%" y="69" width="1.6062%" height="15" fill="rgb(249,21,11)" fg:x="4602" fg:w="387"/><text x="19.3502%" y="79.50"></text></g><g><title>lockbook-egui`libsecp256k1::PublicKey::from_secret_key (1,880 samples, 7.80%)</title><rect x="12.9327%" y="101" width="7.8028%" height="15" fill="rgb(222,201,40)" fg:x="3116" fg:w="1880"/><text x="13.1827%" y="111.50">lockbook-eg..</text></g><g><title>lockbook-egui`libsecp256k1_core::group::Jacobian::add_ge_in_place (7 samples, 0.03%)</title><rect x="20.7064%" y="85" width="0.0291%" height="15" fill="rgb(235,61,29)" fg:x="4989" fg:w="7"/><text x="20.9564%" y="95.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::mul_in_place (24 samples, 0.10%)</title><rect x="20.7894%" y="53" width="0.0996%" height="15" fill="rgb(219,207,3)" fg:x="5009" fg:w="24"/><text x="21.0394%" y="63.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::sqr_in_place (4 samples, 0.02%)</title><rect x="20.8890%" y="53" width="0.0166%" height="15" fill="rgb(222,56,46)" fg:x="5033" fg:w="4"/><text x="21.1390%" y="63.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::ecmult::odd_multiples_table (29 samples, 0.12%)</title><rect x="20.7894%" y="69" width="0.1204%" height="15" fill="rgb(239,76,54)" fg:x="5009" fg:w="29"/><text x="21.0394%" y="79.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::mul_in_place (520 samples, 2.16%)</title><rect x="20.9098%" y="69" width="2.1582%" height="15" fill="rgb(231,124,27)" fg:x="5038" fg:w="520"/><text x="21.1598%" y="79.50">l..</text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::sqr_in_place (395 samples, 1.64%)</title><rect x="23.0763%" y="69" width="1.6394%" height="15" fill="rgb(249,195,6)" fg:x="5560" fg:w="395"/><text x="23.3263%" y="79.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::group::Jacobian::add_ge_in_place (21 samples, 0.09%)</title><rect x="24.7157%" y="69" width="0.0872%" height="15" fill="rgb(237,174,47)" fg:x="5955" fg:w="21"/><text x="24.9657%" y="79.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::group::Jacobian::double_var_in_place (18 samples, 0.07%)</title><rect x="24.8029%" y="69" width="0.0747%" height="15" fill="rgb(206,201,31)" fg:x="5976" fg:w="18"/><text x="25.0529%" y="79.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::ecmult::ECMultContext::ecmult_const (997 samples, 4.14%)</title><rect x="20.7438%" y="85" width="4.1380%" height="15" fill="rgb(231,57,52)" fg:x="4998" fg:w="997"/><text x="20.9938%" y="95.50">lockb..</text></g><g><title>lockbook-egui`libsecp256k1_core::ecmult::table_get_ge_const (54 samples, 0.22%)</title><rect x="24.8817%" y="85" width="0.2241%" height="15" fill="rgb(248,177,22)" fg:x="5995" fg:w="54"/><text x="25.1317%" y="95.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::mul_in_place (3 samples, 0.01%)</title><rect x="25.1058%" y="85" width="0.0125%" height="15" fill="rgb(215,211,37)" fg:x="6049" fg:w="3"/><text x="25.3558%" y="95.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::inv (4 samples, 0.02%)</title><rect x="25.1224%" y="69" width="0.0166%" height="15" fill="rgb(241,128,51)" fg:x="6053" fg:w="4"/><text x="25.3724%" y="79.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::mul_in_place (5 samples, 0.02%)</title><rect x="25.1390%" y="69" width="0.0208%" height="15" fill="rgb(227,165,31)" fg:x="6057" fg:w="5"/><text x="25.3890%" y="79.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::group::Affine::set_gej (89 samples, 0.37%)</title><rect x="25.1224%" y="85" width="0.3694%" height="15" fill="rgb(228,167,24)" fg:x="6053" fg:w="89"/><text x="25.3724%" y="95.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::sqr_in_place (80 samples, 0.33%)</title><rect x="25.1598%" y="69" width="0.3320%" height="15" fill="rgb(228,143,12)" fg:x="6062" fg:w="80"/><text x="25.4098%" y="79.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::decrypt_key (3,172 samples, 13.17%)</title><rect x="12.3641%" y="117" width="13.1651%" height="15" fill="rgb(249,149,8)" fg:x="2979" fg:w="3172"/><text x="12.6141%" y="127.50">lockbook-egui`lb_rs:..</text></g><g><title>lockbook-egui`libsecp256k1_core::ecdh::_&lt;impl libsecp256k1_core::ecmult::ECMultContext&gt;::ecdh_raw (1,155 samples, 4.79%)</title><rect x="20.7355%" y="101" width="4.7937%" height="15" fill="rgb(243,35,44)" fg:x="4996" fg:w="1155"/><text x="20.9855%" y="111.50">lockbo..</text></g><g><title>lockbook-egui`libsecp256k1_core::group::Jacobian::double_var_in_place (9 samples, 0.04%)</title><rect x="25.4918%" y="85" width="0.0374%" height="15" fill="rgb(246,89,9)" fg:x="6142" fg:w="9"/><text x="25.7418%" y="95.50"></text></g><g><title>lockbook-egui`&lt;ctr::Ctr&lt;B,F&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (6 samples, 0.02%)</title><rect x="25.5333%" y="85" width="0.0249%" height="15" fill="rgb(233,213,13)" fg:x="6152" fg:w="6"/><text x="25.7833%" y="95.50"></text></g><g><title>lockbook-egui`aes::soft::fixslice::sub_bytes (4 samples, 0.02%)</title><rect x="25.5416%" y="69" width="0.0166%" height="15" fill="rgb(233,141,41)" fg:x="6154" fg:w="4"/><text x="25.7916%" y="79.50"></text></g><g><title>lockbook-egui`&lt;Alg as aead::Aead&gt;::decrypt (9 samples, 0.04%)</title><rect x="25.5333%" y="101" width="0.0374%" height="15" fill="rgb(239,167,4)" fg:x="6152" fg:w="9"/><text x="25.7833%" y="111.50"></text></g><g><title>lockbook-egui`lb_rs::logic::secret_filename::SecretFileName::to_string (16 samples, 0.07%)</title><rect x="25.5292%" y="117" width="0.0664%" height="15" fill="rgb(209,217,16)" fg:x="6151" fg:w="16"/><text x="25.7792%" y="127.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::name (3,192 samples, 13.25%)</title><rect x="12.3516%" y="133" width="13.2481%" height="15" fill="rgb(219,88,35)" fg:x="2976" fg:w="3192"/><text x="12.6016%" y="143.50">lockbook-egui`lb_rs:..</text></g><g><title>lockbook-egui`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (9 samples, 0.04%)</title><rect x="25.6039%" y="117" width="0.0374%" height="15" fill="rgb(220,193,23)" fg:x="6169" fg:w="9"/><text x="25.8539%" y="127.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::mul_in_place (7 samples, 0.03%)</title><rect x="25.6122%" y="101" width="0.0291%" height="15" fill="rgb(230,90,52)" fg:x="6171" fg:w="7"/><text x="25.8622%" y="111.50"></text></g><g><title>lockbook-egui`lb_rs::logic::core_ops::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::decrypt (6,015 samples, 24.96%)</title><rect x="0.6890%" y="149" width="24.9647%" height="15" fill="rgb(252,106,19)" fg:x="166" fg:w="6015"/><text x="0.9390%" y="159.50">lockbook-egui`lb_rs::logic::core_ops::_&lt;..</text></g><g><title>lockbook-egui`libsecp256k1::PublicKey::from_secret_key (12 samples, 0.05%)</title><rect x="25.6039%" y="133" width="0.0498%" height="15" fill="rgb(206,74,20)" fg:x="6169" fg:w="12"/><text x="25.8539%" y="143.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::group::Affine::set_gej (3 samples, 0.01%)</title><rect x="25.6412%" y="117" width="0.0125%" height="15" fill="rgb(230,138,44)" fg:x="6178" fg:w="3"/><text x="25.8912%" y="127.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (3 samples, 0.01%)</title><rect x="25.6578%" y="133" width="0.0125%" height="15" fill="rgb(235,182,43)" fg:x="6182" fg:w="3"/><text x="25.9078%" y="143.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::calculate_deleted (5 samples, 0.02%)</title><rect x="25.6578%" y="149" width="0.0208%" height="15" fill="rgb(242,16,51)" fg:x="6182" fg:w="5"/><text x="25.9078%" y="159.50"></text></g><g><title>lockbook-egui`lb_rs::blocking::Lb::get_file_by_id (6,027 samples, 25.01%)</title><rect x="0.6682%" y="229" width="25.0145%" height="15" fill="rgb(248,9,4)" fg:x="161" fg:w="6027"/><text x="0.9182%" y="239.50">lockbook-egui`lb_rs::blocking::Lb::get_f..</text></g><g><title>lockbook-egui`tokio::runtime::runtime::Runtime::block_on (6,027 samples, 25.01%)</title><rect x="0.6682%" y="213" width="25.0145%" height="15" fill="rgb(210,31,22)" fg:x="161" fg:w="6027"/><text x="0.9182%" y="223.50">lockbook-egui`tokio::runtime::runtime::R..</text></g><g><title>lockbook-egui`tokio::runtime::context::runtime::enter_runtime (6,026 samples, 25.01%)</title><rect x="0.6724%" y="197" width="25.0104%" height="15" fill="rgb(239,54,39)" fg:x="162" fg:w="6026"/><text x="0.9224%" y="207.50">lockbook-egui`tokio::runtime::context::r..</text></g><g><title>lockbook-egui`tokio::runtime::park::CachedParkThread::block_on (6,025 samples, 25.01%)</title><rect x="0.6765%" y="181" width="25.0062%" height="15" fill="rgb(230,99,41)" fg:x="163" fg:w="6025"/><text x="0.9265%" y="191.50">lockbook-egui`tokio::runtime::park::Cach..</text></g><g><title>lockbook-egui`lb_rs::service::file::_&lt;impl lb_rs::Lb&gt;::get_file_by_id::_{{closure}} (6,024 samples, 25.00%)</title><rect x="0.6807%" y="165" width="25.0021%" height="15" fill="rgb(253,106,12)" fg:x="164" fg:w="6024"/><text x="0.9307%" y="175.50">lockbook-egui`lb_rs::service::file::_&lt;im..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.01%)</title><rect x="25.7118%" y="117" width="0.0125%" height="15" fill="rgb(213,46,41)" fg:x="6195" fg:w="3"/><text x="25.9618%" y="127.50"></text></g><g><title>lockbook-egui`egui::context::Context::write (5 samples, 0.02%)</title><rect x="25.7076%" y="149" width="0.0208%" height="15" fill="rgb(215,133,35)" fg:x="6194" fg:w="5"/><text x="25.9576%" y="159.50"></text></g><g><title>lockbook-egui`epaint::text::fonts::FontsAndCache::layout_job (4 samples, 0.02%)</title><rect x="25.7118%" y="133" width="0.0166%" height="15" fill="rgb(213,28,5)" fg:x="6195" fg:w="4"/><text x="25.9618%" y="143.50"></text></g><g><title>lockbook-egui`&lt;egui::widgets::label::Label as egui::widgets::Widget&gt;::ui (15 samples, 0.06%)</title><rect x="25.6869%" y="181" width="0.0623%" height="15" fill="rgb(215,77,49)" fg:x="6189" fg:w="15"/><text x="25.9369%" y="191.50"></text></g><g><title>lockbook-egui`egui::widgets::label::Label::layout_in_ui (13 samples, 0.05%)</title><rect x="25.6952%" y="165" width="0.0540%" height="15" fill="rgb(248,100,22)" fg:x="6191" fg:w="13"/><text x="25.9452%" y="175.50"></text></g><g><title>lockbook-egui`egui::ui::Ui::allocate_rect (5 samples, 0.02%)</title><rect x="25.7284%" y="149" width="0.0208%" height="15" fill="rgb(208,67,9)" fg:x="6199" fg:w="5"/><text x="25.9784%" y="159.50"></text></g><g><title>lockbook-egui`egui::context::Context::create_widget (5 samples, 0.02%)</title><rect x="25.7284%" y="133" width="0.0208%" height="15" fill="rgb(219,133,21)" fg:x="6199" fg:w="5"/><text x="25.9784%" y="143.50"></text></g><g><title>lockbook-egui`std::collections::hash::map::Entry&lt;K,V&gt;::or_default (3 samples, 0.01%)</title><rect x="25.7367%" y="117" width="0.0125%" height="15" fill="rgb(246,46,29)" fg:x="6201" fg:w="3"/><text x="25.9867%" y="127.50"></text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (17 samples, 0.07%)</title><rect x="25.6869%" y="197" width="0.0706%" height="15" fill="rgb(246,185,52)" fg:x="6189" fg:w="17"/><text x="25.9369%" y="207.50"></text></g><g><title>lockbook-egui`lockbook_egui::account::full_doc_search::FullDocSearch::show_file (21 samples, 0.09%)</title><rect x="25.6827%" y="229" width="0.0872%" height="15" fill="rgb(252,136,11)" fg:x="6188" fg:w="21"/><text x="25.9327%" y="239.50"></text></g><g><title>lockbook-egui`egui::ui::Ui::allocate_ui_with_layout_dyn (21 samples, 0.09%)</title><rect x="25.6827%" y="213" width="0.0872%" height="15" fill="rgb(219,138,53)" fg:x="6188" fg:w="21"/><text x="25.9327%" y="223.50"></text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (6,083 samples, 25.25%)</title><rect x="0.5271%" y="245" width="25.2469%" height="15" fill="rgb(211,51,23)" fg:x="127" fg:w="6083"/><text x="0.7771%" y="255.50">lockbook-egui`core::ops::function::FnOnc..</text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (6,088 samples, 25.27%)</title><rect x="0.5147%" y="277" width="25.2677%" height="15" fill="rgb(247,221,28)" fg:x="124" fg:w="6088"/><text x="0.7647%" y="287.50">lockbook-egui`core::ops::function::FnOnc..</text></g><g><title>lockbook-egui`egui::ui::Ui::with_layout_dyn (6,086 samples, 25.26%)</title><rect x="0.5230%" y="261" width="25.2594%" height="15" fill="rgb(251,222,45)" fg:x="126" fg:w="6086"/><text x="0.7730%" y="271.50">lockbook-egui`egui::ui::Ui::with_layout_..</text></g><g><title>lockbook-egui`egui::widgets::text_edit::builder::TextEdit::show (5 samples, 0.02%)</title><rect x="25.7824%" y="277" width="0.0208%" height="15" fill="rgb(217,162,53)" fg:x="6212" fg:w="5"/><text x="26.0324%" y="287.50"></text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (6,096 samples, 25.30%)</title><rect x="0.5105%" y="325" width="25.3009%" height="15" fill="rgb(229,93,14)" fg:x="123" fg:w="6096"/><text x="0.7605%" y="335.50">lockbook-egui`core::ops::function::FnOnc..</text></g><g><title>lockbook-egui`egui::ui::Ui::with_layout_dyn (6,096 samples, 25.30%)</title><rect x="0.5105%" y="309" width="25.3009%" height="15" fill="rgb(209,67,49)" fg:x="123" fg:w="6096"/><text x="0.7605%" y="319.50">lockbook-egui`egui::ui::Ui::with_layout_..</text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (6,096 samples, 25.30%)</title><rect x="0.5105%" y="293" width="25.3009%" height="15" fill="rgb(213,87,29)" fg:x="123" fg:w="6096"/><text x="0.7605%" y="303.50">lockbook-egui`core::ops::function::FnOnc..</text></g><g><title>lockbook-egui`egui::containers::frame::Frame::show_dyn (4 samples, 0.02%)</title><rect x="25.8114%" y="277" width="0.0166%" height="15" fill="rgb(205,151,52)" fg:x="6219" fg:w="4"/><text x="26.0614%" y="287.50"></text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.02%)</title><rect x="25.8114%" y="261" width="0.0166%" height="15" fill="rgb(253,215,39)" fg:x="6219" fg:w="4"/><text x="26.0614%" y="271.50"></text></g><g><title>lockbook-egui`lockbook_egui::account::tree::node::TreeNode::show (4 samples, 0.02%)</title><rect x="25.8114%" y="245" width="0.0166%" height="15" fill="rgb(221,220,41)" fg:x="6219" fg:w="4"/><text x="26.0614%" y="255.50"></text></g><g><title>lockbook-egui`lockbook_egui::account::tree::node::TreeNode::show (3 samples, 0.01%)</title><rect x="25.8156%" y="229" width="0.0125%" height="15" fill="rgb(218,133,21)" fg:x="6220" fg:w="3"/><text x="26.0656%" y="239.50"></text></g><g><title>lockbook-egui`lockbook_egui::account::tree::node::TreeNode::show_normal (3 samples, 0.01%)</title><rect x="25.8156%" y="213" width="0.0125%" height="15" fill="rgb(221,193,43)" fg:x="6220" fg:w="3"/><text x="26.0656%" y="223.50"></text></g><g><title>lockbook-egui`egui::ui::Ui::with_layout_dyn (6,101 samples, 25.32%)</title><rect x="0.5105%" y="341" width="25.3217%" height="15" fill="rgb(240,128,52)" fg:x="123" fg:w="6101"/><text x="0.7605%" y="351.50">lockbook-egui`egui::ui::Ui::with_layout_..</text></g><g><title>lockbook-egui`lockbook_egui::account::AccountScreen::show_tree (5 samples, 0.02%)</title><rect x="25.8114%" y="325" width="0.0208%" height="15" fill="rgb(253,114,12)" fg:x="6219" fg:w="5"/><text x="26.0614%" y="335.50"></text></g><g><title>lockbook-egui`egui::containers::scroll_area::ScrollArea::show (5 samples, 0.02%)</title><rect x="25.8114%" y="309" width="0.0208%" height="15" fill="rgb(215,223,47)" fg:x="6219" fg:w="5"/><text x="26.0614%" y="319.50"></text></g><g><title>lockbook-egui`lockbook_egui::account::tree::FileTree::show (5 samples, 0.02%)</title><rect x="25.8114%" y="293" width="0.0208%" height="15" fill="rgb(248,225,23)" fg:x="6219" fg:w="5"/><text x="26.0614%" y="303.50"></text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (6,106 samples, 25.34%)</title><rect x="0.4939%" y="357" width="25.3424%" height="15" fill="rgb(250,108,0)" fg:x="119" fg:w="6106"/><text x="0.7439%" y="367.50">lockbook-egui`core::ops::function::FnOnc..</text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (6,108 samples, 25.35%)</title><rect x="0.4897%" y="405" width="25.3507%" height="15" fill="rgb(228,208,7)" fg:x="118" fg:w="6108"/><text x="0.7397%" y="415.50">lockbook-egui`core::ops::function::FnOnc..</text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (6,108 samples, 25.35%)</title><rect x="0.4897%" y="389" width="25.3507%" height="15" fill="rgb(244,45,10)" fg:x="118" fg:w="6108"/><text x="0.7397%" y="399.50">lockbook-egui`core::ops::function::FnOnc..</text></g><g><title>lockbook-egui`egui::ui::Ui::with_layout_dyn (6,108 samples, 25.35%)</title><rect x="0.4897%" y="373" width="25.3507%" height="15" fill="rgb(207,125,25)" fg:x="118" fg:w="6108"/><text x="0.7397%" y="383.50">lockbook-egui`egui::ui::Ui::with_layout_..</text></g><g><title>lockbook-egui`lockbook_egui::account::AccountScreen::update (6,116 samples, 25.38%)</title><rect x="0.4648%" y="453" width="25.3839%" height="15" fill="rgb(210,195,18)" fg:x="112" fg:w="6116"/><text x="0.7148%" y="463.50">lockbook-egui`lockbook_egui::account::Acc..</text></g><g><title>lockbook-egui`egui::containers::panel::SidePanel::show_animated (6,110 samples, 25.36%)</title><rect x="0.4897%" y="437" width="25.3590%" height="15" fill="rgb(249,80,12)" fg:x="118" fg:w="6110"/><text x="0.7397%" y="447.50">lockbook-egui`egui::containers::panel::S..</text></g><g><title>lockbook-egui`egui::containers::panel::SidePanel::show_dyn (6,110 samples, 25.36%)</title><rect x="0.4897%" y="421" width="25.3590%" height="15" fill="rgb(221,65,9)" fg:x="118" fg:w="6110"/><text x="0.7397%" y="431.50">lockbook-egui`egui::containers::panel::S..</text></g><g><title>lockbook-egui`&lt;lockbook_egui::Lockbook as eframe::epi::App&gt;::update (6,118 samples, 25.39%)</title><rect x="0.4607%" y="485" width="25.3922%" height="15" fill="rgb(235,49,36)" fg:x="111" fg:w="6118"/><text x="0.7107%" y="495.50">lockbook-egui`&lt;lockbook_egui::Lockbook as..</text></g><g><title>lockbook-egui`lockbook_egui::Lockbook::update (6,118 samples, 25.39%)</title><rect x="0.4607%" y="469" width="25.3922%" height="15" fill="rgb(225,32,20)" fg:x="111" fg:w="6118"/><text x="0.7107%" y="479.50">lockbook-egui`lockbook_egui::Lockbook::up..</text></g><g><title>lockbook-egui`eframe::native::app_icon::AppTitleIconSetter::update (3 samples, 0.01%)</title><rect x="25.8529%" y="485" width="0.0125%" height="15" fill="rgb(215,141,46)" fg:x="6229" fg:w="3"/><text x="26.1029%" y="495.50"></text></g><g><title>lockbook-egui`egui::context::Context::begin_frame (6 samples, 0.02%)</title><rect x="25.8737%" y="485" width="0.0249%" height="15" fill="rgb(250,160,47)" fg:x="6234" fg:w="6"/><text x="26.1237%" y="495.50"></text></g><g><title>lockbook-egui`egui::context::Context::end_frame (3 samples, 0.01%)</title><rect x="25.8986%" y="485" width="0.0125%" height="15" fill="rgb(216,222,40)" fg:x="6240" fg:w="3"/><text x="26.1486%" y="495.50"></text></g><g><title>lockbook-egui`egui::context::Context::tessellate (7 samples, 0.03%)</title><rect x="25.9110%" y="485" width="0.0291%" height="15" fill="rgb(234,217,39)" fg:x="6243" fg:w="7"/><text x="26.1610%" y="495.50"></text></g><g><title>lockbook-egui`epaint::tessellator::Tessellator::tessellate_shapes (6 samples, 0.02%)</title><rect x="25.9152%" y="469" width="0.0249%" height="15" fill="rgb(207,178,40)" fg:x="6244" fg:w="6"/><text x="26.1652%" y="479.50"></text></g><g><title>lockbook-egui`epaint::tessellator::Tessellator::tessellate_clipped_shape (6 samples, 0.02%)</title><rect x="25.9152%" y="453" width="0.0249%" height="15" fill="rgb(221,136,13)" fg:x="6244" fg:w="6"/><text x="26.1652%" y="463.50"></text></g><g><title>lockbook-egui`epaint::tessellator::Tessellator::tessellate_shape (6 samples, 0.02%)</title><rect x="25.9152%" y="437" width="0.0249%" height="15" fill="rgb(249,199,10)" fg:x="6244" fg:w="6"/><text x="26.1652%" y="447.50"></text></g><g><title>lockbook-egui`epaint::tessellator::Tessellator::tessellate_text (4 samples, 0.02%)</title><rect x="25.9235%" y="421" width="0.0166%" height="15" fill="rgb(249,222,13)" fg:x="6246" fg:w="4"/><text x="26.1735%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.03%)</title><rect x="25.9401%" y="469" width="0.0291%" height="15" fill="rgb(244,185,38)" fg:x="6250" fg:w="7"/><text x="26.1901%" y="479.50"></text></g><g><title>AGXMetalG15X_M1`-[AGXG15XFamilyCommandBuffer initWithQueue:retainedReferences:] (3 samples, 0.01%)</title><rect x="25.9982%" y="341" width="0.0125%" height="15" fill="rgb(236,202,9)" fg:x="6264" fg:w="3"/><text x="26.2482%" y="351.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (3 samples, 0.01%)</title><rect x="25.9982%" y="325" width="0.0125%" height="15" fill="rgb(250,229,37)" fg:x="6264" fg:w="3"/><text x="26.2482%" y="335.50"></text></g><g><title>lockbook-egui`wgpu_core::command::CommandEncoder&lt;A&gt;::open (4 samples, 0.02%)</title><rect x="25.9982%" y="405" width="0.0166%" height="15" fill="rgb(206,174,23)" fg:x="6264" fg:w="4"/><text x="26.2482%" y="415.50"></text></g><g><title>lockbook-egui`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (4 samples, 0.02%)</title><rect x="25.9982%" y="389" width="0.0166%" height="15" fill="rgb(211,33,43)" fg:x="6264" fg:w="4"/><text x="26.2482%" y="399.50"></text></g><g><title>lockbook-egui`objc::rc::autorelease::autoreleasepool (4 samples, 0.02%)</title><rect x="25.9982%" y="373" width="0.0166%" height="15" fill="rgb(245,58,50)" fg:x="6264" fg:w="4"/><text x="26.2482%" y="383.50"></text></g><g><title>AGXMetalG15X_M1`-[AGXG15XFamilyCommandQueue commandBufferWithUnretainedReferences] (4 samples, 0.02%)</title><rect x="25.9982%" y="357" width="0.0166%" height="15" fill="rgb(244,68,36)" fg:x="6264" fg:w="4"/><text x="26.2482%" y="367.50"></text></g><g><title>AGXMetalG15X_M1`AGX::FramebufferGen3_3&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::FramebufferGen3_3 (4 samples, 0.02%)</title><rect x="26.0314%" y="325" width="0.0166%" height="15" fill="rgb(232,229,15)" fg:x="6272" fg:w="4"/><text x="26.2814%" y="335.50"></text></g><g><title>AGXMetalG15X_M1`AGX::Framebuffer&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::Framebuffer (4 samples, 0.02%)</title><rect x="26.0314%" y="309" width="0.0166%" height="15" fill="rgb(254,30,23)" fg:x="6272" fg:w="4"/><text x="26.2814%" y="319.50"></text></g><g><title>AGXMetalG15X_M1`AGX::ContextCommon&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::newCommand (3 samples, 0.01%)</title><rect x="26.0480%" y="309" width="0.0125%" height="15" fill="rgb(235,160,14)" fg:x="6276" fg:w="3"/><text x="26.2980%" y="319.50"></text></g><g><title>AGXMetalG15X_M1`-[AGXG15XFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (9 samples, 0.04%)</title><rect x="26.0272%" y="341" width="0.0374%" height="15" fill="rgb(212,155,44)" fg:x="6271" fg:w="9"/><text x="26.2772%" y="351.50"></text></g><g><title>AGXMetalG15X_M1`AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::beginRenderPass (4 samples, 0.02%)</title><rect x="26.0480%" y="325" width="0.0166%" height="15" fill="rgb(226,2,50)" fg:x="6276" fg:w="4"/><text x="26.2980%" y="335.50"></text></g><g><title>lockbook-egui`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (13 samples, 0.05%)</title><rect x="26.0189%" y="405" width="0.0540%" height="15" fill="rgb(234,177,6)" fg:x="6269" fg:w="13"/><text x="26.2689%" y="415.50"></text></g><g><title>lockbook-egui`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (11 samples, 0.05%)</title><rect x="26.0272%" y="389" width="0.0457%" height="15" fill="rgb(217,24,9)" fg:x="6271" fg:w="11"/><text x="26.2772%" y="399.50"></text></g><g><title>lockbook-egui`objc::rc::autorelease::autoreleasepool (11 samples, 0.05%)</title><rect x="26.0272%" y="373" width="0.0457%" height="15" fill="rgb(220,13,46)" fg:x="6271" fg:w="11"/><text x="26.2772%" y="383.50"></text></g><g><title>AGXMetalG15X_M1`-[AGXG15XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (11 samples, 0.05%)</title><rect x="26.0272%" y="357" width="0.0457%" height="15" fill="rgb(239,221,27)" fg:x="6271" fg:w="11"/><text x="26.2772%" y="367.50"></text></g><g><title>lockbook-egui`core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (26 samples, 0.11%)</title><rect x="25.9733%" y="469" width="0.1079%" height="15" fill="rgb(222,198,25)" fg:x="6258" fg:w="26"/><text x="26.2233%" y="479.50"></text></g><g><title>lockbook-egui`&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (26 samples, 0.11%)</title><rect x="25.9733%" y="453" width="0.1079%" height="15" fill="rgb(211,99,13)" fg:x="6258" fg:w="26"/><text x="26.2233%" y="463.50"></text></g><g><title>lockbook-egui`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::command_encoder_end_render_pass (26 samples, 0.11%)</title><rect x="25.9733%" y="437" width="0.1079%" height="15" fill="rgb(232,111,31)" fg:x="6258" fg:w="26"/><text x="26.2233%" y="447.50"></text></g><g><title>lockbook-egui`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::command_encoder_run_render_pass_impl (25 samples, 0.10%)</title><rect x="25.9774%" y="421" width="0.1038%" height="15" fill="rgb(245,82,37)" fg:x="6259" fg:w="25"/><text x="26.2274%" y="431.50"></text></g><g><title>AGXMetalG15X_M1`-[AGXG15XFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (3 samples, 0.01%)</title><rect x="26.0895%" y="357" width="0.0125%" height="15" fill="rgb(227,149,46)" fg:x="6286" fg:w="3"/><text x="26.3395%" y="367.50"></text></g><g><title>AGXMetalG15X_M1`-[AGXG15XFamilyCommandBuffer initWithQueue:retainedReferences:] (4 samples, 0.02%)</title><rect x="26.1061%" y="293" width="0.0166%" height="15" fill="rgb(218,36,50)" fg:x="6290" fg:w="4"/><text x="26.3561%" y="303.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.02%)</title><rect x="26.1061%" y="277" width="0.0166%" height="15" fill="rgb(226,80,48)" fg:x="6290" fg:w="4"/><text x="26.3561%" y="287.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.02%)</title><rect x="26.1061%" y="261" width="0.0166%" height="15" fill="rgb(238,224,15)" fg:x="6290" fg:w="4"/><text x="26.3561%" y="271.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCreate:creationTime:] (4 samples, 0.02%)</title><rect x="26.1061%" y="245" width="0.0166%" height="15" fill="rgb(241,136,10)" fg:x="6290" fg:w="4"/><text x="26.3561%" y="255.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (4 samples, 0.02%)</title><rect x="26.1061%" y="229" width="0.0166%" height="15" fill="rgb(208,32,45)" fg:x="6290" fg:w="4"/><text x="26.3561%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (4 samples, 0.02%)</title><rect x="26.1061%" y="213" width="0.0166%" height="15" fill="rgb(207,135,9)" fg:x="6290" fg:w="4"/><text x="26.3561%" y="223.50"></text></g><g><title>lockbook-egui`core::ptr::drop_in_place&lt;wgpu::QueueWriteBufferView&gt; (9 samples, 0.04%)</title><rect x="26.0895%" y="453" width="0.0374%" height="15" fill="rgb(206,86,44)" fg:x="6286" fg:w="9"/><text x="26.3395%" y="463.50"></text></g><g><title>lockbook-egui`&lt;wgpu::QueueWriteBufferView as core::ops::drop::Drop&gt;::drop (9 samples, 0.04%)</title><rect x="26.0895%" y="437" width="0.0374%" height="15" fill="rgb(245,177,15)" fg:x="6286" fg:w="9"/><text x="26.3395%" y="447.50"></text></g><g><title>lockbook-egui`&lt;T as wgpu::context::DynContext&gt;::queue_write_staging_buffer (9 samples, 0.04%)</title><rect x="26.0895%" y="421" width="0.0374%" height="15" fill="rgb(206,64,50)" fg:x="6286" fg:w="9"/><text x="26.3395%" y="431.50"></text></g><g><title>lockbook-egui`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_write_staging_buffer (9 samples, 0.04%)</title><rect x="26.0895%" y="405" width="0.0374%" height="15" fill="rgb(234,36,40)" fg:x="6286" fg:w="9"/><text x="26.3395%" y="415.50"></text></g><g><title>lockbook-egui`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_staging_buffer (9 samples, 0.04%)</title><rect x="26.0895%" y="389" width="0.0374%" height="15" fill="rgb(213,64,8)" fg:x="6286" fg:w="9"/><text x="26.3395%" y="399.50"></text></g><g><title>lockbook-egui`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_staging_buffer_impl (9 samples, 0.04%)</title><rect x="26.0895%" y="373" width="0.0374%" height="15" fill="rgb(210,75,36)" fg:x="6286" fg:w="9"/><text x="26.3395%" y="383.50"></text></g><g><title>lockbook-egui`wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (6 samples, 0.02%)</title><rect x="26.1019%" y="357" width="0.0249%" height="15" fill="rgb(229,88,21)" fg:x="6289" fg:w="6"/><text x="26.3519%" y="367.50"></text></g><g><title>lockbook-egui`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (6 samples, 0.02%)</title><rect x="26.1019%" y="341" width="0.0249%" height="15" fill="rgb(252,204,47)" fg:x="6289" fg:w="6"/><text x="26.3519%" y="351.50"></text></g><g><title>lockbook-egui`objc::rc::autorelease::autoreleasepool (5 samples, 0.02%)</title><rect x="26.1061%" y="325" width="0.0208%" height="15" fill="rgb(208,77,27)" fg:x="6290" fg:w="5"/><text x="26.3561%" y="335.50"></text></g><g><title>AGXMetalG15X_M1`-[AGXG15XFamilyCommandQueue commandBufferWithUnretainedReferences] (5 samples, 0.02%)</title><rect x="26.1061%" y="309" width="0.0208%" height="15" fill="rgb(221,76,26)" fg:x="6290" fg:w="5"/><text x="26.3561%" y="319.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (7 samples, 0.03%)</title><rect x="26.1351%" y="261" width="0.0291%" height="15" fill="rgb(225,139,18)" fg:x="6297" fg:w="7"/><text x="26.3851%" y="271.50"></text></g><g><title>IOKit`IOConnectCallMethod (7 samples, 0.03%)</title><rect x="26.1351%" y="245" width="0.0291%" height="15" fill="rgb(230,137,11)" fg:x="6297" fg:w="7"/><text x="26.3851%" y="255.50"></text></g><g><title>IOKit`io_connect_method (7 samples, 0.03%)</title><rect x="26.1351%" y="229" width="0.0291%" height="15" fill="rgb(212,28,1)" fg:x="6297" fg:w="7"/><text x="26.3851%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (7 samples, 0.03%)</title><rect x="26.1351%" y="213" width="0.0291%" height="15" fill="rgb(248,164,17)" fg:x="6297" fg:w="7"/><text x="26.3851%" y="223.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:alignment:options:sysMemSize:gpuAddress:gpuTag:args:argsSize:deallocator:] (8 samples, 0.03%)</title><rect x="26.1351%" y="293" width="0.0332%" height="15" fill="rgb(222,171,42)" fg:x="6297" fg:w="8"/><text x="26.3851%" y="303.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (8 samples, 0.03%)</title><rect x="26.1351%" y="277" width="0.0332%" height="15" fill="rgb(243,84,45)" fg:x="6297" fg:w="8"/><text x="26.3851%" y="287.50"></text></g><g><title>lockbook-egui`egui_wgpu::renderer::Renderer::update_buffers (21 samples, 0.09%)</title><rect x="26.0853%" y="469" width="0.0872%" height="15" fill="rgb(252,49,23)" fg:x="6285" fg:w="21"/><text x="26.3353%" y="479.50"></text></g><g><title>lockbook-egui`wgpu::Queue::write_buffer_with (11 samples, 0.05%)</title><rect x="26.1268%" y="453" width="0.0457%" height="15" fill="rgb(215,19,7)" fg:x="6295" fg:w="11"/><text x="26.3768%" y="463.50"></text></g><g><title>lockbook-egui`&lt;T as wgpu::context::DynContext&gt;::queue_create_staging_buffer (11 samples, 0.05%)</title><rect x="26.1268%" y="437" width="0.0457%" height="15" fill="rgb(238,81,41)" fg:x="6295" fg:w="11"/><text x="26.3768%" y="447.50"></text></g><g><title>lockbook-egui`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::queue_create_staging_buffer (10 samples, 0.04%)</title><rect x="26.1310%" y="421" width="0.0415%" height="15" fill="rgb(210,199,37)" fg:x="6296" fg:w="10"/><text x="26.3810%" y="431.50"></text></g><g><title>lockbook-egui`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_create_staging_buffer (10 samples, 0.04%)</title><rect x="26.1310%" y="405" width="0.0415%" height="15" fill="rgb(244,192,49)" fg:x="6296" fg:w="10"/><text x="26.3810%" y="415.50"></text></g><g><title>lockbook-egui`wgpu_core::device::queue::prepare_staging_buffer (10 samples, 0.04%)</title><rect x="26.1310%" y="389" width="0.0415%" height="15" fill="rgb(226,211,11)" fg:x="6296" fg:w="10"/><text x="26.3810%" y="399.50"></text></g><g><title>lockbook-egui`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device for wgpu_hal::metal::Device&gt;::create_buffer (10 samples, 0.04%)</title><rect x="26.1310%" y="373" width="0.0415%" height="15" fill="rgb(236,162,54)" fg:x="6296" fg:w="10"/><text x="26.3810%" y="383.50"></text></g><g><title>lockbook-egui`objc::rc::autorelease::autoreleasepool (9 samples, 0.04%)</title><rect x="26.1351%" y="357" width="0.0374%" height="15" fill="rgb(220,229,9)" fg:x="6297" fg:w="9"/><text x="26.3851%" y="367.50"></text></g><g><title>AGXMetalG15X_M1`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (9 samples, 0.04%)</title><rect x="26.1351%" y="341" width="0.0374%" height="15" fill="rgb(250,87,22)" fg:x="6297" fg:w="9"/><text x="26.3851%" y="351.50"></text></g><g><title>AGXMetalG15X_M1`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (9 samples, 0.04%)</title><rect x="26.1351%" y="325" width="0.0374%" height="15" fill="rgb(239,43,17)" fg:x="6297" fg:w="9"/><text x="26.3851%" y="335.50"></text></g><g><title>AGXMetalG15X_M1`-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (9 samples, 0.04%)</title><rect x="26.1351%" y="309" width="0.0374%" height="15" fill="rgb(231,177,25)" fg:x="6297" fg:w="9"/><text x="26.3851%" y="319.50"></text></g><g><title>lockbook-egui`egui_wgpu::renderer::Renderer::update_texture (3 samples, 0.01%)</title><rect x="26.1725%" y="469" width="0.0125%" height="15" fill="rgb(219,179,1)" fg:x="6306" fg:w="3"/><text x="26.4225%" y="479.50"></text></g><g><title>lockbook-egui`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&gt;::submit (4 samples, 0.02%)</title><rect x="26.1891%" y="421" width="0.0166%" height="15" fill="rgb(238,219,53)" fg:x="6310" fg:w="4"/><text x="26.4391%" y="431.50"></text></g><g><title>lockbook-egui`objc::rc::autorelease::autoreleasepool (3 samples, 0.01%)</title><rect x="26.1932%" y="405" width="0.0125%" height="15" fill="rgb(232,167,36)" fg:x="6311" fg:w="3"/><text x="26.4432%" y="415.50"></text></g><g><title>CoreFoundation`_CFRelease (4 samples, 0.02%)</title><rect x="26.2306%" y="277" width="0.0166%" height="15" fill="rgb(244,19,51)" fg:x="6320" fg:w="4"/><text x="26.4806%" y="287.50"></text></g><g><title>IOKit`iokit_user_client_trap (4 samples, 0.02%)</title><rect x="26.2306%" y="261" width="0.0166%" height="15" fill="rgb(224,6,22)" fg:x="6320" fg:w="4"/><text x="26.4806%" y="271.50"></text></g><g><title>AGXMetalG15X_M1`-[AGXBuffer dealloc] (5 samples, 0.02%)</title><rect x="26.2306%" y="325" width="0.0208%" height="15" fill="rgb(224,145,5)" fg:x="6320" fg:w="5"/><text x="26.4806%" y="335.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (5 samples, 0.02%)</title><rect x="26.2306%" y="309" width="0.0208%" height="15" fill="rgb(234,130,49)" fg:x="6320" fg:w="5"/><text x="26.4806%" y="319.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (5 samples, 0.02%)</title><rect x="26.2306%" y="293" width="0.0208%" height="15" fill="rgb(254,6,2)" fg:x="6320" fg:w="5"/><text x="26.4806%" y="303.50"></text></g><g><title>lockbook-egui`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (7 samples, 0.03%)</title><rect x="26.2264%" y="405" width="0.0291%" height="15" fill="rgb(208,96,46)" fg:x="6319" fg:w="7"/><text x="26.4764%" y="415.50"></text></g><g><title>lockbook-egui`core::ptr::drop_in_place&lt;wgpu_core::device::life::ResourceMaps&lt;wgpu_hal::metal::Api&gt;&gt; (6 samples, 0.02%)</title><rect x="26.2306%" y="389" width="0.0249%" height="15" fill="rgb(239,3,39)" fg:x="6320" fg:w="6"/><text x="26.4806%" y="399.50"></text></g><g><title>lockbook-egui`alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.02%)</title><rect x="26.2306%" y="373" width="0.0249%" height="15" fill="rgb(233,210,1)" fg:x="6320" fg:w="6"/><text x="26.4806%" y="383.50"></text></g><g><title>lockbook-egui`&lt;wgpu_core::resource::StagingBuffer&lt;A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="26.2306%" y="357" width="0.0249%" height="15" fill="rgb(244,137,37)" fg:x="6320" fg:w="6"/><text x="26.4806%" y="367.50"></text></g><g><title>AGXMetalG15X_M1`-[AGXG15XFamilyBuffer dealloc] (6 samples, 0.02%)</title><rect x="26.2306%" y="341" width="0.0249%" height="15" fill="rgb(240,136,2)" fg:x="6320" fg:w="6"/><text x="26.4806%" y="351.50"></text></g><g><title>lockbook-egui`wgpu_core::device::resource::Device&lt;A&gt;::maintain (9 samples, 0.04%)</title><rect x="26.2223%" y="421" width="0.0374%" height="15" fill="rgb(239,18,37)" fg:x="6318" fg:w="9"/><text x="26.4723%" y="431.50"></text></g><g><title>AGXMetalG15X_M1`-[AGXG15XFamilyCommandBuffer initWithQueue:retainedReferences:] (3 samples, 0.01%)</title><rect x="26.2680%" y="373" width="0.0125%" height="15" fill="rgb(218,185,22)" fg:x="6329" fg:w="3"/><text x="26.5180%" y="383.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (3 samples, 0.01%)</title><rect x="26.2680%" y="357" width="0.0125%" height="15" fill="rgb(225,218,4)" fg:x="6329" fg:w="3"/><text x="26.5180%" y="367.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (3 samples, 0.01%)</title><rect x="26.2680%" y="341" width="0.0125%" height="15" fill="rgb(230,182,32)" fg:x="6329" fg:w="3"/><text x="26.5180%" y="351.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCreate:creationTime:] (3 samples, 0.01%)</title><rect x="26.2680%" y="325" width="0.0125%" height="15" fill="rgb(242,56,43)" fg:x="6329" fg:w="3"/><text x="26.5180%" y="335.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (3 samples, 0.01%)</title><rect x="26.2680%" y="309" width="0.0125%" height="15" fill="rgb(233,99,24)" fg:x="6329" fg:w="3"/><text x="26.5180%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (3 samples, 0.01%)</title><rect x="26.2680%" y="293" width="0.0125%" height="15" fill="rgb(234,209,42)" fg:x="6329" fg:w="3"/><text x="26.5180%" y="303.50"></text></g><g><title>AGXMetalG15X_M1`-[AGXG15XFamilyCommandQueue commandBufferWithUnretainedReferences] (5 samples, 0.02%)</title><rect x="26.2680%" y="389" width="0.0208%" height="15" fill="rgb(227,7,12)" fg:x="6329" fg:w="5"/><text x="26.5180%" y="399.50"></text></g><g><title>lockbook-egui`wgpu::Queue::submit (25 samples, 0.10%)</title><rect x="26.1891%" y="469" width="0.1038%" height="15" fill="rgb(245,203,43)" fg:x="6310" fg:w="25"/><text x="26.4391%" y="479.50"></text></g><g><title>lockbook-egui`&lt;T as wgpu::context::DynContext&gt;::queue_submit (25 samples, 0.10%)</title><rect x="26.1891%" y="453" width="0.1038%" height="15" fill="rgb(238,205,33)" fg:x="6310" fg:w="25"/><text x="26.4391%" y="463.50"></text></g><g><title>lockbook-egui`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_submit (25 samples, 0.10%)</title><rect x="26.1891%" y="437" width="0.1038%" height="15" fill="rgb(231,56,7)" fg:x="6310" fg:w="25"/><text x="26.4391%" y="447.50"></text></g><g><title>lockbook-egui`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (7 samples, 0.03%)</title><rect x="26.2638%" y="421" width="0.0291%" height="15" fill="rgb(244,186,29)" fg:x="6328" fg:w="7"/><text x="26.5138%" y="431.50"></text></g><g><title>lockbook-egui`objc::rc::autorelease::autoreleasepool (7 samples, 0.03%)</title><rect x="26.2638%" y="405" width="0.0291%" height="15" fill="rgb(234,111,31)" fg:x="6328" fg:w="7"/><text x="26.5138%" y="415.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable initWithDrawablePrivate:layer:waitStart:] (6 samples, 0.02%)</title><rect x="26.3178%" y="341" width="0.0249%" height="15" fill="rgb(241,149,10)" fg:x="6341" fg:w="6"/><text x="26.5678%" y="351.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent initWithOptions:] (4 samples, 0.02%)</title><rect x="26.3261%" y="325" width="0.0166%" height="15" fill="rgb(249,206,44)" fg:x="6343" fg:w="4"/><text x="26.5761%" y="335.50"></text></g><g><title>IOKit`IOConnectCallMethod (4 samples, 0.02%)</title><rect x="26.3261%" y="309" width="0.0166%" height="15" fill="rgb(251,153,30)" fg:x="6343" fg:w="4"/><text x="26.5761%" y="319.50"></text></g><g><title>IOKit`io_connect_method (4 samples, 0.02%)</title><rect x="26.3261%" y="293" width="0.0166%" height="15" fill="rgb(239,152,38)" fg:x="6343" fg:w="4"/><text x="26.5761%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.02%)</title><rect x="26.3261%" y="277" width="0.0166%" height="15" fill="rgb(249,139,47)" fg:x="6343" fg:w="4"/><text x="26.5761%" y="287.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (4 samples, 0.02%)</title><rect x="26.3510%" y="341" width="0.0166%" height="15" fill="rgb(244,64,35)" fg:x="6349" fg:w="4"/><text x="26.6010%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_timedwait_trap (3 samples, 0.01%)</title><rect x="26.3551%" y="325" width="0.0125%" height="15" fill="rgb(216,46,15)" fg:x="6350" fg:w="3"/><text x="26.6051%" y="335.50"></text></g><g><title>QuartzCore`CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (13 samples, 0.05%)</title><rect x="26.3178%" y="357" width="0.0540%" height="15" fill="rgb(250,74,19)" fg:x="6341" fg:w="13"/><text x="26.5678%" y="367.50"></text></g><g><title>lockbook-egui`wgpu_core::present::_&lt;impl wgpu_core::global::Global&gt;::surface_get_current_texture (20 samples, 0.08%)</title><rect x="26.2970%" y="421" width="0.0830%" height="15" fill="rgb(249,42,33)" fg:x="6336" fg:w="20"/><text x="26.5470%" y="431.50"></text></g><g><title>lockbook-egui`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::Surface for wgpu_hal::metal::Surface&gt;::acquire_texture (17 samples, 0.07%)</title><rect x="26.3095%" y="405" width="0.0706%" height="15" fill="rgb(242,149,17)" fg:x="6339" fg:w="17"/><text x="26.5595%" y="415.50"></text></g><g><title>lockbook-egui`objc::rc::autorelease::autoreleasepool (17 samples, 0.07%)</title><rect x="26.3095%" y="389" width="0.0706%" height="15" fill="rgb(244,29,21)" fg:x="6339" fg:w="17"/><text x="26.5595%" y="399.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (17 samples, 0.07%)</title><rect x="26.3095%" y="373" width="0.0706%" height="15" fill="rgb(220,130,37)" fg:x="6339" fg:w="17"/><text x="26.5595%" y="383.50"></text></g><g><title>lockbook-egui`wgpu::Surface::get_current_texture (22 samples, 0.09%)</title><rect x="26.2929%" y="469" width="0.0913%" height="15" fill="rgb(211,67,2)" fg:x="6335" fg:w="22"/><text x="26.5429%" y="479.50"></text></g><g><title>lockbook-egui`&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (21 samples, 0.09%)</title><rect x="26.2970%" y="453" width="0.0872%" height="15" fill="rgb(235,68,52)" fg:x="6336" fg:w="21"/><text x="26.5470%" y="463.50"></text></g><g><title>lockbook-egui`&lt;wgpu::backend::wgpu_core::ContextWgpuCore as wgpu::context::Context&gt;::surface_get_current_texture (21 samples, 0.09%)</title><rect x="26.2970%" y="437" width="0.0872%" height="15" fill="rgb(246,142,3)" fg:x="6336" fg:w="21"/><text x="26.5470%" y="447.50"></text></g><g><title>lockbook-egui`egui_wgpu::winit::Painter::paint_and_update_textures (108 samples, 0.45%)</title><rect x="25.9401%" y="485" width="0.4482%" height="15" fill="rgb(241,25,7)" fg:x="6250" fg:w="108"/><text x="26.1901%" y="495.50"></text></g><g><title>lockbook-egui`egui_winit::State::handle_platform_output (3 samples, 0.01%)</title><rect x="26.3883%" y="485" width="0.0125%" height="15" fill="rgb(242,119,39)" fg:x="6358" fg:w="3"/><text x="26.6383%" y="495.50"></text></g><g><title>lockbook-egui`icrate::Foundation::additions::thread::MainThreadMarker::run_on_main (3 samples, 0.01%)</title><rect x="26.3883%" y="469" width="0.0125%" height="15" fill="rgb(241,98,45)" fg:x="6358" fg:w="3"/><text x="26.6383%" y="479.50"></text></g><g><title>lockbook-egui`winit::platform_impl::platform::view::WinitView::set_ime_cursor_area (3 samples, 0.01%)</title><rect x="26.3883%" y="453" width="0.0125%" height="15" fill="rgb(254,28,30)" fg:x="6358" fg:w="3"/><text x="26.6383%" y="463.50"></text></g><g><title>lockbook-egui`&lt;eframe::native::wgpu_integration::WgpuWinitApp as eframe::native::winit_integration::WinitApp&gt;::run_ui_and_paint (6,253 samples, 25.95%)</title><rect x="0.4565%" y="501" width="25.9525%" height="15" fill="rgb(241,142,54)" fg:x="110" fg:w="6253"/><text x="0.7065%" y="511.50">lockbook-egui`&lt;eframe::native::wgpu_integ..</text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (6,283 samples, 26.08%)</title><rect x="0.3445%" y="629" width="26.0770%" height="15" fill="rgb(222,85,15)" fg:x="83" fg:w="6283"/><text x="0.5945%" y="639.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (6,282 samples, 26.07%)</title><rect x="0.3486%" y="613" width="26.0729%" height="15" fill="rgb(210,85,47)" fg:x="84" fg:w="6282"/><text x="0.5986%" y="623.50">CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_..</text></g><g><title>lockbook-egui`winit::platform_impl::platform::observer::control_flow_end_handler (6,259 samples, 25.98%)</title><rect x="0.4441%" y="597" width="25.9774%" height="15" fill="rgb(224,206,25)" fg:x="107" fg:w="6259"/><text x="0.6941%" y="607.50">lockbook-egui`winit::platform_impl::platfo..</text></g><g><title>lockbook-egui`std::panicking::try (6,259 samples, 25.98%)</title><rect x="0.4441%" y="581" width="25.9774%" height="15" fill="rgb(243,201,19)" fg:x="107" fg:w="6259"/><text x="0.6941%" y="591.50">lockbook-egui`std::panicking::try</text></g><g><title>lockbook-egui`winit::platform_impl::platform::app_state::AppState::cleared (6,259 samples, 25.98%)</title><rect x="0.4441%" y="565" width="25.9774%" height="15" fill="rgb(236,59,4)" fg:x="107" fg:w="6259"/><text x="0.6941%" y="575.50">lockbook-egui`winit::platform_impl::platfo..</text></g><g><title>lockbook-egui`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (6,258 samples, 25.97%)</title><rect x="0.4482%" y="549" width="25.9733%" height="15" fill="rgb(254,179,45)" fg:x="108" fg:w="6258"/><text x="0.6982%" y="559.50">lockbook-egui`winit::platform_impl::platfo..</text></g><g><title>lockbook-egui`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (6,258 samples, 25.97%)</title><rect x="0.4482%" y="533" width="25.9733%" height="15" fill="rgb(226,14,10)" fg:x="108" fg:w="6258"/><text x="0.6982%" y="543.50">lockbook-egui`&lt;winit::platform_impl::platf..</text></g><g><title>lockbook-egui`eframe::native::run::run_and_return::_{{closure}} (6,256 samples, 25.96%)</title><rect x="0.4565%" y="517" width="25.9650%" height="15" fill="rgb(244,27,41)" fg:x="110" fg:w="6256"/><text x="0.7065%" y="527.50">lockbook-egui`eframe::native::run::run_and..</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (6,308 samples, 26.18%)</title><rect x="0.2532%" y="661" width="26.1808%" height="15" fill="rgb(235,35,32)" fg:x="61" fg:w="6308"/><text x="0.5032%" y="671.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>CoreFoundation`__CFRunLoopRun (6,304 samples, 26.16%)</title><rect x="0.2698%" y="645" width="26.1642%" height="15" fill="rgb(218,68,31)" fg:x="65" fg:w="6304"/><text x="0.5198%" y="655.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (6,312 samples, 26.20%)</title><rect x="0.2532%" y="677" width="26.1974%" height="15" fill="rgb(207,120,37)" fg:x="61" fg:w="6312"/><text x="0.5032%" y="687.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>HIToolbox`_FirstEventTime (4 samples, 0.02%)</title><rect x="26.4340%" y="661" width="0.0166%" height="15" fill="rgb(227,98,0)" fg:x="6369" fg:w="4"/><text x="26.6840%" y="671.50"></text></g><g><title>HIToolbox`InitTSMFirstEventTime (3 samples, 0.01%)</title><rect x="26.4381%" y="645" width="0.0125%" height="15" fill="rgb(207,7,3)" fg:x="6370" fg:w="3"/><text x="26.6881%" y="655.50"></text></g><g><title>HIToolbox`UpdateSourceIndicatorMode (3 samples, 0.01%)</title><rect x="26.4381%" y="629" width="0.0125%" height="15" fill="rgb(206,98,19)" fg:x="6370" fg:w="3"/><text x="26.6881%" y="639.50"></text></g><g><title>HIToolbox`_CreateKeyboardInputSourcesArray (3 samples, 0.01%)</title><rect x="26.4381%" y="613" width="0.0125%" height="15" fill="rgb(217,5,26)" fg:x="6370" fg:w="3"/><text x="26.6881%" y="623.50"></text></g><g><title>HIToolbox`_CreateKeyboardInputSourcesArray_Mutable (3 samples, 0.01%)</title><rect x="26.4381%" y="597" width="0.0125%" height="15" fill="rgb(235,190,38)" fg:x="6370" fg:w="3"/><text x="26.6881%" y="607.50"></text></g><g><title>AppKit`_DPSNextEvent (6,342 samples, 26.32%)</title><rect x="0.1411%" y="725" width="26.3219%" height="15" fill="rgb(247,86,24)" fg:x="34" fg:w="6342"/><text x="0.3911%" y="735.50">AppKit`_DPSNextEvent</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (6,316 samples, 26.21%)</title><rect x="0.2490%" y="709" width="26.2140%" height="15" fill="rgb(205,101,16)" fg:x="60" fg:w="6316"/><text x="0.4990%" y="719.50">HIToolbox`_BlockUntilNextEventMatchingList..</text></g><g><title>HIToolbox`ReceiveNextEventCommon (6,316 samples, 26.21%)</title><rect x="0.2490%" y="693" width="26.2140%" height="15" fill="rgb(246,168,33)" fg:x="60" fg:w="6316"/><text x="0.4990%" y="703.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (6,346 samples, 26.34%)</title><rect x="0.1287%" y="741" width="26.3385%" height="15" fill="rgb(231,114,1)" fg:x="31" fg:w="6346"/><text x="0.3787%" y="751.50">AppKit`-[NSApplication(NSEventRouting) _ne..</text></g><g><title>lockbook-egui`eframe::run_native (6,379 samples, 26.48%)</title><rect x="0.0000%" y="821" width="26.4755%" height="15" fill="rgb(207,184,53)" fg:x="0" fg:w="6379"/><text x="0.2500%" y="831.50">lockbook-egui`eframe::run_native</text></g><g><title>lockbook-egui`eframe::native::run::run_wgpu (6,379 samples, 26.48%)</title><rect x="0.0000%" y="805" width="26.4755%" height="15" fill="rgb(224,95,51)" fg:x="0" fg:w="6379"/><text x="0.2500%" y="815.50">lockbook-egui`eframe::native::run::run_wgpu</text></g><g><title>lockbook-egui`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_on_demand (6,370 samples, 26.44%)</title><rect x="0.0374%" y="789" width="26.4381%" height="15" fill="rgb(212,188,45)" fg:x="9" fg:w="6370"/><text x="0.2874%" y="799.50">lockbook-egui`winit::platform_impl::platfo..</text></g><g><title>lockbook-egui`std::panicking::try (6,370 samples, 26.44%)</title><rect x="0.0374%" y="773" width="26.4381%" height="15" fill="rgb(223,154,38)" fg:x="9" fg:w="6370"/><text x="0.2874%" y="783.50">lockbook-egui`std::panicking::try</text></g><g><title>AppKit`-[NSApplication run] (6,370 samples, 26.44%)</title><rect x="0.0374%" y="757" width="26.4381%" height="15" fill="rgb(251,22,52)" fg:x="9" fg:w="6370"/><text x="0.2874%" y="767.50">AppKit`-[NSApplication run]</text></g><g><title>dyld`start (6,380 samples, 26.48%)</title><rect x="0.0000%" y="917" width="26.4796%" height="15" fill="rgb(229,209,22)" fg:x="0" fg:w="6380"/><text x="0.2500%" y="927.50">dyld`start</text></g><g><title>lockbook-egui`main (6,380 samples, 26.48%)</title><rect x="0.0000%" y="901" width="26.4796%" height="15" fill="rgb(234,138,34)" fg:x="0" fg:w="6380"/><text x="0.2500%" y="911.50">lockbook-egui`main</text></g><g><title>lockbook-egui`std::rt::lang_start_internal (6,380 samples, 26.48%)</title><rect x="0.0000%" y="885" width="26.4796%" height="15" fill="rgb(212,95,11)" fg:x="0" fg:w="6380"/><text x="0.2500%" y="895.50">lockbook-egui`std::rt::lang_start_internal</text></g><g><title>lockbook-egui`std::rt::lang_start::_{{closure}} (6,380 samples, 26.48%)</title><rect x="0.0000%" y="869" width="26.4796%" height="15" fill="rgb(240,179,47)" fg:x="0" fg:w="6380"/><text x="0.2500%" y="879.50">lockbook-egui`std::rt::lang_start::_{{clos..</text></g><g><title>lockbook-egui`std::sys_common::backtrace::__rust_begin_short_backtrace (6,380 samples, 26.48%)</title><rect x="0.0000%" y="853" width="26.4796%" height="15" fill="rgb(240,163,11)" fg:x="0" fg:w="6380"/><text x="0.2500%" y="863.50">lockbook-egui`std::sys_common::backtrace::..</text></g><g><title>lockbook-egui`lockbook_egui::main (6,380 samples, 26.48%)</title><rect x="0.0000%" y="837" width="26.4796%" height="15" fill="rgb(236,37,12)" fg:x="0" fg:w="6380"/><text x="0.2500%" y="847.50">lockbook-egui`lockbook_egui::main</text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (58 samples, 0.24%)</title><rect x="26.4962%" y="901" width="0.2407%" height="15" fill="rgb(232,164,16)" fg:x="6384" fg:w="58"/><text x="26.7462%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (9 samples, 0.04%)</title><rect x="26.7535%" y="709" width="0.0374%" height="15" fill="rgb(244,205,15)" fg:x="6446" fg:w="9"/><text x="27.0035%" y="719.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (10 samples, 0.04%)</title><rect x="26.7535%" y="773" width="0.0415%" height="15" fill="rgb(223,117,47)" fg:x="6446" fg:w="10"/><text x="27.0035%" y="783.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (10 samples, 0.04%)</title><rect x="26.7535%" y="757" width="0.0415%" height="15" fill="rgb(244,107,35)" fg:x="6446" fg:w="10"/><text x="27.0035%" y="767.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable dealloc] (10 samples, 0.04%)</title><rect x="26.7535%" y="741" width="0.0415%" height="15" fill="rgb(205,140,8)" fg:x="6446" fg:w="10"/><text x="27.0035%" y="751.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent dealloc] (10 samples, 0.04%)</title><rect x="26.7535%" y="725" width="0.0415%" height="15" fill="rgb(228,84,46)" fg:x="6446" fg:w="10"/><text x="27.0035%" y="735.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (14 samples, 0.06%)</title><rect x="26.7494%" y="805" width="0.0581%" height="15" fill="rgb(254,188,9)" fg:x="6445" fg:w="14"/><text x="26.9994%" y="815.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, double, void*) (13 samples, 0.05%)</title><rect x="26.7535%" y="789" width="0.0540%" height="15" fill="rgb(206,112,54)" fg:x="6446" fg:w="13"/><text x="27.0035%" y="799.50"></text></g><g><title>FramePacing`__142+[FPCAMetalLayerState drawableLifetimeEnd:imageQueueID:drawableID:drawableFinishedTime:wasPresented:targetCPUDeadline:targetPresentationTime:]_block_invoke (4 samples, 0.02%)</title><rect x="26.8241%" y="773" width="0.0166%" height="15" fill="rgb(216,84,49)" fg:x="6463" fg:w="4"/><text x="27.0741%" y="783.50"></text></g><g><title>FramePacing`__47+[FPCAMetalLayerState _updateLayerState:block:]_block_invoke (5 samples, 0.02%)</title><rect x="26.8241%" y="789" width="0.0208%" height="15" fill="rgb(214,194,35)" fg:x="6463" fg:w="5"/><text x="27.0741%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (11 samples, 0.05%)</title><rect x="26.8158%" y="805" width="0.0457%" height="15" fill="rgb(249,28,3)" fg:x="6461" fg:w="11"/><text x="27.0658%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (32 samples, 0.13%)</title><rect x="26.7494%" y="821" width="0.1328%" height="15" fill="rgb(222,56,52)" fg:x="6445" fg:w="32"/><text x="26.9994%" y="831.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (5 samples, 0.02%)</title><rect x="26.8615%" y="805" width="0.0208%" height="15" fill="rgb(245,217,50)" fg:x="6472" fg:w="5"/><text x="27.1115%" y="815.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (4 samples, 0.02%)</title><rect x="26.8656%" y="789" width="0.0166%" height="15" fill="rgb(213,201,24)" fg:x="6473" fg:w="4"/><text x="27.1156%" y="799.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (3 samples, 0.01%)</title><rect x="26.8864%" y="661" width="0.0125%" height="15" fill="rgb(248,116,28)" fg:x="6478" fg:w="3"/><text x="27.1364%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (3 samples, 0.01%)</title><rect x="26.8864%" y="645" width="0.0125%" height="15" fill="rgb(219,72,43)" fg:x="6478" fg:w="3"/><text x="27.1364%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (3 samples, 0.01%)</title><rect x="26.8864%" y="629" width="0.0125%" height="15" fill="rgb(209,138,14)" fg:x="6478" fg:w="3"/><text x="27.1364%" y="639.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferScheduled:kernelStartTime:kernelEndTime:] (4 samples, 0.02%)</title><rect x="26.8864%" y="677" width="0.0166%" height="15" fill="rgb(222,18,33)" fg:x="6478" fg:w="4"/><text x="27.1364%" y="687.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (8 samples, 0.03%)</title><rect x="26.8864%" y="693" width="0.0332%" height="15" fill="rgb(213,199,7)" fg:x="6478" fg:w="8"/><text x="27.1364%" y="703.50"></text></g><g><title>Metal`MTLDispatchListApply (4 samples, 0.02%)</title><rect x="26.9030%" y="677" width="0.0166%" height="15" fill="rgb(250,110,10)" fg:x="6482" fg:w="4"/><text x="27.1530%" y="687.50"></text></g><g><title>Metal`__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (4 samples, 0.02%)</title><rect x="26.9030%" y="661" width="0.0166%" height="15" fill="rgb(248,123,6)" fg:x="6482" fg:w="4"/><text x="27.1530%" y="671.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (4 samples, 0.02%)</title><rect x="26.9030%" y="645" width="0.0166%" height="15" fill="rgb(206,91,31)" fg:x="6482" fg:w="4"/><text x="27.1530%" y="655.50"></text></g><g><title>QuartzCore`layer_private_present(_CAMetalLayerPrivate*, CAMetalDrawable*, double, double, unsigned int) (4 samples, 0.02%)</title><rect x="26.9030%" y="629" width="0.0166%" height="15" fill="rgb(211,154,13)" fg:x="6482" fg:w="4"/><text x="27.1530%" y="639.50"></text></g><g><title>IOSurface`IOSurfaceClientSignalEvent (3 samples, 0.01%)</title><rect x="26.9071%" y="613" width="0.0125%" height="15" fill="rgb(225,148,7)" fg:x="6483" fg:w="3"/><text x="27.1571%" y="623.50"></text></g><g><title>IOKit`IOConnectCallMethod (3 samples, 0.01%)</title><rect x="26.9071%" y="597" width="0.0125%" height="15" fill="rgb(220,160,43)" fg:x="6483" fg:w="3"/><text x="27.1571%" y="607.50"></text></g><g><title>IOKit`io_connect_method (3 samples, 0.01%)</title><rect x="26.9071%" y="581" width="0.0125%" height="15" fill="rgb(213,52,39)" fg:x="6483" fg:w="3"/><text x="27.1571%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.01%)</title><rect x="26.9071%" y="565" width="0.0125%" height="15" fill="rgb(243,137,7)" fg:x="6483" fg:w="3"/><text x="27.1571%" y="575.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (4 samples, 0.02%)</title><rect x="26.9237%" y="661" width="0.0166%" height="15" fill="rgb(230,79,13)" fg:x="6487" fg:w="4"/><text x="27.1737%" y="671.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (4 samples, 0.02%)</title><rect x="26.9237%" y="645" width="0.0166%" height="15" fill="rgb(247,105,23)" fg:x="6487" fg:w="4"/><text x="27.1737%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.01%)</title><rect x="26.9279%" y="629" width="0.0125%" height="15" fill="rgb(223,179,41)" fg:x="6488" fg:w="3"/><text x="27.1779%" y="639.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (8 samples, 0.03%)</title><rect x="26.9237%" y="677" width="0.0332%" height="15" fill="rgb(218,9,34)" fg:x="6487" fg:w="8"/><text x="27.1737%" y="687.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (4 samples, 0.02%)</title><rect x="26.9403%" y="661" width="0.0166%" height="15" fill="rgb(222,106,8)" fg:x="6491" fg:w="4"/><text x="27.1903%" y="671.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCompleted:gpuStartTime:gpuEndTime:] (4 samples, 0.02%)</title><rect x="26.9403%" y="645" width="0.0166%" height="15" fill="rgb(211,220,0)" fg:x="6491" fg:w="4"/><text x="27.1903%" y="655.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (4 samples, 0.02%)</title><rect x="26.9403%" y="629" width="0.0166%" height="15" fill="rgb(229,52,16)" fg:x="6491" fg:w="4"/><text x="27.1903%" y="639.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (10 samples, 0.04%)</title><rect x="26.9196%" y="693" width="0.0415%" height="15" fill="rgb(212,155,18)" fg:x="6486" fg:w="10"/><text x="27.1696%" y="703.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (3 samples, 0.01%)</title><rect x="26.9652%" y="693" width="0.0125%" height="15" fill="rgb(242,21,14)" fg:x="6497" fg:w="3"/><text x="27.2152%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (24 samples, 0.10%)</title><rect x="26.8822%" y="821" width="0.0996%" height="15" fill="rgb(222,19,48)" fg:x="6477" fg:w="24"/><text x="27.1322%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (24 samples, 0.10%)</title><rect x="26.8822%" y="805" width="0.0996%" height="15" fill="rgb(232,45,27)" fg:x="6477" fg:w="24"/><text x="27.1322%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (24 samples, 0.10%)</title><rect x="26.8822%" y="789" width="0.0996%" height="15" fill="rgb(249,103,42)" fg:x="6477" fg:w="24"/><text x="27.1322%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (24 samples, 0.10%)</title><rect x="26.8822%" y="773" width="0.0996%" height="15" fill="rgb(246,81,33)" fg:x="6477" fg:w="24"/><text x="27.1322%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (24 samples, 0.10%)</title><rect x="26.8822%" y="757" width="0.0996%" height="15" fill="rgb(252,33,42)" fg:x="6477" fg:w="24"/><text x="27.1322%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (24 samples, 0.10%)</title><rect x="26.8822%" y="741" width="0.0996%" height="15" fill="rgb(209,212,41)" fg:x="6477" fg:w="24"/><text x="27.1322%" y="751.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (24 samples, 0.10%)</title><rect x="26.8822%" y="725" width="0.0996%" height="15" fill="rgb(207,154,6)" fg:x="6477" fg:w="24"/><text x="27.1322%" y="735.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (23 samples, 0.10%)</title><rect x="26.8864%" y="709" width="0.0955%" height="15" fill="rgb(223,64,47)" fg:x="6478" fg:w="23"/><text x="27.1364%" y="719.50"></text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (55 samples, 0.23%)</title><rect x="26.9943%" y="709" width="0.2283%" height="15" fill="rgb(211,161,38)" fg:x="6504" fg:w="55"/><text x="27.2443%" y="719.50"></text></g><g><title>IOKit`IOConnectCallMethod (55 samples, 0.23%)</title><rect x="26.9943%" y="693" width="0.2283%" height="15" fill="rgb(219,138,40)" fg:x="6504" fg:w="55"/><text x="27.2443%" y="703.50"></text></g><g><title>IOKit`io_connect_method (55 samples, 0.23%)</title><rect x="26.9943%" y="677" width="0.2283%" height="15" fill="rgb(241,228,46)" fg:x="6504" fg:w="55"/><text x="27.2443%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (55 samples, 0.23%)</title><rect x="26.9943%" y="661" width="0.2283%" height="15" fill="rgb(223,209,38)" fg:x="6504" fg:w="55"/><text x="27.2443%" y="671.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (62 samples, 0.26%)</title><rect x="26.9901%" y="741" width="0.2573%" height="15" fill="rgb(236,164,45)" fg:x="6503" fg:w="62"/><text x="27.2401%" y="751.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (62 samples, 0.26%)</title><rect x="26.9901%" y="725" width="0.2573%" height="15" fill="rgb(231,15,5)" fg:x="6503" fg:w="62"/><text x="27.2401%" y="735.50"></text></g><g><title>IOKit`iokit_user_client_trap (6 samples, 0.02%)</title><rect x="27.2225%" y="709" width="0.0249%" height="15" fill="rgb(252,35,15)" fg:x="6559" fg:w="6"/><text x="27.4725%" y="719.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (63 samples, 0.26%)</title><rect x="26.9901%" y="757" width="0.2615%" height="15" fill="rgb(248,181,18)" fg:x="6503" fg:w="63"/><text x="27.2401%" y="767.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (3 samples, 0.01%)</title><rect x="27.2599%" y="741" width="0.0125%" height="15" fill="rgb(233,39,42)" fg:x="6568" fg:w="3"/><text x="27.5099%" y="751.50"></text></g><g><title>QuartzCore`invocation function for block in CA::MachPortUtil::ClientIPC::create (6 samples, 0.02%)</title><rect x="27.2516%" y="757" width="0.0249%" height="15" fill="rgb(238,110,33)" fg:x="6566" fg:w="6"/><text x="27.5016%" y="767.50"></text></g><g><title>IOSurface`_ioSurfaceEventNotificationCallback2 (3 samples, 0.01%)</title><rect x="27.2765%" y="709" width="0.0125%" height="15" fill="rgb(233,195,10)" fg:x="6572" fg:w="3"/><text x="27.5265%" y="719.50"></text></g><g><title>libdispatch.dylib`dispatch_mig_server (4 samples, 0.02%)</title><rect x="27.2765%" y="757" width="0.0166%" height="15" fill="rgb(254,105,3)" fg:x="6572" fg:w="4"/><text x="27.5265%" y="767.50"></text></g><g><title>IOKit`_IODispatchCalloutWithDispatch (4 samples, 0.02%)</title><rect x="27.2765%" y="741" width="0.0166%" height="15" fill="rgb(221,225,9)" fg:x="6572" fg:w="4"/><text x="27.5265%" y="751.50"></text></g><g><title>IOKit`IODispatchCalloutFromCFMessage (4 samples, 0.02%)</title><rect x="27.2765%" y="725" width="0.0166%" height="15" fill="rgb(224,227,45)" fg:x="6572" fg:w="4"/><text x="27.5265%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (133 samples, 0.55%)</title><rect x="26.7452%" y="869" width="0.5520%" height="15" fill="rgb(229,198,43)" fg:x="6444" fg:w="133"/><text x="26.9952%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (133 samples, 0.55%)</title><rect x="26.7452%" y="853" width="0.5520%" height="15" fill="rgb(206,209,35)" fg:x="6444" fg:w="133"/><text x="26.9952%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (133 samples, 0.55%)</title><rect x="26.7452%" y="837" width="0.5520%" height="15" fill="rgb(245,195,53)" fg:x="6444" fg:w="133"/><text x="26.9952%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (75 samples, 0.31%)</title><rect x="26.9860%" y="821" width="0.3113%" height="15" fill="rgb(240,92,26)" fg:x="6502" fg:w="75"/><text x="27.2360%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (75 samples, 0.31%)</title><rect x="26.9860%" y="805" width="0.3113%" height="15" fill="rgb(207,40,23)" fg:x="6502" fg:w="75"/><text x="27.2360%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (75 samples, 0.31%)</title><rect x="26.9860%" y="789" width="0.3113%" height="15" fill="rgb(223,111,35)" fg:x="6502" fg:w="75"/><text x="27.2360%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (74 samples, 0.31%)</title><rect x="26.9901%" y="773" width="0.3071%" height="15" fill="rgb(229,147,28)" fg:x="6503" fg:w="74"/><text x="27.2401%" y="783.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (199 samples, 0.83%)</title><rect x="26.4796%" y="917" width="0.8259%" height="15" fill="rgb(211,29,28)" fg:x="6380" fg:w="199"/><text x="26.7296%" y="927.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (137 samples, 0.57%)</title><rect x="26.7369%" y="901" width="0.5686%" height="15" fill="rgb(228,72,33)" fg:x="6442" fg:w="137"/><text x="26.9869%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (135 samples, 0.56%)</title><rect x="26.7452%" y="885" width="0.5603%" height="15" fill="rgb(205,214,31)" fg:x="6444" fg:w="135"/><text x="26.9952%" y="895.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (4 samples, 0.02%)</title><rect x="27.3429%" y="661" width="0.0166%" height="15" fill="rgb(224,111,15)" fg:x="6588" fg:w="4"/><text x="27.5929%" y="671.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::ReadDataProvider::with_slice_b(unsigned long, void (std::__1::shared_ptr (4 samples, 0.02%)</title><rect x="27.3429%" y="645" width="0.0166%" height="15" fill="rgb(253,21,26)" fg:x="6588" fg:w="4"/><text x="27.5929%" y="655.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::with_slice_b(unsigned long, void (SLS::TokenizedCoding::VersionedDecoder&lt; (4 samples, 0.02%)</title><rect x="27.3429%" y="629" width="0.0166%" height="15" fill="rgb(245,139,43)" fg:x="6588" fg:w="4"/><text x="27.5929%" y="639.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (4 samples, 0.02%)</title><rect x="27.3429%" y="613" width="0.0166%" height="15" fill="rgb(252,170,7)" fg:x="6588" fg:w="4"/><text x="27.5929%" y="623.50"></text></g><g><title>SkyLight`invocation function for block in auto bool SLS::TokenizedCoding::Decoder::decode_with_manager&lt;_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&gt;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;&amp;)::&apos;lambda&apos;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;)::operator()&lt;SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(_SLEventRecordCreateWithBytesModern (4 samples, 0.02%)</title><rect x="27.3429%" y="597" width="0.0166%" height="15" fill="rgb(231,118,14)" fg:x="6588" fg:w="4"/><text x="27.5929%" y="607.50"></text></g><g><title>SkyLight`SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (4 samples, 0.02%)</title><rect x="27.3429%" y="581" width="0.0166%" height="15" fill="rgb(238,83,0)" fg:x="6588" fg:w="4"/><text x="27.5929%" y="591.50"></text></g><g><title>SkyLight`bool SLS::TokenizedCoding::Decoder::invoke_versioned&lt;bool SLS::TokenizedCoding::Decoder::decode_bytes&lt;void (void const*, unsigned long) block_pointer&gt;(unsigned long, void (void const*, unsigned long) block_pointer&amp;&amp;)::&apos;lambda&apos;(void (void const*, unsigned long) block_pointer&amp;)&gt;(void  (4 samples, 0.02%)</title><rect x="27.3429%" y="565" width="0.0166%" height="15" fill="rgb(221,39,39)" fg:x="6588" fg:w="4"/><text x="27.5929%" y="575.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_bytes_b(unsigned long, void  (4 samples, 0.02%)</title><rect x="27.3429%" y="549" width="0.0166%" height="15" fill="rgb(222,119,46)" fg:x="6588" fg:w="4"/><text x="27.5929%" y="559.50"></text></g><g><title>SkyLight`invocation function for block in SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::operator()(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (4 samples, 0.02%)</title><rect x="27.3429%" y="533" width="0.0166%" height="15" fill="rgb(222,165,49)" fg:x="6588" fg:w="4"/><text x="27.5929%" y="543.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (6 samples, 0.02%)</title><rect x="27.3429%" y="709" width="0.0249%" height="15" fill="rgb(219,113,52)" fg:x="6588" fg:w="6"/><text x="27.5929%" y="719.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (6 samples, 0.02%)</title><rect x="27.3429%" y="693" width="0.0249%" height="15" fill="rgb(214,7,15)" fg:x="6588" fg:w="6"/><text x="27.5929%" y="703.50"></text></g><g><title>SkyLight`_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int) (6 samples, 0.02%)</title><rect x="27.3429%" y="677" width="0.0249%" height="15" fill="rgb(235,32,4)" fg:x="6588" fg:w="6"/><text x="27.5929%" y="687.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (22 samples, 0.09%)</title><rect x="27.3346%" y="725" width="0.0913%" height="15" fill="rgb(238,90,54)" fg:x="6586" fg:w="22"/><text x="27.5846%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (14 samples, 0.06%)</title><rect x="27.3678%" y="709" width="0.0581%" height="15" fill="rgb(213,208,19)" fg:x="6594" fg:w="14"/><text x="27.6178%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (14 samples, 0.06%)</title><rect x="27.3678%" y="693" width="0.0581%" height="15" fill="rgb(233,156,4)" fg:x="6594" fg:w="14"/><text x="27.6178%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (14 samples, 0.06%)</title><rect x="27.3678%" y="677" width="0.0581%" height="15" fill="rgb(207,194,5)" fg:x="6594" fg:w="14"/><text x="27.6178%" y="687.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (30 samples, 0.12%)</title><rect x="27.3056%" y="837" width="0.1245%" height="15" fill="rgb(206,111,30)" fg:x="6579" fg:w="30"/><text x="27.5556%" y="847.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (30 samples, 0.12%)</title><rect x="27.3056%" y="821" width="0.1245%" height="15" fill="rgb(243,70,54)" fg:x="6579" fg:w="30"/><text x="27.5556%" y="831.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (30 samples, 0.12%)</title><rect x="27.3056%" y="805" width="0.1245%" height="15" fill="rgb(242,28,8)" fg:x="6579" fg:w="30"/><text x="27.5556%" y="815.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (29 samples, 0.12%)</title><rect x="27.3097%" y="789" width="0.1204%" height="15" fill="rgb(219,106,18)" fg:x="6580" fg:w="29"/><text x="27.5597%" y="799.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (28 samples, 0.12%)</title><rect x="27.3139%" y="773" width="0.1162%" height="15" fill="rgb(244,222,10)" fg:x="6581" fg:w="28"/><text x="27.5639%" y="783.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (26 samples, 0.11%)</title><rect x="27.3222%" y="757" width="0.1079%" height="15" fill="rgb(236,179,52)" fg:x="6583" fg:w="26"/><text x="27.5722%" y="767.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (25 samples, 0.10%)</title><rect x="27.3263%" y="741" width="0.1038%" height="15" fill="rgb(213,23,39)" fg:x="6584" fg:w="25"/><text x="27.5763%" y="751.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (7 samples, 0.03%)</title><rect x="27.4301%" y="837" width="0.0291%" height="15" fill="rgb(238,48,10)" fg:x="6609" fg:w="7"/><text x="27.6801%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (5 samples, 0.02%)</title><rect x="27.4384%" y="821" width="0.0208%" height="15" fill="rgb(251,196,23)" fg:x="6611" fg:w="5"/><text x="27.6884%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (5 samples, 0.02%)</title><rect x="27.4384%" y="805" width="0.0208%" height="15" fill="rgb(250,152,24)" fg:x="6611" fg:w="5"/><text x="27.6884%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.02%)</title><rect x="27.4384%" y="789" width="0.0208%" height="15" fill="rgb(209,150,17)" fg:x="6611" fg:w="5"/><text x="27.6884%" y="799.50"></text></g><g><title>AppKit`_NSEventThread (38 samples, 0.16%)</title><rect x="27.3056%" y="885" width="0.1577%" height="15" fill="rgb(234,202,34)" fg:x="6579" fg:w="38"/><text x="27.5556%" y="895.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (38 samples, 0.16%)</title><rect x="27.3056%" y="869" width="0.1577%" height="15" fill="rgb(253,148,53)" fg:x="6579" fg:w="38"/><text x="27.5556%" y="879.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (38 samples, 0.16%)</title><rect x="27.3056%" y="853" width="0.1577%" height="15" fill="rgb(218,129,16)" fg:x="6579" fg:w="38"/><text x="27.5556%" y="863.50"></text></g><g><title>lockbook-egui`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="27.4799%" y="709" width="0.0166%" height="15" fill="rgb(216,85,19)" fg:x="6621" fg:w="4"/><text x="27.7299%" y="719.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.01%)</title><rect x="27.4840%" y="693" width="0.0125%" height="15" fill="rgb(235,228,7)" fg:x="6622" fg:w="3"/><text x="27.7340%" y="703.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (6 samples, 0.02%)</title><rect x="27.4799%" y="725" width="0.0249%" height="15" fill="rgb(245,175,0)" fg:x="6621" fg:w="6"/><text x="27.7299%" y="735.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::linked_by (8 samples, 0.03%)</title><rect x="27.4757%" y="757" width="0.0332%" height="15" fill="rgb(208,168,36)" fg:x="6620" fg:w="8"/><text x="27.7257%" y="767.50"></text></g><g><title>lockbook-egui`lb_rs::logic::tree_like::TreeLike::owned_ids (7 samples, 0.03%)</title><rect x="27.4799%" y="741" width="0.0291%" height="15" fill="rgb(246,171,24)" fg:x="6621" fg:w="7"/><text x="27.7299%" y="751.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::name (6 samples, 0.02%)</title><rect x="27.5089%" y="757" width="0.0249%" height="15" fill="rgb(215,142,24)" fg:x="6628" fg:w="6"/><text x="27.7589%" y="767.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::decrypt_key (6 samples, 0.02%)</title><rect x="27.5089%" y="741" width="0.0249%" height="15" fill="rgb(250,187,7)" fg:x="6628" fg:w="6"/><text x="27.7589%" y="751.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::ecdh::_&lt;impl libsecp256k1_core::ecmult::ECMultContext&gt;::ecdh_raw (4 samples, 0.02%)</title><rect x="27.5172%" y="725" width="0.0166%" height="15" fill="rgb(228,66,33)" fg:x="6630" fg:w="4"/><text x="27.7672%" y="735.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::ecmult::ECMultContext::ecmult_const (3 samples, 0.01%)</title><rect x="27.5214%" y="709" width="0.0125%" height="15" fill="rgb(234,215,21)" fg:x="6631" fg:w="3"/><text x="27.7714%" y="719.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (3 samples, 0.01%)</title><rect x="27.5338%" y="741" width="0.0125%" height="15" fill="rgb(222,191,20)" fg:x="6634" fg:w="3"/><text x="27.7838%" y="751.50"></text></g><g><title>lockbook-egui`lb_rs::logic::core_ops::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::decrypt (20 samples, 0.08%)</title><rect x="27.4716%" y="773" width="0.0830%" height="15" fill="rgb(245,79,54)" fg:x="6619" fg:w="20"/><text x="27.7216%" y="783.50"></text></g><g><title>lockbook-egui`libsecp256k1::PublicKey::from_secret_key (5 samples, 0.02%)</title><rect x="27.5338%" y="757" width="0.0208%" height="15" fill="rgb(240,10,37)" fg:x="6634" fg:w="5"/><text x="27.7838%" y="767.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::calculate_deleted (4 samples, 0.02%)</title><rect x="27.5546%" y="773" width="0.0166%" height="15" fill="rgb(214,192,32)" fg:x="6639" fg:w="4"/><text x="27.8046%" y="783.50"></text></g><g><title>lockbook-egui`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.03%)</title><rect x="27.5712%" y="725" width="0.0291%" height="15" fill="rgb(209,36,54)" fg:x="6643" fg:w="7"/><text x="27.8212%" y="735.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.03%)</title><rect x="27.5712%" y="709" width="0.0291%" height="15" fill="rgb(220,10,11)" fg:x="6643" fg:w="7"/><text x="27.8212%" y="719.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (12 samples, 0.05%)</title><rect x="27.5712%" y="741" width="0.0498%" height="15" fill="rgb(221,106,17)" fg:x="6643" fg:w="12"/><text x="27.8212%" y="751.50"></text></g><g><title>lockbook-egui`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (5 samples, 0.02%)</title><rect x="27.6002%" y="725" width="0.0208%" height="15" fill="rgb(251,142,44)" fg:x="6650" fg:w="5"/><text x="27.8502%" y="735.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::linked_by (18 samples, 0.07%)</title><rect x="27.5712%" y="773" width="0.0747%" height="15" fill="rgb(238,13,15)" fg:x="6643" fg:w="18"/><text x="27.8212%" y="783.50"></text></g><g><title>lockbook-egui`lb_rs::logic::tree_like::TreeLike::owned_ids (18 samples, 0.07%)</title><rect x="27.5712%" y="757" width="0.0747%" height="15" fill="rgb(208,107,27)" fg:x="6643" fg:w="18"/><text x="27.8212%" y="767.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (6 samples, 0.02%)</title><rect x="27.6210%" y="741" width="0.0249%" height="15" fill="rgb(205,136,37)" fg:x="6655" fg:w="6"/><text x="27.8710%" y="751.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.02%)</title><rect x="27.6293%" y="725" width="0.0166%" height="15" fill="rgb(250,205,27)" fg:x="6657" fg:w="4"/><text x="27.8793%" y="735.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (3 samples, 0.01%)</title><rect x="27.6459%" y="757" width="0.0125%" height="15" fill="rgb(210,80,43)" fg:x="6661" fg:w="3"/><text x="27.8959%" y="767.50"></text></g><g><title>lockbook-egui`lb_rs::logic::tree_like::TreeLike::owned_ids (4 samples, 0.02%)</title><rect x="27.6459%" y="773" width="0.0166%" height="15" fill="rgb(247,160,36)" fg:x="6661" fg:w="4"/><text x="27.8959%" y="783.50"></text></g><g><title>lockbook-egui`lb_rs::blocking::Lb::get_pending_shares (47 samples, 0.20%)</title><rect x="27.4716%" y="837" width="0.1951%" height="15" fill="rgb(234,13,49)" fg:x="6619" fg:w="47"/><text x="27.7216%" y="847.50"></text></g><g><title>lockbook-egui`tokio::runtime::runtime::Runtime::block_on (47 samples, 0.20%)</title><rect x="27.4716%" y="821" width="0.1951%" height="15" fill="rgb(234,122,0)" fg:x="6619" fg:w="47"/><text x="27.7216%" y="831.50"></text></g><g><title>lockbook-egui`tokio::runtime::context::runtime::enter_runtime (47 samples, 0.20%)</title><rect x="27.4716%" y="805" width="0.1951%" height="15" fill="rgb(207,146,38)" fg:x="6619" fg:w="47"/><text x="27.7216%" y="815.50"></text></g><g><title>lockbook-egui`tokio::runtime::park::CachedParkThread::block_on (47 samples, 0.20%)</title><rect x="27.4716%" y="789" width="0.1951%" height="15" fill="rgb(207,177,25)" fg:x="6619" fg:w="47"/><text x="27.7216%" y="799.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (4 samples, 0.02%)</title><rect x="27.6791%" y="741" width="0.0166%" height="15" fill="rgb(211,178,42)" fg:x="6669" fg:w="4"/><text x="27.9291%" y="751.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.02%)</title><rect x="27.7496%" y="709" width="0.0166%" height="15" fill="rgb(230,69,54)" fg:x="6686" fg:w="4"/><text x="27.9996%" y="719.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (19 samples, 0.08%)</title><rect x="27.6998%" y="725" width="0.0789%" height="15" fill="rgb(214,135,41)" fg:x="6674" fg:w="19"/><text x="27.9498%" y="735.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="27.7662%" y="709" width="0.0125%" height="15" fill="rgb(237,67,25)" fg:x="6690" fg:w="3"/><text x="28.0162%" y="719.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="27.7995%" y="677" width="0.0166%" height="15" fill="rgb(222,189,50)" fg:x="6698" fg:w="4"/><text x="28.0495%" y="687.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="27.8991%" y="661" width="0.0208%" height="15" fill="rgb(245,148,34)" fg:x="6722" fg:w="5"/><text x="28.1491%" y="671.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="27.9198%" y="661" width="0.0166%" height="15" fill="rgb(222,29,6)" fg:x="6727" fg:w="4"/><text x="28.1698%" y="671.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (26 samples, 0.11%)</title><rect x="27.9613%" y="645" width="0.1079%" height="15" fill="rgb(221,189,43)" fg:x="6737" fg:w="26"/><text x="28.2113%" y="655.50"></text></g><g><title>lockbook-egui`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (72 samples, 0.30%)</title><rect x="27.7870%" y="693" width="0.2988%" height="15" fill="rgb(207,36,27)" fg:x="6695" fg:w="72"/><text x="28.0370%" y="703.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (65 samples, 0.27%)</title><rect x="27.8161%" y="677" width="0.2698%" height="15" fill="rgb(217,90,24)" fg:x="6702" fg:w="65"/><text x="28.0661%" y="687.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (36 samples, 0.15%)</title><rect x="27.9364%" y="661" width="0.1494%" height="15" fill="rgb(224,66,35)" fg:x="6731" fg:w="36"/><text x="28.1864%" y="671.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="28.0692%" y="645" width="0.0166%" height="15" fill="rgb(221,13,50)" fg:x="6763" fg:w="4"/><text x="28.3192%" y="655.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.02%)</title><rect x="28.0858%" y="693" width="0.0208%" height="15" fill="rgb(236,68,49)" fg:x="6767" fg:w="5"/><text x="28.3358%" y="703.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="28.1232%" y="677" width="0.0125%" height="15" fill="rgb(229,146,28)" fg:x="6776" fg:w="3"/><text x="28.3732%" y="687.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.03%)</title><rect x="28.1564%" y="661" width="0.0332%" height="15" fill="rgb(225,31,38)" fg:x="6784" fg:w="8"/><text x="28.4064%" y="671.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (99 samples, 0.41%)</title><rect x="27.7870%" y="709" width="0.4109%" height="15" fill="rgb(250,208,3)" fg:x="6695" fg:w="99"/><text x="28.0370%" y="719.50"></text></g><g><title>lockbook-egui`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (22 samples, 0.09%)</title><rect x="28.1066%" y="693" width="0.0913%" height="15" fill="rgb(246,54,23)" fg:x="6772" fg:w="22"/><text x="28.3566%" y="703.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.06%)</title><rect x="28.1356%" y="677" width="0.0623%" height="15" fill="rgb(243,76,11)" fg:x="6779" fg:w="15"/><text x="28.3856%" y="687.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.01%)</title><rect x="28.1979%" y="709" width="0.0125%" height="15" fill="rgb(245,21,50)" fg:x="6794" fg:w="3"/><text x="28.4479%" y="719.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="28.2892%" y="677" width="0.0249%" height="15" fill="rgb(228,9,43)" fg:x="6816" fg:w="6"/><text x="28.5392%" y="687.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::linked_by (151 samples, 0.63%)</title><rect x="27.6957%" y="741" width="0.6267%" height="15" fill="rgb(208,100,47)" fg:x="6673" fg:w="151"/><text x="27.9457%" y="751.50"></text></g><g><title>lockbook-egui`lb_rs::logic::tree_like::TreeLike::owned_ids (129 samples, 0.54%)</title><rect x="27.7870%" y="725" width="0.5354%" height="15" fill="rgb(232,26,8)" fg:x="6695" fg:w="129"/><text x="28.0370%" y="735.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (27 samples, 0.11%)</title><rect x="28.2103%" y="709" width="0.1121%" height="15" fill="rgb(216,166,38)" fg:x="6797" fg:w="27"/><text x="28.4603%" y="719.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23 samples, 0.10%)</title><rect x="28.2269%" y="693" width="0.0955%" height="15" fill="rgb(251,202,51)" fg:x="6801" fg:w="23"/><text x="28.4769%" y="703.50"></text></g><g><title>lockbook-egui`lb_rs::logic::symkey::decrypt (3 samples, 0.01%)</title><rect x="28.3266%" y="709" width="0.0125%" height="15" fill="rgb(254,216,34)" fg:x="6825" fg:w="3"/><text x="28.5766%" y="719.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::mul_in_place (7 samples, 0.03%)</title><rect x="28.3390%" y="677" width="0.0291%" height="15" fill="rgb(251,32,27)" fg:x="6828" fg:w="7"/><text x="28.5890%" y="687.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (13 samples, 0.05%)</title><rect x="28.3390%" y="693" width="0.0540%" height="15" fill="rgb(208,127,28)" fg:x="6828" fg:w="13"/><text x="28.5890%" y="703.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::sqr_in_place (5 samples, 0.02%)</title><rect x="28.3722%" y="677" width="0.0208%" height="15" fill="rgb(224,137,22)" fg:x="6836" fg:w="5"/><text x="28.6222%" y="687.50"></text></g><g><title>lockbook-egui`libsecp256k1::PublicKey::from_secret_key (18 samples, 0.07%)</title><rect x="28.3390%" y="709" width="0.0747%" height="15" fill="rgb(254,70,32)" fg:x="6828" fg:w="18"/><text x="28.5890%" y="719.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::group::Affine::set_gej (5 samples, 0.02%)</title><rect x="28.3930%" y="693" width="0.0208%" height="15" fill="rgb(229,75,37)" fg:x="6841" fg:w="5"/><text x="28.6430%" y="703.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::sqr_in_place (4 samples, 0.02%)</title><rect x="28.3971%" y="677" width="0.0166%" height="15" fill="rgb(252,64,23)" fg:x="6842" fg:w="4"/><text x="28.6471%" y="687.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::decrypt_key (22 samples, 0.09%)</title><rect x="28.3266%" y="725" width="0.0913%" height="15" fill="rgb(232,162,48)" fg:x="6825" fg:w="22"/><text x="28.5766%" y="735.50"></text></g><g><title>lockbook-egui`lb_rs::logic::core_ops::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::decrypt (181 samples, 0.75%)</title><rect x="27.6791%" y="757" width="0.7512%" height="15" fill="rgb(246,160,12)" fg:x="6669" fg:w="181"/><text x="27.9291%" y="767.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::name (26 samples, 0.11%)</title><rect x="28.3224%" y="741" width="0.1079%" height="15" fill="rgb(247,166,0)" fg:x="6824" fg:w="26"/><text x="28.5724%" y="751.50"></text></g><g><title>lockbook-egui`lb_rs::logic::secret_filename::SecretFileName::to_string (3 samples, 0.01%)</title><rect x="28.4179%" y="725" width="0.0125%" height="15" fill="rgb(249,219,21)" fg:x="6847" fg:w="3"/><text x="28.6679%" y="735.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (6 samples, 0.02%)</title><rect x="28.4303%" y="725" width="0.0249%" height="15" fill="rgb(205,209,3)" fg:x="6850" fg:w="6"/><text x="28.6803%" y="735.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.06%)</title><rect x="28.5548%" y="693" width="0.0623%" height="15" fill="rgb(243,44,1)" fg:x="6880" fg:w="15"/><text x="28.8048%" y="703.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (33 samples, 0.14%)</title><rect x="28.5092%" y="709" width="0.1370%" height="15" fill="rgb(206,159,16)" fg:x="6869" fg:w="33"/><text x="28.7592%" y="719.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (7 samples, 0.03%)</title><rect x="28.6171%" y="693" width="0.0291%" height="15" fill="rgb(244,77,30)" fg:x="6895" fg:w="7"/><text x="28.8671%" y="703.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="28.6461%" y="709" width="0.0166%" height="15" fill="rgb(218,69,12)" fg:x="6902" fg:w="4"/><text x="28.8961%" y="719.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.07%)</title><rect x="28.8412%" y="645" width="0.0706%" height="15" fill="rgb(212,87,7)" fg:x="6949" fg:w="17"/><text x="29.0912%" y="655.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (7 samples, 0.03%)</title><rect x="28.9118%" y="645" width="0.0291%" height="15" fill="rgb(245,114,25)" fg:x="6966" fg:w="7"/><text x="29.1618%" y="655.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (48 samples, 0.20%)</title><rect x="28.9906%" y="629" width="0.1992%" height="15" fill="rgb(210,61,42)" fg:x="6985" fg:w="48"/><text x="29.2406%" y="639.50"></text></g><g><title>lockbook-egui`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (140 samples, 0.58%)</title><rect x="28.6627%" y="677" width="0.5811%" height="15" fill="rgb(211,52,33)" fg:x="6906" fg:w="140"/><text x="28.9127%" y="687.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (134 samples, 0.56%)</title><rect x="28.6876%" y="661" width="0.5562%" height="15" fill="rgb(234,58,33)" fg:x="6912" fg:w="134"/><text x="28.9376%" y="671.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (73 samples, 0.30%)</title><rect x="28.9408%" y="645" width="0.3030%" height="15" fill="rgb(220,115,36)" fg:x="6973" fg:w="73"/><text x="29.1908%" y="655.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (13 samples, 0.05%)</title><rect x="29.1898%" y="629" width="0.0540%" height="15" fill="rgb(243,153,54)" fg:x="7033" fg:w="13"/><text x="29.4398%" y="639.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.03%)</title><rect x="29.2438%" y="677" width="0.0332%" height="15" fill="rgb(251,47,18)" fg:x="7046" fg:w="8"/><text x="29.4938%" y="687.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="29.3061%" y="661" width="0.0249%" height="15" fill="rgb(242,102,42)" fg:x="7061" fg:w="6"/><text x="29.5561%" y="671.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.08%)</title><rect x="29.3600%" y="645" width="0.0789%" height="15" fill="rgb(234,31,38)" fg:x="7074" fg:w="19"/><text x="29.6100%" y="655.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (191 samples, 0.79%)</title><rect x="28.6627%" y="693" width="0.7927%" height="15" fill="rgb(221,117,51)" fg:x="6906" fg:w="191"/><text x="28.9127%" y="703.50"></text></g><g><title>lockbook-egui`lb_rs::logic::core_tree::_&lt;impl lb_rs::logic::tree_like::TreeLike for db_rs::lookup::LookupTable&lt;uuid::Uuid,F&gt;&gt;::ids (43 samples, 0.18%)</title><rect x="29.2770%" y="677" width="0.1785%" height="15" fill="rgb(212,20,18)" fg:x="7054" fg:w="43"/><text x="29.5270%" y="687.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (30 samples, 0.12%)</title><rect x="29.3310%" y="661" width="0.1245%" height="15" fill="rgb(245,133,36)" fg:x="7067" fg:w="30"/><text x="29.5810%" y="671.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="29.4389%" y="645" width="0.0166%" height="15" fill="rgb(212,6,19)" fg:x="7093" fg:w="4"/><text x="29.6889%" y="655.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.02%)</title><rect x="29.4555%" y="693" width="0.0249%" height="15" fill="rgb(218,1,36)" fg:x="7097" fg:w="6"/><text x="29.7055%" y="703.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="29.5011%" y="677" width="0.0166%" height="15" fill="rgb(246,84,54)" fg:x="7108" fg:w="4"/><text x="29.7511%" y="687.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.09%)</title><rect x="29.6298%" y="661" width="0.0872%" height="15" fill="rgb(242,110,6)" fg:x="7139" fg:w="21"/><text x="29.8798%" y="671.50"></text></g><g><title>lockbook-egui`lb_rs::blocking::Lb::list_metadatas (495 samples, 2.05%)</title><rect x="27.6791%" y="837" width="2.0545%" height="15" fill="rgb(214,47,5)" fg:x="6669" fg:w="495"/><text x="27.9291%" y="847.50">l..</text></g><g><title>lockbook-egui`tokio::runtime::runtime::Runtime::block_on (495 samples, 2.05%)</title><rect x="27.6791%" y="821" width="2.0545%" height="15" fill="rgb(218,159,25)" fg:x="6669" fg:w="495"/><text x="27.9291%" y="831.50">l..</text></g><g><title>lockbook-egui`tokio::runtime::context::runtime::enter_runtime (495 samples, 2.05%)</title><rect x="27.6791%" y="805" width="2.0545%" height="15" fill="rgb(215,211,28)" fg:x="6669" fg:w="495"/><text x="27.9291%" y="815.50">l..</text></g><g><title>lockbook-egui`tokio::runtime::park::CachedParkThread::block_on (495 samples, 2.05%)</title><rect x="27.6791%" y="789" width="2.0545%" height="15" fill="rgb(238,59,32)" fg:x="6669" fg:w="495"/><text x="27.9291%" y="799.50">l..</text></g><g><title>lockbook-egui`lb_rs::logic::core_ops::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::decrypt_all (495 samples, 2.05%)</title><rect x="27.6791%" y="773" width="2.0545%" height="15" fill="rgb(226,82,3)" fg:x="6669" fg:w="495"/><text x="27.9291%" y="783.50">l..</text></g><g><title>lockbook-egui`lb_rs::logic::core_ops::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::is_invisible_id (314 samples, 1.30%)</title><rect x="28.4303%" y="757" width="1.3032%" height="15" fill="rgb(240,164,32)" fg:x="6850" fg:w="314"/><text x="28.6803%" y="767.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::in_pending_share (314 samples, 1.30%)</title><rect x="28.4303%" y="741" width="1.3032%" height="15" fill="rgb(232,46,7)" fg:x="6850" fg:w="314"/><text x="28.6803%" y="751.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::linked_by (308 samples, 1.28%)</title><rect x="28.4552%" y="725" width="1.2783%" height="15" fill="rgb(229,129,53)" fg:x="6856" fg:w="308"/><text x="28.7052%" y="735.50"></text></g><g><title>lockbook-egui`lb_rs::logic::tree_like::TreeLike::owned_ids (258 samples, 1.07%)</title><rect x="28.6627%" y="709" width="1.0708%" height="15" fill="rgb(234,188,29)" fg:x="6906" fg:w="258"/><text x="28.9127%" y="719.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (61 samples, 0.25%)</title><rect x="29.4804%" y="693" width="0.2532%" height="15" fill="rgb(246,141,4)" fg:x="7103" fg:w="61"/><text x="29.7304%" y="703.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (52 samples, 0.22%)</title><rect x="29.5177%" y="677" width="0.2158%" height="15" fill="rgb(229,23,39)" fg:x="7112" fg:w="52"/><text x="29.7677%" y="687.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="29.7169%" y="661" width="0.0166%" height="15" fill="rgb(206,12,3)" fg:x="7160" fg:w="4"/><text x="29.9669%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_free (27 samples, 0.11%)</title><rect x="29.7543%" y="709" width="0.1121%" height="15" fill="rgb(252,226,20)" fg:x="7169" fg:w="27"/><text x="30.0043%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (17 samples, 0.07%)</title><rect x="29.8664%" y="709" width="0.0706%" height="15" fill="rgb(216,123,35)" fg:x="7196" fg:w="17"/><text x="30.1164%" y="719.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$free (13 samples, 0.05%)</title><rect x="29.9452%" y="709" width="0.0540%" height="15" fill="rgb(212,68,40)" fg:x="7215" fg:w="13"/><text x="30.1952%" y="719.50"></text></g><g><title>lockbook-egui`core::str::pattern::TwoWaySearcher::next (16 samples, 0.07%)</title><rect x="30.0158%" y="709" width="0.0664%" height="15" fill="rgb(254,125,32)" fg:x="7232" fg:w="16"/><text x="30.2658%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.01%)</title><rect x="30.0946%" y="693" width="0.0125%" height="15" fill="rgb(253,97,22)" fg:x="7251" fg:w="3"/><text x="30.3446%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.01%)</title><rect x="30.1859%" y="613" width="0.0125%" height="15" fill="rgb(241,101,14)" fg:x="7273" fg:w="3"/><text x="30.4359%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.01%)</title><rect x="30.1859%" y="597" width="0.0125%" height="15" fill="rgb(238,103,29)" fg:x="7273" fg:w="3"/><text x="30.4359%" y="607.50"></text></g><g><title>lockbook-egui`alloc::string::String::push (14 samples, 0.06%)</title><rect x="30.1444%" y="661" width="0.0581%" height="15" fill="rgb(233,195,47)" fg:x="7263" fg:w="14"/><text x="30.3944%" y="671.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.02%)</title><rect x="30.1818%" y="645" width="0.0208%" height="15" fill="rgb(246,218,30)" fg:x="7272" fg:w="5"/><text x="30.4318%" y="655.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="30.1859%" y="629" width="0.0166%" height="15" fill="rgb(219,145,47)" fg:x="7273" fg:w="4"/><text x="30.4359%" y="639.50"></text></g><g><title>lockbook-egui`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (32 samples, 0.13%)</title><rect x="30.1195%" y="677" width="0.1328%" height="15" fill="rgb(243,12,26)" fg:x="7257" fg:w="32"/><text x="30.3695%" y="687.50"></text></g><g><title>lockbook-egui`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.05%)</title><rect x="30.2025%" y="661" width="0.0498%" height="15" fill="rgb(214,87,16)" fg:x="7277" fg:w="12"/><text x="30.4525%" y="671.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.02%)</title><rect x="30.2316%" y="645" width="0.0208%" height="15" fill="rgb(208,99,42)" fg:x="7284" fg:w="5"/><text x="30.4816%" y="655.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="30.2316%" y="629" width="0.0208%" height="15" fill="rgb(253,99,2)" fg:x="7284" fg:w="5"/><text x="30.4816%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.02%)</title><rect x="30.2316%" y="613" width="0.0208%" height="15" fill="rgb(220,168,23)" fg:x="7284" fg:w="5"/><text x="30.4816%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.02%)</title><rect x="30.2357%" y="597" width="0.0166%" height="15" fill="rgb(242,38,24)" fg:x="7285" fg:w="4"/><text x="30.4857%" y="607.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="30.2523%" y="677" width="0.0166%" height="15" fill="rgb(225,182,9)" fg:x="7289" fg:w="4"/><text x="30.5023%" y="687.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="30.2523%" y="661" width="0.0166%" height="15" fill="rgb(243,178,37)" fg:x="7289" fg:w="4"/><text x="30.5023%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4 samples, 0.02%)</title><rect x="30.2523%" y="645" width="0.0166%" height="15" fill="rgb(232,139,19)" fg:x="7289" fg:w="4"/><text x="30.5023%" y="655.50"></text></g><g><title>lockbook-egui`alloc::string::String::push (13 samples, 0.05%)</title><rect x="30.2772%" y="677" width="0.0540%" height="15" fill="rgb(225,201,24)" fg:x="7295" fg:w="13"/><text x="30.5272%" y="687.50"></text></g><g><title>lockbook-egui`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (56 samples, 0.23%)</title><rect x="30.1071%" y="693" width="0.2324%" height="15" fill="rgb(221,47,46)" fg:x="7254" fg:w="56"/><text x="30.3571%" y="703.50"></text></g><g><title>lockbook-egui`lb_rs::service::search::SearchIndex::optimize_searched_text (63 samples, 0.26%)</title><rect x="30.0822%" y="709" width="0.2615%" height="15" fill="rgb(249,23,13)" fg:x="7248" fg:w="63"/><text x="30.3322%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (6 samples, 0.02%)</title><rect x="30.6383%" y="693" width="0.0249%" height="15" fill="rgb(219,9,5)" fg:x="7382" fg:w="6"/><text x="30.8883%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_free (204 samples, 0.85%)</title><rect x="30.6632%" y="693" width="0.8467%" height="15" fill="rgb(254,171,16)" fg:x="7388" fg:w="204"/><text x="30.9132%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.03%)</title><rect x="31.5099%" y="693" width="0.0291%" height="15" fill="rgb(230,171,20)" fg:x="7592" fg:w="7"/><text x="31.7599%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (137 samples, 0.57%)</title><rect x="31.5390%" y="693" width="0.5686%" height="15" fill="rgb(210,71,41)" fg:x="7599" fg:w="137"/><text x="31.7890%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.02%)</title><rect x="32.1159%" y="693" width="0.0166%" height="15" fill="rgb(206,173,20)" fg:x="7738" fg:w="4"/><text x="32.3659%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.02%)</title><rect x="32.1325%" y="693" width="0.0249%" height="15" fill="rgb(233,88,34)" fg:x="7742" fg:w="6"/><text x="32.3825%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.02%)</title><rect x="32.1366%" y="677" width="0.0208%" height="15" fill="rgb(223,209,46)" fg:x="7743" fg:w="5"/><text x="32.3866%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.01%)</title><rect x="32.1449%" y="661" width="0.0125%" height="15" fill="rgb(250,43,18)" fg:x="7745" fg:w="3"/><text x="32.3949%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (5 samples, 0.02%)</title><rect x="32.1574%" y="693" width="0.0208%" height="15" fill="rgb(208,13,10)" fg:x="7748" fg:w="5"/><text x="32.4074%" y="703.50"></text></g><g><title>libsystem_platform.dylib`__bzero (7 samples, 0.03%)</title><rect x="32.1781%" y="693" width="0.0291%" height="15" fill="rgb(212,200,36)" fg:x="7753" fg:w="7"/><text x="32.4281%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.02%)</title><rect x="32.2072%" y="693" width="0.0208%" height="15" fill="rgb(225,90,30)" fg:x="7760" fg:w="5"/><text x="32.4572%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (35 samples, 0.15%)</title><rect x="32.2279%" y="693" width="0.1453%" height="15" fill="rgb(236,182,39)" fg:x="7765" fg:w="35"/><text x="32.4779%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (4 samples, 0.02%)</title><rect x="32.3898%" y="645" width="0.0166%" height="15" fill="rgb(212,144,35)" fg:x="7804" fg:w="4"/><text x="32.6398%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.02%)</title><rect x="32.3898%" y="629" width="0.0166%" height="15" fill="rgb(228,63,44)" fg:x="7804" fg:w="4"/><text x="32.6398%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.01%)</title><rect x="32.3940%" y="613" width="0.0125%" height="15" fill="rgb(228,109,6)" fg:x="7805" fg:w="3"/><text x="32.6440%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.01%)</title><rect x="32.3940%" y="597" width="0.0125%" height="15" fill="rgb(238,117,24)" fg:x="7805" fg:w="3"/><text x="32.6440%" y="607.50"></text></g><g><title>lockbook-egui`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.03%)</title><rect x="32.3815%" y="693" width="0.0291%" height="15" fill="rgb(242,26,26)" fg:x="7802" fg:w="7"/><text x="32.6315%" y="703.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.02%)</title><rect x="32.3857%" y="677" width="0.0249%" height="15" fill="rgb(221,92,48)" fg:x="7803" fg:w="6"/><text x="32.6357%" y="687.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="32.3898%" y="661" width="0.0208%" height="15" fill="rgb(209,209,32)" fg:x="7804" fg:w="5"/><text x="32.6398%" y="671.50"></text></g><g><title>lockbook-egui`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="32.4106%" y="693" width="0.0166%" height="15" fill="rgb(221,70,22)" fg:x="7809" fg:w="4"/><text x="32.6606%" y="703.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$free (27 samples, 0.11%)</title><rect x="32.4272%" y="693" width="0.1121%" height="15" fill="rgb(248,145,5)" fg:x="7813" fg:w="27"/><text x="32.6772%" y="703.50"></text></g><g><title>lockbook-egui`alloc::str::_&lt;impl str&gt;::to_lowercase (3 samples, 0.01%)</title><rect x="32.5600%" y="693" width="0.0125%" height="15" fill="rgb(226,116,26)" fg:x="7845" fg:w="3"/><text x="32.8100%" y="703.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (7 samples, 0.03%)</title><rect x="32.5724%" y="693" width="0.0291%" height="15" fill="rgb(244,5,17)" fg:x="7848" fg:w="7"/><text x="32.8224%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.01%)</title><rect x="34.6808%" y="677" width="0.0125%" height="15" fill="rgb(252,159,33)" fg:x="8356" fg:w="3"/><text x="34.9308%" y="687.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (78 samples, 0.32%)</title><rect x="34.7140%" y="677" width="0.3237%" height="15" fill="rgb(206,71,0)" fg:x="8364" fg:w="78"/><text x="34.9640%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.01%)</title><rect x="35.1083%" y="613" width="0.0125%" height="15" fill="rgb(233,118,54)" fg:x="8459" fg:w="3"/><text x="35.3583%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.02%)</title><rect x="35.1374%" y="597" width="0.0166%" height="15" fill="rgb(234,83,48)" fg:x="8466" fg:w="4"/><text x="35.3874%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.02%)</title><rect x="35.1581%" y="597" width="0.0208%" height="15" fill="rgb(228,3,54)" fg:x="8471" fg:w="5"/><text x="35.4081%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.02%)</title><rect x="35.1623%" y="581" width="0.0166%" height="15" fill="rgb(226,155,13)" fg:x="8472" fg:w="4"/><text x="35.4123%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.01%)</title><rect x="35.1664%" y="565" width="0.0125%" height="15" fill="rgb(241,28,37)" fg:x="8473" fg:w="3"/><text x="35.4164%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (15 samples, 0.06%)</title><rect x="35.1208%" y="613" width="0.0623%" height="15" fill="rgb(233,93,10)" fg:x="8462" fg:w="15"/><text x="35.3708%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.01%)</title><rect x="35.1830%" y="613" width="0.0125%" height="15" fill="rgb(225,113,19)" fg:x="8477" fg:w="3"/><text x="35.4330%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (31 samples, 0.13%)</title><rect x="35.0834%" y="629" width="0.1287%" height="15" fill="rgb(241,2,18)" fg:x="8453" fg:w="31"/><text x="35.3334%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.02%)</title><rect x="35.1955%" y="613" width="0.0166%" height="15" fill="rgb(228,207,21)" fg:x="8480" fg:w="4"/><text x="35.4455%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (32 samples, 0.13%)</title><rect x="35.0834%" y="645" width="0.1328%" height="15" fill="rgb(213,211,35)" fg:x="8453" fg:w="32"/><text x="35.3334%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.01%)</title><rect x="35.2162%" y="645" width="0.0125%" height="15" fill="rgb(209,83,10)" fg:x="8485" fg:w="3"/><text x="35.4662%" y="655.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (45 samples, 0.19%)</title><rect x="35.0461%" y="677" width="0.1868%" height="15" fill="rgb(209,164,1)" fg:x="8444" fg:w="45"/><text x="35.2961%" y="687.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (36 samples, 0.15%)</title><rect x="35.0834%" y="661" width="0.1494%" height="15" fill="rgb(213,184,43)" fg:x="8453" fg:w="36"/><text x="35.3334%" y="671.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="35.2328%" y="677" width="0.0166%" height="15" fill="rgb(231,61,34)" fg:x="8489" fg:w="4"/><text x="35.4828%" y="687.50"></text></g><g><title>lockbook-egui`alloc::str::_&lt;impl str&gt;::to_lowercase (13 samples, 0.05%)</title><rect x="35.2494%" y="677" width="0.0540%" height="15" fill="rgb(235,75,3)" fg:x="8493" fg:w="13"/><text x="35.4994%" y="687.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (117 samples, 0.49%)</title><rect x="35.3117%" y="677" width="0.4856%" height="15" fill="rgb(220,106,47)" fg:x="8508" fg:w="117"/><text x="35.5617%" y="687.50"></text></g><g><title>lockbook-egui`core::unicode::unicode_data::conversions::to_lower (4 samples, 0.02%)</title><rect x="35.8056%" y="677" width="0.0166%" height="15" fill="rgb(210,196,33)" fg:x="8627" fg:w="4"/><text x="36.0556%" y="687.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.04%)</title><rect x="35.8305%" y="677" width="0.0415%" height="15" fill="rgb(229,154,42)" fg:x="8633" fg:w="10"/><text x="36.0805%" y="687.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="35.8554%" y="661" width="0.0166%" height="15" fill="rgb(228,114,26)" fg:x="8639" fg:w="4"/><text x="36.1054%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (5 samples, 0.02%)</title><rect x="35.8969%" y="661" width="0.0208%" height="15" fill="rgb(208,144,1)" fg:x="8649" fg:w="5"/><text x="36.1469%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.01%)</title><rect x="35.9177%" y="661" width="0.0125%" height="15" fill="rgb(239,112,37)" fg:x="8654" fg:w="3"/><text x="36.1677%" y="671.50"></text></g><g><title>lockbook-egui`sublime_fuzzy::parsing::build_occurrences (797 samples, 3.31%)</title><rect x="32.6264%" y="693" width="3.3079%" height="15" fill="rgb(210,96,50)" fg:x="7861" fg:w="797"/><text x="32.8764%" y="703.50">loc..</text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.06%)</title><rect x="35.8720%" y="677" width="0.0623%" height="15" fill="rgb(222,178,2)" fg:x="8643" fg:w="15"/><text x="36.1220%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (86 samples, 0.36%)</title><rect x="37.1503%" y="677" width="0.3569%" height="15" fill="rgb(226,74,18)" fg:x="8951" fg:w="86"/><text x="37.4003%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_free (111 samples, 0.46%)</title><rect x="37.5073%" y="677" width="0.4607%" height="15" fill="rgb(225,67,54)" fg:x="9037" fg:w="111"/><text x="37.7573%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (124 samples, 0.51%)</title><rect x="37.9680%" y="677" width="0.5147%" height="15" fill="rgb(251,92,32)" fg:x="9148" fg:w="124"/><text x="38.2180%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (440 samples, 1.83%)</title><rect x="38.4826%" y="677" width="1.8262%" height="15" fill="rgb(228,149,22)" fg:x="9272" fg:w="440"/><text x="38.7326%" y="687.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (19 samples, 0.08%)</title><rect x="40.3088%" y="677" width="0.0789%" height="15" fill="rgb(243,54,13)" fg:x="9712" fg:w="19"/><text x="40.5588%" y="687.50"></text></g><g><title>libsystem_platform.dylib`__bzero (32 samples, 0.13%)</title><rect x="40.3876%" y="677" width="0.1328%" height="15" fill="rgb(243,180,28)" fg:x="9731" fg:w="32"/><text x="40.6376%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (84 samples, 0.35%)</title><rect x="40.5205%" y="677" width="0.3486%" height="15" fill="rgb(208,167,24)" fg:x="9763" fg:w="84"/><text x="40.7705%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (105 samples, 0.44%)</title><rect x="40.8691%" y="677" width="0.4358%" height="15" fill="rgb(245,73,45)" fg:x="9847" fg:w="105"/><text x="41.1191%" y="687.50"></text></g><g><title>lockbook-egui`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="41.3049%" y="677" width="0.0332%" height="15" fill="rgb(237,203,48)" fg:x="9952" fg:w="8"/><text x="41.5549%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6 samples, 0.02%)</title><rect x="41.3132%" y="661" width="0.0249%" height="15" fill="rgb(211,197,16)" fg:x="9954" fg:w="6"/><text x="41.5632%" y="671.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.07%)</title><rect x="41.3381%" y="677" width="0.0747%" height="15" fill="rgb(243,99,51)" fg:x="9960" fg:w="18"/><text x="41.5881%" y="687.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$free (18 samples, 0.07%)</title><rect x="41.4128%" y="677" width="0.0747%" height="15" fill="rgb(215,123,29)" fg:x="9978" fg:w="18"/><text x="41.6628%" y="687.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$malloc (18 samples, 0.07%)</title><rect x="41.4875%" y="677" width="0.0747%" height="15" fill="rgb(239,186,37)" fg:x="9996" fg:w="18"/><text x="41.7375%" y="687.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$memcpy (11 samples, 0.05%)</title><rect x="41.5622%" y="677" width="0.0457%" height="15" fill="rgb(252,136,39)" fg:x="10014" fg:w="11"/><text x="41.8122%" y="687.50"></text></g><g><title>lockbook-egui`__rdl_alloc (29 samples, 0.12%)</title><rect x="41.6079%" y="677" width="0.1204%" height="15" fill="rgb(223,213,32)" fg:x="10025" fg:w="29"/><text x="41.8579%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.02%)</title><rect x="41.7531%" y="613" width="0.0208%" height="15" fill="rgb(233,115,5)" fg:x="10060" fg:w="5"/><text x="42.0031%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.05%)</title><rect x="41.7863%" y="597" width="0.0540%" height="15" fill="rgb(207,226,44)" fg:x="10068" fg:w="13"/><text x="42.0363%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (18 samples, 0.07%)</title><rect x="41.7739%" y="613" width="0.0747%" height="15" fill="rgb(208,126,0)" fg:x="10065" fg:w="18"/><text x="42.0239%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (28 samples, 0.12%)</title><rect x="41.7407%" y="645" width="0.1162%" height="15" fill="rgb(244,66,21)" fg:x="10057" fg:w="28"/><text x="41.9907%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (26 samples, 0.11%)</title><rect x="41.7490%" y="629" width="0.1079%" height="15" fill="rgb(222,97,12)" fg:x="10059" fg:w="26"/><text x="41.9990%" y="639.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (33 samples, 0.14%)</title><rect x="41.7282%" y="677" width="0.1370%" height="15" fill="rgb(219,213,19)" fg:x="10054" fg:w="33"/><text x="41.9782%" y="687.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (30 samples, 0.12%)</title><rect x="41.7407%" y="661" width="0.1245%" height="15" fill="rgb(252,169,30)" fg:x="10057" fg:w="30"/><text x="41.9907%" y="671.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="41.8652%" y="677" width="0.0166%" height="15" fill="rgb(206,32,51)" fg:x="10087" fg:w="4"/><text x="42.1152%" y="687.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (124 samples, 0.51%)</title><rect x="41.8818%" y="677" width="0.5147%" height="15" fill="rgb(250,172,42)" fg:x="10091" fg:w="124"/><text x="42.1318%" y="687.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.07%)</title><rect x="42.5127%" y="661" width="0.0706%" height="15" fill="rgb(209,34,43)" fg:x="10243" fg:w="17"/><text x="42.7627%" y="671.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (9 samples, 0.04%)</title><rect x="42.5832%" y="661" width="0.0374%" height="15" fill="rgb(223,11,35)" fg:x="10260" fg:w="9"/><text x="42.8332%" y="671.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.08%)</title><rect x="42.7036%" y="645" width="0.0830%" height="15" fill="rgb(251,219,26)" fg:x="10289" fg:w="20"/><text x="42.9536%" y="655.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (101 samples, 0.42%)</title><rect x="42.3964%" y="677" width="0.4192%" height="15" fill="rgb(231,119,3)" fg:x="10215" fg:w="101"/><text x="42.6464%" y="687.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (47 samples, 0.20%)</title><rect x="42.6206%" y="661" width="0.1951%" height="15" fill="rgb(216,97,11)" fg:x="10269" fg:w="47"/><text x="42.8706%" y="671.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (7 samples, 0.03%)</title><rect x="42.7866%" y="645" width="0.0291%" height="15" fill="rgb(223,59,9)" fg:x="10309" fg:w="7"/><text x="43.0366%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (49 samples, 0.20%)</title><rect x="45.5549%" y="661" width="0.2034%" height="15" fill="rgb(233,93,31)" fg:x="10976" fg:w="49"/><text x="45.8049%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_free (107 samples, 0.44%)</title><rect x="45.7583%" y="661" width="0.4441%" height="15" fill="rgb(239,81,33)" fg:x="11025" fg:w="107"/><text x="46.0083%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (73 samples, 0.30%)</title><rect x="46.2024%" y="661" width="0.3030%" height="15" fill="rgb(213,120,34)" fg:x="11132" fg:w="73"/><text x="46.4524%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (339 samples, 1.41%)</title><rect x="46.5054%" y="661" width="1.4070%" height="15" fill="rgb(243,49,53)" fg:x="11205" fg:w="339"/><text x="46.7554%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (204 samples, 0.85%)</title><rect x="47.9123%" y="661" width="0.8467%" height="15" fill="rgb(247,216,33)" fg:x="11544" fg:w="204"/><text x="48.1623%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (22 samples, 0.09%)</title><rect x="48.6677%" y="645" width="0.0913%" height="15" fill="rgb(226,26,14)" fg:x="11726" fg:w="22"/><text x="48.9177%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (21 samples, 0.09%)</title><rect x="48.6719%" y="629" width="0.0872%" height="15" fill="rgb(215,49,53)" fg:x="11727" fg:w="21"/><text x="48.9219%" y="639.50"></text></g><g><title>libsystem_platform.dylib`__bzero (21 samples, 0.09%)</title><rect x="48.7590%" y="661" width="0.0872%" height="15" fill="rgb(245,162,40)" fg:x="11748" fg:w="21"/><text x="49.0090%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (73 samples, 0.30%)</title><rect x="48.8462%" y="661" width="0.3030%" height="15" fill="rgb(229,68,17)" fg:x="11769" fg:w="73"/><text x="49.0962%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (61 samples, 0.25%)</title><rect x="49.1492%" y="661" width="0.2532%" height="15" fill="rgb(213,182,10)" fg:x="11842" fg:w="61"/><text x="49.3992%" y="671.50"></text></g><g><title>lockbook-egui`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.05%)</title><rect x="49.4023%" y="661" width="0.0540%" height="15" fill="rgb(245,125,30)" fg:x="11903" fg:w="13"/><text x="49.6523%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (10 samples, 0.04%)</title><rect x="49.4148%" y="645" width="0.0415%" height="15" fill="rgb(232,202,2)" fg:x="11906" fg:w="10"/><text x="49.6648%" y="655.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (495 samples, 2.05%)</title><rect x="49.4563%" y="661" width="2.0545%" height="15" fill="rgb(237,140,51)" fg:x="11916" fg:w="495"/><text x="49.7063%" y="671.50">l..</text></g><g><title>lockbook-egui`DYLD-STUB$$free (15 samples, 0.06%)</title><rect x="51.5107%" y="661" width="0.0623%" height="15" fill="rgb(236,157,25)" fg:x="12411" fg:w="15"/><text x="51.7607%" y="671.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$malloc (16 samples, 0.07%)</title><rect x="51.5730%" y="661" width="0.0664%" height="15" fill="rgb(219,209,0)" fg:x="12426" fg:w="16"/><text x="51.8230%" y="671.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$memcpy (13 samples, 0.05%)</title><rect x="51.6394%" y="661" width="0.0540%" height="15" fill="rgb(240,116,54)" fg:x="12442" fg:w="13"/><text x="51.8894%" y="671.50"></text></g><g><title>lockbook-egui`__rdl_alloc (19 samples, 0.08%)</title><rect x="51.6934%" y="661" width="0.0789%" height="15" fill="rgb(216,10,36)" fg:x="12455" fg:w="19"/><text x="51.9434%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.01%)</title><rect x="51.8262%" y="597" width="0.0125%" height="15" fill="rgb(222,72,44)" fg:x="12487" fg:w="3"/><text x="52.0762%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.01%)</title><rect x="51.8386%" y="597" width="0.0125%" height="15" fill="rgb(232,159,9)" fg:x="12490" fg:w="3"/><text x="52.0886%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.03%)</title><rect x="51.8594%" y="581" width="0.0332%" height="15" fill="rgb(210,39,32)" fg:x="12495" fg:w="8"/><text x="52.1094%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (15 samples, 0.06%)</title><rect x="51.8511%" y="597" width="0.0623%" height="15" fill="rgb(216,194,45)" fg:x="12493" fg:w="15"/><text x="52.1011%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="51.8926%" y="581" width="0.0208%" height="15" fill="rgb(218,18,35)" fg:x="12503" fg:w="5"/><text x="52.1426%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (25 samples, 0.10%)</title><rect x="51.8179%" y="613" width="0.1038%" height="15" fill="rgb(207,83,51)" fg:x="12485" fg:w="25"/><text x="52.0679%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (32 samples, 0.13%)</title><rect x="51.8013%" y="629" width="0.1328%" height="15" fill="rgb(225,63,43)" fg:x="12481" fg:w="32"/><text x="52.0513%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.02%)</title><rect x="51.9341%" y="629" width="0.0166%" height="15" fill="rgb(207,57,36)" fg:x="12513" fg:w="4"/><text x="52.1841%" y="639.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (44 samples, 0.18%)</title><rect x="51.7722%" y="661" width="0.1826%" height="15" fill="rgb(216,99,33)" fg:x="12474" fg:w="44"/><text x="52.0222%" y="671.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (40 samples, 0.17%)</title><rect x="51.7888%" y="645" width="0.1660%" height="15" fill="rgb(225,42,16)" fg:x="12478" fg:w="40"/><text x="52.0388%" y="655.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (231 samples, 0.96%)</title><rect x="51.9548%" y="661" width="0.9587%" height="15" fill="rgb(220,201,45)" fg:x="12518" fg:w="231"/><text x="52.2048%" y="671.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.07%)</title><rect x="52.9966%" y="645" width="0.0706%" height="15" fill="rgb(225,33,4)" fg:x="12769" fg:w="17"/><text x="53.2466%" y="655.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (12 samples, 0.05%)</title><rect x="53.0672%" y="645" width="0.0498%" height="15" fill="rgb(224,33,50)" fg:x="12786" fg:w="12"/><text x="53.3172%" y="655.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.08%)</title><rect x="53.1958%" y="629" width="0.0789%" height="15" fill="rgb(246,198,51)" fg:x="12817" fg:w="19"/><text x="53.4458%" y="639.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (92 samples, 0.38%)</title><rect x="52.9136%" y="661" width="0.3818%" height="15" fill="rgb(205,22,4)" fg:x="12749" fg:w="92"/><text x="53.1636%" y="671.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (43 samples, 0.18%)</title><rect x="53.1170%" y="645" width="0.1785%" height="15" fill="rgb(206,3,8)" fg:x="12798" fg:w="43"/><text x="53.3670%" y="655.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="53.2747%" y="629" width="0.0208%" height="15" fill="rgb(251,23,15)" fg:x="12836" fg:w="5"/><text x="53.5247%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (37 samples, 0.15%)</title><rect x="55.3665%" y="645" width="0.1536%" height="15" fill="rgb(252,88,28)" fg:x="13340" fg:w="37"/><text x="55.6165%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_free (43 samples, 0.18%)</title><rect x="55.5200%" y="645" width="0.1785%" height="15" fill="rgb(212,127,14)" fg:x="13377" fg:w="43"/><text x="55.7700%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (77 samples, 0.32%)</title><rect x="55.6985%" y="645" width="0.3196%" height="15" fill="rgb(247,145,37)" fg:x="13420" fg:w="77"/><text x="55.9485%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (222 samples, 0.92%)</title><rect x="56.0181%" y="645" width="0.9214%" height="15" fill="rgb(209,117,53)" fg:x="13497" fg:w="222"/><text x="56.2681%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (164 samples, 0.68%)</title><rect x="56.9436%" y="645" width="0.6807%" height="15" fill="rgb(212,90,42)" fg:x="13720" fg:w="164"/><text x="57.1936%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (10 samples, 0.04%)</title><rect x="57.5828%" y="629" width="0.0415%" height="15" fill="rgb(218,164,37)" fg:x="13874" fg:w="10"/><text x="57.8328%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (10 samples, 0.04%)</title><rect x="57.5828%" y="613" width="0.0415%" height="15" fill="rgb(246,65,34)" fg:x="13874" fg:w="10"/><text x="57.8328%" y="623.50"></text></g><g><title>libsystem_platform.dylib`__bzero (12 samples, 0.05%)</title><rect x="57.6243%" y="645" width="0.0498%" height="15" fill="rgb(231,100,33)" fg:x="13884" fg:w="12"/><text x="57.8743%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (57 samples, 0.24%)</title><rect x="57.6741%" y="645" width="0.2366%" height="15" fill="rgb(228,126,14)" fg:x="13896" fg:w="57"/><text x="57.9241%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (59 samples, 0.24%)</title><rect x="57.9107%" y="645" width="0.2449%" height="15" fill="rgb(215,173,21)" fg:x="13953" fg:w="59"/><text x="58.1607%" y="655.50"></text></g><g><title>lockbook-egui`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="58.1556%" y="645" width="0.0125%" height="15" fill="rgb(210,6,40)" fg:x="14012" fg:w="3"/><text x="58.4056%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.01%)</title><rect x="58.1556%" y="629" width="0.0125%" height="15" fill="rgb(212,48,18)" fg:x="14012" fg:w="3"/><text x="58.4056%" y="639.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (341 samples, 1.42%)</title><rect x="58.1680%" y="645" width="1.4153%" height="15" fill="rgb(230,214,11)" fg:x="14015" fg:w="341"/><text x="58.4180%" y="655.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$free (15 samples, 0.06%)</title><rect x="59.5833%" y="645" width="0.0623%" height="15" fill="rgb(254,105,39)" fg:x="14356" fg:w="15"/><text x="59.8333%" y="655.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$malloc (9 samples, 0.04%)</title><rect x="59.6456%" y="645" width="0.0374%" height="15" fill="rgb(245,158,5)" fg:x="14371" fg:w="9"/><text x="59.8956%" y="655.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$memcpy (6 samples, 0.02%)</title><rect x="59.6829%" y="645" width="0.0249%" height="15" fill="rgb(249,208,11)" fg:x="14380" fg:w="6"/><text x="59.9329%" y="655.50"></text></g><g><title>lockbook-egui`__rdl_alloc (13 samples, 0.05%)</title><rect x="59.7078%" y="645" width="0.0540%" height="15" fill="rgb(210,39,28)" fg:x="14386" fg:w="13"/><text x="59.9578%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.02%)</title><rect x="59.8365%" y="565" width="0.0208%" height="15" fill="rgb(211,56,53)" fg:x="14417" fg:w="5"/><text x="60.0865%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (19 samples, 0.08%)</title><rect x="59.7991%" y="597" width="0.0789%" height="15" fill="rgb(226,201,30)" fg:x="14408" fg:w="19"/><text x="60.0491%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (12 samples, 0.05%)</title><rect x="59.8282%" y="581" width="0.0498%" height="15" fill="rgb(239,101,34)" fg:x="14415" fg:w="12"/><text x="60.0782%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="59.8572%" y="565" width="0.0208%" height="15" fill="rgb(226,209,5)" fg:x="14422" fg:w="5"/><text x="60.1072%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (25 samples, 0.10%)</title><rect x="59.7825%" y="613" width="0.1038%" height="15" fill="rgb(250,105,47)" fg:x="14404" fg:w="25"/><text x="60.0325%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.02%)</title><rect x="59.8863%" y="613" width="0.0166%" height="15" fill="rgb(230,72,3)" fg:x="14429" fg:w="4"/><text x="60.1363%" y="623.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (35 samples, 0.15%)</title><rect x="59.7659%" y="645" width="0.1453%" height="15" fill="rgb(232,218,39)" fg:x="14400" fg:w="35"/><text x="60.0159%" y="655.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (31 samples, 0.13%)</title><rect x="59.7825%" y="629" width="0.1287%" height="15" fill="rgb(248,166,6)" fg:x="14404" fg:w="31"/><text x="60.0325%" y="639.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (189 samples, 0.78%)</title><rect x="59.9112%" y="645" width="0.7844%" height="15" fill="rgb(247,89,20)" fg:x="14435" fg:w="189"/><text x="60.1612%" y="655.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.05%)</title><rect x="60.7662%" y="629" width="0.0540%" height="15" fill="rgb(248,130,54)" fg:x="14641" fg:w="13"/><text x="61.0162%" y="639.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="60.8201%" y="629" width="0.0208%" height="15" fill="rgb(234,196,4)" fg:x="14654" fg:w="5"/><text x="61.0701%" y="639.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.03%)</title><rect x="60.8741%" y="613" width="0.0332%" height="15" fill="rgb(250,143,31)" fg:x="14667" fg:w="8"/><text x="61.1241%" y="623.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (52 samples, 0.22%)</title><rect x="60.6956%" y="645" width="0.2158%" height="15" fill="rgb(211,110,34)" fg:x="14624" fg:w="52"/><text x="60.9456%" y="655.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 0.07%)</title><rect x="60.8409%" y="629" width="0.0706%" height="15" fill="rgb(215,124,48)" fg:x="14659" fg:w="17"/><text x="61.0909%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (13 samples, 0.05%)</title><rect x="62.2811%" y="629" width="0.0540%" height="15" fill="rgb(216,46,13)" fg:x="15006" fg:w="13"/><text x="62.5311%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_free (21 samples, 0.09%)</title><rect x="62.3350%" y="629" width="0.0872%" height="15" fill="rgb(205,184,25)" fg:x="15019" fg:w="21"/><text x="62.5850%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.12%)</title><rect x="62.4222%" y="629" width="0.1162%" height="15" fill="rgb(228,1,10)" fg:x="15040" fg:w="28"/><text x="62.6722%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (91 samples, 0.38%)</title><rect x="62.5384%" y="629" width="0.3777%" height="15" fill="rgb(213,116,27)" fg:x="15068" fg:w="91"/><text x="62.7884%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (126 samples, 0.52%)</title><rect x="62.9161%" y="629" width="0.5230%" height="15" fill="rgb(241,95,50)" fg:x="15159" fg:w="126"/><text x="63.1661%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (7 samples, 0.03%)</title><rect x="63.4100%" y="613" width="0.0291%" height="15" fill="rgb(238,48,32)" fg:x="15278" fg:w="7"/><text x="63.6600%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (7 samples, 0.03%)</title><rect x="63.4100%" y="597" width="0.0291%" height="15" fill="rgb(235,113,49)" fg:x="15278" fg:w="7"/><text x="63.6600%" y="607.50"></text></g><g><title>libsystem_platform.dylib`__bzero (6 samples, 0.02%)</title><rect x="63.4390%" y="629" width="0.0249%" height="15" fill="rgb(205,127,43)" fg:x="15285" fg:w="6"/><text x="63.6890%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (28 samples, 0.12%)</title><rect x="63.4639%" y="629" width="0.1162%" height="15" fill="rgb(250,162,2)" fg:x="15291" fg:w="28"/><text x="63.7139%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (24 samples, 0.10%)</title><rect x="63.5801%" y="629" width="0.0996%" height="15" fill="rgb(220,13,41)" fg:x="15319" fg:w="24"/><text x="63.8301%" y="639.50"></text></g><g><title>lockbook-egui`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="63.6798%" y="629" width="0.0125%" height="15" fill="rgb(249,221,25)" fg:x="15343" fg:w="3"/><text x="63.9298%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.01%)</title><rect x="63.6798%" y="613" width="0.0125%" height="15" fill="rgb(215,208,19)" fg:x="15343" fg:w="3"/><text x="63.9298%" y="623.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (237 samples, 0.98%)</title><rect x="63.6922%" y="629" width="0.9836%" height="15" fill="rgb(236,175,2)" fg:x="15346" fg:w="237"/><text x="63.9422%" y="639.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$free (6 samples, 0.02%)</title><rect x="64.6759%" y="629" width="0.0249%" height="15" fill="rgb(241,52,2)" fg:x="15583" fg:w="6"/><text x="64.9259%" y="639.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$malloc (3 samples, 0.01%)</title><rect x="64.7008%" y="629" width="0.0125%" height="15" fill="rgb(248,140,14)" fg:x="15589" fg:w="3"/><text x="64.9508%" y="639.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$memcpy (4 samples, 0.02%)</title><rect x="64.7132%" y="629" width="0.0166%" height="15" fill="rgb(253,22,42)" fg:x="15592" fg:w="4"/><text x="64.9632%" y="639.50"></text></g><g><title>lockbook-egui`__rdl_alloc (3 samples, 0.01%)</title><rect x="64.7298%" y="629" width="0.0125%" height="15" fill="rgb(234,61,47)" fg:x="15596" fg:w="3"/><text x="64.9798%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.02%)</title><rect x="64.7879%" y="565" width="0.0166%" height="15" fill="rgb(208,226,15)" fg:x="15610" fg:w="4"/><text x="65.0379%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.02%)</title><rect x="64.8087%" y="549" width="0.0249%" height="15" fill="rgb(217,221,4)" fg:x="15615" fg:w="6"/><text x="65.0587%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (10 samples, 0.04%)</title><rect x="64.8045%" y="565" width="0.0415%" height="15" fill="rgb(212,174,34)" fg:x="15614" fg:w="10"/><text x="65.0545%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="64.8336%" y="549" width="0.0125%" height="15" fill="rgb(253,83,4)" fg:x="15621" fg:w="3"/><text x="65.0836%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (20 samples, 0.08%)</title><rect x="64.7672%" y="581" width="0.0830%" height="15" fill="rgb(250,195,49)" fg:x="15605" fg:w="20"/><text x="65.0172%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (25 samples, 0.10%)</title><rect x="64.7506%" y="597" width="0.1038%" height="15" fill="rgb(241,192,25)" fg:x="15601" fg:w="25"/><text x="65.0006%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="64.8543%" y="597" width="0.0125%" height="15" fill="rgb(208,124,10)" fg:x="15626" fg:w="3"/><text x="65.1043%" y="607.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.12%)</title><rect x="64.7464%" y="629" width="0.1245%" height="15" fill="rgb(222,33,0)" fg:x="15600" fg:w="30"/><text x="64.9964%" y="639.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (29 samples, 0.12%)</title><rect x="64.7506%" y="613" width="0.1204%" height="15" fill="rgb(234,209,28)" fg:x="15601" fg:w="29"/><text x="65.0006%" y="623.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (116 samples, 0.48%)</title><rect x="64.8792%" y="629" width="0.4814%" height="15" fill="rgb(224,11,23)" fg:x="15632" fg:w="116"/><text x="65.1292%" y="639.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.07%)</title><rect x="65.4022%" y="613" width="0.0664%" height="15" fill="rgb(232,99,1)" fg:x="15758" fg:w="16"/><text x="65.6522%" y="623.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (13 samples, 0.05%)</title><rect x="65.4686%" y="613" width="0.0540%" height="15" fill="rgb(237,95,45)" fg:x="15774" fg:w="13"/><text x="65.7186%" y="623.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.05%)</title><rect x="65.5474%" y="597" width="0.0540%" height="15" fill="rgb(208,109,11)" fg:x="15793" fg:w="13"/><text x="65.7974%" y="607.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (61 samples, 0.25%)</title><rect x="65.3607%" y="629" width="0.2532%" height="15" fill="rgb(216,190,48)" fg:x="15748" fg:w="61"/><text x="65.6107%" y="639.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (22 samples, 0.09%)</title><rect x="65.5225%" y="613" width="0.0913%" height="15" fill="rgb(251,171,36)" fg:x="15787" fg:w="22"/><text x="65.7725%" y="623.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="65.6014%" y="597" width="0.0125%" height="15" fill="rgb(230,62,22)" fg:x="15806" fg:w="3"/><text x="65.8514%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (4 samples, 0.02%)</title><rect x="66.0745%" y="613" width="0.0166%" height="15" fill="rgb(225,114,35)" fg:x="15920" fg:w="4"/><text x="66.3245%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_free (47 samples, 0.20%)</title><rect x="66.0911%" y="613" width="0.1951%" height="15" fill="rgb(215,118,42)" fg:x="15924" fg:w="47"/><text x="66.3411%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.05%)</title><rect x="66.2862%" y="613" width="0.0498%" height="15" fill="rgb(243,119,21)" fg:x="15971" fg:w="12"/><text x="66.5362%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (55 samples, 0.23%)</title><rect x="66.3360%" y="613" width="0.2283%" height="15" fill="rgb(252,177,53)" fg:x="15983" fg:w="55"/><text x="66.5860%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (46 samples, 0.19%)</title><rect x="66.5643%" y="613" width="0.1909%" height="15" fill="rgb(237,209,29)" fg:x="16038" fg:w="46"/><text x="66.8143%" y="623.50"></text></g><g><title>libsystem_platform.dylib`__bzero (4 samples, 0.02%)</title><rect x="66.7552%" y="613" width="0.0166%" height="15" fill="rgb(212,65,23)" fg:x="16084" fg:w="4"/><text x="67.0052%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.06%)</title><rect x="66.7718%" y="613" width="0.0581%" height="15" fill="rgb(230,222,46)" fg:x="16088" fg:w="14"/><text x="67.0218%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (11 samples, 0.05%)</title><rect x="66.8299%" y="613" width="0.0457%" height="15" fill="rgb(215,135,32)" fg:x="16102" fg:w="11"/><text x="67.0799%" y="623.50"></text></g><g><title>lockbook-egui`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="66.8756%" y="613" width="0.0249%" height="15" fill="rgb(246,101,22)" fg:x="16113" fg:w="6"/><text x="67.1256%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.01%)</title><rect x="66.8880%" y="597" width="0.0125%" height="15" fill="rgb(206,107,13)" fg:x="16116" fg:w="3"/><text x="67.1380%" y="607.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (81 samples, 0.34%)</title><rect x="66.9005%" y="613" width="0.3362%" height="15" fill="rgb(250,100,44)" fg:x="16119" fg:w="81"/><text x="67.1505%" y="623.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$free (11 samples, 0.05%)</title><rect x="67.2367%" y="613" width="0.0457%" height="15" fill="rgb(231,147,38)" fg:x="16200" fg:w="11"/><text x="67.4867%" y="623.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$memcpy (3 samples, 0.01%)</title><rect x="67.2865%" y="613" width="0.0125%" height="15" fill="rgb(229,8,40)" fg:x="16212" fg:w="3"/><text x="67.5365%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (6 samples, 0.02%)</title><rect x="67.3031%" y="565" width="0.0249%" height="15" fill="rgb(221,135,30)" fg:x="16216" fg:w="6"/><text x="67.5531%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (4 samples, 0.02%)</title><rect x="67.3114%" y="549" width="0.0166%" height="15" fill="rgb(249,193,18)" fg:x="16218" fg:w="4"/><text x="67.5614%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (8 samples, 0.03%)</title><rect x="67.3031%" y="581" width="0.0332%" height="15" fill="rgb(209,133,39)" fg:x="16216" fg:w="8"/><text x="67.5531%" y="591.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.04%)</title><rect x="67.3031%" y="613" width="0.0374%" height="15" fill="rgb(232,100,14)" fg:x="16216" fg:w="9"/><text x="67.5531%" y="623.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (9 samples, 0.04%)</title><rect x="67.3031%" y="597" width="0.0374%" height="15" fill="rgb(224,185,1)" fg:x="16216" fg:w="9"/><text x="67.5531%" y="607.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (27 samples, 0.11%)</title><rect x="67.3404%" y="613" width="0.1121%" height="15" fill="rgb(223,139,8)" fg:x="16225" fg:w="27"/><text x="67.5904%" y="623.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.02%)</title><rect x="67.4774%" y="597" width="0.0166%" height="15" fill="rgb(232,213,38)" fg:x="16258" fg:w="4"/><text x="67.7274%" y="607.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.05%)</title><rect x="67.4525%" y="613" width="0.0540%" height="15" fill="rgb(207,94,22)" fg:x="16252" fg:w="13"/><text x="67.7025%" y="623.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.01%)</title><rect x="67.4940%" y="597" width="0.0125%" height="15" fill="rgb(219,183,54)" fg:x="16262" fg:w="3"/><text x="67.7440%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (23 samples, 0.10%)</title><rect x="67.9920%" y="597" width="0.0955%" height="15" fill="rgb(216,185,54)" fg:x="16382" fg:w="23"/><text x="68.2420%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_free (62 samples, 0.26%)</title><rect x="68.0875%" y="597" width="0.2573%" height="15" fill="rgb(254,217,39)" fg:x="16405" fg:w="62"/><text x="68.3375%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (56 samples, 0.23%)</title><rect x="68.3448%" y="597" width="0.2324%" height="15" fill="rgb(240,178,23)" fg:x="16467" fg:w="56"/><text x="68.5948%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (152 samples, 0.63%)</title><rect x="68.5772%" y="597" width="0.6309%" height="15" fill="rgb(218,11,47)" fg:x="16523" fg:w="152"/><text x="68.8272%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (30 samples, 0.12%)</title><rect x="69.2081%" y="597" width="0.1245%" height="15" fill="rgb(218,51,51)" fg:x="16675" fg:w="30"/><text x="69.4581%" y="607.50"></text></g><g><title>libsystem_platform.dylib`__bzero (8 samples, 0.03%)</title><rect x="69.3326%" y="597" width="0.0332%" height="15" fill="rgb(238,126,27)" fg:x="16705" fg:w="8"/><text x="69.5826%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (37 samples, 0.15%)</title><rect x="69.3658%" y="597" width="0.1536%" height="15" fill="rgb(249,202,22)" fg:x="16713" fg:w="37"/><text x="69.6158%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (32 samples, 0.13%)</title><rect x="69.5194%" y="597" width="0.1328%" height="15" fill="rgb(254,195,49)" fg:x="16750" fg:w="32"/><text x="69.7694%" y="607.50"></text></g><g><title>lockbook-egui`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="69.6522%" y="597" width="0.0166%" height="15" fill="rgb(208,123,14)" fg:x="16782" fg:w="4"/><text x="69.9022%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.01%)</title><rect x="69.6563%" y="581" width="0.0125%" height="15" fill="rgb(224,200,8)" fg:x="16783" fg:w="3"/><text x="69.9063%" y="591.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (40 samples, 0.17%)</title><rect x="69.6688%" y="597" width="0.1660%" height="15" fill="rgb(217,61,36)" fg:x="16786" fg:w="40"/><text x="69.9188%" y="607.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$free (12 samples, 0.05%)</title><rect x="69.8348%" y="597" width="0.0498%" height="15" fill="rgb(206,35,45)" fg:x="16826" fg:w="12"/><text x="70.0848%" y="607.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$malloc (9 samples, 0.04%)</title><rect x="69.8846%" y="597" width="0.0374%" height="15" fill="rgb(217,65,33)" fg:x="16838" fg:w="9"/><text x="70.1346%" y="607.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$memcpy (5 samples, 0.02%)</title><rect x="69.9220%" y="597" width="0.0208%" height="15" fill="rgb(222,158,48)" fg:x="16847" fg:w="5"/><text x="70.1720%" y="607.50"></text></g><g><title>lockbook-egui`__rdl_alloc (5 samples, 0.02%)</title><rect x="69.9427%" y="597" width="0.0208%" height="15" fill="rgb(254,2,54)" fg:x="16852" fg:w="5"/><text x="70.1927%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.01%)</title><rect x="69.9967%" y="517" width="0.0125%" height="15" fill="rgb(250,143,38)" fg:x="16865" fg:w="3"/><text x="70.2467%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (6 samples, 0.02%)</title><rect x="69.9925%" y="533" width="0.0249%" height="15" fill="rgb(248,25,0)" fg:x="16864" fg:w="6"/><text x="70.2425%" y="543.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.07%)</title><rect x="69.9635%" y="597" width="0.0664%" height="15" fill="rgb(206,152,27)" fg:x="16857" fg:w="16"/><text x="70.2135%" y="607.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (11 samples, 0.05%)</title><rect x="69.9842%" y="581" width="0.0457%" height="15" fill="rgb(240,77,30)" fg:x="16862" fg:w="11"/><text x="70.2342%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (11 samples, 0.05%)</title><rect x="69.9842%" y="565" width="0.0457%" height="15" fill="rgb(231,5,3)" fg:x="16862" fg:w="11"/><text x="70.2342%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (9 samples, 0.04%)</title><rect x="69.9925%" y="549" width="0.0374%" height="15" fill="rgb(207,226,32)" fg:x="16864" fg:w="9"/><text x="70.2425%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.01%)</title><rect x="70.0174%" y="533" width="0.0125%" height="15" fill="rgb(222,207,47)" fg:x="16870" fg:w="3"/><text x="70.2674%" y="543.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (43 samples, 0.18%)</title><rect x="70.0299%" y="597" width="0.1785%" height="15" fill="rgb(229,115,45)" fg:x="16873" fg:w="43"/><text x="70.2799%" y="607.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="70.2374%" y="581" width="0.0208%" height="15" fill="rgb(224,191,6)" fg:x="16923" fg:w="5"/><text x="70.4874%" y="591.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="70.2582%" y="581" width="0.0125%" height="15" fill="rgb(230,227,24)" fg:x="16928" fg:w="3"/><text x="70.5082%" y="591.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="70.2748%" y="565" width="0.0249%" height="15" fill="rgb(228,80,19)" fg:x="16932" fg:w="6"/><text x="70.5248%" y="575.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (24 samples, 0.10%)</title><rect x="70.2084%" y="597" width="0.0996%" height="15" fill="rgb(247,229,0)" fg:x="16916" fg:w="24"/><text x="70.4584%" y="607.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.04%)</title><rect x="70.2706%" y="581" width="0.0374%" height="15" fill="rgb(237,194,15)" fg:x="16931" fg:w="9"/><text x="70.5206%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (24 samples, 0.10%)</title><rect x="71.3497%" y="581" width="0.0996%" height="15" fill="rgb(219,203,20)" fg:x="17191" fg:w="24"/><text x="71.5997%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_free (96 samples, 0.40%)</title><rect x="71.4493%" y="581" width="0.3984%" height="15" fill="rgb(234,128,8)" fg:x="17215" fg:w="96"/><text x="71.6993%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (78 samples, 0.32%)</title><rect x="71.8478%" y="581" width="0.3237%" height="15" fill="rgb(248,202,8)" fg:x="17311" fg:w="78"/><text x="72.0978%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (187 samples, 0.78%)</title><rect x="72.1715%" y="581" width="0.7761%" height="15" fill="rgb(206,104,37)" fg:x="17389" fg:w="187"/><text x="72.4215%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (92 samples, 0.38%)</title><rect x="72.9476%" y="581" width="0.3818%" height="15" fill="rgb(223,8,27)" fg:x="17576" fg:w="92"/><text x="73.1976%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (5 samples, 0.02%)</title><rect x="73.3087%" y="565" width="0.0208%" height="15" fill="rgb(216,217,28)" fg:x="17663" fg:w="5"/><text x="73.5587%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (5 samples, 0.02%)</title><rect x="73.3087%" y="549" width="0.0208%" height="15" fill="rgb(249,199,1)" fg:x="17663" fg:w="5"/><text x="73.5587%" y="559.50"></text></g><g><title>libsystem_platform.dylib`__bzero (6 samples, 0.02%)</title><rect x="73.3295%" y="581" width="0.0249%" height="15" fill="rgb(240,85,17)" fg:x="17668" fg:w="6"/><text x="73.5795%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (57 samples, 0.24%)</title><rect x="73.3544%" y="581" width="0.2366%" height="15" fill="rgb(206,108,45)" fg:x="17674" fg:w="57"/><text x="73.6044%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (49 samples, 0.20%)</title><rect x="73.5909%" y="581" width="0.2034%" height="15" fill="rgb(245,210,41)" fg:x="17731" fg:w="49"/><text x="73.8409%" y="591.50"></text></g><g><title>lockbook-egui`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="73.7943%" y="581" width="0.0208%" height="15" fill="rgb(206,13,37)" fg:x="17780" fg:w="5"/><text x="74.0443%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4 samples, 0.02%)</title><rect x="73.7985%" y="565" width="0.0166%" height="15" fill="rgb(250,61,18)" fg:x="17781" fg:w="4"/><text x="74.0485%" y="575.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (139 samples, 0.58%)</title><rect x="73.8151%" y="581" width="0.5769%" height="15" fill="rgb(235,172,48)" fg:x="17785" fg:w="139"/><text x="74.0651%" y="591.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$free (14 samples, 0.06%)</title><rect x="74.3920%" y="581" width="0.0581%" height="15" fill="rgb(249,201,17)" fg:x="17924" fg:w="14"/><text x="74.6420%" y="591.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$malloc (14 samples, 0.06%)</title><rect x="74.4501%" y="581" width="0.0581%" height="15" fill="rgb(219,208,6)" fg:x="17938" fg:w="14"/><text x="74.7001%" y="591.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$memcpy (8 samples, 0.03%)</title><rect x="74.5082%" y="581" width="0.0332%" height="15" fill="rgb(248,31,23)" fg:x="17952" fg:w="8"/><text x="74.7582%" y="591.50"></text></g><g><title>lockbook-egui`__rdl_alloc (33 samples, 0.14%)</title><rect x="74.5414%" y="581" width="0.1370%" height="15" fill="rgb(245,15,42)" fg:x="17960" fg:w="33"/><text x="74.7914%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.03%)</title><rect x="74.7364%" y="501" width="0.0332%" height="15" fill="rgb(222,217,39)" fg:x="18007" fg:w="8"/><text x="74.9864%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (15 samples, 0.06%)</title><rect x="74.7281%" y="517" width="0.0623%" height="15" fill="rgb(210,219,27)" fg:x="18005" fg:w="15"/><text x="74.9781%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="74.7697%" y="501" width="0.0208%" height="15" fill="rgb(252,166,36)" fg:x="18015" fg:w="5"/><text x="75.0197%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (25 samples, 0.10%)</title><rect x="74.6949%" y="533" width="0.1038%" height="15" fill="rgb(245,132,34)" fg:x="17997" fg:w="25"/><text x="74.9449%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (28 samples, 0.12%)</title><rect x="74.6866%" y="549" width="0.1162%" height="15" fill="rgb(236,54,3)" fg:x="17995" fg:w="28"/><text x="74.9366%" y="559.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.13%)</title><rect x="74.6783%" y="581" width="0.1328%" height="15" fill="rgb(241,173,43)" fg:x="17993" fg:w="32"/><text x="74.9283%" y="591.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (30 samples, 0.12%)</title><rect x="74.6866%" y="565" width="0.1245%" height="15" fill="rgb(215,190,9)" fg:x="17995" fg:w="30"/><text x="74.9366%" y="575.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (62 samples, 0.26%)</title><rect x="74.8153%" y="581" width="0.2573%" height="15" fill="rgb(242,101,16)" fg:x="18026" fg:w="62"/><text x="75.0653%" y="591.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.06%)</title><rect x="75.1266%" y="565" width="0.0623%" height="15" fill="rgb(223,190,21)" fg:x="18101" fg:w="15"/><text x="75.3766%" y="575.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="75.1888%" y="565" width="0.0166%" height="15" fill="rgb(215,228,25)" fg:x="18116" fg:w="4"/><text x="75.4388%" y="575.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="75.2096%" y="549" width="0.0249%" height="15" fill="rgb(225,36,22)" fg:x="18121" fg:w="6"/><text x="75.4596%" y="559.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (40 samples, 0.17%)</title><rect x="75.0726%" y="581" width="0.1660%" height="15" fill="rgb(251,106,46)" fg:x="18088" fg:w="40"/><text x="75.3226%" y="591.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.03%)</title><rect x="75.2054%" y="565" width="0.0332%" height="15" fill="rgb(208,90,1)" fg:x="18120" fg:w="8"/><text x="75.4554%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (42 samples, 0.17%)</title><rect x="76.3925%" y="565" width="0.1743%" height="15" fill="rgb(243,10,4)" fg:x="18406" fg:w="42"/><text x="76.6425%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_free (79 samples, 0.33%)</title><rect x="76.5668%" y="565" width="0.3279%" height="15" fill="rgb(212,137,27)" fg:x="18448" fg:w="79"/><text x="76.8168%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (56 samples, 0.23%)</title><rect x="76.8947%" y="565" width="0.2324%" height="15" fill="rgb(231,220,49)" fg:x="18527" fg:w="56"/><text x="77.1447%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (178 samples, 0.74%)</title><rect x="77.1271%" y="565" width="0.7388%" height="15" fill="rgb(237,96,20)" fg:x="18583" fg:w="178"/><text x="77.3771%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (151 samples, 0.63%)</title><rect x="77.8700%" y="565" width="0.6267%" height="15" fill="rgb(239,229,30)" fg:x="18762" fg:w="151"/><text x="78.1200%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (6 samples, 0.02%)</title><rect x="78.4718%" y="549" width="0.0249%" height="15" fill="rgb(219,65,33)" fg:x="18907" fg:w="6"/><text x="78.7218%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (5 samples, 0.02%)</title><rect x="78.4760%" y="533" width="0.0208%" height="15" fill="rgb(243,134,7)" fg:x="18908" fg:w="5"/><text x="78.7260%" y="543.50"></text></g><g><title>libsystem_platform.dylib`__bzero (6 samples, 0.02%)</title><rect x="78.4967%" y="565" width="0.0249%" height="15" fill="rgb(216,177,54)" fg:x="18913" fg:w="6"/><text x="78.7467%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (56 samples, 0.23%)</title><rect x="78.5216%" y="565" width="0.2324%" height="15" fill="rgb(211,160,20)" fg:x="18919" fg:w="56"/><text x="78.7716%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (26 samples, 0.11%)</title><rect x="78.7540%" y="565" width="0.1079%" height="15" fill="rgb(239,85,39)" fg:x="18975" fg:w="26"/><text x="79.0040%" y="575.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (138 samples, 0.57%)</title><rect x="78.8703%" y="565" width="0.5728%" height="15" fill="rgb(232,125,22)" fg:x="19003" fg:w="138"/><text x="79.1203%" y="575.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$free (16 samples, 0.07%)</title><rect x="79.4430%" y="565" width="0.0664%" height="15" fill="rgb(244,57,34)" fg:x="19141" fg:w="16"/><text x="79.6930%" y="575.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$malloc (10 samples, 0.04%)</title><rect x="79.5094%" y="565" width="0.0415%" height="15" fill="rgb(214,203,32)" fg:x="19157" fg:w="10"/><text x="79.7594%" y="575.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$memcpy (9 samples, 0.04%)</title><rect x="79.5509%" y="565" width="0.0374%" height="15" fill="rgb(207,58,43)" fg:x="19167" fg:w="9"/><text x="79.8009%" y="575.50"></text></g><g><title>lockbook-egui`__rdl_alloc (6 samples, 0.02%)</title><rect x="79.5883%" y="565" width="0.0249%" height="15" fill="rgb(215,193,15)" fg:x="19176" fg:w="6"/><text x="79.8383%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.02%)</title><rect x="79.6422%" y="485" width="0.0249%" height="15" fill="rgb(232,15,44)" fg:x="19189" fg:w="6"/><text x="79.8922%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (12 samples, 0.05%)</title><rect x="79.6298%" y="501" width="0.0498%" height="15" fill="rgb(212,3,48)" fg:x="19186" fg:w="12"/><text x="79.8798%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="79.6671%" y="485" width="0.0125%" height="15" fill="rgb(218,128,7)" fg:x="19195" fg:w="3"/><text x="79.9171%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (14 samples, 0.06%)</title><rect x="79.6256%" y="533" width="0.0581%" height="15" fill="rgb(226,216,39)" fg:x="19185" fg:w="14"/><text x="79.8756%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (14 samples, 0.06%)</title><rect x="79.6256%" y="517" width="0.0581%" height="15" fill="rgb(243,47,51)" fg:x="19185" fg:w="14"/><text x="79.8756%" y="527.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.07%)</title><rect x="79.6132%" y="565" width="0.0747%" height="15" fill="rgb(241,183,40)" fg:x="19182" fg:w="18"/><text x="79.8632%" y="575.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (15 samples, 0.06%)</title><rect x="79.6256%" y="549" width="0.0623%" height="15" fill="rgb(231,217,32)" fg:x="19185" fg:w="15"/><text x="79.8756%" y="559.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (64 samples, 0.27%)</title><rect x="79.6920%" y="565" width="0.2656%" height="15" fill="rgb(229,61,38)" fg:x="19201" fg:w="64"/><text x="79.9420%" y="575.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="79.9867%" y="549" width="0.0208%" height="15" fill="rgb(225,210,5)" fg:x="19272" fg:w="5"/><text x="80.2367%" y="559.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.07%)</title><rect x="79.9577%" y="565" width="0.0706%" height="15" fill="rgb(231,79,45)" fg:x="19265" fg:w="17"/><text x="80.2077%" y="575.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.01%)</title><rect x="80.0158%" y="549" width="0.0125%" height="15" fill="rgb(224,100,7)" fg:x="19279" fg:w="3"/><text x="80.2658%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (37 samples, 0.15%)</title><rect x="81.0451%" y="549" width="0.1536%" height="15" fill="rgb(241,198,18)" fg:x="19527" fg:w="37"/><text x="81.2951%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_free (33 samples, 0.14%)</title><rect x="81.1986%" y="549" width="0.1370%" height="15" fill="rgb(252,97,53)" fg:x="19564" fg:w="33"/><text x="81.4486%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.18%)</title><rect x="81.3356%" y="549" width="0.1826%" height="15" fill="rgb(220,88,7)" fg:x="19597" fg:w="44"/><text x="81.5856%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (179 samples, 0.74%)</title><rect x="81.5182%" y="549" width="0.7429%" height="15" fill="rgb(213,176,14)" fg:x="19641" fg:w="179"/><text x="81.7682%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (112 samples, 0.46%)</title><rect x="82.2611%" y="549" width="0.4648%" height="15" fill="rgb(246,73,7)" fg:x="19820" fg:w="112"/><text x="82.5111%" y="559.50"></text></g><g><title>libsystem_platform.dylib`__bzero (7 samples, 0.03%)</title><rect x="82.7260%" y="549" width="0.0291%" height="15" fill="rgb(245,64,36)" fg:x="19932" fg:w="7"/><text x="82.9760%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (48 samples, 0.20%)</title><rect x="82.7550%" y="549" width="0.1992%" height="15" fill="rgb(245,80,10)" fg:x="19939" fg:w="48"/><text x="83.0050%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (53 samples, 0.22%)</title><rect x="82.9543%" y="549" width="0.2200%" height="15" fill="rgb(232,107,50)" fg:x="19987" fg:w="53"/><text x="83.2043%" y="559.50"></text></g><g><title>lockbook-egui`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="83.1742%" y="549" width="0.0125%" height="15" fill="rgb(253,3,0)" fg:x="20040" fg:w="3"/><text x="83.4242%" y="559.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (145 samples, 0.60%)</title><rect x="83.1867%" y="549" width="0.6018%" height="15" fill="rgb(212,99,53)" fg:x="20043" fg:w="145"/><text x="83.4367%" y="559.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$free (6 samples, 0.02%)</title><rect x="83.7885%" y="549" width="0.0249%" height="15" fill="rgb(249,111,54)" fg:x="20188" fg:w="6"/><text x="84.0385%" y="559.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$malloc (11 samples, 0.05%)</title><rect x="83.8134%" y="549" width="0.0457%" height="15" fill="rgb(249,55,30)" fg:x="20194" fg:w="11"/><text x="84.0634%" y="559.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$memcpy (3 samples, 0.01%)</title><rect x="83.8591%" y="549" width="0.0125%" height="15" fill="rgb(237,47,42)" fg:x="20205" fg:w="3"/><text x="84.1091%" y="559.50"></text></g><g><title>lockbook-egui`__rdl_alloc (10 samples, 0.04%)</title><rect x="83.8715%" y="549" width="0.0415%" height="15" fill="rgb(211,20,18)" fg:x="20208" fg:w="10"/><text x="84.1215%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (6 samples, 0.02%)</title><rect x="83.9421%" y="485" width="0.0249%" height="15" fill="rgb(231,203,46)" fg:x="20225" fg:w="6"/><text x="84.1921%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="83.9462%" y="469" width="0.0208%" height="15" fill="rgb(237,142,3)" fg:x="20226" fg:w="5"/><text x="84.1962%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (13 samples, 0.05%)</title><rect x="83.9255%" y="501" width="0.0540%" height="15" fill="rgb(241,107,1)" fg:x="20221" fg:w="13"/><text x="84.1755%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.01%)</title><rect x="83.9670%" y="485" width="0.0125%" height="15" fill="rgb(229,83,13)" fg:x="20231" fg:w="3"/><text x="84.2170%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (16 samples, 0.07%)</title><rect x="83.9213%" y="517" width="0.0664%" height="15" fill="rgb(241,91,40)" fg:x="20220" fg:w="16"/><text x="84.1713%" y="527.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.08%)</title><rect x="83.9172%" y="549" width="0.0789%" height="15" fill="rgb(225,3,45)" fg:x="20219" fg:w="19"/><text x="84.1672%" y="559.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (18 samples, 0.07%)</title><rect x="83.9213%" y="533" width="0.0747%" height="15" fill="rgb(244,223,14)" fg:x="20220" fg:w="18"/><text x="84.1713%" y="543.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (72 samples, 0.30%)</title><rect x="83.9960%" y="549" width="0.2988%" height="15" fill="rgb(224,124,37)" fg:x="20238" fg:w="72"/><text x="84.2460%" y="559.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.04%)</title><rect x="84.3322%" y="533" width="0.0374%" height="15" fill="rgb(251,171,30)" fg:x="20319" fg:w="9"/><text x="84.5822%" y="543.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="84.3696%" y="533" width="0.0166%" height="15" fill="rgb(236,46,54)" fg:x="20328" fg:w="4"/><text x="84.6196%" y="543.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (30 samples, 0.12%)</title><rect x="84.2948%" y="549" width="0.1245%" height="15" fill="rgb(245,213,5)" fg:x="20310" fg:w="30"/><text x="84.5448%" y="559.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.03%)</title><rect x="84.3862%" y="533" width="0.0332%" height="15" fill="rgb(230,144,27)" fg:x="20332" fg:w="8"/><text x="84.6362%" y="543.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.02%)</title><rect x="84.4028%" y="517" width="0.0166%" height="15" fill="rgb(220,86,6)" fg:x="20336" fg:w="4"/><text x="84.6528%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (13 samples, 0.05%)</title><rect x="85.1208%" y="533" width="0.0540%" height="15" fill="rgb(240,20,13)" fg:x="20509" fg:w="13"/><text x="85.3708%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_free (38 samples, 0.16%)</title><rect x="85.1747%" y="533" width="0.1577%" height="15" fill="rgb(217,89,34)" fg:x="20522" fg:w="38"/><text x="85.4247%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.11%)</title><rect x="85.3324%" y="533" width="0.1121%" height="15" fill="rgb(229,13,5)" fg:x="20560" fg:w="27"/><text x="85.5824%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (92 samples, 0.38%)</title><rect x="85.4445%" y="533" width="0.3818%" height="15" fill="rgb(244,67,35)" fg:x="20587" fg:w="92"/><text x="85.6945%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (114 samples, 0.47%)</title><rect x="85.8263%" y="533" width="0.4731%" height="15" fill="rgb(221,40,2)" fg:x="20679" fg:w="114"/><text x="86.0763%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (5 samples, 0.02%)</title><rect x="86.2787%" y="517" width="0.0208%" height="15" fill="rgb(237,157,21)" fg:x="20788" fg:w="5"/><text x="86.5287%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (4 samples, 0.02%)</title><rect x="86.2829%" y="501" width="0.0166%" height="15" fill="rgb(222,94,11)" fg:x="20789" fg:w="4"/><text x="86.5329%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (23 samples, 0.10%)</title><rect x="86.3078%" y="533" width="0.0955%" height="15" fill="rgb(249,113,6)" fg:x="20795" fg:w="23"/><text x="86.5578%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (26 samples, 0.11%)</title><rect x="86.4033%" y="533" width="0.1079%" height="15" fill="rgb(238,137,36)" fg:x="20818" fg:w="26"/><text x="86.6533%" y="543.50"></text></g><g><title>lockbook-egui`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="86.5112%" y="533" width="0.0166%" height="15" fill="rgb(210,102,26)" fg:x="20844" fg:w="4"/><text x="86.7612%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.01%)</title><rect x="86.5153%" y="517" width="0.0125%" height="15" fill="rgb(218,30,30)" fg:x="20845" fg:w="3"/><text x="86.7653%" y="527.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (154 samples, 0.64%)</title><rect x="86.5278%" y="533" width="0.6392%" height="15" fill="rgb(214,67,26)" fg:x="20848" fg:w="154"/><text x="86.7778%" y="543.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$free (8 samples, 0.03%)</title><rect x="87.1669%" y="533" width="0.0332%" height="15" fill="rgb(251,9,53)" fg:x="21002" fg:w="8"/><text x="87.4169%" y="543.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$malloc (6 samples, 0.02%)</title><rect x="87.2001%" y="533" width="0.0249%" height="15" fill="rgb(228,204,25)" fg:x="21010" fg:w="6"/><text x="87.4501%" y="543.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$memcpy (3 samples, 0.01%)</title><rect x="87.2250%" y="533" width="0.0125%" height="15" fill="rgb(207,153,8)" fg:x="21016" fg:w="3"/><text x="87.4750%" y="543.50"></text></g><g><title>lockbook-egui`__rdl_alloc (6 samples, 0.02%)</title><rect x="87.2375%" y="533" width="0.0249%" height="15" fill="rgb(242,9,16)" fg:x="21019" fg:w="6"/><text x="87.4875%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.01%)</title><rect x="87.2997%" y="453" width="0.0125%" height="15" fill="rgb(217,211,10)" fg:x="21034" fg:w="3"/><text x="87.5497%" y="463.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.05%)</title><rect x="87.2665%" y="533" width="0.0540%" height="15" fill="rgb(219,228,52)" fg:x="21026" fg:w="13"/><text x="87.5165%" y="543.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (12 samples, 0.05%)</title><rect x="87.2707%" y="517" width="0.0498%" height="15" fill="rgb(231,92,29)" fg:x="21027" fg:w="12"/><text x="87.5207%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (12 samples, 0.05%)</title><rect x="87.2707%" y="501" width="0.0498%" height="15" fill="rgb(232,8,23)" fg:x="21027" fg:w="12"/><text x="87.5207%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (9 samples, 0.04%)</title><rect x="87.2831%" y="485" width="0.0374%" height="15" fill="rgb(216,211,34)" fg:x="21030" fg:w="9"/><text x="87.5331%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (6 samples, 0.02%)</title><rect x="87.2956%" y="469" width="0.0249%" height="15" fill="rgb(236,151,0)" fg:x="21033" fg:w="6"/><text x="87.5456%" y="479.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (50 samples, 0.21%)</title><rect x="87.3205%" y="533" width="0.2075%" height="15" fill="rgb(209,168,3)" fg:x="21039" fg:w="50"/><text x="87.5705%" y="543.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="87.5322%" y="517" width="0.0125%" height="15" fill="rgb(208,129,28)" fg:x="21090" fg:w="3"/><text x="87.7822%" y="527.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.04%)</title><rect x="87.5280%" y="533" width="0.0374%" height="15" fill="rgb(229,78,22)" fg:x="21089" fg:w="9"/><text x="87.7780%" y="543.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.02%)</title><rect x="87.5488%" y="517" width="0.0166%" height="15" fill="rgb(228,187,13)" fg:x="21094" fg:w="4"/><text x="87.7988%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (20 samples, 0.08%)</title><rect x="87.9929%" y="517" width="0.0830%" height="15" fill="rgb(240,119,24)" fg:x="21201" fg:w="20"/><text x="88.2429%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_free (46 samples, 0.19%)</title><rect x="88.0759%" y="517" width="0.1909%" height="15" fill="rgb(209,194,42)" fg:x="21221" fg:w="46"/><text x="88.3259%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (32 samples, 0.13%)</title><rect x="88.2668%" y="517" width="0.1328%" height="15" fill="rgb(247,200,46)" fg:x="21267" fg:w="32"/><text x="88.5168%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (93 samples, 0.39%)</title><rect x="88.3996%" y="517" width="0.3860%" height="15" fill="rgb(218,76,16)" fg:x="21299" fg:w="93"/><text x="88.6496%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (35 samples, 0.15%)</title><rect x="88.7856%" y="517" width="0.1453%" height="15" fill="rgb(225,21,48)" fg:x="21392" fg:w="35"/><text x="89.0356%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (31 samples, 0.13%)</title><rect x="88.9309%" y="517" width="0.1287%" height="15" fill="rgb(239,223,50)" fg:x="21427" fg:w="31"/><text x="89.1809%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (32 samples, 0.13%)</title><rect x="89.0595%" y="517" width="0.1328%" height="15" fill="rgb(244,45,21)" fg:x="21458" fg:w="32"/><text x="89.3095%" y="527.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (51 samples, 0.21%)</title><rect x="89.2006%" y="517" width="0.2117%" height="15" fill="rgb(232,33,43)" fg:x="21492" fg:w="51"/><text x="89.4506%" y="527.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$free (6 samples, 0.02%)</title><rect x="89.4123%" y="517" width="0.0249%" height="15" fill="rgb(209,8,3)" fg:x="21543" fg:w="6"/><text x="89.6623%" y="527.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$malloc (7 samples, 0.03%)</title><rect x="89.4372%" y="517" width="0.0291%" height="15" fill="rgb(214,25,53)" fg:x="21549" fg:w="7"/><text x="89.6872%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (5 samples, 0.02%)</title><rect x="89.4912%" y="469" width="0.0208%" height="15" fill="rgb(254,186,54)" fg:x="21562" fg:w="5"/><text x="89.7412%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (7 samples, 0.03%)</title><rect x="89.4870%" y="485" width="0.0291%" height="15" fill="rgb(208,174,49)" fg:x="21561" fg:w="7"/><text x="89.7370%" y="495.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.04%)</title><rect x="89.4787%" y="517" width="0.0415%" height="15" fill="rgb(233,191,51)" fg:x="21559" fg:w="10"/><text x="89.7287%" y="527.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (9 samples, 0.04%)</title><rect x="89.4829%" y="501" width="0.0374%" height="15" fill="rgb(222,134,10)" fg:x="21560" fg:w="9"/><text x="89.7329%" y="511.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (27 samples, 0.11%)</title><rect x="89.5244%" y="517" width="0.1121%" height="15" fill="rgb(230,226,20)" fg:x="21570" fg:w="27"/><text x="89.7744%" y="527.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="89.6447%" y="501" width="0.0125%" height="15" fill="rgb(251,111,25)" fg:x="21599" fg:w="3"/><text x="89.8947%" y="511.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.04%)</title><rect x="89.6364%" y="517" width="0.0374%" height="15" fill="rgb(224,40,46)" fg:x="21597" fg:w="9"/><text x="89.8864%" y="527.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.01%)</title><rect x="89.6613%" y="501" width="0.0125%" height="15" fill="rgb(236,108,47)" fg:x="21603" fg:w="3"/><text x="89.9113%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (23 samples, 0.10%)</title><rect x="90.2216%" y="501" width="0.0955%" height="15" fill="rgb(234,93,0)" fg:x="21738" fg:w="23"/><text x="90.4716%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_free (10 samples, 0.04%)</title><rect x="90.3171%" y="501" width="0.0415%" height="15" fill="rgb(224,213,32)" fg:x="21761" fg:w="10"/><text x="90.5671%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (47 samples, 0.20%)</title><rect x="90.3586%" y="501" width="0.1951%" height="15" fill="rgb(251,11,48)" fg:x="21771" fg:w="47"/><text x="90.6086%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (108 samples, 0.45%)</title><rect x="90.5537%" y="501" width="0.4482%" height="15" fill="rgb(236,173,5)" fg:x="21818" fg:w="108"/><text x="90.8037%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (61 samples, 0.25%)</title><rect x="91.0019%" y="501" width="0.2532%" height="15" fill="rgb(230,95,12)" fg:x="21926" fg:w="61"/><text x="91.2519%" y="511.50"></text></g><g><title>libsystem_platform.dylib`__bzero (5 samples, 0.02%)</title><rect x="91.2551%" y="501" width="0.0208%" height="15" fill="rgb(232,209,1)" fg:x="21987" fg:w="5"/><text x="91.5051%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (35 samples, 0.15%)</title><rect x="91.2758%" y="501" width="0.1453%" height="15" fill="rgb(232,6,1)" fg:x="21992" fg:w="35"/><text x="91.5258%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (41 samples, 0.17%)</title><rect x="91.4211%" y="501" width="0.1702%" height="15" fill="rgb(210,224,50)" fg:x="22027" fg:w="41"/><text x="91.6711%" y="511.50"></text></g><g><title>lockbook-egui`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="91.5913%" y="501" width="0.0166%" height="15" fill="rgb(228,127,35)" fg:x="22068" fg:w="4"/><text x="91.8413%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.01%)</title><rect x="91.5954%" y="485" width="0.0125%" height="15" fill="rgb(245,102,45)" fg:x="22069" fg:w="3"/><text x="91.8454%" y="495.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (99 samples, 0.41%)</title><rect x="91.6079%" y="501" width="0.4109%" height="15" fill="rgb(214,1,49)" fg:x="22072" fg:w="99"/><text x="91.8579%" y="511.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$free (8 samples, 0.03%)</title><rect x="92.0188%" y="501" width="0.0332%" height="15" fill="rgb(226,163,40)" fg:x="22171" fg:w="8"/><text x="92.2688%" y="511.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$malloc (7 samples, 0.03%)</title><rect x="92.0520%" y="501" width="0.0291%" height="15" fill="rgb(239,212,28)" fg:x="22179" fg:w="7"/><text x="92.3020%" y="511.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$memcpy (3 samples, 0.01%)</title><rect x="92.0810%" y="501" width="0.0125%" height="15" fill="rgb(220,20,13)" fg:x="22186" fg:w="3"/><text x="92.3310%" y="511.50"></text></g><g><title>lockbook-egui`__rdl_alloc (5 samples, 0.02%)</title><rect x="92.0935%" y="501" width="0.0208%" height="15" fill="rgb(210,164,35)" fg:x="22189" fg:w="5"/><text x="92.3435%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.01%)</title><rect x="92.1267%" y="437" width="0.0125%" height="15" fill="rgb(248,109,41)" fg:x="22197" fg:w="3"/><text x="92.3767%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (6 samples, 0.02%)</title><rect x="92.1184%" y="453" width="0.0249%" height="15" fill="rgb(238,23,50)" fg:x="22195" fg:w="6"/><text x="92.3684%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (7 samples, 0.03%)</title><rect x="92.1184%" y="469" width="0.0291%" height="15" fill="rgb(211,48,49)" fg:x="22195" fg:w="7"/><text x="92.3684%" y="479.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.04%)</title><rect x="92.1142%" y="501" width="0.0374%" height="15" fill="rgb(223,36,21)" fg:x="22194" fg:w="9"/><text x="92.3642%" y="511.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (9 samples, 0.04%)</title><rect x="92.1142%" y="485" width="0.0374%" height="15" fill="rgb(207,123,46)" fg:x="22194" fg:w="9"/><text x="92.3642%" y="495.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (43 samples, 0.18%)</title><rect x="92.1516%" y="501" width="0.1785%" height="15" fill="rgb(240,218,32)" fg:x="22203" fg:w="43"/><text x="92.4016%" y="511.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.02%)</title><rect x="92.3466%" y="485" width="0.0166%" height="15" fill="rgb(252,5,43)" fg:x="22250" fg:w="4"/><text x="92.5966%" y="495.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.05%)</title><rect x="92.3300%" y="501" width="0.0457%" height="15" fill="rgb(252,84,19)" fg:x="22246" fg:w="11"/><text x="92.5800%" y="511.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.01%)</title><rect x="92.3632%" y="485" width="0.0125%" height="15" fill="rgb(243,152,39)" fg:x="22254" fg:w="3"/><text x="92.6132%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (6 samples, 0.02%)</title><rect x="92.7036%" y="485" width="0.0249%" height="15" fill="rgb(234,160,15)" fg:x="22336" fg:w="6"/><text x="92.9536%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_free (19 samples, 0.08%)</title><rect x="92.7285%" y="485" width="0.0789%" height="15" fill="rgb(237,34,20)" fg:x="22342" fg:w="19"/><text x="92.9785%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.06%)</title><rect x="92.8073%" y="485" width="0.0623%" height="15" fill="rgb(229,97,13)" fg:x="22361" fg:w="15"/><text x="93.0573%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (52 samples, 0.22%)</title><rect x="92.8696%" y="485" width="0.2158%" height="15" fill="rgb(234,71,50)" fg:x="22376" fg:w="52"/><text x="93.1196%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (84 samples, 0.35%)</title><rect x="93.0896%" y="485" width="0.3486%" height="15" fill="rgb(253,155,4)" fg:x="22429" fg:w="84"/><text x="93.3396%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.01%)</title><rect x="93.4257%" y="469" width="0.0125%" height="15" fill="rgb(222,185,37)" fg:x="22510" fg:w="3"/><text x="93.6757%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (3 samples, 0.01%)</title><rect x="93.4257%" y="453" width="0.0125%" height="15" fill="rgb(251,177,13)" fg:x="22510" fg:w="3"/><text x="93.6757%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.05%)</title><rect x="93.4465%" y="485" width="0.0498%" height="15" fill="rgb(250,179,40)" fg:x="22515" fg:w="12"/><text x="93.6965%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.02%)</title><rect x="93.4963%" y="485" width="0.0208%" height="15" fill="rgb(242,44,2)" fg:x="22527" fg:w="5"/><text x="93.7463%" y="495.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (88 samples, 0.37%)</title><rect x="93.5254%" y="485" width="0.3652%" height="15" fill="rgb(216,177,13)" fg:x="22534" fg:w="88"/><text x="93.7754%" y="495.50"></text></g><g><title>lockbook-egui`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="93.8906%" y="485" width="0.0125%" height="15" fill="rgb(216,106,43)" fg:x="22622" fg:w="3"/><text x="94.1406%" y="495.50"></text></g><g><title>lockbook-egui`__rdl_alloc (4 samples, 0.02%)</title><rect x="93.9072%" y="485" width="0.0166%" height="15" fill="rgb(216,183,2)" fg:x="22626" fg:w="4"/><text x="94.1572%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.02%)</title><rect x="93.9321%" y="453" width="0.0249%" height="15" fill="rgb(249,75,3)" fg:x="22632" fg:w="6"/><text x="94.1821%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.02%)</title><rect x="93.9404%" y="437" width="0.0166%" height="15" fill="rgb(219,67,39)" fg:x="22634" fg:w="4"/><text x="94.1904%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.01%)</title><rect x="93.9446%" y="421" width="0.0125%" height="15" fill="rgb(253,228,2)" fg:x="22635" fg:w="3"/><text x="94.1946%" y="431.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.03%)</title><rect x="93.9279%" y="485" width="0.0332%" height="15" fill="rgb(235,138,27)" fg:x="22631" fg:w="8"/><text x="94.1779%" y="495.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (7 samples, 0.03%)</title><rect x="93.9321%" y="469" width="0.0291%" height="15" fill="rgb(236,97,51)" fg:x="22632" fg:w="7"/><text x="94.1821%" y="479.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (33 samples, 0.14%)</title><rect x="93.9612%" y="485" width="0.1370%" height="15" fill="rgb(240,80,30)" fg:x="22639" fg:w="33"/><text x="94.2112%" y="495.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="94.1064%" y="469" width="0.0208%" height="15" fill="rgb(230,178,19)" fg:x="22674" fg:w="5"/><text x="94.3564%" y="479.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.03%)</title><rect x="94.0981%" y="485" width="0.0332%" height="15" fill="rgb(210,190,27)" fg:x="22672" fg:w="8"/><text x="94.3481%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (5 samples, 0.02%)</title><rect x="94.3430%" y="469" width="0.0208%" height="15" fill="rgb(222,107,31)" fg:x="22731" fg:w="5"/><text x="94.5930%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_free (7 samples, 0.03%)</title><rect x="94.3637%" y="469" width="0.0291%" height="15" fill="rgb(216,127,34)" fg:x="22736" fg:w="7"/><text x="94.6137%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.05%)</title><rect x="94.3928%" y="469" width="0.0457%" height="15" fill="rgb(234,116,52)" fg:x="22743" fg:w="11"/><text x="94.6428%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (57 samples, 0.24%)</title><rect x="94.4384%" y="469" width="0.2366%" height="15" fill="rgb(222,124,15)" fg:x="22754" fg:w="57"/><text x="94.6884%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (21 samples, 0.09%)</title><rect x="94.6750%" y="469" width="0.0872%" height="15" fill="rgb(231,179,28)" fg:x="22811" fg:w="21"/><text x="94.9250%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.02%)</title><rect x="94.7622%" y="469" width="0.0249%" height="15" fill="rgb(226,93,45)" fg:x="22832" fg:w="6"/><text x="95.0122%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (9 samples, 0.04%)</title><rect x="94.7871%" y="469" width="0.0374%" height="15" fill="rgb(215,8,51)" fg:x="22838" fg:w="9"/><text x="95.0371%" y="479.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (32 samples, 0.13%)</title><rect x="94.8327%" y="469" width="0.1328%" height="15" fill="rgb(223,106,5)" fg:x="22849" fg:w="32"/><text x="95.0827%" y="479.50"></text></g><g><title>lockbook-egui`__rdl_alloc (8 samples, 0.03%)</title><rect x="94.9822%" y="469" width="0.0332%" height="15" fill="rgb(250,191,5)" fg:x="22885" fg:w="8"/><text x="95.2322%" y="479.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (20 samples, 0.08%)</title><rect x="95.0237%" y="469" width="0.0830%" height="15" fill="rgb(242,132,44)" fg:x="22895" fg:w="20"/><text x="95.2737%" y="479.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.02%)</title><rect x="95.1067%" y="469" width="0.0166%" height="15" fill="rgb(251,152,29)" fg:x="22915" fg:w="4"/><text x="95.3567%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="95.2810%" y="453" width="0.0125%" height="15" fill="rgb(218,179,5)" fg:x="22957" fg:w="3"/><text x="95.5310%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (17 samples, 0.07%)</title><rect x="95.2934%" y="453" width="0.0706%" height="15" fill="rgb(227,67,19)" fg:x="22960" fg:w="17"/><text x="95.5434%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (37 samples, 0.15%)</title><rect x="95.3640%" y="453" width="0.1536%" height="15" fill="rgb(233,119,31)" fg:x="22977" fg:w="37"/><text x="95.6140%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.03%)</title><rect x="95.5217%" y="453" width="0.0291%" height="15" fill="rgb(241,120,22)" fg:x="23015" fg:w="7"/><text x="95.7717%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.01%)</title><rect x="95.5508%" y="453" width="0.0125%" height="15" fill="rgb(224,102,30)" fg:x="23022" fg:w="3"/><text x="95.8008%" y="463.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (47 samples, 0.20%)</title><rect x="95.5715%" y="453" width="0.1951%" height="15" fill="rgb(210,164,37)" fg:x="23027" fg:w="47"/><text x="95.8215%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.02%)</title><rect x="95.7707%" y="373" width="0.0166%" height="15" fill="rgb(226,191,16)" fg:x="23075" fg:w="4"/><text x="96.0207%" y="383.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.02%)</title><rect x="95.7666%" y="453" width="0.0249%" height="15" fill="rgb(214,40,45)" fg:x="23074" fg:w="6"/><text x="96.0166%" y="463.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="95.7666%" y="437" width="0.0249%" height="15" fill="rgb(244,29,26)" fg:x="23074" fg:w="6"/><text x="96.0166%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.02%)</title><rect x="95.7666%" y="421" width="0.0249%" height="15" fill="rgb(216,16,5)" fg:x="23074" fg:w="6"/><text x="96.0166%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (6 samples, 0.02%)</title><rect x="95.7666%" y="405" width="0.0249%" height="15" fill="rgb(249,76,35)" fg:x="23074" fg:w="6"/><text x="96.0166%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (5 samples, 0.02%)</title><rect x="95.7707%" y="389" width="0.0208%" height="15" fill="rgb(207,11,44)" fg:x="23075" fg:w="5"/><text x="96.0207%" y="399.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (7 samples, 0.03%)</title><rect x="95.7915%" y="453" width="0.0291%" height="15" fill="rgb(228,190,49)" fg:x="23080" fg:w="7"/><text x="96.0415%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.04%)</title><rect x="95.9035%" y="437" width="0.0415%" height="15" fill="rgb(214,173,12)" fg:x="23107" fg:w="10"/><text x="96.1535%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (10 samples, 0.04%)</title><rect x="95.9450%" y="437" width="0.0415%" height="15" fill="rgb(218,26,35)" fg:x="23117" fg:w="10"/><text x="96.1950%" y="447.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.07%)</title><rect x="95.9949%" y="437" width="0.0664%" height="15" fill="rgb(220,200,19)" fg:x="23129" fg:w="16"/><text x="96.2449%" y="447.50"></text></g><g><title>lockbook-egui`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="96.0613%" y="437" width="0.0125%" height="15" fill="rgb(239,95,49)" fg:x="23145" fg:w="3"/><text x="96.3113%" y="447.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="96.0737%" y="437" width="0.0166%" height="15" fill="rgb(235,85,53)" fg:x="23148" fg:w="4"/><text x="96.3237%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6 samples, 0.02%)</title><rect x="96.1360%" y="421" width="0.0249%" height="15" fill="rgb(233,133,31)" fg:x="23163" fg:w="6"/><text x="96.3860%" y="431.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="96.1733%" y="421" width="0.0125%" height="15" fill="rgb(218,25,20)" fg:x="23172" fg:w="3"/><text x="96.4233%" y="431.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (8 samples, 0.03%)</title><rect x="96.1941%" y="421" width="0.0332%" height="15" fill="rgb(252,210,38)" fg:x="23177" fg:w="8"/><text x="96.4441%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.04%)</title><rect x="96.2563%" y="405" width="0.0374%" height="15" fill="rgb(242,134,21)" fg:x="23192" fg:w="9"/><text x="96.5063%" y="415.50"></text></g><g><title>lockbook-egui`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.05%)</title><rect x="96.2937%" y="405" width="0.0457%" height="15" fill="rgb(213,28,48)" fg:x="23201" fg:w="11"/><text x="96.5437%" y="415.50"></text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearch::best_match (15,903 samples, 66.00%)</title><rect x="30.3437%" y="709" width="66.0040%" height="15" fill="rgb(250,196,2)" fg:x="7311" fg:w="15903"/><text x="30.5937%" y="719.50">lockbook-egui`sublime_fuzzy::search::FuzzySearch::best_match</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (14,556 samples, 60.41%)</title><rect x="35.9343%" y="693" width="60.4134%" height="15" fill="rgb(227,5,17)" fg:x="8658" fg:w="14556"/><text x="36.1843%" y="703.50">lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (12,898 samples, 53.53%)</title><rect x="42.8156%" y="677" width="53.5320%" height="15" fill="rgb(221,226,24)" fg:x="10316" fg:w="12898"/><text x="43.0656%" y="687.50">lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (10,373 samples, 43.05%)</title><rect x="53.2954%" y="661" width="43.0522%" height="15" fill="rgb(211,5,48)" fg:x="12841" fg:w="10373"/><text x="53.5454%" y="671.50">lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (8,538 samples, 35.44%)</title><rect x="60.9114%" y="645" width="35.4362%" height="15" fill="rgb(219,150,6)" fg:x="14676" fg:w="8538"/><text x="61.1614%" y="655.50">lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (7,405 samples, 30.73%)</title><rect x="65.6138%" y="629" width="30.7338%" height="15" fill="rgb(251,46,16)" fg:x="15809" fg:w="7405"/><text x="65.8638%" y="639.50">lockbook-egui`sublime_fuzzy::search::FuzzySearcher..</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (6,949 samples, 28.84%)</title><rect x="67.5064%" y="613" width="28.8412%" height="15" fill="rgb(220,204,40)" fg:x="16265" fg:w="6949"/><text x="67.7564%" y="623.50">lockbook-egui`sublime_fuzzy::search::FuzzySear..</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (6,274 samples, 26.04%)</title><rect x="70.3080%" y="597" width="26.0397%" height="15" fill="rgb(211,85,2)" fg:x="16940" fg:w="6274"/><text x="70.5580%" y="607.50">lockbook-egui`sublime_fuzzy::search::Fuzzy..</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (5,086 samples, 21.11%)</title><rect x="75.2386%" y="581" width="21.1090%" height="15" fill="rgb(229,17,7)" fg:x="18128" fg:w="5086"/><text x="75.4886%" y="591.50">lockbook-egui`sublime_fuzzy::sear..</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (3,932 samples, 16.32%)</title><rect x="80.0282%" y="565" width="16.3194%" height="15" fill="rgb(239,72,28)" fg:x="19282" fg:w="3932"/><text x="80.2782%" y="575.50">lockbook-egui`sublime_fuz..</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (2,874 samples, 11.93%)</title><rect x="84.4194%" y="549" width="11.9283%" height="15" fill="rgb(230,47,54)" fg:x="20340" fg:w="2874"/><text x="84.6694%" y="559.50">lockbook-egui`subl..</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (2,116 samples, 8.78%)</title><rect x="87.5654%" y="533" width="8.7823%" height="15" fill="rgb(214,50,8)" fg:x="21098" fg:w="2116"/><text x="87.8154%" y="543.50">lockbook-egu..</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (1,608 samples, 6.67%)</title><rect x="89.6738%" y="517" width="6.6739%" height="15" fill="rgb(216,198,43)" fg:x="21606" fg:w="1608"/><text x="89.9238%" y="527.50">lockbook-..</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (957 samples, 3.97%)</title><rect x="92.3757%" y="501" width="3.9719%" height="15" fill="rgb(234,20,35)" fg:x="22257" fg:w="957"/><text x="92.6257%" y="511.50">lock..</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (534 samples, 2.22%)</title><rect x="94.1313%" y="485" width="2.2163%" height="15" fill="rgb(254,45,19)" fg:x="22680" fg:w="534"/><text x="94.3813%" y="495.50">l..</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (295 samples, 1.22%)</title><rect x="95.1233%" y="469" width="1.2244%" height="15" fill="rgb(219,14,44)" fg:x="22919" fg:w="295"/><text x="95.3733%" y="479.50"></text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (125 samples, 0.52%)</title><rect x="95.8288%" y="453" width="0.5188%" height="15" fill="rgb(217,220,26)" fg:x="23089" fg:w="125"/><text x="96.0788%" y="463.50"></text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (62 samples, 0.26%)</title><rect x="96.0903%" y="437" width="0.2573%" height="15" fill="rgb(213,158,28)" fg:x="23152" fg:w="62"/><text x="96.3403%" y="447.50"></text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearcher::match_ (27 samples, 0.11%)</title><rect x="96.2356%" y="421" width="0.1121%" height="15" fill="rgb(252,51,52)" fg:x="23187" fg:w="27"/><text x="96.4856%" y="431.50"></text></g><g><title>lockbook-egui`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (16,047 samples, 66.60%)</title><rect x="29.7501%" y="725" width="66.6016%" height="15" fill="rgb(246,89,16)" fg:x="7168" fg:w="16047"/><text x="30.0001%" y="735.50">lockbook-egui`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;..</text></g><g><title>lockbook-egui`&lt;tokio::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (16,064 samples, 66.67%)</title><rect x="29.7335%" y="741" width="66.6722%" height="15" fill="rgb(216,158,49)" fg:x="7164" fg:w="16064"/><text x="29.9835%" y="751.50">lockbook-egui`&lt;tokio::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll</text></g><g><title>lockbook-egui`sublime_fuzzy::search::FuzzySearch::best_match (13 samples, 0.05%)</title><rect x="96.3518%" y="725" width="0.0540%" height="15" fill="rgb(236,107,19)" fg:x="23215" fg:w="13"/><text x="96.6018%" y="735.50"></text></g><g><title>lockbook-egui`sublime_fuzzy::parsing::build_occurrences (9 samples, 0.04%)</title><rect x="96.3684%" y="709" width="0.0374%" height="15" fill="rgb(228,185,30)" fg:x="23219" fg:w="9"/><text x="96.6184%" y="719.50"></text></g><g><title>lockbook-egui`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (16,065 samples, 66.68%)</title><rect x="29.7335%" y="757" width="66.6764%" height="15" fill="rgb(246,134,8)" fg:x="7164" fg:w="16065"/><text x="29.9835%" y="767.50">lockbook-egui`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>lockbook-egui`lb_rs::blocking::Lb::search (16,066 samples, 66.68%)</title><rect x="29.7335%" y="837" width="66.6805%" height="15" fill="rgb(214,143,50)" fg:x="7164" fg:w="16066"/><text x="29.9835%" y="847.50">lockbook-egui`lb_rs::blocking::Lb::search</text></g><g><title>lockbook-egui`tokio::runtime::runtime::Runtime::block_on (16,066 samples, 66.68%)</title><rect x="29.7335%" y="821" width="66.6805%" height="15" fill="rgb(228,75,8)" fg:x="7164" fg:w="16066"/><text x="29.9835%" y="831.50">lockbook-egui`tokio::runtime::runtime::Runtime::block_on</text></g><g><title>lockbook-egui`tokio::runtime::context::runtime::enter_runtime (16,066 samples, 66.68%)</title><rect x="29.7335%" y="805" width="66.6805%" height="15" fill="rgb(207,175,4)" fg:x="7164" fg:w="16066"/><text x="29.9835%" y="815.50">lockbook-egui`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>lockbook-egui`tokio::runtime::park::CachedParkThread::block_on (16,066 samples, 66.68%)</title><rect x="29.7335%" y="789" width="66.6805%" height="15" fill="rgb(205,108,24)" fg:x="7164" fg:w="16066"/><text x="29.9835%" y="799.50">lockbook-egui`tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>lockbook-egui`lb_rs::service::search::_&lt;impl lb_rs::Lb&gt;::search::_{{closure}} (16,066 samples, 66.68%)</title><rect x="29.7335%" y="773" width="66.6805%" height="15" fill="rgb(244,120,49)" fg:x="7164" fg:w="16066"/><text x="29.9835%" y="783.50">lockbook-egui`lb_rs::service::search::_&lt;impl lb_rs::Lb&gt;::search::_{{closure}}</text></g><g><title>lockbook-egui`lb_rs::service::sync::_&lt;impl lb_rs::Lb&gt;::merge::_{{closure}} (3 samples, 0.01%)</title><rect x="96.4140%" y="741" width="0.0125%" height="15" fill="rgb(223,47,38)" fg:x="23230" fg:w="3"/><text x="96.6640%" y="751.50"></text></g><g><title>lockbook-egui`&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="96.4265%" y="725" width="0.0125%" height="15" fill="rgb(229,179,11)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="735.50"></text></g><g><title>lockbook-egui`hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (3 samples, 0.01%)</title><rect x="96.4265%" y="709" width="0.0125%" height="15" fill="rgb(231,122,1)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="719.50"></text></g><g><title>lockbook-egui`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="96.4265%" y="693" width="0.0125%" height="15" fill="rgb(245,119,9)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="703.50"></text></g><g><title>lockbook-egui`&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="96.4265%" y="677" width="0.0125%" height="15" fill="rgb(241,163,25)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="687.50"></text></g><g><title>lockbook-egui`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="96.4265%" y="661" width="0.0125%" height="15" fill="rgb(217,214,3)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="671.50"></text></g><g><title>lockbook-egui`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="96.4265%" y="645" width="0.0125%" height="15" fill="rgb(240,86,28)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="655.50"></text></g><g><title>lockbook-egui`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="96.4265%" y="629" width="0.0125%" height="15" fill="rgb(215,47,9)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="639.50"></text></g><g><title>lockbook-egui`reqwest::connect::with_timeout::_{{closure}} (3 samples, 0.01%)</title><rect x="96.4265%" y="613" width="0.0125%" height="15" fill="rgb(252,25,45)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="623.50"></text></g><g><title>lockbook-egui`reqwest::connect::Connector::connect_with_maybe_proxy::_{{closure}} (3 samples, 0.01%)</title><rect x="96.4265%" y="597" width="0.0125%" height="15" fill="rgb(251,164,9)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="607.50"></text></g><g><title>lockbook-egui`&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (3 samples, 0.01%)</title><rect x="96.4265%" y="581" width="0.0125%" height="15" fill="rgb(233,194,0)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="591.50"></text></g><g><title>lockbook-egui`&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="96.4265%" y="565" width="0.0125%" height="15" fill="rgb(249,111,24)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="575.50"></text></g><g><title>lockbook-egui`native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (3 samples, 0.01%)</title><rect x="96.4265%" y="549" width="0.0125%" height="15" fill="rgb(250,223,3)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="559.50"></text></g><g><title>lockbook-egui`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (3 samples, 0.01%)</title><rect x="96.4265%" y="533" width="0.0125%" height="15" fill="rgb(236,178,37)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="543.50"></text></g><g><title>Security`SSLHandshake (3 samples, 0.01%)</title><rect x="96.4265%" y="517" width="0.0125%" height="15" fill="rgb(241,158,50)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="527.50"></text></g><g><title>Security`SSLHandshakeProceed (3 samples, 0.01%)</title><rect x="96.4265%" y="501" width="0.0125%" height="15" fill="rgb(213,121,41)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="511.50"></text></g><g><title>libcoretls.dylib`tls_handshake_process (3 samples, 0.01%)</title><rect x="96.4265%" y="485" width="0.0125%" height="15" fill="rgb(240,92,3)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="495.50"></text></g><g><title>libcoretls.dylib`SSLProcessHandshakeRecordInner (3 samples, 0.01%)</title><rect x="96.4265%" y="469" width="0.0125%" height="15" fill="rgb(205,123,3)" fg:x="23233" fg:w="3"/><text x="96.6765%" y="479.50"></text></g><g><title>lockbook-egui`lb_rs::service::sync::_&lt;impl lb_rs::Lb&gt;::sync::_{{closure}}::_{{closure}} (9 samples, 0.04%)</title><rect x="96.4140%" y="757" width="0.0374%" height="15" fill="rgb(205,97,47)" fg:x="23230" fg:w="9"/><text x="96.6640%" y="767.50"></text></g><g><title>lockbook-egui`lb_rs::service::sync::_&lt;impl lb_rs::Lb&gt;::prune::_{{closure}} (6 samples, 0.02%)</title><rect x="96.4265%" y="741" width="0.0249%" height="15" fill="rgb(247,152,14)" fg:x="23233" fg:w="6"/><text x="96.6765%" y="751.50"></text></g><g><title>lockbook-egui`lb_rs::blocking::Lb::sync (10 samples, 0.04%)</title><rect x="96.4140%" y="837" width="0.0415%" height="15" fill="rgb(248,195,53)" fg:x="23230" fg:w="10"/><text x="96.6640%" y="847.50"></text></g><g><title>lockbook-egui`tokio::runtime::runtime::Runtime::block_on (10 samples, 0.04%)</title><rect x="96.4140%" y="821" width="0.0415%" height="15" fill="rgb(226,201,16)" fg:x="23230" fg:w="10"/><text x="96.6640%" y="831.50"></text></g><g><title>lockbook-egui`tokio::runtime::context::runtime::enter_runtime (10 samples, 0.04%)</title><rect x="96.4140%" y="805" width="0.0415%" height="15" fill="rgb(205,98,0)" fg:x="23230" fg:w="10"/><text x="96.6640%" y="815.50"></text></g><g><title>lockbook-egui`tokio::runtime::park::CachedParkThread::block_on (10 samples, 0.04%)</title><rect x="96.4140%" y="789" width="0.0415%" height="15" fill="rgb(214,191,48)" fg:x="23230" fg:w="10"/><text x="96.6640%" y="799.50"></text></g><g><title>lockbook-egui`lb_rs::service::sync::_&lt;impl lb_rs::Lb&gt;::sync::_{{closure}} (10 samples, 0.04%)</title><rect x="96.4140%" y="773" width="0.0415%" height="15" fill="rgb(237,112,39)" fg:x="23230" fg:w="10"/><text x="96.6640%" y="783.50"></text></g><g><title>lockbook-egui`parking_lot::condvar::Condvar::wait_until_internal (8 samples, 0.03%)</title><rect x="96.4555%" y="821" width="0.0332%" height="15" fill="rgb(247,203,27)" fg:x="23240" fg:w="8"/><text x="96.7055%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (7 samples, 0.03%)</title><rect x="96.4597%" y="805" width="0.0291%" height="15" fill="rgb(235,124,28)" fg:x="23241" fg:w="7"/><text x="96.7097%" y="815.50"></text></g><g><title>lockbook-egui`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="96.4971%" y="789" width="0.0166%" height="15" fill="rgb(208,207,46)" fg:x="23250" fg:w="4"/><text x="96.7471%" y="799.50"></text></g><g><title>lockbook-egui`std::fs::OpenOptions::_open (4 samples, 0.02%)</title><rect x="96.4971%" y="773" width="0.0166%" height="15" fill="rgb(234,176,4)" fg:x="23250" fg:w="4"/><text x="96.7471%" y="783.50"></text></g><g><title>lockbook-egui`std::sys::pal::unix::fs::File::open_c (4 samples, 0.02%)</title><rect x="96.4971%" y="757" width="0.0166%" height="15" fill="rgb(230,133,28)" fg:x="23250" fg:w="4"/><text x="96.7471%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`__open (4 samples, 0.02%)</title><rect x="96.4971%" y="741" width="0.0166%" height="15" fill="rgb(211,137,40)" fg:x="23250" fg:w="4"/><text x="96.7471%" y="751.50"></text></g><g><title>lockbook-egui`tokio::io::blocking::Buf::read_from (7 samples, 0.03%)</title><rect x="96.5137%" y="789" width="0.0291%" height="15" fill="rgb(254,35,13)" fg:x="23254" fg:w="7"/><text x="96.7637%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`read (7 samples, 0.03%)</title><rect x="96.5137%" y="773" width="0.0291%" height="15" fill="rgb(225,49,51)" fg:x="23254" fg:w="7"/><text x="96.7637%" y="783.50"></text></g><g><title>lockbook-egui`parking_lot::condvar::Condvar::wait_until_internal (6 samples, 0.02%)</title><rect x="96.5510%" y="709" width="0.0249%" height="15" fill="rgb(251,10,15)" fg:x="23263" fg:w="6"/><text x="96.8010%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (6 samples, 0.02%)</title><rect x="96.5510%" y="693" width="0.0249%" height="15" fill="rgb(228,207,15)" fg:x="23263" fg:w="6"/><text x="96.8010%" y="703.50"></text></g><g><title>lockbook-egui`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (9 samples, 0.04%)</title><rect x="96.5469%" y="741" width="0.0374%" height="15" fill="rgb(241,99,19)" fg:x="23262" fg:w="9"/><text x="96.7969%" y="751.50"></text></g><g><title>lockbook-egui`tokio::runtime::scheduler::multi_thread::park::Parker::park (9 samples, 0.04%)</title><rect x="96.5469%" y="725" width="0.0374%" height="15" fill="rgb(207,104,49)" fg:x="23262" fg:w="9"/><text x="96.7969%" y="735.50"></text></g><g><title>lockbook-egui`lb_rs::logic::compression_service::decompress (9 samples, 0.04%)</title><rect x="96.5925%" y="661" width="0.0374%" height="15" fill="rgb(234,99,18)" fg:x="23273" fg:w="9"/><text x="96.8425%" y="671.50"></text></g><g><title>lockbook-egui`std::io::default_read_to_end (8 samples, 0.03%)</title><rect x="96.5967%" y="645" width="0.0332%" height="15" fill="rgb(213,191,49)" fg:x="23274" fg:w="8"/><text x="96.8467%" y="655.50"></text></g><g><title>lockbook-egui`std::io::default_read_to_end::small_probe_read (7 samples, 0.03%)</title><rect x="96.6008%" y="629" width="0.0291%" height="15" fill="rgb(210,226,19)" fg:x="23275" fg:w="7"/><text x="96.8508%" y="639.50"></text></g><g><title>lockbook-egui`flate2::zio::read (7 samples, 0.03%)</title><rect x="96.6008%" y="613" width="0.0291%" height="15" fill="rgb(229,97,18)" fg:x="23275" fg:w="7"/><text x="96.8508%" y="623.50"></text></g><g><title>lockbook-egui`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (7 samples, 0.03%)</title><rect x="96.6008%" y="597" width="0.0291%" height="15" fill="rgb(211,167,15)" fg:x="23275" fg:w="7"/><text x="96.8508%" y="607.50"></text></g><g><title>lockbook-egui`miniz_oxide::inflate::stream::inflate (7 samples, 0.03%)</title><rect x="96.6008%" y="581" width="0.0291%" height="15" fill="rgb(210,169,34)" fg:x="23275" fg:w="7"/><text x="96.8508%" y="591.50"></text></g><g><title>lockbook-egui`miniz_oxide::inflate::stream::inflate_loop (7 samples, 0.03%)</title><rect x="96.6008%" y="565" width="0.0291%" height="15" fill="rgb(241,121,31)" fg:x="23275" fg:w="7"/><text x="96.8508%" y="575.50"></text></g><g><title>lockbook-egui`miniz_oxide::inflate::core::decompress (7 samples, 0.03%)</title><rect x="96.6008%" y="549" width="0.0291%" height="15" fill="rgb(232,40,11)" fg:x="23275" fg:w="7"/><text x="96.8508%" y="559.50"></text></g><g><title>lockbook-egui`&lt;ctr::Ctr&lt;B,F&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (4 samples, 0.02%)</title><rect x="96.6340%" y="629" width="0.0166%" height="15" fill="rgb(205,86,26)" fg:x="23283" fg:w="4"/><text x="96.8840%" y="639.50"></text></g><g><title>lockbook-egui`aes::soft::fixslice::sub_bytes (4 samples, 0.02%)</title><rect x="96.6340%" y="613" width="0.0166%" height="15" fill="rgb(231,126,28)" fg:x="23283" fg:w="4"/><text x="96.8840%" y="623.50"></text></g><g><title>lockbook-egui`lb_rs::logic::core_ops::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;T&gt;&gt;::decrypt_document (16 samples, 0.07%)</title><rect x="96.5925%" y="677" width="0.0664%" height="15" fill="rgb(219,221,18)" fg:x="23273" fg:w="16"/><text x="96.8425%" y="687.50"></text></g><g><title>lockbook-egui`lb_rs::logic::symkey::decrypt (6 samples, 0.02%)</title><rect x="96.6340%" y="661" width="0.0249%" height="15" fill="rgb(211,40,0)" fg:x="23283" fg:w="6"/><text x="96.8840%" y="671.50"></text></g><g><title>lockbook-egui`&lt;Alg as aead::Aead&gt;::decrypt (6 samples, 0.02%)</title><rect x="96.6340%" y="645" width="0.0249%" height="15" fill="rgb(239,85,43)" fg:x="23283" fg:w="6"/><text x="96.8840%" y="655.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (5 samples, 0.02%)</title><rect x="96.6589%" y="661" width="0.0208%" height="15" fill="rgb(231,55,21)" fg:x="23289" fg:w="5"/><text x="96.9089%" y="671.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (7 samples, 0.03%)</title><rect x="96.8042%" y="613" width="0.0291%" height="15" fill="rgb(225,184,43)" fg:x="23324" fg:w="7"/><text x="97.0542%" y="623.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (22 samples, 0.09%)</title><rect x="96.9660%" y="597" width="0.0913%" height="15" fill="rgb(251,158,41)" fg:x="23363" fg:w="22"/><text x="97.2160%" y="607.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (11 samples, 0.05%)</title><rect x="97.0574%" y="597" width="0.0457%" height="15" fill="rgb(234,159,37)" fg:x="23385" fg:w="11"/><text x="97.3074%" y="607.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (43 samples, 0.18%)</title><rect x="97.1487%" y="581" width="0.1785%" height="15" fill="rgb(216,204,22)" fg:x="23407" fg:w="43"/><text x="97.3987%" y="591.50"></text></g><g><title>lockbook-egui`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (152 samples, 0.63%)</title><rect x="96.7668%" y="629" width="0.6309%" height="15" fill="rgb(214,17,3)" fg:x="23315" fg:w="152"/><text x="97.0168%" y="639.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (136 samples, 0.56%)</title><rect x="96.8332%" y="613" width="0.5645%" height="15" fill="rgb(212,111,17)" fg:x="23331" fg:w="136"/><text x="97.0832%" y="623.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (71 samples, 0.29%)</title><rect x="97.1030%" y="597" width="0.2947%" height="15" fill="rgb(221,157,24)" fg:x="23396" fg:w="71"/><text x="97.3530%" y="607.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (17 samples, 0.07%)</title><rect x="97.3271%" y="581" width="0.0706%" height="15" fill="rgb(252,16,13)" fg:x="23450" fg:w="17"/><text x="97.5771%" y="591.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="97.4309%" y="613" width="0.0208%" height="15" fill="rgb(221,62,2)" fg:x="23475" fg:w="5"/><text x="97.6809%" y="623.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.08%)</title><rect x="97.5098%" y="597" width="0.0789%" height="15" fill="rgb(247,87,22)" fg:x="23494" fg:w="19"/><text x="97.7598%" y="607.50"></text></g><g><title>lockbook-egui`&lt;std::collections::hash::map::HashMap&lt;uuid::Uuid,F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (51 samples, 0.21%)</title><rect x="97.3977%" y="629" width="0.2117%" height="15" fill="rgb(215,73,9)" fg:x="23467" fg:w="51"/><text x="97.6477%" y="639.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (38 samples, 0.16%)</title><rect x="97.4516%" y="613" width="0.1577%" height="15" fill="rgb(207,175,33)" fg:x="23480" fg:w="38"/><text x="97.7016%" y="623.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="97.5886%" y="597" width="0.0208%" height="15" fill="rgb(243,129,54)" fg:x="23513" fg:w="5"/><text x="97.8386%" y="607.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (210 samples, 0.87%)</title><rect x="96.7627%" y="645" width="0.8716%" height="15" fill="rgb(227,119,45)" fg:x="23314" fg:w="210"/><text x="97.0127%" y="655.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.02%)</title><rect x="97.6094%" y="629" width="0.0249%" height="15" fill="rgb(205,109,36)" fg:x="23518" fg:w="6"/><text x="97.8594%" y="639.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.05%)</title><rect x="97.6841%" y="629" width="0.0457%" height="15" fill="rgb(205,6,39)" fg:x="23536" fg:w="11"/><text x="97.9341%" y="639.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (25 samples, 0.10%)</title><rect x="97.6343%" y="645" width="0.1038%" height="15" fill="rgb(221,32,16)" fg:x="23524" fg:w="25"/><text x="97.8843%" y="655.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="97.7380%" y="645" width="0.0125%" height="15" fill="rgb(228,144,50)" fg:x="23549" fg:w="3"/><text x="97.9880%" y="655.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.02%)</title><rect x="97.7505%" y="645" width="0.0208%" height="15" fill="rgb(229,201,53)" fg:x="23552" fg:w="5"/><text x="98.0005%" y="655.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (7 samples, 0.03%)</title><rect x="97.8127%" y="629" width="0.0291%" height="15" fill="rgb(249,153,27)" fg:x="23567" fg:w="7"/><text x="98.0627%" y="639.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.08%)</title><rect x="97.9248%" y="613" width="0.0789%" height="15" fill="rgb(227,106,25)" fg:x="23594" fg:w="19"/><text x="98.1748%" y="623.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::in_pending_share (328 samples, 1.36%)</title><rect x="96.6589%" y="677" width="1.3613%" height="15" fill="rgb(230,65,29)" fg:x="23289" fg:w="328"/><text x="96.9089%" y="687.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::linked_by (323 samples, 1.34%)</title><rect x="96.6797%" y="661" width="1.3406%" height="15" fill="rgb(221,57,46)" fg:x="23294" fg:w="323"/><text x="96.9297%" y="671.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (60 samples, 0.25%)</title><rect x="97.7712%" y="645" width="0.2490%" height="15" fill="rgb(229,161,17)" fg:x="23557" fg:w="60"/><text x="98.0212%" y="655.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (43 samples, 0.18%)</title><rect x="97.8418%" y="629" width="0.1785%" height="15" fill="rgb(222,213,11)" fg:x="23574" fg:w="43"/><text x="98.0918%" y="639.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="98.0037%" y="613" width="0.0166%" height="15" fill="rgb(235,35,13)" fg:x="23613" fg:w="4"/><text x="98.2537%" y="623.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::mul_in_place (11 samples, 0.05%)</title><rect x="98.0286%" y="613" width="0.0457%" height="15" fill="rgb(233,158,34)" fg:x="23619" fg:w="11"/><text x="98.2786%" y="623.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::ecmult::ECMultGenContext::ecmult_gen (13 samples, 0.05%)</title><rect x="98.0286%" y="629" width="0.0540%" height="15" fill="rgb(215,151,48)" fg:x="23619" fg:w="13"/><text x="98.2786%" y="639.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::decrypt_key (19 samples, 0.08%)</title><rect x="98.0203%" y="661" width="0.0789%" height="15" fill="rgb(229,84,14)" fg:x="23617" fg:w="19"/><text x="98.2703%" y="671.50"></text></g><g><title>lockbook-egui`libsecp256k1::PublicKey::from_secret_key (17 samples, 0.07%)</title><rect x="98.0286%" y="645" width="0.0706%" height="15" fill="rgb(229,68,14)" fg:x="23619" fg:w="17"/><text x="98.2786%" y="655.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::group::Affine::set_gej (4 samples, 0.02%)</title><rect x="98.0825%" y="629" width="0.0166%" height="15" fill="rgb(243,106,26)" fg:x="23632" fg:w="4"/><text x="98.3325%" y="639.50"></text></g><g><title>lockbook-egui`libsecp256k1_core::field::Field::sqr_in_place (3 samples, 0.01%)</title><rect x="98.0867%" y="613" width="0.0125%" height="15" fill="rgb(206,45,38)" fg:x="23633" fg:w="3"/><text x="98.3367%" y="623.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.02%)</title><rect x="98.1655%" y="597" width="0.0166%" height="15" fill="rgb(226,6,15)" fg:x="23652" fg:w="4"/><text x="98.4155%" y="607.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.05%)</title><rect x="98.2070%" y="581" width="0.0457%" height="15" fill="rgb(232,22,54)" fg:x="23662" fg:w="11"/><text x="98.4570%" y="591.50"></text></g><g><title>lockbook-egui`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.15%)</title><rect x="98.1074%" y="629" width="0.1536%" height="15" fill="rgb(229,222,32)" fg:x="23638" fg:w="37"/><text x="98.3574%" y="639.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (35 samples, 0.15%)</title><rect x="98.1157%" y="613" width="0.1453%" height="15" fill="rgb(228,62,29)" fg:x="23640" fg:w="35"/><text x="98.3657%" y="623.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (18 samples, 0.07%)</title><rect x="98.1863%" y="597" width="0.0747%" height="15" fill="rgb(251,103,34)" fg:x="23657" fg:w="18"/><text x="98.4363%" y="607.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.02%)</title><rect x="98.2900%" y="597" width="0.0166%" height="15" fill="rgb(233,12,30)" fg:x="23682" fg:w="4"/><text x="98.5400%" y="607.50"></text></g><g><title>lockbook-egui`&lt;std::collections::hash::map::HashMap&lt;uuid::Uuid,F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (12 samples, 0.05%)</title><rect x="98.2610%" y="629" width="0.0498%" height="15" fill="rgb(238,52,0)" fg:x="23675" fg:w="12"/><text x="98.5110%" y="639.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.04%)</title><rect x="98.2734%" y="613" width="0.0374%" height="15" fill="rgb(223,98,5)" fg:x="23678" fg:w="9"/><text x="98.5234%" y="623.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (51 samples, 0.21%)</title><rect x="98.1074%" y="645" width="0.2117%" height="15" fill="rgb(228,75,37)" fg:x="23638" fg:w="51"/><text x="98.3574%" y="655.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (12 samples, 0.05%)</title><rect x="98.3191%" y="645" width="0.0498%" height="15" fill="rgb(205,115,49)" fg:x="23689" fg:w="12"/><text x="98.5691%" y="655.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.03%)</title><rect x="98.3398%" y="629" width="0.0291%" height="15" fill="rgb(250,154,43)" fg:x="23694" fg:w="7"/><text x="98.5898%" y="639.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.03%)</title><rect x="98.3772%" y="613" width="0.0291%" height="15" fill="rgb(226,43,29)" fg:x="23703" fg:w="7"/><text x="98.6272%" y="623.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::linked_by (75 samples, 0.31%)</title><rect x="98.0991%" y="661" width="0.3113%" height="15" fill="rgb(249,228,39)" fg:x="23636" fg:w="75"/><text x="98.3491%" y="671.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (9 samples, 0.04%)</title><rect x="98.3730%" y="645" width="0.0374%" height="15" fill="rgb(216,79,43)" fg:x="23702" fg:w="9"/><text x="98.6230%" y="655.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.04%)</title><rect x="98.3730%" y="629" width="0.0374%" height="15" fill="rgb(228,95,12)" fg:x="23702" fg:w="9"/><text x="98.6230%" y="639.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::name_using_links (95 samples, 0.39%)</title><rect x="98.0203%" y="677" width="0.3943%" height="15" fill="rgb(249,221,15)" fg:x="23617" fg:w="95"/><text x="98.2703%" y="687.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.04%)</title><rect x="98.5889%" y="597" width="0.0415%" height="15" fill="rgb(233,34,13)" fg:x="23754" fg:w="10"/><text x="98.8389%" y="607.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (10 samples, 0.04%)</title><rect x="98.6304%" y="597" width="0.0415%" height="15" fill="rgb(214,103,39)" fg:x="23764" fg:w="10"/><text x="98.8804%" y="607.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (32 samples, 0.13%)</title><rect x="98.7175%" y="581" width="0.1328%" height="15" fill="rgb(251,126,39)" fg:x="23785" fg:w="32"/><text x="98.9675%" y="591.50"></text></g><g><title>lockbook-egui`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (98 samples, 0.41%)</title><rect x="98.4685%" y="629" width="0.4067%" height="15" fill="rgb(214,216,36)" fg:x="23725" fg:w="98"/><text x="98.7185%" y="639.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (91 samples, 0.38%)</title><rect x="98.4976%" y="613" width="0.3777%" height="15" fill="rgb(220,221,8)" fg:x="23732" fg:w="91"/><text x="98.7476%" y="623.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (49 samples, 0.20%)</title><rect x="98.6719%" y="597" width="0.2034%" height="15" fill="rgb(240,216,3)" fg:x="23774" fg:w="49"/><text x="98.9219%" y="607.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="98.8503%" y="581" width="0.0249%" height="15" fill="rgb(232,218,17)" fg:x="23817" fg:w="6"/><text x="99.1003%" y="591.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="98.8960%" y="613" width="0.0125%" height="15" fill="rgb(229,163,45)" fg:x="23828" fg:w="3"/><text x="99.1460%" y="623.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="98.9624%" y="597" width="0.0208%" height="15" fill="rgb(231,110,42)" fg:x="23844" fg:w="5"/><text x="99.2124%" y="607.50"></text></g><g><title>lockbook-egui`&lt;std::collections::hash::map::HashMap&lt;uuid::Uuid,F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (28 samples, 0.12%)</title><rect x="98.8752%" y="629" width="0.1162%" height="15" fill="rgb(208,170,48)" fg:x="23823" fg:w="28"/><text x="99.1252%" y="639.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.08%)</title><rect x="98.9084%" y="613" width="0.0830%" height="15" fill="rgb(239,116,25)" fg:x="23831" fg:w="20"/><text x="99.1584%" y="623.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (127 samples, 0.53%)</title><rect x="98.4685%" y="645" width="0.5271%" height="15" fill="rgb(219,200,50)" fg:x="23725" fg:w="127"/><text x="98.7185%" y="655.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.04%)</title><rect x="99.0205%" y="629" width="0.0415%" height="15" fill="rgb(245,200,0)" fg:x="23858" fg:w="10"/><text x="99.2705%" y="639.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (21 samples, 0.09%)</title><rect x="98.9956%" y="645" width="0.0872%" height="15" fill="rgb(245,119,33)" fg:x="23852" fg:w="21"/><text x="99.2456%" y="655.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="99.0620%" y="629" width="0.0208%" height="15" fill="rgb(231,125,12)" fg:x="23868" fg:w="5"/><text x="99.3120%" y="639.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="99.0828%" y="645" width="0.0166%" height="15" fill="rgb(216,96,41)" fg:x="23873" fg:w="4"/><text x="99.3328%" y="655.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.04%)</title><rect x="99.1658%" y="613" width="0.0415%" height="15" fill="rgb(248,43,45)" fg:x="23893" fg:w="10"/><text x="99.4158%" y="623.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::linked_by (191 samples, 0.79%)</title><rect x="98.4228%" y="661" width="0.7927%" height="15" fill="rgb(217,222,7)" fg:x="23714" fg:w="191"/><text x="98.6728%" y="671.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (26 samples, 0.11%)</title><rect x="99.1077%" y="645" width="0.1079%" height="15" fill="rgb(233,28,6)" fg:x="23879" fg:w="26"/><text x="99.3577%" y="655.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.09%)</title><rect x="99.1243%" y="629" width="0.0913%" height="15" fill="rgb(231,218,15)" fg:x="23883" fg:w="22"/><text x="99.3743%" y="639.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.06%)</title><rect x="99.3484%" y="581" width="0.0623%" height="15" fill="rgb(226,171,48)" fg:x="23937" fg:w="15"/><text x="99.5984%" y="591.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="99.4106%" y="581" width="0.0166%" height="15" fill="rgb(235,201,9)" fg:x="23952" fg:w="4"/><text x="99.6606%" y="591.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (24 samples, 0.10%)</title><rect x="99.4563%" y="565" width="0.0996%" height="15" fill="rgb(217,80,15)" fg:x="23963" fg:w="24"/><text x="99.7063%" y="575.50"></text></g><g><title>lockbook-egui`&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 0.32%)</title><rect x="99.2654%" y="613" width="0.3196%" height="15" fill="rgb(219,152,8)" fg:x="23917" fg:w="77"/><text x="99.5154%" y="623.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (74 samples, 0.31%)</title><rect x="99.2778%" y="597" width="0.3071%" height="15" fill="rgb(243,107,38)" fg:x="23920" fg:w="74"/><text x="99.5278%" y="607.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (38 samples, 0.16%)</title><rect x="99.4272%" y="581" width="0.1577%" height="15" fill="rgb(231,17,5)" fg:x="23956" fg:w="38"/><text x="99.6772%" y="591.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (7 samples, 0.03%)</title><rect x="99.5559%" y="565" width="0.0291%" height="15" fill="rgb(209,25,54)" fg:x="23987" fg:w="7"/><text x="99.8059%" y="575.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="99.5974%" y="597" width="0.0166%" height="15" fill="rgb(219,0,2)" fg:x="23997" fg:w="4"/><text x="99.8474%" y="607.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.05%)</title><rect x="99.6472%" y="581" width="0.0498%" height="15" fill="rgb(246,9,5)" fg:x="24009" fg:w="12"/><text x="99.8972%" y="591.50"></text></g><g><title>lockbook-egui`&lt;std::collections::hash::map::HashMap&lt;uuid::Uuid,F&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (29 samples, 0.12%)</title><rect x="99.5850%" y="613" width="0.1204%" height="15" fill="rgb(226,159,4)" fg:x="23994" fg:w="29"/><text x="99.8350%" y="623.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.09%)</title><rect x="99.6140%" y="597" width="0.0913%" height="15" fill="rgb(219,175,34)" fg:x="24001" fg:w="22"/><text x="99.8640%" y="607.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::ids (114 samples, 0.47%)</title><rect x="99.2654%" y="629" width="0.4731%" height="15" fill="rgb(236,10,46)" fg:x="23917" fg:w="114"/><text x="99.5154%" y="639.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.03%)</title><rect x="99.7053%" y="613" width="0.0332%" height="15" fill="rgb(240,211,16)" fg:x="24023" fg:w="8"/><text x="99.9553%" y="623.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.03%)</title><rect x="99.7593%" y="613" width="0.0291%" height="15" fill="rgb(205,3,43)" fg:x="24036" fg:w="7"/><text x="100.0093%" y="623.50"></text></g><g><title>lockbook-egui`&lt;lb_rs::logic::staged::StagedTree&lt;Base,Staged&gt; as lb_rs::logic::tree_like::TreeLike&gt;::maybe_find (13 samples, 0.05%)</title><rect x="99.7385%" y="629" width="0.0540%" height="15" fill="rgb(245,7,22)" fg:x="24031" fg:w="13"/><text x="99.9885%" y="639.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="99.7925%" y="629" width="0.0125%" height="15" fill="rgb(239,132,32)" fg:x="24044" fg:w="3"/><text x="100.0425%" y="639.50"></text></g><g><title>lockbook-egui`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.05%)</title><rect x="99.8755%" y="597" width="0.0457%" height="15" fill="rgb(228,202,34)" fg:x="24064" fg:w="11"/><text x="100.1255%" y="607.50"></text></g><g><title>lockbook-egui`hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (31 samples, 0.13%)</title><rect x="99.8132%" y="629" width="0.1287%" height="15" fill="rgb(254,200,22)" fg:x="24049" fg:w="31"/><text x="100.0632%" y="639.50"></text></g><g><title>lockbook-egui`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (26 samples, 0.11%)</title><rect x="99.8340%" y="613" width="0.1079%" height="15" fill="rgb(219,10,39)" fg:x="24054" fg:w="26"/><text x="100.0840%" y="623.50"></text></g><g><title>lockbook-egui`core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="99.9211%" y="597" width="0.0208%" height="15" fill="rgb(226,210,39)" fg:x="24075" fg:w="5"/><text x="100.1711%" y="607.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::linked_by (174 samples, 0.72%)</title><rect x="99.2239%" y="645" width="0.7222%" height="15" fill="rgb(208,219,16)" fg:x="23907" fg:w="174"/><text x="99.4739%" y="655.50"></text></g><g><title>lockbook-egui`lb_rs::logic::path_ops::_&lt;impl lb_rs::logic::lazy::LazyTree&lt;Staged&gt;&gt;::id_to_path (370 samples, 1.54%)</title><rect x="98.4145%" y="677" width="1.5357%" height="15" fill="rgb(216,158,51)" fg:x="23712" fg:w="370"/><text x="98.6645%" y="687.50"></text></g><g><title>lockbook-egui`lb_rs::logic::lazy::LazyTree&lt;T&gt;::name_using_links (177 samples, 0.73%)</title><rect x="99.2156%" y="661" width="0.7346%" height="15" fill="rgb(233,14,44)" fg:x="23905" fg:w="177"/><text x="99.4656%" y="671.50"></text></g><g><title>lockbook-egui`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (812 samples, 3.37%)</title><rect x="96.5842%" y="741" width="3.3701%" height="15" fill="rgb(237,97,39)" fg:x="23271" fg:w="812"/><text x="96.8342%" y="751.50">loc..</text></g><g><title>lockbook-egui`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (812 samples, 3.37%)</title><rect x="96.5842%" y="725" width="3.3701%" height="15" fill="rgb(218,198,43)" fg:x="23271" fg:w="812"/><text x="96.8342%" y="735.50">loc..</text></g><g><title>lockbook-egui`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (812 samples, 3.37%)</title><rect x="96.5842%" y="709" width="3.3701%" height="15" fill="rgb(231,104,20)" fg:x="23271" fg:w="812"/><text x="96.8342%" y="719.50">loc..</text></g><g><title>lockbook-egui`lb_rs::service::search::_&lt;impl lb_rs::Lb&gt;::spawn_build_index::_{{closure}} (812 samples, 3.37%)</title><rect x="96.5842%" y="693" width="3.3701%" height="15" fill="rgb(254,36,13)" fg:x="23271" fg:w="812"/><text x="96.8342%" y="703.50">loc..</text></g><g><title>lockbook-egui`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (834 samples, 3.46%)</title><rect x="96.4971%" y="805" width="3.4614%" height="15" fill="rgb(248,14,50)" fg:x="23250" fg:w="834"/><text x="96.7471%" y="815.50">loc..</text></g><g><title>lockbook-egui`tokio::runtime::scheduler::multi_thread::worker::run (823 samples, 3.42%)</title><rect x="96.5427%" y="789" width="3.4158%" height="15" fill="rgb(217,107,29)" fg:x="23261" fg:w="823"/><text x="96.7927%" y="799.50">loc..</text></g><g><title>lockbook-egui`tokio::runtime::context::runtime::enter_runtime (823 samples, 3.42%)</title><rect x="96.5427%" y="773" width="3.4158%" height="15" fill="rgb(251,169,33)" fg:x="23261" fg:w="823"/><text x="96.7927%" y="783.50">loc..</text></g><g><title>lockbook-egui`tokio::runtime::scheduler::multi_thread::worker::Context::run (823 samples, 3.42%)</title><rect x="96.5427%" y="757" width="3.4158%" height="15" fill="rgb(217,108,32)" fg:x="23261" fg:w="823"/><text x="96.7927%" y="767.50">loc..</text></g><g><title>lockbook-egui`tokio::runtime::blocking::pool::Inner::run (849 samples, 3.52%)</title><rect x="96.4555%" y="837" width="3.5237%" height="15" fill="rgb(219,66,42)" fg:x="23240" fg:w="849"/><text x="96.7055%" y="847.50">loc..</text></g><g><title>lockbook-egui`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (839 samples, 3.48%)</title><rect x="96.4971%" y="821" width="3.4822%" height="15" fill="rgb(206,180,7)" fg:x="23250" fg:w="839"/><text x="96.7471%" y="831.50">loc..</text></g><g><title>lockbook-egui`tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (5 samples, 0.02%)</title><rect x="99.9585%" y="805" width="0.0208%" height="15" fill="rgb(208,226,31)" fg:x="24084" fg:w="5"/><text x="100.2085%" y="815.50"></text></g><g><title>lockbook-egui`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (5 samples, 0.02%)</title><rect x="99.9585%" y="789" width="0.0208%" height="15" fill="rgb(218,26,49)" fg:x="24084" fg:w="5"/><text x="100.2085%" y="799.50"></text></g><g><title>lockbook-egui`tokio::runtime::context::with_scheduler (5 samples, 0.02%)</title><rect x="99.9585%" y="773" width="0.0208%" height="15" fill="rgb(233,197,48)" fg:x="24084" fg:w="5"/><text x="100.2085%" y="783.50"></text></g><g><title>lockbook-egui`parking_lot::condvar::Condvar::notify_one_slow (5 samples, 0.02%)</title><rect x="99.9585%" y="757" width="0.0208%" height="15" fill="rgb(252,181,51)" fg:x="24084" fg:w="5"/><text x="100.2085%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (5 samples, 0.02%)</title><rect x="99.9585%" y="741" width="0.0208%" height="15" fill="rgb(253,90,19)" fg:x="24084" fg:w="5"/><text x="100.2085%" y="751.50"></text></g><g><title>all (24,094 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(215,171,30)" fg:x="0" fg:w="24094"/><text x="0.2500%" y="943.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (17,515 samples, 72.69%)</title><rect x="27.3056%" y="917" width="72.6944%" height="15" fill="rgb(214,222,9)" fg:x="6579" fg:w="17515"/><text x="27.5556%" y="927.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (17,515 samples, 72.69%)</title><rect x="27.3056%" y="901" width="72.6944%" height="15" fill="rgb(223,3,22)" fg:x="6579" fg:w="17515"/><text x="27.5556%" y="911.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>lockbook-egui`std::sys::pal::unix::thread::Thread::new::thread_start (17,477 samples, 72.54%)</title><rect x="27.4633%" y="885" width="72.5367%" height="15" fill="rgb(225,196,46)" fg:x="6617" fg:w="17477"/><text x="27.7133%" y="895.50">lockbook-egui`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}} (17,477 samples, 72.54%)</title><rect x="27.4633%" y="869" width="72.5367%" height="15" fill="rgb(209,110,37)" fg:x="6617" fg:w="17477"/><text x="27.7133%" y="879.50">lockbook-egui`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>lockbook-egui`std::sys_common::backtrace::__rust_begin_short_backtrace (17,477 samples, 72.54%)</title><rect x="27.4633%" y="853" width="72.5367%" height="15" fill="rgb(249,89,12)" fg:x="6617" fg:w="17477"/><text x="27.7133%" y="863.50">lockbook-egui`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lockbook-egui`workspace_rs::background::BackgroundWorker::event_loop (4 samples, 0.02%)</title><rect x="99.9834%" y="837" width="0.0166%" height="15" fill="rgb(226,27,33)" fg:x="24090" fg:w="4"/><text x="100.2334%" y="847.50"></text></g><g><title>lockbook-egui`std::sync::mpmc::Receiver&lt;T&gt;::recv (4 samples, 0.02%)</title><rect x="99.9834%" y="821" width="0.0166%" height="15" fill="rgb(213,82,22)" fg:x="24090" fg:w="4"/><text x="100.2334%" y="831.50"></text></g><g><title>lockbook-egui`std::sync::mpmc::list::Channel&lt;T&gt;::recv::_{{closure}} (3 samples, 0.01%)</title><rect x="99.9875%" y="805" width="0.0125%" height="15" fill="rgb(248,140,0)" fg:x="24091" fg:w="3"/><text x="100.2375%" y="815.50"></text></g><g><title>lockbook-egui`std::thread::park (3 samples, 0.01%)</title><rect x="99.9875%" y="789" width="0.0125%" height="15" fill="rgb(228,106,3)" fg:x="24091" fg:w="3"/><text x="100.2375%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (3 samples, 0.01%)</title><rect x="99.9875%" y="773" width="0.0125%" height="15" fill="rgb(209,23,37)" fg:x="24091" fg:w="3"/><text x="100.2375%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_trap (3 samples, 0.01%)</title><rect x="99.9875%" y="757" width="0.0125%" height="15" fill="rgb(241,93,50)" fg:x="24091" fg:w="3"/><text x="100.2375%" y="767.50"></text></g></svg></svg>