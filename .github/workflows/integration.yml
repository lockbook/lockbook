name: Integration

on:
  push:
    branches: [ master ]
    paths-ignore:
      - docs/**
  pull_request:
    branches: [ master ]

jobs:
  Checks:
    if: github.repository == 'lockbook/lockbook'
    runs-on: [self-hosted, ci]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CARGO_HOME: /home/parth/lockbook-ci-cache/home
      CARGO_TARGET_DIR: /home/parth/lockbook-ci-cache/target
      NIXPKGS_ALLOW_UNFREE: 1
      NIXPKGS_ACCEPT_ANDROID_SDK_LICENSE: 1
    steps:
    - uses: actions/checkout@v2
    - name: Check Workspace Fmt
      run: nix-shell -p gtk3 pkg-config glib gobject-introspection gdk-pixbuf --command "cargo run -p lbdev -- ci fmt"
    - name: Check Workspace Clippy
      run: nix-shell -p gtk3 pkg-config glib gobject-introspection gdk-pixbuf --command "cargo run -p lbdev -- ci clippy"
    - name: Run Server
      run: cargo run -p lbdev -- ci start-server
    - name: Run Rust Tests
      run: nix-shell -p gtk3 pkg-config glib gobject-introspection gdk-pixbuf --command "cargo run -p lbdev -- ci rust-tests"
    - name: Run Android Lint
      run: nix-shell client/android --command "cargo run -p lbdev -- ci android-lint"
    - name: Server Logs
      if: always()
      run: nix-shell -p gtk3 pkg-config glib gobject-introspection gdk-pixbuf --command "cargo run -p lbdev -- ci server-logs"
    - name: Check Lock File
      run: nix-shell -p gtk3 pkg-config glib gobject-introspection gdk-pixbuf --command "cargo run -p lbdev -- ci assert-git-clean"
    - name: Install Nightly
      run: rustup toolchain install nightly
    - name: Install udeps
      run: nix-shell -p openssl pkg-config --command "cargo install cargo-udeps --locked"
    - name: Check Unused Dependencies
      run: nix-shell -p openssl pkg-config glib gobject-introspection gdk-pixbuf gtk3 --command "cargo run -p lbdev -- ci assert-no-udeps"
    - name: Cleanup
      if: always()
      run: cargo run -p lbdev -- ci kill-server
