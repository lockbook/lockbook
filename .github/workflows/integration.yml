name: Integration

on:
  push:
    branches: [ master ]
    paths-ignore:
      - docs/**
  pull_request:
    branches: [ master ]

jobs:
  Core:
    runs-on: [self-hosted, dockerized]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BRANCH: ${{ github.head_ref }}
    steps:
    - uses: actions/checkout@v2
    - name: Build container
      run: make core
    - name: Compile and run tests
      run: make core_test
    - name: Check Formatting
      run: make core_fmt
    - name: Lint
      run: make core_lint

  Cli:
    runs-on: [self-hosted, dockerized]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BRANCH: ${{ github.head_ref }}
    steps:
    - uses: actions/checkout@v2
    - name: Build container
      run: make cli
    - name: Compile and run tests
      run: make cli_test
    - name: Check Formatting
      run: make cli_fmt
    - name: Lint
      run: make cli_lint

  Linux:
    runs-on: [self-hosted, dockerized]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BRANCH: ${{ github.head_ref }}
    steps:
    - uses: actions/checkout@v2
    - name: Build container
      run: make linux
    - name: Check Formatting
      run: make linux_fmt
    - name: Lint
      run: make linux_lint
    - name: Compile and run tests
      run: make linux_test

  Android:
    runs-on: [self-hosted, dockerized]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BRANCH: ${{ github.head_ref }}
    steps:
      - uses: actions/checkout@v2
      - name: Build container
        run: make android
      - name: Check Formatting
        run: make android_fmt
      - name: Lint
        run: make android_lint

  Server:
    runs-on: [self-hosted, dockerized]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BRANCH: ${{ github.head_ref }}
    steps:
      - uses: actions/checkout@v2
      - name: Build server container
        run: make server
      - name: Check Formatting
        run: make server_fmt
      - name: Lint
        run: make server_lint

  Integration-Test-Containers:
    runs-on: [self-hosted, dockerized]
    needs: Server
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BRANCH: ${{ github.head_ref }}
    steps:
    - uses: actions/checkout@v2
    - name: DB Assertions
      run: make server_tests
    - name: Rust Integration Tests
      run: make integration_tests
    - name: Kotlin
      run: make kotlin_interface_tests
    - name: CSharp
      run: make csharp_interface_tests
    - name: Swift
      run: make swift_interface_tests

  Core-Server-Db:
    runs-on: [self-hosted, dockerized]
    needs: Integration-Test-Containers
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BRANCH: ${{ github.head_ref }}
    steps:
      - uses: actions/checkout@v2
      - name: Core-Server-DB Integration Tests
        if: always()
        run: make server_tests_run
  Server-DB:
    runs-on: [self-hosted, dockerized]
    needs: Integration-Test-Containers
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BRANCH: ${{ github.head_ref }}
    steps:
      - uses: actions/checkout@v2
      - name: Server-DB
        if: always()
        run: make server_tests_run
  Kotlin-Core:
    runs-on: [self-hosted, dockerized]
    needs: Integration-Test-Containers
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BRANCH: ${{ github.head_ref }}
    steps:
      - uses: actions/checkout@v2
      - name: Kotlin-Core
        if: always()
        run: make kotlin_interface_tests_run

  Swift-Core:
    runs-on: [self-hosted, dockerized]
    needs: Integration-Test-Containers
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BRANCH: ${{ github.head_ref }}
    steps:
      - uses: actions/checkout@v2
      - name: Swift-Core
        if: always()
        run: make swift_interface_tests_run

  CSharp-Core:
    runs-on: [self-hosted, dockerized]
    needs: Integration-Test-Containers
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BRANCH: ${{ github.head_ref }}
    steps:
      - uses: actions/checkout@v2
      - name: CSharp-Core
        if: always()
        run: make csharp_interface_tests_run


  Clean Up:
    runs-on: [self-hosted, dockerized]
    needs: [Core-Server-Db, Server-DB, Kotlin-Core, Swift-Core, CSharp-Core]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BRANCH: ${{ github.head_ref }}
    steps:
      - uses: actions/checkout@v2
      - name: Tear Down Stack
        run: make kill_dev_stack
        if: always()
