ARG HASH
FROM rust:1.59 AS core-build
RUN rustup component add clippy
RUN rustup component add rustfmt

WORKDIR core

# Required to get cargo to get and compile deps but not our source
# https://blog.mgattozzi.dev/caching-rust-docker-builds/
COPY containers/dummy.rs src/lib.rs
COPY rustfmt.toml .
COPY core/Cargo.toml .
COPY containers/dummy.rs libs/models/src/lib.rs
COPY core/libs/models/Cargo.toml libs/models/.
COPY containers/dummy.rs libs/test_utils/src/lib.rs
COPY core/libs/test_utils/Cargo.toml libs/test_utils/.
COPY containers/dummy.rs libs/crypto/src/lib.rs
COPY core/libs/crypto/Cargo.toml libs/crypto/.
RUN mkdir benches/
RUN touch benches/bench_main.rs
RUN cargo test --release

# Build our source
COPY core .

# Compile-time env var
ENV API_URL=unused

# Cargo thinks this file hasn't changed on the filesystem
RUN touch src/lib.rs
RUN touch libs/models/src/lib.rs
RUN touch libs/test_utils/src/lib.rs
RUN touch libs/crypto/src/lib.rs
RUN cargo build --release

# Check the formatting of core
FROM core:${HASH} AS core-fmt
RUN cargo fmt -- --check -l

# Check the lint of core
FROM core:${HASH} AS core-lint
RUN cargo clippy -- -D warnings
RUN cargo clippy --tests -- -D warnings

# Set up for integration tests
FROM core:${HASH} AS core-server-tests
ENV API_URL=http://lockbook_server:8000
RUN touch src/lib.rs
RUN touch libs/models/src/lib.rs
RUN touch libs/test_utils/src/lib.rs
RUN touch libs/crypto/src/lib.rs
RUN cargo build --release
