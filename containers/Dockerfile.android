FROM openjdk:8 AS android-build
ENV DEBIAN_FRONTEND=noninteractive
ENV ANDROID_HOME /opt/android-sdk-linux
# Install rust binary compilers for android
RUN curl https://sh.rustup.rs -sSf | bash -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
RUN cargo install cargo-ndk
RUN rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android
# Install android sdk
RUN wget -q https://dl.google.com/android/repository/android-ndk-r21c-linux-x86_64.zip -O android-ndk-r21c-linux-x86_64.zip
RUN unzip -q android-ndk-r21c-linux-x86_64.zip
ENV ANDROID_NDK_HOME=/android-ndk-r21c
RUN cd /opt \
    && wget -q https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -O android-sdk-tools.zip \
    && unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}

ENV PATH ${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
RUN yes | sdkmanager --licenses
# Copy android and core in
COPY clients/android clients/android
COPY core core
# Build Core
WORKDIR core
# Dependency on core which has compile-time env var
ENV API_URL=unused
RUN make android
# Build android
WORKDIR ../clients/android
RUN ./gradlew assemble

FROM android-build AS android-fmt
RUN ./gradlew lintKotlin 

FROM android-build AS android-lint
RUN ./gradlew lint

FROM android-build AS android-kotlin-interface-tests
WORKDIR ../../core
ENV API_URL=http://lockbook_server:8000
RUN make linux_jni
WORKDIR ..
RUN mkdir -p android/core/src/main/jniLibs/desktop
RUN mv core/target/release/$(libName) android/core/src/main/jniLibs/desktop/$(libName)
WORKDIR clients/android
RUN ./gradlew assemble
