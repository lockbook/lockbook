ARG HASH
FROM debian AS linux-build

RUN apt update -y
RUN apt-get install -y build-essential curl libgtk-3-dev gtksourceview-3.0 libgspell-1-dev
RUN curl https://sh.rustup.rs -sSf | bash -s -- -y
RUN apt update -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Use https://rust-lang.github.io/rustup-components-history/ to select one with cargo and rustfmt
RUN rustup toolchain install stable
RUN rustup component add rustfmt --toolchain stable
RUN rustup component add clippy --toolchain stable

WORKDIR linux

# Linux depends on core via a relative import
COPY core/Cargo.toml /core/Cargo.toml
COPY core/libs/models/Cargo.toml /core/libs/models/Cargo.toml
COPY core/libs/crypto/Cargo.toml /core/libs/crypto/Cargo.toml

# Required to get cargo to get and compile deps but not our source
# https://blog.mgattozzi.dev/caching-rust-docker-builds/
COPY containers/dummy.rs /core/src/lib.rs
COPY containers/dummy.rs /core/libs/models/src/lib.rs
COPY containers/dummy.rs /core/libs/crypto/src/lib.rs

COPY containers/dummy.rs src/main.rs
COPY clients/linux/Cargo.toml .
RUN cargo build --release

# Build our source
COPY clients/linux .
COPY core /core

# Cargo thinks this file hasn't changed on the filesystem
RUN touch src/main.rs
RUN touch /core/src/lib.rs
RUN touch /core/libs/models/src/lib.rs
RUN touch /core/libs/crypto/src/lib.rs
RUN cargo build --release

# Check the formatting of core
FROM linux:${HASH} AS linux-fmt
RUN cargo +stable fmt -- --check -l

# Check the lint of core
FROM linux:${HASH} AS linux-lint
RUN cargo +stable clippy -- -D warnings -A clippy::redundant-field-names -A clippy::ptr-arg -A clippy::missing-safety-doc -A clippy::expect-fun-call -A clippy::too-many-arguments -A clippy::unnecessary-wraps -A clippy::upper-case-acronyms -A clippy::suspicious-operation-groupings

# Run core tests
FROM linux:${HASH} AS linux-test
RUN cargo test --release 
